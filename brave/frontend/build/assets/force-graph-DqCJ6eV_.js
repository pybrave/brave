import{r as bi,f as gM,o as lx,j as Mo}from"./main-yPEfeT9f.js";import{t as _M,d as yM,q as vM,I as h_,m as Mp,b as Ep,p as cx,s as xM}from"./rgb-BwIoVOhg.js";import{s as wp,p as bM,d as TM,t as Or,z as SM}from"./zoom-BGsqVsDF.js";function MM(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e===0){if(Object(n)!==n)return;c=!1}else for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function EM(r,e,n){return e=LM(e),e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function d_(r,e){return RM(r)||MM(r,e)||ux(r,e)||PM()}function wM(r){return AM(r)||CM(r)||ux(r)||NM()}function AM(r){if(Array.isArray(r))return Ap(r)}function RM(r){if(Array.isArray(r))return r}function CM(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function ux(r,e){if(r){if(typeof r=="string")return Ap(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);if(n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set")return Array.from(r);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ap(r,e)}}function Ap(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=r[n];return i}function NM(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function PM(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function DM(r,e){if(typeof r!="object"||r===null)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function LM(r){var e=DM(r,"string");return typeof e=="symbol"?e:String(e)}var IM=function(e,n){var i=new Set(n);return Object.assign.apply(Object,[{}].concat(wM(Object.entries(e).filter(function(s){var o=d_(s,1),a=o[0];return!i.has(a)}).map(function(s){var o=d_(s,2),a=o[0],l=o[1];return EM({},a,l)}))))};function Rp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function UM(r){if(Array.isArray(r))return r}function FM(r){if(Array.isArray(r))return Rp(r)}function OM(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function BM(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function kM(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function zM(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function GM(r,e){return UM(r)||BM(r,e)||hx(r,e)||kM()}function f_(r){return FM(r)||OM(r)||hx(r)||zM()}function hx(r,e){if(r){if(typeof r=="string")return Rp(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Rp(r,e):void 0}}function dx(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=e.wrapperElementType,i=n===void 0?"div":n,s=e.nodeMapper,o=s===void 0?function(h){return h}:s,a=e.methodNames,l=a===void 0?[]:a,c=e.initPropNames,u=c===void 0?[]:c;return bi.forwardRef(function(h,d){var f=bi.useRef(),p=bi.useMemo(function(){var _=Object.fromEntries(u.filter(function(g){return h.hasOwnProperty(g)}).map(function(g){return[g,h[g]]}));return r(_)},[]);p_(function(){p(o(f.current))},bi.useLayoutEffect),p_(function(){return p._destructor instanceof Function?p._destructor:void 0});var m=bi.useCallback(function(_){for(var g=arguments.length,v=new Array(g>1?g-1:0),x=1;x<g;x++)v[x-1]=arguments[x];return p[_]instanceof Function?p[_].apply(p,v):void 0},[p]),y=bi.useRef({});return Object.keys(IM(h,[].concat(f_(l),f_(u)))).filter(function(_){return y.current[_]!==h[_]}).forEach(function(_){return m(_,h[_])}),y.current=h,bi.useImperativeHandle(d,function(){return Object.fromEntries(l.map(function(_){return[_,function(){for(var g=arguments.length,v=new Array(g),x=0;x<g;x++)v[x]=arguments[x];return m.apply(void 0,[_].concat(v))}]}))},[m]),gM.createElement(i,{ref:f})})}function p_(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:bi.useEffect,n=bi.useRef(),i=bi.useRef(!1),s=bi.useRef(!1),o=bi.useState(0),a=GM(o,2);a[0];var l=a[1];i.current&&(s.current=!0),e(function(){return i.current||(n.current=r(),i.current=!0),l(function(c){return c+1}),function(){s.current&&n.current&&n.current()}},[])}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const il="180",Cn={ROTATE:0,DOLLY:1,PAN:2},$r={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},fx=0,Cp=1,px=2,VM=0,Mm=1,HM=2,xi=3,Ti=0,Ut=1,Bn=2,oi=0,Si=1,xa=2,ba=3,Ta=4,ha=5,kn=100,Em=101,wm=102,mx=103,gx=104,Br=200,Am=201,Rm=202,Cm=203,mc=204,gc=205,Nm=206,Pm=207,Dm=208,Lm=209,Im=210,WM=211,$M=212,jM=213,qM=214,_c=0,yc=1,vc=2,Es=3,xc=4,bc=5,Tc=6,Sc=7,zc=0,_x=1,yx=2,ai=0,vx=1,xx=2,bx=3,Tx=4,XM=5,Sx=6,Mx=7,Um=300,_r=301,yr=302,Sa=303,Ma=304,uo=306,ho=1e3,fr=1001,fo=1002,Wt=1003,Fm=1004,jr=1005,vn=1006,da=1007,ii=1008,nn=1009,ao=1010,lo=1011,Qi=1012,En=1013,Gt=1014,ln=1015,An=1016,Yh=1017,Kh=1018,Mi=1020,Zh=35902,Qh=35899,Om=1021,Gc=1022,sn=1023,Ei=1026,wi=1027,Vc=1028,rl=1029,qr=1030,sl=1031,YM=1032,ol=1033,vs=33776,xs=33777,bs=33778,Ts=33779,Mc=35840,Ec=35841,wc=35842,Ac=35843,Ea=36196,wa=37492,Aa=37496,Ra=37808,Ca=37809,Na=37810,Pa=37811,Da=37812,La=37813,Ia=37814,Ua=37815,Fa=37816,Oa=37817,Ba=37818,ka=37819,za=37820,Ga=37821,Va=36492,Np=36494,Pp=36495,Ha=36283,Wa=36284,$a=36285,ja=36286,KM=3200,ZM=3201,ts=0,Ex=1,ni="",Fn="srgb",po="srgb-linear",qa="linear",Ae="srgb",QM=0,Ks=7680,JM=7681,eE=7682,tE=7683,nE=34055,iE=34056,rE=5386,sE=512,oE=513,aE=514,lE=515,cE=516,uE=517,hE=518,Dp=519,Bm=512,Jh=513,km=514,ed=515,zm=516,Gm=517,Vm=518,Hm=519,Eh=35044,ia=35048,m_="300 es",Zn=2e3,ws=2001,ra={COMPUTE:"compute",RENDER:"render"};class is{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){const i=this._listeners;if(i===void 0)return;const s=i[e];if(s!==void 0){const o=s.indexOf(n);o!==-1&&s.splice(o,1)}}dispatchEvent(e){const n=this._listeners;if(n===void 0)return;const i=n[e.type];if(i!==void 0){e.target=this;const s=i.slice(0);for(let o=0,a=s.length;o<a;o++)s[o].call(this,e);e.target=null}}}const Dn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let g_=1234567;const nc=Math.PI/180,mo=180/Math.PI;function Yr(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Dn[r&255]+Dn[r>>8&255]+Dn[r>>16&255]+Dn[r>>24&255]+"-"+Dn[e&255]+Dn[e>>8&255]+"-"+Dn[e>>16&15|64]+Dn[e>>24&255]+"-"+Dn[n&63|128]+Dn[n>>8&255]+"-"+Dn[n>>16&255]+Dn[n>>24&255]+Dn[i&255]+Dn[i>>8&255]+Dn[i>>16&255]+Dn[i>>24&255]).toLowerCase()}function ht(r,e,n){return Math.max(e,Math.min(n,r))}function Wm(r,e){return(r%e+e)%e}function dE(r,e,n,i,s){return i+(r-e)*(s-i)/(n-e)}function fE(r,e,n){return r!==e?(n-r)/(e-r):0}function ic(r,e,n){return(1-n)*r+n*e}function pE(r,e,n,i){return ic(r,e,1-Math.exp(-n*i))}function mE(r,e=1){return e-Math.abs(Wm(r,e*2)-e)}function gE(r,e,n){return r<=e?0:r>=n?1:(r=(r-e)/(n-e),r*r*(3-2*r))}function _E(r,e,n){return r<=e?0:r>=n?1:(r=(r-e)/(n-e),r*r*r*(r*(r*6-15)+10))}function yE(r,e){return r+Math.floor(Math.random()*(e-r+1))}function vE(r,e){return r+Math.random()*(e-r)}function xE(r){return r*(.5-Math.random())}function bE(r){r!==void 0&&(g_=r);let e=g_+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function TE(r){return r*nc}function SE(r){return r*mo}function ME(r){return(r&r-1)===0&&r!==0}function EE(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function wE(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function AE(r,e,n,i,s){const o=Math.cos,a=Math.sin,l=o(n/2),c=a(n/2),u=o((e+i)/2),h=a((e+i)/2),d=o((e-i)/2),f=a((e-i)/2),p=o((i-e)/2),m=a((i-e)/2);switch(s){case"XYX":r.set(l*h,c*d,c*f,l*u);break;case"YZY":r.set(c*f,l*h,c*d,l*u);break;case"ZXZ":r.set(c*d,c*f,l*h,l*u);break;case"XZX":r.set(l*h,c*m,c*p,l*u);break;case"YXY":r.set(c*p,l*h,c*m,l*u);break;case"ZYZ":r.set(c*m,c*p,l*h,l*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Kn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ut(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const wh={DEG2RAD:nc,RAD2DEG:mo,generateUUID:Yr,clamp:ht,euclideanModulo:Wm,mapLinear:dE,inverseLerp:fE,lerp:ic,damp:pE,pingpong:mE,smoothstep:gE,smootherstep:_E,randInt:yE,randFloat:vE,randFloatSpread:xE,seededRandom:bE,degToRad:TE,radToDeg:SE,isPowerOfTwo:ME,ceilPowerOfTwo:EE,floorPowerOfTwo:wE,setQuaternionFromProperEuler:AE,normalize:ut,denormalize:Kn};class ue{constructor(e=0,n=0){ue.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=ht(this.x,e.x,n.x),this.y=ht(this.y,e.y,n.y),this}clampScalar(e,n){return this.x=ht(this.x,e,n),this.y=ht(this.y,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ht(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(ht(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),o=this.x-e.x,a=this.y-e.y;return this.x=o*i-a*s+e.x,this.y=o*s+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class er{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,o,a,l){let c=i[s+0],u=i[s+1],h=i[s+2],d=i[s+3];const f=o[a+0],p=o[a+1],m=o[a+2],y=o[a+3];if(l===0){e[n+0]=c,e[n+1]=u,e[n+2]=h,e[n+3]=d;return}if(l===1){e[n+0]=f,e[n+1]=p,e[n+2]=m,e[n+3]=y;return}if(d!==y||c!==f||u!==p||h!==m){let _=1-l;const g=c*f+u*p+h*m+d*y,v=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const b=Math.sqrt(x),S=Math.atan2(b,g*v);_=Math.sin(_*S)/b,l=Math.sin(l*S)/b}const T=l*v;if(c=c*_+f*T,u=u*_+p*T,h=h*_+m*T,d=d*_+y*T,_===1-l){const b=1/Math.sqrt(c*c+u*u+h*h+d*d);c*=b,u*=b,h*=b,d*=b}}e[n]=c,e[n+1]=u,e[n+2]=h,e[n+3]=d}static multiplyQuaternionsFlat(e,n,i,s,o,a){const l=i[s],c=i[s+1],u=i[s+2],h=i[s+3],d=o[a],f=o[a+1],p=o[a+2],m=o[a+3];return e[n]=l*m+h*d+c*p-u*f,e[n+1]=c*m+h*f+u*d-l*p,e[n+2]=u*m+h*p+l*f-c*d,e[n+3]=h*m-l*d-c*f-u*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,s=e._y,o=e._z,a=e._order,l=Math.cos,c=Math.sin,u=l(i/2),h=l(s/2),d=l(o/2),f=c(i/2),p=c(s/2),m=c(o/2);switch(a){case"XYZ":this._x=f*h*d+u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d-f*p*m;break;case"YXZ":this._x=f*h*d+u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d+f*p*m;break;case"ZXY":this._x=f*h*d-u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d-f*p*m;break;case"ZYX":this._x=f*h*d-u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d+f*p*m;break;case"YZX":this._x=f*h*d+u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d-f*p*m;break;case"XZY":this._x=f*h*d-u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d+f*p*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],o=n[8],a=n[1],l=n[5],c=n[9],u=n[2],h=n[6],d=n[10],f=i+l+d;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(h-c)*p,this._y=(o-u)*p,this._z=(a-s)*p}else if(i>l&&i>d){const p=2*Math.sqrt(1+i-l-d);this._w=(h-c)/p,this._x=.25*p,this._y=(s+a)/p,this._z=(o+u)/p}else if(l>d){const p=2*Math.sqrt(1+l-i-d);this._w=(o-u)/p,this._x=(s+a)/p,this._y=.25*p,this._z=(c+h)/p}else{const p=2*Math.sqrt(1+d-i-l);this._w=(a-s)/p,this._x=(o+u)/p,this._y=(c+h)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ht(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,o=e._z,a=e._w,l=n._x,c=n._y,u=n._z,h=n._w;return this._x=i*h+a*l+s*u-o*c,this._y=s*h+a*c+o*l-i*u,this._z=o*h+a*u+i*c-s*l,this._w=a*h-i*l-s*c-o*u,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,o=this._z,a=this._w;let l=a*e._w+i*e._x+s*e._y+o*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=i,this._y=s,this._z=o,this;const c=1-l*l;if(c<=Number.EPSILON){const p=1-n;return this._w=p*a+n*this._w,this._x=p*i+n*this._x,this._y=p*s+n*this._y,this._z=p*o+n*this._z,this.normalize(),this}const u=Math.sqrt(c),h=Math.atan2(u,l),d=Math.sin((1-n)*h)/u,f=Math.sin(n*h)/u;return this._w=a*d+this._w*f,this._x=i*d+this._x*f,this._y=s*d+this._y*f,this._z=o*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),o=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),o*Math.sin(n),o*Math.cos(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(e=0,n=0,i=0){L.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(__.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(__.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,o=e.elements;return this.x=o[0]*n+o[3]*i+o[6]*s,this.y=o[1]*n+o[4]*i+o[7]*s,this.z=o[2]*n+o[5]*i+o[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,o=e.elements,a=1/(o[3]*n+o[7]*i+o[11]*s+o[15]);return this.x=(o[0]*n+o[4]*i+o[8]*s+o[12])*a,this.y=(o[1]*n+o[5]*i+o[9]*s+o[13])*a,this.z=(o[2]*n+o[6]*i+o[10]*s+o[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,o=e.x,a=e.y,l=e.z,c=e.w,u=2*(a*s-l*i),h=2*(l*n-o*s),d=2*(o*i-a*n);return this.x=n+c*u+a*d-l*h,this.y=i+c*h+l*u-o*d,this.z=s+c*d+o*h-a*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*s,this.y=o[1]*n+o[5]*i+o[9]*s,this.z=o[2]*n+o[6]*i+o[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=ht(this.x,e.x,n.x),this.y=ht(this.y,e.y,n.y),this.z=ht(this.z,e.z,n.z),this}clampScalar(e,n){return this.x=ht(this.x,e,n),this.y=ht(this.y,e,n),this.z=ht(this.z,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ht(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,o=e.z,a=n.x,l=n.y,c=n.z;return this.x=s*c-o*l,this.y=o*a-i*c,this.z=i*l-s*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Nd.copy(this).projectOnVector(e),this.sub(Nd)}reflect(e){return this.sub(Nd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(ht(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(e),this.y=n,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Nd=new L,__=new er;class at{constructor(e,n,i,s,o,a,l,c,u){at.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,s,o,a,l,c,u)}set(e,n,i,s,o,a,l,c,u){const h=this.elements;return h[0]=e,h[1]=s,h[2]=l,h[3]=n,h[4]=o,h[5]=c,h[6]=i,h[7]=a,h[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,o=this.elements,a=i[0],l=i[3],c=i[6],u=i[1],h=i[4],d=i[7],f=i[2],p=i[5],m=i[8],y=s[0],_=s[3],g=s[6],v=s[1],x=s[4],T=s[7],b=s[2],S=s[5],M=s[8];return o[0]=a*y+l*v+c*b,o[3]=a*_+l*x+c*S,o[6]=a*g+l*T+c*M,o[1]=u*y+h*v+d*b,o[4]=u*_+h*x+d*S,o[7]=u*g+h*T+d*M,o[2]=f*y+p*v+m*b,o[5]=f*_+p*x+m*S,o[8]=f*g+p*T+m*M,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8];return n*a*h-n*l*u-i*o*h+i*l*c+s*o*u-s*a*c}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8],d=h*a-l*u,f=l*c-h*o,p=u*o-a*c,m=n*d+i*f+s*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/m;return e[0]=d*y,e[1]=(s*u-h*i)*y,e[2]=(l*i-s*a)*y,e[3]=f*y,e[4]=(h*n-s*c)*y,e[5]=(s*o-l*n)*y,e[6]=p*y,e[7]=(i*c-u*n)*y,e[8]=(a*n-i*o)*y,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,o,a,l){const c=Math.cos(o),u=Math.sin(o);return this.set(i*c,i*u,-i*(c*a+u*l)+a+e,-s*u,s*c,-s*(-u*a+c*l)+l+n,0,0,1),this}scale(e,n){return this.premultiply(Pd.makeScale(e,n)),this}rotate(e){return this.premultiply(Pd.makeRotation(-e)),this}translate(e,n){return this.premultiply(Pd.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Pd=new at;function $m(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Rc(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function wx(){const r=Rc("canvas");return r.style.display="block",r}const y_={};function Ai(r){r in y_||(y_[r]=!0,console.warn(r))}function RE(r,e,n){return new Promise(function(i,s){function o(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:s();break;case r.TIMEOUT_EXPIRED:setTimeout(o,n);break;default:i()}}setTimeout(o,n)})}const v_=new at().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),x_=new at().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function CE(){const r={enabled:!0,workingColorSpace:po,spaces:{},convert:function(s,o,a){return this.enabled===!1||o===a||!o||!a||(this.spaces[o].transfer===Ae&&(s.r=Kr(s.r),s.g=Kr(s.g),s.b=Kr(s.b)),this.spaces[o].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[o].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Ae&&(s.r=fa(s.r),s.g=fa(s.g),s.b=fa(s.b))),s},workingToColorSpace:function(s,o){return this.convert(s,this.workingColorSpace,o)},colorSpaceToWorking:function(s,o){return this.convert(s,o,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===ni?qa:this.spaces[s].transfer},getToneMappingMode:function(s){return this.spaces[s].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(s,o=this.workingColorSpace){return s.fromArray(this.spaces[o].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,o,a){return s.copy(this.spaces[o].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(s,o){return Ai("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(s,o)},toWorkingColorSpace:function(s,o){return Ai("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(s,o)}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[po]:{primaries:e,whitePoint:i,transfer:qa,toXYZ:v_,fromXYZ:x_,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:Fn},outputColorSpaceConfig:{drawingBufferColorSpace:Fn}},[Fn]:{primaries:e,whitePoint:i,transfer:Ae,toXYZ:v_,fromXYZ:x_,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:Fn}}}),r}const Ze=CE();function Kr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function fa(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Eo;class NE{static getDataURL(e,n="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Eo===void 0&&(Eo=Rc("canvas")),Eo.width=e.width,Eo.height=e.height;const s=Eo.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),i=Eo}return i.toDataURL(n)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=Rc("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),o=s.data;for(let a=0;a<o.length;a++)o[a]=Kr(o[a]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Kr(n[i]/255)*255):n[i]=Kr(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let PE=0;class jm{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:PE++}),this.uuid=Yr(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const n=this.data;return typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement?e.set(n.videoWidth,n.videoHeight,0):n instanceof VideoFrame?e.set(n.displayHeight,n.displayWidth,0):n!==null?e.set(n.width,n.height,n.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let o;if(Array.isArray(s)){o=[];for(let a=0,l=s.length;a<l;a++)s[a].isDataTexture?o.push(Dd(s[a].image)):o.push(Dd(s[a]))}else o=Dd(s);i.url=o}return n||(e.images[this.uuid]=i),i}}function Dd(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?NE.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let DE=0;const Ld=new L;class un extends is{constructor(e=un.DEFAULT_IMAGE,n=un.DEFAULT_MAPPING,i=fr,s=fr,o=vn,a=ii,l=sn,c=nn,u=un.DEFAULT_ANISOTROPY,h=ni){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:DE++}),this.uuid=Yr(),this.name="",this.source=new jm(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=o,this.minFilter=a,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=c,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new at,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Ld).x}get height(){return this.source.getSize(Ld).y}get depth(){return this.source.getSize(Ld).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Texture.setValues(): property '${n}' does not exist.`);continue}s&&i&&s.isVector2&&i.isVector2||s&&i&&s.isVector3&&i.isVector3||s&&i&&s.isMatrix3&&i.isMatrix3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Um)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ho:e.x=e.x-Math.floor(e.x);break;case fr:e.x=e.x<0?0:1;break;case fo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ho:e.y=e.y-Math.floor(e.y);break;case fr:e.y=e.y<0?0:1;break;case fo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}un.DEFAULT_IMAGE=null;un.DEFAULT_MAPPING=Um;un.DEFAULT_ANISOTROPY=1;class Qe{constructor(e=0,n=0,i=0,s=1){Qe.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,o=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*s+a[12]*o,this.y=a[1]*n+a[5]*i+a[9]*s+a[13]*o,this.z=a[2]*n+a[6]*i+a[10]*s+a[14]*o,this.w=a[3]*n+a[7]*i+a[11]*s+a[15]*o,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,o;const c=e.elements,u=c[0],h=c[4],d=c[8],f=c[1],p=c[5],m=c[9],y=c[2],_=c[6],g=c[10];if(Math.abs(h-f)<.01&&Math.abs(d-y)<.01&&Math.abs(m-_)<.01){if(Math.abs(h+f)<.1&&Math.abs(d+y)<.1&&Math.abs(m+_)<.1&&Math.abs(u+p+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const x=(u+1)/2,T=(p+1)/2,b=(g+1)/2,S=(h+f)/4,M=(d+y)/4,A=(m+_)/4;return x>T&&x>b?x<.01?(i=0,s=.707106781,o=.707106781):(i=Math.sqrt(x),s=S/i,o=M/i):T>b?T<.01?(i=.707106781,s=0,o=.707106781):(s=Math.sqrt(T),i=S/s,o=A/s):b<.01?(i=.707106781,s=.707106781,o=0):(o=Math.sqrt(b),i=M/o,s=A/o),this.set(i,s,o,n),this}let v=Math.sqrt((_-m)*(_-m)+(d-y)*(d-y)+(f-h)*(f-h));return Math.abs(v)<.001&&(v=1),this.x=(_-m)/v,this.y=(d-y)/v,this.z=(f-h)/v,this.w=Math.acos((u+p+g-1)/2),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this.w=n[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=ht(this.x,e.x,n.x),this.y=ht(this.y,e.y,n.y),this.z=ht(this.z,e.z,n.z),this.w=ht(this.w,e.w,n.w),this}clampScalar(e,n){return this.x=ht(this.x,e,n),this.y=ht(this.y,e,n),this.z=ht(this.z,e,n),this.w=ht(this.w,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(ht(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class yo extends is{constructor(e=1,n=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:vn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=i.depth,this.scissor=new Qe(0,0,e,n),this.scissorTest=!1,this.viewport=new Qe(0,0,e,n);const s={width:e,height:n,depth:i.depth},o=new un(s);this.textures=[];const a=i.count;for(let l=0;l<a;l++)this.textures[l]=o.clone(),this.textures[l].isRenderTargetTexture=!0,this.textures[l].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const n={minFilter:vn,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(n.mapping=e.mapping),e.wrapS!==void 0&&(n.wrapS=e.wrapS),e.wrapT!==void 0&&(n.wrapT=e.wrapT),e.wrapR!==void 0&&(n.wrapR=e.wrapR),e.magFilter!==void 0&&(n.magFilter=e.magFilter),e.minFilter!==void 0&&(n.minFilter=e.minFilter),e.format!==void 0&&(n.format=e.format),e.type!==void 0&&(n.type=e.type),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(n.colorSpace=e.colorSpace),e.flipY!==void 0&&(n.flipY=e.flipY),e.generateMipmaps!==void 0&&(n.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(n.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(n)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let s=0,o=this.textures.length;s<o;s++)this.textures[s].image.width=e,this.textures[s].image.height=n,this.textures[s].image.depth=i,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++){this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const s=Object.assign({},e.textures[n].image);this.textures[n].source=new jm(s)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class As extends yo{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}}class qm extends un{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Wt,this.minFilter=Wt,this.wrapR=fr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class LE extends un{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Wt,this.minFilter=Wt,this.wrapR=fr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vo{constructor(e=new L(1/0,1/0,1/0),n=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(Gi.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(Gi.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Gi.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const o=i.getAttribute("position");if(n===!0&&o!==void 0&&e.isInstancedMesh!==!0)for(let a=0,l=o.count;a<l;a++)e.isMesh===!0?e.getVertexPosition(a,Gi):Gi.fromBufferAttribute(o,a),Gi.applyMatrix4(e.matrixWorld),this.expandByPoint(Gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),su.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),su.copy(i.boundingBox)),su.applyMatrix4(e.matrixWorld),this.union(su)}const s=e.children;for(let o=0,a=s.length;o<a;o++)this.expandByObject(s[o],n);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Gi),Gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gl),ou.subVectors(this.max,gl),wo.subVectors(e.a,gl),Ao.subVectors(e.b,gl),Ro.subVectors(e.c,gl),os.subVectors(Ao,wo),as.subVectors(Ro,Ao),Bs.subVectors(wo,Ro);let n=[0,-os.z,os.y,0,-as.z,as.y,0,-Bs.z,Bs.y,os.z,0,-os.x,as.z,0,-as.x,Bs.z,0,-Bs.x,-os.y,os.x,0,-as.y,as.x,0,-Bs.y,Bs.x,0];return!Id(n,wo,Ao,Ro,ou)||(n=[1,0,0,0,1,0,0,0,1],!Id(n,wo,Ao,Ro,ou))?!1:(au.crossVectors(os,as),n=[au.x,au.y,au.z],Id(n,wo,Ao,Ro,ou))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(wr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),wr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),wr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),wr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),wr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),wr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),wr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),wr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(wr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const wr=[new L,new L,new L,new L,new L,new L,new L,new L],Gi=new L,su=new vo,wo=new L,Ao=new L,Ro=new L,os=new L,as=new L,Bs=new L,gl=new L,ou=new L,au=new L,ks=new L;function Id(r,e,n,i,s){for(let o=0,a=r.length-3;o<=a;o+=3){ks.fromArray(r,o);const l=s.x*Math.abs(ks.x)+s.y*Math.abs(ks.y)+s.z*Math.abs(ks.z),c=e.dot(ks),u=n.dot(ks),h=i.dot(ks);if(Math.max(-Math.max(c,u,h),Math.min(c,u,h))>l)return!1}return!0}const IE=new vo,_l=new L,Ud=new L;class Hc{constructor(e=new L,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):IE.setFromPoints(e).getCenter(i);let s=0;for(let o=0,a=e.length;o<a;o++)s=Math.max(s,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_l.subVectors(e,this.center);const n=_l.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(_l,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Ud.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_l.copy(e.center).add(Ud)),this.expandByPoint(_l.copy(e.center).sub(Ud))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Ar=new L,Fd=new L,lu=new L,ls=new L,Od=new L,cu=new L,Bd=new L;class td{constructor(e=new L,n=new L(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ar)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Ar.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Ar.copy(this.origin).addScaledVector(this.direction,n),Ar.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){Fd.copy(e).add(n).multiplyScalar(.5),lu.copy(n).sub(e).normalize(),ls.copy(this.origin).sub(Fd);const o=e.distanceTo(n)*.5,a=-this.direction.dot(lu),l=ls.dot(this.direction),c=-ls.dot(lu),u=ls.lengthSq(),h=Math.abs(1-a*a);let d,f,p,m;if(h>0)if(d=a*c-l,f=a*l-c,m=o*h,d>=0)if(f>=-m)if(f<=m){const y=1/h;d*=y,f*=y,p=d*(d+a*f+2*l)+f*(a*d+f+2*c)+u}else f=o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;else f=-o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;else f<=-m?(d=Math.max(0,-(-a*o+l)),f=d>0?-o:Math.min(Math.max(-o,-c),o),p=-d*d+f*(f+2*c)+u):f<=m?(d=0,f=Math.min(Math.max(-o,-c),o),p=f*(f+2*c)+u):(d=Math.max(0,-(a*o+l)),f=d>0?o:Math.min(Math.max(-o,-c),o),p=-d*d+f*(f+2*c)+u);else f=a>0?-o:o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,d),s&&s.copy(Fd).addScaledVector(lu,f),p}intersectSphere(e,n){Ar.subVectors(e.center,this.origin);const i=Ar.dot(this.direction),s=Ar.dot(Ar)-i*i,o=e.radius*e.radius;if(s>o)return null;const a=Math.sqrt(o-s),l=i-a,c=i+a;return c<0?null:l<0?this.at(c,n):this.at(l,n)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,o,a,l,c;const u=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,f=this.origin;return u>=0?(i=(e.min.x-f.x)*u,s=(e.max.x-f.x)*u):(i=(e.max.x-f.x)*u,s=(e.min.x-f.x)*u),h>=0?(o=(e.min.y-f.y)*h,a=(e.max.y-f.y)*h):(o=(e.max.y-f.y)*h,a=(e.min.y-f.y)*h),i>a||o>s||((o>i||isNaN(i))&&(i=o),(a<s||isNaN(s))&&(s=a),d>=0?(l=(e.min.z-f.z)*d,c=(e.max.z-f.z)*d):(l=(e.max.z-f.z)*d,c=(e.min.z-f.z)*d),i>c||l>s)||((l>i||i!==i)&&(i=l),(c<s||s!==s)&&(s=c),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,Ar)!==null}intersectTriangle(e,n,i,s,o){Od.subVectors(n,e),cu.subVectors(i,e),Bd.crossVectors(Od,cu);let a=this.direction.dot(Bd),l;if(a>0){if(s)return null;l=1}else if(a<0)l=-1,a=-a;else return null;ls.subVectors(this.origin,e);const c=l*this.direction.dot(cu.crossVectors(ls,cu));if(c<0)return null;const u=l*this.direction.dot(Od.cross(ls));if(u<0||c+u>a)return null;const h=-l*ls.dot(Bd);return h<0?null:this.at(h/a,o)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class _t{constructor(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_){_t.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_)}set(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=s,g[1]=o,g[5]=a,g[9]=l,g[13]=c,g[2]=u,g[6]=h,g[10]=d,g[14]=f,g[3]=p,g[7]=m,g[11]=y,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _t().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/Co.setFromMatrixColumn(e,0).length(),o=1/Co.setFromMatrixColumn(e,1).length(),a=1/Co.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*o,n[5]=i[5]*o,n[6]=i[6]*o,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,o=e.z,a=Math.cos(i),l=Math.sin(i),c=Math.cos(s),u=Math.sin(s),h=Math.cos(o),d=Math.sin(o);if(e.order==="XYZ"){const f=a*h,p=a*d,m=l*h,y=l*d;n[0]=c*h,n[4]=-c*d,n[8]=u,n[1]=p+m*u,n[5]=f-y*u,n[9]=-l*c,n[2]=y-f*u,n[6]=m+p*u,n[10]=a*c}else if(e.order==="YXZ"){const f=c*h,p=c*d,m=u*h,y=u*d;n[0]=f+y*l,n[4]=m*l-p,n[8]=a*u,n[1]=a*d,n[5]=a*h,n[9]=-l,n[2]=p*l-m,n[6]=y+f*l,n[10]=a*c}else if(e.order==="ZXY"){const f=c*h,p=c*d,m=u*h,y=u*d;n[0]=f-y*l,n[4]=-a*d,n[8]=m+p*l,n[1]=p+m*l,n[5]=a*h,n[9]=y-f*l,n[2]=-a*u,n[6]=l,n[10]=a*c}else if(e.order==="ZYX"){const f=a*h,p=a*d,m=l*h,y=l*d;n[0]=c*h,n[4]=m*u-p,n[8]=f*u+y,n[1]=c*d,n[5]=y*u+f,n[9]=p*u-m,n[2]=-u,n[6]=l*c,n[10]=a*c}else if(e.order==="YZX"){const f=a*c,p=a*u,m=l*c,y=l*u;n[0]=c*h,n[4]=y-f*d,n[8]=m*d+p,n[1]=d,n[5]=a*h,n[9]=-l*h,n[2]=-u*h,n[6]=p*d+m,n[10]=f-y*d}else if(e.order==="XZY"){const f=a*c,p=a*u,m=l*c,y=l*u;n[0]=c*h,n[4]=-d,n[8]=u*h,n[1]=f*d+y,n[5]=a*h,n[9]=p*d-m,n[2]=m*d-p,n[6]=l*h,n[10]=y*d+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(UE,e,FE)}lookAt(e,n,i){const s=this.elements;return pi.subVectors(e,n),pi.lengthSq()===0&&(pi.z=1),pi.normalize(),cs.crossVectors(i,pi),cs.lengthSq()===0&&(Math.abs(i.z)===1?pi.x+=1e-4:pi.z+=1e-4,pi.normalize(),cs.crossVectors(i,pi)),cs.normalize(),uu.crossVectors(pi,cs),s[0]=cs.x,s[4]=uu.x,s[8]=pi.x,s[1]=cs.y,s[5]=uu.y,s[9]=pi.y,s[2]=cs.z,s[6]=uu.z,s[10]=pi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,o=this.elements,a=i[0],l=i[4],c=i[8],u=i[12],h=i[1],d=i[5],f=i[9],p=i[13],m=i[2],y=i[6],_=i[10],g=i[14],v=i[3],x=i[7],T=i[11],b=i[15],S=s[0],M=s[4],A=s[8],E=s[12],w=s[1],N=s[5],D=s[9],F=s[13],k=s[2],Y=s[6],$=s[10],V=s[14],B=s[3],J=s[7],X=s[11],re=s[15];return o[0]=a*S+l*w+c*k+u*B,o[4]=a*M+l*N+c*Y+u*J,o[8]=a*A+l*D+c*$+u*X,o[12]=a*E+l*F+c*V+u*re,o[1]=h*S+d*w+f*k+p*B,o[5]=h*M+d*N+f*Y+p*J,o[9]=h*A+d*D+f*$+p*X,o[13]=h*E+d*F+f*V+p*re,o[2]=m*S+y*w+_*k+g*B,o[6]=m*M+y*N+_*Y+g*J,o[10]=m*A+y*D+_*$+g*X,o[14]=m*E+y*F+_*V+g*re,o[3]=v*S+x*w+T*k+b*B,o[7]=v*M+x*N+T*Y+b*J,o[11]=v*A+x*D+T*$+b*X,o[15]=v*E+x*F+T*V+b*re,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],o=e[12],a=e[1],l=e[5],c=e[9],u=e[13],h=e[2],d=e[6],f=e[10],p=e[14],m=e[3],y=e[7],_=e[11],g=e[15];return m*(+o*c*d-s*u*d-o*l*f+i*u*f+s*l*p-i*c*p)+y*(+n*c*p-n*u*f+o*a*f-s*a*p+s*u*h-o*c*h)+_*(+n*u*d-n*l*p-o*a*d+i*a*p+o*l*h-i*u*h)+g*(-s*l*h-n*c*d+n*l*f+s*a*d-i*a*f+i*c*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8],d=e[9],f=e[10],p=e[11],m=e[12],y=e[13],_=e[14],g=e[15],v=d*_*u-y*f*u+y*c*p-l*_*p-d*c*g+l*f*g,x=m*f*u-h*_*u-m*c*p+a*_*p+h*c*g-a*f*g,T=h*y*u-m*d*u+m*l*p-a*y*p-h*l*g+a*d*g,b=m*d*c-h*y*c-m*l*f+a*y*f+h*l*_-a*d*_,S=n*v+i*x+s*T+o*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return e[0]=v*M,e[1]=(y*f*o-d*_*o-y*s*p+i*_*p+d*s*g-i*f*g)*M,e[2]=(l*_*o-y*c*o+y*s*u-i*_*u-l*s*g+i*c*g)*M,e[3]=(d*c*o-l*f*o-d*s*u+i*f*u+l*s*p-i*c*p)*M,e[4]=x*M,e[5]=(h*_*o-m*f*o+m*s*p-n*_*p-h*s*g+n*f*g)*M,e[6]=(m*c*o-a*_*o-m*s*u+n*_*u+a*s*g-n*c*g)*M,e[7]=(a*f*o-h*c*o+h*s*u-n*f*u-a*s*p+n*c*p)*M,e[8]=T*M,e[9]=(m*d*o-h*y*o-m*i*p+n*y*p+h*i*g-n*d*g)*M,e[10]=(a*y*o-m*l*o+m*i*u-n*y*u-a*i*g+n*l*g)*M,e[11]=(h*l*o-a*d*o-h*i*u+n*d*u+a*i*p-n*l*p)*M,e[12]=b*M,e[13]=(h*y*s-m*d*s+m*i*f-n*y*f-h*i*_+n*d*_)*M,e[14]=(m*l*s-a*y*s-m*i*c+n*y*c+a*i*_-n*l*_)*M,e[15]=(a*d*s-h*l*s+h*i*c-n*d*c-a*i*f+n*l*f)*M,this}scale(e){const n=this.elements,i=e.x,s=e.y,o=e.z;return n[0]*=i,n[4]*=s,n[8]*=o,n[1]*=i,n[5]*=s,n[9]*=o,n[2]*=i,n[6]*=s,n[10]*=o,n[3]*=i,n[7]*=s,n[11]*=o,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),o=1-i,a=e.x,l=e.y,c=e.z,u=o*a,h=o*l;return this.set(u*a+i,u*l-s*c,u*c+s*l,0,u*l+s*c,h*l+i,h*c-s*a,0,u*c-s*l,h*c+s*a,o*c*c+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,o,a){return this.set(1,i,o,0,e,1,a,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,o=n._x,a=n._y,l=n._z,c=n._w,u=o+o,h=a+a,d=l+l,f=o*u,p=o*h,m=o*d,y=a*h,_=a*d,g=l*d,v=c*u,x=c*h,T=c*d,b=i.x,S=i.y,M=i.z;return s[0]=(1-(y+g))*b,s[1]=(p+T)*b,s[2]=(m-x)*b,s[3]=0,s[4]=(p-T)*S,s[5]=(1-(f+g))*S,s[6]=(_+v)*S,s[7]=0,s[8]=(m+x)*M,s[9]=(_-v)*M,s[10]=(1-(f+y))*M,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let o=Co.set(s[0],s[1],s[2]).length();const a=Co.set(s[4],s[5],s[6]).length(),l=Co.set(s[8],s[9],s[10]).length();this.determinant()<0&&(o=-o),e.x=s[12],e.y=s[13],e.z=s[14],Vi.copy(this);const u=1/o,h=1/a,d=1/l;return Vi.elements[0]*=u,Vi.elements[1]*=u,Vi.elements[2]*=u,Vi.elements[4]*=h,Vi.elements[5]*=h,Vi.elements[6]*=h,Vi.elements[8]*=d,Vi.elements[9]*=d,Vi.elements[10]*=d,n.setFromRotationMatrix(Vi),i.x=o,i.y=a,i.z=l,this}makePerspective(e,n,i,s,o,a,l=Zn,c=!1){const u=this.elements,h=2*o/(n-e),d=2*o/(i-s),f=(n+e)/(n-e),p=(i+s)/(i-s);let m,y;if(c)m=o/(a-o),y=a*o/(a-o);else if(l===Zn)m=-(a+o)/(a-o),y=-2*a*o/(a-o);else if(l===ws)m=-a/(a-o),y=-a*o/(a-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=f,u[12]=0,u[1]=0,u[5]=d,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=m,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,n,i,s,o,a,l=Zn,c=!1){const u=this.elements,h=2/(n-e),d=2/(i-s),f=-(n+e)/(n-e),p=-(i+s)/(i-s);let m,y;if(c)m=1/(a-o),y=a/(a-o);else if(l===Zn)m=-2/(a-o),y=-(a+o)/(a-o);else if(l===ws)m=-1/(a-o),y=-o/(a-o);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=0,u[12]=f,u[1]=0,u[5]=d,u[9]=0,u[13]=p,u[2]=0,u[6]=0,u[10]=m,u[14]=y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Co=new L,Vi=new _t,UE=new L(0,0,0),FE=new L(1,1,1),cs=new L,uu=new L,pi=new L,b_=new _t,T_=new er;class li{constructor(e=0,n=0,i=0,s=li.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],h=s[9],d=s[2],f=s[6],p=s[10];switch(n){case"XYZ":this._y=Math.asin(ht(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(f,u),this._z=0);break;case"YXZ":this._x=Math.asin(-ht(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(ht(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-ht(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(ht(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-ht(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,u),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return b_.makeRotationFromQuaternion(e),this.setFromRotationMatrix(b_,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return T_.setFromEuler(this),this.setFromQuaternion(T_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}li.DEFAULT_ORDER="XYZ";class Xm{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let OE=0;const S_=new L,No=new er,Rr=new _t,hu=new L,yl=new L,BE=new L,kE=new er,M_=new L(1,0,0),E_=new L(0,1,0),w_=new L(0,0,1),A_={type:"added"},zE={type:"removed"},Po={type:"childadded",child:null},kd={type:"childremoved",child:null};class hn extends is{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:OE++}),this.uuid=Yr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=hn.DEFAULT_UP.clone();const e=new L,n=new li,i=new er,s=new L(1,1,1);function o(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(o),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new _t},normalMatrix:{value:new at}}),this.matrix=new _t,this.matrixWorld=new _t,this.matrixAutoUpdate=hn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=hn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Xm,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return No.setFromAxisAngle(e,n),this.quaternion.multiply(No),this}rotateOnWorldAxis(e,n){return No.setFromAxisAngle(e,n),this.quaternion.premultiply(No),this}rotateX(e){return this.rotateOnAxis(M_,e)}rotateY(e){return this.rotateOnAxis(E_,e)}rotateZ(e){return this.rotateOnAxis(w_,e)}translateOnAxis(e,n){return S_.copy(e).applyQuaternion(this.quaternion),this.position.add(S_.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(M_,e)}translateY(e){return this.translateOnAxis(E_,e)}translateZ(e){return this.translateOnAxis(w_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Rr.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?hu.copy(e):hu.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),yl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Rr.lookAt(yl,hu,this.up):Rr.lookAt(hu,yl,this.up),this.quaternion.setFromRotationMatrix(Rr),s&&(Rr.extractRotation(s.matrixWorld),No.setFromRotationMatrix(Rr),this.quaternion.premultiply(No.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(A_),Po.child=e,this.dispatchEvent(Po),Po.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(zE),kd.child=e,this.dispatchEvent(kd),kd.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Rr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Rr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Rr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(A_),Po.child=e,this.dispatchEvent(Po),Po.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const s=this.children;for(let o=0,a=s.length;o<a;o++)s[o].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yl,e,BE),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yl,kE,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),n===!0){const s=this.children;for(let o=0,a=s.length;o<a;o++)s[o].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(l=>({...l,boundingBox:l.boundingBox?l.boundingBox.toJSON():void 0,boundingSphere:l.boundingSphere?l.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(l=>({...l})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(e),s.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(s.boundingBox=this.boundingBox.toJSON()));function o(l,c){return l[c.uuid]===void 0&&(l[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=o(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const c=l.shapes;if(Array.isArray(c))for(let u=0,h=c.length;u<h;u++){const d=c[u];o(e.shapes,d)}else o(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let c=0,u=this.material.length;c<u;c++)l.push(o(e.materials,this.material[c]));s.material=l}else s.material=o(e.materials,this.material);if(this.children.length>0){s.children=[];for(let l=0;l<this.children.length;l++)s.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let l=0;l<this.animations.length;l++){const c=this.animations[l];s.animations.push(o(e.animations,c))}}if(n){const l=a(e.geometries),c=a(e.materials),u=a(e.textures),h=a(e.images),d=a(e.shapes),f=a(e.skeletons),p=a(e.animations),m=a(e.nodes);l.length>0&&(i.geometries=l),c.length>0&&(i.materials=c),u.length>0&&(i.textures=u),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),f.length>0&&(i.skeletons=f),p.length>0&&(i.animations=p),m.length>0&&(i.nodes=m)}return i.object=s,i;function a(l){const c=[];for(const u in l){const h=l[u];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}hn.DEFAULT_UP=new L(0,1,0);hn.DEFAULT_MATRIX_AUTO_UPDATE=!0;hn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Hi=new L,Cr=new L,zd=new L,Nr=new L,Do=new L,Lo=new L,R_=new L,Gd=new L,Vd=new L,Hd=new L,Wd=new Qe,$d=new Qe,jd=new Qe;class Ui{constructor(e=new L,n=new L,i=new L){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),Hi.subVectors(e,n),s.cross(Hi);const o=s.lengthSq();return o>0?s.multiplyScalar(1/Math.sqrt(o)):s.set(0,0,0)}static getBarycoord(e,n,i,s,o){Hi.subVectors(s,n),Cr.subVectors(i,n),zd.subVectors(e,n);const a=Hi.dot(Hi),l=Hi.dot(Cr),c=Hi.dot(zd),u=Cr.dot(Cr),h=Cr.dot(zd),d=a*u-l*l;if(d===0)return o.set(0,0,0),null;const f=1/d,p=(u*c-l*h)*f,m=(a*h-l*c)*f;return o.set(1-p-m,m,p)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,Nr)===null?!1:Nr.x>=0&&Nr.y>=0&&Nr.x+Nr.y<=1}static getInterpolation(e,n,i,s,o,a,l,c){return this.getBarycoord(e,n,i,s,Nr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(o,Nr.x),c.addScaledVector(a,Nr.y),c.addScaledVector(l,Nr.z),c)}static getInterpolatedAttribute(e,n,i,s,o,a){return Wd.setScalar(0),$d.setScalar(0),jd.setScalar(0),Wd.fromBufferAttribute(e,n),$d.fromBufferAttribute(e,i),jd.fromBufferAttribute(e,s),a.setScalar(0),a.addScaledVector(Wd,o.x),a.addScaledVector($d,o.y),a.addScaledVector(jd,o.z),a}static isFrontFacing(e,n,i,s){return Hi.subVectors(i,n),Cr.subVectors(e,n),Hi.cross(Cr).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Hi.subVectors(this.c,this.b),Cr.subVectors(this.a,this.b),Hi.cross(Cr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ui.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Ui.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,s,o){return Ui.getInterpolation(e,this.a,this.b,this.c,n,i,s,o)}containsPoint(e){return Ui.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ui.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,o=this.c;let a,l;Do.subVectors(s,i),Lo.subVectors(o,i),Gd.subVectors(e,i);const c=Do.dot(Gd),u=Lo.dot(Gd);if(c<=0&&u<=0)return n.copy(i);Vd.subVectors(e,s);const h=Do.dot(Vd),d=Lo.dot(Vd);if(h>=0&&d<=h)return n.copy(s);const f=c*d-h*u;if(f<=0&&c>=0&&h<=0)return a=c/(c-h),n.copy(i).addScaledVector(Do,a);Hd.subVectors(e,o);const p=Do.dot(Hd),m=Lo.dot(Hd);if(m>=0&&p<=m)return n.copy(o);const y=p*u-c*m;if(y<=0&&u>=0&&m<=0)return l=u/(u-m),n.copy(i).addScaledVector(Lo,l);const _=h*m-p*d;if(_<=0&&d-h>=0&&p-m>=0)return R_.subVectors(o,s),l=(d-h)/(d-h+(p-m)),n.copy(s).addScaledVector(R_,l);const g=1/(_+y+f);return a=y*g,l=f*g,n.copy(i).addScaledVector(Do,a).addScaledVector(Lo,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ax={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},us={h:0,s:0,l:0},du={h:0,s:0,l:0};function qd(r,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?r+(e-r)*6*n:n<1/2?e:n<2/3?r+(e-r)*6*(2/3-n):r}class Ge{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=Fn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ze.colorSpaceToWorking(this,n),this}setRGB(e,n,i,s=Ze.workingColorSpace){return this.r=e,this.g=n,this.b=i,Ze.colorSpaceToWorking(this,s),this}setHSL(e,n,i,s=Ze.workingColorSpace){if(e=Wm(e,1),n=ht(n,0,1),i=ht(i,0,1),n===0)this.r=this.g=this.b=i;else{const o=i<=.5?i*(1+n):i+n-i*n,a=2*i-o;this.r=qd(a,o,e+1/3),this.g=qd(a,o,e),this.b=qd(a,o,e-1/3)}return Ze.colorSpaceToWorking(this,s),this}setStyle(e,n=Fn){function i(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let o;const a=s[1],l=s[2];switch(a){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,n);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,n);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const o=s[1],a=o.length;if(a===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,n);if(a===6)return this.setHex(parseInt(o,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=Fn){const i=Ax[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Kr(e.r),this.g=Kr(e.g),this.b=Kr(e.b),this}copyLinearToSRGB(e){return this.r=fa(e.r),this.g=fa(e.g),this.b=fa(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Fn){return Ze.workingToColorSpace(Ln.copy(this),e),Math.round(ht(Ln.r*255,0,255))*65536+Math.round(ht(Ln.g*255,0,255))*256+Math.round(ht(Ln.b*255,0,255))}getHexString(e=Fn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=Ze.workingColorSpace){Ze.workingToColorSpace(Ln.copy(this),n);const i=Ln.r,s=Ln.g,o=Ln.b,a=Math.max(i,s,o),l=Math.min(i,s,o);let c,u;const h=(l+a)/2;if(l===a)c=0,u=0;else{const d=a-l;switch(u=h<=.5?d/(a+l):d/(2-a-l),a){case i:c=(s-o)/d+(s<o?6:0);break;case s:c=(o-i)/d+2;break;case o:c=(i-s)/d+4;break}c/=6}return e.h=c,e.s=u,e.l=h,e}getRGB(e,n=Ze.workingColorSpace){return Ze.workingToColorSpace(Ln.copy(this),n),e.r=Ln.r,e.g=Ln.g,e.b=Ln.b,e}getStyle(e=Fn){Ze.workingToColorSpace(Ln.copy(this),e);const n=Ln.r,i=Ln.g,s=Ln.b;return e!==Fn?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(us),this.setHSL(us.h+e,us.s+n,us.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(us),e.getHSL(du);const i=ic(us.h,du.h,n),s=ic(us.s,du.s,n),o=ic(us.l,du.l,n);return this.setHSL(i,s,o),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,o=e.elements;return this.r=o[0]*n+o[3]*i+o[6]*s,this.g=o[1]*n+o[4]*i+o[7]*s,this.b=o[2]*n+o[5]*i+o[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ln=new Ge;Ge.NAMES=Ax;let GE=0;class Gn extends is{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:GE++}),this.uuid=Yr(),this.name="",this.type="Material",this.blending=Si,this.side=Ti,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=mc,this.blendDst=gc,this.blendEquation=kn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ge(0,0,0),this.blendAlpha=0,this.depthFunc=Es,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Dp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ks,this.stencilZFail=Ks,this.stencilZPass=Ks,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(i.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(i.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Si&&(i.blending=this.blending),this.side!==Ti&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==mc&&(i.blendSrc=this.blendSrc),this.blendDst!==gc&&(i.blendDst=this.blendDst),this.blendEquation!==kn&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Es&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Dp&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ks&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Ks&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Ks&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}if(n){const o=s(e.textures),a=s(e.images);o.length>0&&(i.textures=o),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let o=0;o!==s;++o)i[o]=n[o].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class dr extends Gn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new li,this.combine=zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Gr=VE();function VE(){const r=new ArrayBuffer(4),e=new Float32Array(r),n=new Uint32Array(r),i=new Uint32Array(512),s=new Uint32Array(512);for(let c=0;c<256;++c){const u=c-127;u<-27?(i[c]=0,i[c|256]=32768,s[c]=24,s[c|256]=24):u<-14?(i[c]=1024>>-u-14,i[c|256]=1024>>-u-14|32768,s[c]=-u-1,s[c|256]=-u-1):u<=15?(i[c]=u+15<<10,i[c|256]=u+15<<10|32768,s[c]=13,s[c|256]=13):u<128?(i[c]=31744,i[c|256]=64512,s[c]=24,s[c|256]=24):(i[c]=31744,i[c|256]=64512,s[c]=13,s[c|256]=13)}const o=new Uint32Array(2048),a=new Uint32Array(64),l=new Uint32Array(64);for(let c=1;c<1024;++c){let u=c<<13,h=0;for(;(u&8388608)===0;)u<<=1,h-=8388608;u&=-8388609,h+=947912704,o[c]=u|h}for(let c=1024;c<2048;++c)o[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(l[c]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:s,mantissaTable:o,exponentTable:a,offsetTable:l}}function mi(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=ht(r,-65504,65504),Gr.floatView[0]=r;const e=Gr.uint32View[0],n=e>>23&511;return Gr.baseTable[n]+((e&8388607)>>Gr.shiftTable[n])}function fu(r){const e=r>>10;return Gr.uint32View[0]=Gr.mantissaTable[Gr.offsetTable[e]+(r&1023)]+Gr.exponentTable[e],Gr.floatView[0]}const fn=new L,pu=new ue;let HE=0;class Nn{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:HE++}),this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=Eh,this.updateRanges=[],this.gpuType=ln,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,o=this.itemSize;s<o;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)pu.fromBufferAttribute(this,n),pu.applyMatrix3(e),this.setXY(n,pu.x,pu.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.applyMatrix3(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.applyMatrix4(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.applyNormalMatrix(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.transformDirection(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=Kn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=ut(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Kn(n,this.array)),n}setX(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Kn(n,this.array)),n}setY(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Kn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Kn(n,this.array)),n}setW(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,o){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array),o=ut(o,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=o,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Eh&&(e.usage=this.usage),e}}class Ym extends Nn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class Km extends Nn{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Rx extends Nn{constructor(e,n,i){super(new Uint16Array(e),n,i),this.isFloat16BufferAttribute=!0}getX(e){let n=fu(this.array[e*this.itemSize]);return this.normalized&&(n=Kn(n,this.array)),n}setX(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize]=mi(n),this}getY(e){let n=fu(this.array[e*this.itemSize+1]);return this.normalized&&(n=Kn(n,this.array)),n}setY(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+1]=mi(n),this}getZ(e){let n=fu(this.array[e*this.itemSize+2]);return this.normalized&&(n=Kn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+2]=mi(n),this}getW(e){let n=fu(this.array[e*this.itemSize+3]);return this.normalized&&(n=Kn(n,this.array)),n}setW(e,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+3]=mi(n),this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=mi(n),this.array[e+1]=mi(i),this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=mi(n),this.array[e+1]=mi(i),this.array[e+2]=mi(s),this}setXYZW(e,n,i,s,o){return e*=this.itemSize,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array),o=ut(o,this.array)),this.array[e+0]=mi(n),this.array[e+1]=mi(i),this.array[e+2]=mi(s),this.array[e+3]=mi(o),this}}class dn extends Nn{constructor(e,n,i){super(new Float32Array(e),n,i)}}let WE=0;const Pi=new _t,Xd=new hn,Io=new L,gi=new vo,vl=new vo,Mn=new L;class Hn extends is{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:WE++}),this.uuid=Yr(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new($m(e)?Km:Ym)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const o=new at().getNormalMatrix(e);i.applyNormalMatrix(o),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Pi.makeRotationFromQuaternion(e),this.applyMatrix4(Pi),this}rotateX(e){return Pi.makeRotationX(e),this.applyMatrix4(Pi),this}rotateY(e){return Pi.makeRotationY(e),this.applyMatrix4(Pi),this}rotateZ(e){return Pi.makeRotationZ(e),this.applyMatrix4(Pi),this}translate(e,n,i){return Pi.makeTranslation(e,n,i),this.applyMatrix4(Pi),this}scale(e,n,i){return Pi.makeScale(e,n,i),this.applyMatrix4(Pi),this}lookAt(e){return Xd.lookAt(e),Xd.updateMatrix(),this.applyMatrix4(Xd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Io).negate(),this.translate(Io.x,Io.y,Io.z),this}setFromPoints(e){const n=this.getAttribute("position");if(n===void 0){const i=[];for(let s=0,o=e.length;s<o;s++){const a=e[s];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new dn(i,3))}else{const i=Math.min(e.length,n.count);for(let s=0;s<i;s++){const o=e[s];n.setXYZ(s,o.x,o.y,o.z||0)}e.length>n.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),n.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vo);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const o=n[i];gi.setFromBufferAttribute(o),this.morphTargetsRelative?(Mn.addVectors(this.boundingBox.min,gi.min),this.boundingBox.expandByPoint(Mn),Mn.addVectors(this.boundingBox.max,gi.max),this.boundingBox.expandByPoint(Mn)):(this.boundingBox.expandByPoint(gi.min),this.boundingBox.expandByPoint(gi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Hc);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(e){const i=this.boundingSphere.center;if(gi.setFromBufferAttribute(e),n)for(let o=0,a=n.length;o<a;o++){const l=n[o];vl.setFromBufferAttribute(l),this.morphTargetsRelative?(Mn.addVectors(gi.min,vl.min),gi.expandByPoint(Mn),Mn.addVectors(gi.max,vl.max),gi.expandByPoint(Mn)):(gi.expandByPoint(vl.min),gi.expandByPoint(vl.max))}gi.getCenter(i);let s=0;for(let o=0,a=e.count;o<a;o++)Mn.fromBufferAttribute(e,o),s=Math.max(s,i.distanceToSquared(Mn));if(n)for(let o=0,a=n.length;o<a;o++){const l=n[o],c=this.morphTargetsRelative;for(let u=0,h=l.count;u<h;u++)Mn.fromBufferAttribute(l,u),c&&(Io.fromBufferAttribute(e,u),Mn.add(Io)),s=Math.max(s,i.distanceToSquared(Mn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,s=n.normal,o=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Nn(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),l=[],c=[];for(let A=0;A<i.count;A++)l[A]=new L,c[A]=new L;const u=new L,h=new L,d=new L,f=new ue,p=new ue,m=new ue,y=new L,_=new L;function g(A,E,w){u.fromBufferAttribute(i,A),h.fromBufferAttribute(i,E),d.fromBufferAttribute(i,w),f.fromBufferAttribute(o,A),p.fromBufferAttribute(o,E),m.fromBufferAttribute(o,w),h.sub(u),d.sub(u),p.sub(f),m.sub(f);const N=1/(p.x*m.y-m.x*p.y);isFinite(N)&&(y.copy(h).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(N),_.copy(d).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(N),l[A].add(y),l[E].add(y),l[w].add(y),c[A].add(_),c[E].add(_),c[w].add(_))}let v=this.groups;v.length===0&&(v=[{start:0,count:e.count}]);for(let A=0,E=v.length;A<E;++A){const w=v[A],N=w.start,D=w.count;for(let F=N,k=N+D;F<k;F+=3)g(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const x=new L,T=new L,b=new L,S=new L;function M(A){b.fromBufferAttribute(s,A),S.copy(b);const E=l[A];x.copy(E),x.sub(b.multiplyScalar(b.dot(E))).normalize(),T.crossVectors(S,E);const N=T.dot(c[A])<0?-1:1;a.setXYZW(A,x.x,x.y,x.z,N)}for(let A=0,E=v.length;A<E;++A){const w=v[A],N=w.start,D=w.count;for(let F=N,k=N+D;F<k;F+=3)M(e.getX(F+0)),M(e.getX(F+1)),M(e.getX(F+2))}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Nn(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,p=i.count;f<p;f++)i.setXYZ(f,0,0,0);const s=new L,o=new L,a=new L,l=new L,c=new L,u=new L,h=new L,d=new L;if(e)for(let f=0,p=e.count;f<p;f+=3){const m=e.getX(f+0),y=e.getX(f+1),_=e.getX(f+2);s.fromBufferAttribute(n,m),o.fromBufferAttribute(n,y),a.fromBufferAttribute(n,_),h.subVectors(a,o),d.subVectors(s,o),h.cross(d),l.fromBufferAttribute(i,m),c.fromBufferAttribute(i,y),u.fromBufferAttribute(i,_),l.add(h),c.add(h),u.add(h),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(y,c.x,c.y,c.z),i.setXYZ(_,u.x,u.y,u.z)}else for(let f=0,p=n.count;f<p;f+=3)s.fromBufferAttribute(n,f+0),o.fromBufferAttribute(n,f+1),a.fromBufferAttribute(n,f+2),h.subVectors(a,o),d.subVectors(s,o),h.cross(d),i.setXYZ(f+0,h.x,h.y,h.z),i.setXYZ(f+1,h.x,h.y,h.z),i.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)Mn.fromBufferAttribute(e,n),Mn.normalize(),e.setXYZ(n,Mn.x,Mn.y,Mn.z)}toNonIndexed(){function e(l,c){const u=l.array,h=l.itemSize,d=l.normalized,f=new u.constructor(c.length*h);let p=0,m=0;for(let y=0,_=c.length;y<_;y++){l.isInterleavedBufferAttribute?p=c[y]*l.data.stride+l.offset:p=c[y]*h;for(let g=0;g<h;g++)f[m++]=u[p++]}return new Nn(f,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Hn,i=this.index.array,s=this.attributes;for(const l in s){const c=s[l],u=e(c,i);n.setAttribute(l,u)}const o=this.morphAttributes;for(const l in o){const c=[],u=o[l];for(let h=0,d=u.length;h<d;h++){const f=u[h],p=e(f,i);c.push(p)}n.morphAttributes[l]=c}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let l=0,c=a.length;l<c;l++){const u=a[l];n.addGroup(u.start,u.count,u.materialIndex)}return n}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const u in c)c[u]!==void 0&&(e[u]=c[u]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const c in i){const u=i[c];e.data.attributes[c]=u.toJSON(e.data)}const s={};let o=!1;for(const c in this.morphAttributes){const u=this.morphAttributes[c],h=[];for(let d=0,f=u.length;d<f;d++){const p=u[d];h.push(p.toJSON(e.data))}h.length>0&&(s[c]=h,o=!0)}o&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere=l.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const s=e.attributes;for(const u in s){const h=s[u];this.setAttribute(u,h.clone(n))}const o=e.morphAttributes;for(const u in o){const h=[],d=o[u];for(let f=0,p=d.length;f<p;f++)h.push(d[f].clone(n));this.morphAttributes[u]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,h=a.length;u<h;u++){const d=a[u];this.addGroup(d.start,d.count,d.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const C_=new _t,zs=new td,mu=new Hc,N_=new L,gu=new L,_u=new L,yu=new L,Yd=new L,vu=new L,P_=new L,xu=new L;class mn extends hn{constructor(e=new Hn,n=new dr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,a=s.length;o<a;o++){const l=s[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=o}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,o=i.morphAttributes.position,a=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const l=this.morphTargetInfluences;if(o&&l){vu.set(0,0,0);for(let c=0,u=o.length;c<u;c++){const h=l[c],d=o[c];h!==0&&(Yd.fromBufferAttribute(d,e),a?vu.addScaledVector(Yd,h):vu.addScaledVector(Yd.sub(n),h))}n.add(vu)}return n}raycast(e,n){const i=this.geometry,s=this.material,o=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),mu.copy(i.boundingSphere),mu.applyMatrix4(o),zs.copy(e.ray).recast(e.near),!(mu.containsPoint(zs.origin)===!1&&(zs.intersectSphere(mu,N_)===null||zs.origin.distanceToSquared(N_)>(e.far-e.near)**2))&&(C_.copy(o).invert(),zs.copy(e.ray).applyMatrix4(C_),!(i.boundingBox!==null&&zs.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,zs)))}_computeIntersections(e,n,i){let s;const o=this.geometry,a=this.material,l=o.index,c=o.attributes.position,u=o.attributes.uv,h=o.attributes.uv1,d=o.attributes.normal,f=o.groups,p=o.drawRange;if(l!==null)if(Array.isArray(a))for(let m=0,y=f.length;m<y;m++){const _=f[m],g=a[_.materialIndex],v=Math.max(_.start,p.start),x=Math.min(l.count,Math.min(_.start+_.count,p.start+p.count));for(let T=v,b=x;T<b;T+=3){const S=l.getX(T),M=l.getX(T+1),A=l.getX(T+2);s=bu(this,g,e,i,u,h,d,S,M,A),s&&(s.faceIndex=Math.floor(T/3),s.face.materialIndex=_.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),y=Math.min(l.count,p.start+p.count);for(let _=m,g=y;_<g;_+=3){const v=l.getX(_),x=l.getX(_+1),T=l.getX(_+2);s=bu(this,a,e,i,u,h,d,v,x,T),s&&(s.faceIndex=Math.floor(_/3),n.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let m=0,y=f.length;m<y;m++){const _=f[m],g=a[_.materialIndex],v=Math.max(_.start,p.start),x=Math.min(c.count,Math.min(_.start+_.count,p.start+p.count));for(let T=v,b=x;T<b;T+=3){const S=T,M=T+1,A=T+2;s=bu(this,g,e,i,u,h,d,S,M,A),s&&(s.faceIndex=Math.floor(T/3),s.face.materialIndex=_.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),y=Math.min(c.count,p.start+p.count);for(let _=m,g=y;_<g;_+=3){const v=_,x=_+1,T=_+2;s=bu(this,a,e,i,u,h,d,v,x,T),s&&(s.faceIndex=Math.floor(_/3),n.push(s))}}}}function $E(r,e,n,i,s,o,a,l){let c;if(e.side===Ut?c=i.intersectTriangle(a,o,s,!0,l):c=i.intersectTriangle(s,o,a,e.side===Ti,l),c===null)return null;xu.copy(l),xu.applyMatrix4(r.matrixWorld);const u=n.ray.origin.distanceTo(xu);return u<n.near||u>n.far?null:{distance:u,point:xu.clone(),object:r}}function bu(r,e,n,i,s,o,a,l,c,u){r.getVertexPosition(l,gu),r.getVertexPosition(c,_u),r.getVertexPosition(u,yu);const h=$E(r,e,n,i,gu,_u,yu,P_);if(h){const d=new L;Ui.getBarycoord(P_,gu,_u,yu,d),s&&(h.uv=Ui.getInterpolatedAttribute(s,l,c,u,d,new ue)),o&&(h.uv1=Ui.getInterpolatedAttribute(o,l,c,u,d,new ue)),a&&(h.normal=Ui.getInterpolatedAttribute(a,l,c,u,d,new L),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const f={a:l,b:c,c:u,normal:new L,materialIndex:0};Ui.getNormal(gu,_u,yu,f.normal),h.face=f,h.barycoord=d}return h}class xo extends Hn{constructor(e=1,n=1,i=1,s=1,o=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:o,depthSegments:a};const l=this;s=Math.floor(s),o=Math.floor(o),a=Math.floor(a);const c=[],u=[],h=[],d=[];let f=0,p=0;m("z","y","x",-1,-1,i,n,e,a,o,0),m("z","y","x",1,-1,i,n,-e,a,o,1),m("x","z","y",1,1,e,i,n,s,a,2),m("x","z","y",1,-1,e,i,-n,s,a,3),m("x","y","z",1,-1,e,n,i,s,o,4),m("x","y","z",-1,-1,e,n,-i,s,o,5),this.setIndex(c),this.setAttribute("position",new dn(u,3)),this.setAttribute("normal",new dn(h,3)),this.setAttribute("uv",new dn(d,2));function m(y,_,g,v,x,T,b,S,M,A,E){const w=T/M,N=b/A,D=T/2,F=b/2,k=S/2,Y=M+1,$=A+1;let V=0,B=0;const J=new L;for(let X=0;X<$;X++){const re=X*N-F;for(let fe=0;fe<Y;fe++){const De=fe*w-D;J[y]=De*v,J[_]=re*x,J[g]=k,u.push(J.x,J.y,J.z),J[y]=0,J[_]=0,J[g]=S>0?1:-1,h.push(J.x,J.y,J.z),d.push(fe/M),d.push(1-X/A),V+=1}}for(let X=0;X<A;X++)for(let re=0;re<M;re++){const fe=f+re+Y*X,De=f+re+Y*(X+1),it=f+(re+1)+Y*(X+1),q=f+(re+1)+Y*X;c.push(fe,De,q),c.push(De,it,q),B+=6}l.addGroup(p,B,E),p+=B,f+=V}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xo(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Xa(r){const e={};for(const n in r){e[n]={};for(const i in r[n]){const s=r[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function jn(r){const e={};for(let n=0;n<r.length;n++){const i=Xa(r[n]);for(const s in i)e[s]=i[s]}return e}function jE(r){const e=[];for(let n=0;n<r.length;n++)e.push(r[n].clone());return e}function Cx(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Ze.workingColorSpace}const Nx={clone:Xa,merge:jn};var qE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,XE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class vr extends Gn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=qE,this.fragmentShader=XE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Xa(e.uniforms),this.uniformsGroups=jE(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?n.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[s]={type:"m4",value:a.toArray()}:n.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class Zm extends hn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new _t,this.projectionMatrix=new _t,this.projectionMatrixInverse=new _t,this.coordinateSystem=Zn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const hs=new L,D_=new ue,L_=new ue;class wn extends Zm{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=mo*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(nc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return mo*2*Math.atan(Math.tan(nc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){hs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(hs.x,hs.y).multiplyScalar(-e/hs.z),hs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(hs.x,hs.y).multiplyScalar(-e/hs.z)}getViewSize(e,n){return this.getViewBounds(e,D_,L_),n.subVectors(L_,D_)}setViewOffset(e,n,i,s,o,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(nc*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,o=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,u=a.fullHeight;o+=a.offsetX*s/c,n-=a.offsetY*i/u,s*=a.width/c,i*=a.height/u}const l=this.filmOffset;l!==0&&(o+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+s,n,n-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const Uo=-90,Fo=1;class Px extends hn{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new wn(Uo,Fo,e,n);s.layers=this.layers,this.add(s);const o=new wn(Uo,Fo,e,n);o.layers=this.layers,this.add(o);const a=new wn(Uo,Fo,e,n);a.layers=this.layers,this.add(a);const l=new wn(Uo,Fo,e,n);l.layers=this.layers,this.add(l);const c=new wn(Uo,Fo,e,n);c.layers=this.layers,this.add(c);const u=new wn(Uo,Fo,e,n);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,s,o,a,l,c]=n;for(const u of n)this.remove(u);if(e===Zn)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===ws)i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of n)this.add(u),u.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[o,a,l,c,u,h]=this.children,d=e.getRenderTarget(),f=e.getActiveCubeFace(),p=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const y=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(n,o),e.setRenderTarget(i,1,s),e.render(n,a),e.setRenderTarget(i,2,s),e.render(n,l),e.setRenderTarget(i,3,s),e.render(n,c),e.setRenderTarget(i,4,s),e.render(n,u),i.texture.generateMipmaps=y,e.setRenderTarget(i,5,s),e.render(n,h),e.setRenderTarget(d,f,p),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class Wc extends un{constructor(e=[],n=_r,i,s,o,a,l,c,u,h){super(e,n,i,s,o,a,l,c,u,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Dx extends As{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new Wc(s),this._setTextureOptions(n),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new xo(5,5,5),o=new vr({name:"CubemapFromEquirect",uniforms:Xa(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Ut,blending:oi});o.uniforms.tEquirect.value=n;const a=new mn(s,o),l=n.minFilter;return n.minFilter===ii&&(n.minFilter=vn),new Px(1,10,this).update(e,a),n.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,n=!0,i=!0,s=!0){const o=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,s);e.setRenderTarget(o)}}let sa=class extends hn{constructor(){super(),this.isGroup=!0,this.type="Group"}};const YE={type:"move"};class ph{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new sa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new sa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new sa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,o=null,a=null;const l=this._targetRay,c=this._grip,u=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const y of e.hand.values()){const _=n.getJointPose(y,i),g=this._getHandJoint(u,y);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],f=h.position.distanceTo(d.position),p=.02,m=.005;u.inputState.pinching&&f>p+m?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&f<=p-m&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(o=n.getPose(e.gripSpace,i),o!==null&&(c.matrix.fromArray(o.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,o.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(o.linearVelocity)):c.hasLinearVelocity=!1,o.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(o.angularVelocity)):c.hasAngularVelocity=!1));l!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&o!==null&&(s=o),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(YE)))}return l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new sa;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}class nd extends hn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new li,this.environmentIntensity=1,this.environmentRotation=new li,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}class Qm{constructor(e,n){this.isInterleavedBuffer=!0,this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=Eh,this.updateRanges=[],this.version=0,this.uuid=Yr()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let s=0,o=this.stride;s<o;s++)this.array[e+s]=n.array[i+s];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const $n=new L;class Cc{constructor(e,n,i,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)$n.fromBufferAttribute(this,n),$n.applyMatrix4(e),this.setXYZ(n,$n.x,$n.y,$n.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)$n.fromBufferAttribute(this,n),$n.applyNormalMatrix(e),this.setXYZ(n,$n.x,$n.y,$n.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)$n.fromBufferAttribute(this,n),$n.transformDirection(e),this.setXYZ(n,$n.x,$n.y,$n.z);return this}getComponent(e,n){let i=this.array[e*this.data.stride+this.offset+n];return this.normalized&&(i=Kn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=ut(i,this.array)),this.data.array[e*this.data.stride+this.offset+n]=i,this}setX(e,n){return this.normalized&&(n=ut(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.normalized&&(n=ut(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.normalized&&(n=ut(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.normalized&&(n=ut(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){let n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=Kn(n,this.array)),n}getY(e){let n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=Kn(n,this.array)),n}getZ(e){let n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=Kn(n,this.array)),n}getW(e){let n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=Kn(n,this.array)),n}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this}setXYZW(e,n,i,s,o){return e=e*this.data.stride+this.offset,this.normalized&&(n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array),o=ut(o,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this.data.array[e+3]=o,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)n.push(this.data.array[s+o])}return new Nn(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Cc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)n.push(this.data.array[s+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Jm extends Gn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Oo;const xl=new L,Bo=new L,ko=new L,zo=new ue,bl=new ue,Lx=new _t,Tu=new L,Tl=new L,Su=new L,I_=new ue,Kd=new ue,U_=new ue;class KE extends hn{constructor(e=new Jm){if(super(),this.isSprite=!0,this.type="Sprite",Oo===void 0){Oo=new Hn;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Qm(n,5);Oo.setIndex([0,1,2,0,2,3]),Oo.setAttribute("position",new Cc(i,3,0,!1)),Oo.setAttribute("uv",new Cc(i,2,3,!1))}this.geometry=Oo,this.material=e,this.center=new ue(.5,.5),this.count=1}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Bo.setFromMatrixScale(this.matrixWorld),Lx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ko.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Bo.multiplyScalar(-ko.z);const i=this.material.rotation;let s,o;i!==0&&(o=Math.cos(i),s=Math.sin(i));const a=this.center;Mu(Tu.set(-.5,-.5,0),ko,a,Bo,s,o),Mu(Tl.set(.5,-.5,0),ko,a,Bo,s,o),Mu(Su.set(.5,.5,0),ko,a,Bo,s,o),I_.set(0,0),Kd.set(1,0),U_.set(1,1);let l=e.ray.intersectTriangle(Tu,Tl,Su,!1,xl);if(l===null&&(Mu(Tl.set(-.5,.5,0),ko,a,Bo,s,o),Kd.set(0,1),l=e.ray.intersectTriangle(Tu,Su,Tl,!1,xl),l===null))return;const c=e.ray.origin.distanceTo(xl);c<e.near||c>e.far||n.push({distance:c,point:xl.clone(),uv:Ui.getInterpolation(xl,Tu,Tl,Su,I_,Kd,U_,new ue),face:null,object:this})}copy(e,n){return super.copy(e,n),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Mu(r,e,n,i,s,o){zo.subVectors(r,n).addScalar(.5).multiply(i),s!==void 0?(bl.x=o*zo.x-s*zo.y,bl.y=s*zo.x+o*zo.y):bl.copy(zo),r.copy(e),r.x+=bl.x,r.y+=bl.y,r.applyMatrix4(Lx)}class ZE extends un{constructor(e=null,n=1,i=1,s,o,a,l,c,u=Wt,h=Wt,d,f){super(null,a,l,c,u,h,s,o,d,f),this.isDataTexture=!0,this.image={data:e,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class QE extends Nn{constructor(e,n,i,s=1){super(e,n,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Zd=new L,JE=new L,ew=new at;class Xi{constructor(e=new L(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=Zd.subVectors(i,n).cross(JE.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(Zd),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const o=-(e.start.dot(this.normal)+this.constant)/s;return o<0||o>1?null:n.copy(e.start).addScaledVector(i,o)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||ew.getNormalMatrix(e),s=this.coplanarPoint(Zd).applyMatrix4(e),o=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(o),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Gs=new Hc,tw=new ue(.5,.5),Eu=new L;class $c{constructor(e=new Xi,n=new Xi,i=new Xi,s=new Xi,o=new Xi,a=new Xi){this.planes=[e,n,i,s,o,a]}set(e,n,i,s,o,a){const l=this.planes;return l[0].copy(e),l[1].copy(n),l[2].copy(i),l[3].copy(s),l[4].copy(o),l[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=Zn,i=!1){const s=this.planes,o=e.elements,a=o[0],l=o[1],c=o[2],u=o[3],h=o[4],d=o[5],f=o[6],p=o[7],m=o[8],y=o[9],_=o[10],g=o[11],v=o[12],x=o[13],T=o[14],b=o[15];if(s[0].setComponents(u-a,p-h,g-m,b-v).normalize(),s[1].setComponents(u+a,p+h,g+m,b+v).normalize(),s[2].setComponents(u+l,p+d,g+y,b+x).normalize(),s[3].setComponents(u-l,p-d,g-y,b-x).normalize(),i)s[4].setComponents(c,f,_,T).normalize(),s[5].setComponents(u-c,p-f,g-_,b-T).normalize();else if(s[4].setComponents(u-c,p-f,g-_,b-T).normalize(),n===Zn)s[5].setComponents(u+c,p+f,g+_,b+T).normalize();else if(n===ws)s[5].setComponents(c,f,_,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Gs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Gs.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Gs)}intersectsSprite(e){Gs.center.set(0,0,0);const n=tw.distanceTo(e.center);return Gs.radius=.7071067811865476+n,Gs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Gs)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let o=0;o<6;o++)if(n[o].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(Eu.x=s.normal.x>0?e.max.x:e.min.x,Eu.y=s.normal.y>0?e.max.y:e.min.y,Eu.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Eu)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ir=new _t,rr=new $c;class eg{constructor(){this.coordinateSystem=Zn}intersectsObject(e,n){if(!n.isArrayCamera||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(ir.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),rr.setFromProjectionMatrix(ir,s.coordinateSystem,s.reversedDepth),rr.intersectsObject(e))return!0}return!1}intersectsSprite(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(ir.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),rr.setFromProjectionMatrix(ir,s.coordinateSystem,s.reversedDepth),rr.intersectsSprite(e))return!0}return!1}intersectsSphere(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(ir.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),rr.setFromProjectionMatrix(ir,s.coordinateSystem,s.reversedDepth),rr.intersectsSphere(e))return!0}return!1}intersectsBox(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(ir.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),rr.setFromProjectionMatrix(ir,s.coordinateSystem,s.reversedDepth),rr.intersectsBox(e))return!0}return!1}containsPoint(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(ir.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),rr.setFromProjectionMatrix(ir,s.coordinateSystem,s.reversedDepth),rr.containsPoint(e))return!0}return!1}clone(){return new eg}}class id extends Gn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ge(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ah=new L,Rh=new L,F_=new _t,Sl=new td,wu=new Hc,Qd=new L,O_=new L;class nw extends hn{constructor(e=new Hn,n=new id){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let s=1,o=n.count;s<o;s++)Ah.fromBufferAttribute(n,s-1),Rh.fromBufferAttribute(n,s),i[s]=i[s-1],i[s]+=Ah.distanceTo(Rh);e.setAttribute("lineDistance",new dn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,s=this.matrixWorld,o=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),wu.copy(i.boundingSphere),wu.applyMatrix4(s),wu.radius+=o,e.ray.intersectsSphere(wu)===!1)return;F_.copy(s).invert(),Sl.copy(e.ray).applyMatrix4(F_);const l=o/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,u=this.isLineSegments?2:1,h=i.index,f=i.attributes.position;if(h!==null){const p=Math.max(0,a.start),m=Math.min(h.count,a.start+a.count);for(let y=p,_=m-1;y<_;y+=u){const g=h.getX(y),v=h.getX(y+1),x=Au(this,e,Sl,c,g,v,y);x&&n.push(x)}if(this.isLineLoop){const y=h.getX(m-1),_=h.getX(p),g=Au(this,e,Sl,c,y,_,m-1);g&&n.push(g)}}else{const p=Math.max(0,a.start),m=Math.min(f.count,a.start+a.count);for(let y=p,_=m-1;y<_;y+=u){const g=Au(this,e,Sl,c,y,y+1,y);g&&n.push(g)}if(this.isLineLoop){const y=Au(this,e,Sl,c,m-1,p,m-1);y&&n.push(y)}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,a=s.length;o<a;o++){const l=s[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=o}}}}}function Au(r,e,n,i,s,o,a){const l=r.geometry.attributes.position;if(Ah.fromBufferAttribute(l,s),Rh.fromBufferAttribute(l,o),n.distanceSqToSegment(Ah,Rh,Qd,O_)>i)return;Qd.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(Qd);if(!(u<e.near||u>e.far))return{distance:u,point:O_.clone().applyMatrix4(r.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:r}}class iw extends Gn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class rw extends un{constructor(e,n){super({width:e,height:n}),this.isFramebufferTexture=!0,this.magFilter=Wt,this.minFilter=Wt,this.generateMipmaps=!1,this.needsUpdate=!0}}class sw extends un{constructor(e,n,i,s,o,a,l,c,u){super(e,n,i,s,o,a,l,c,u),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Bi extends un{constructor(e,n,i=Gt,s,o,a,l=Wt,c=Wt,u,h=Ei,d=1){if(h!==Ei&&h!==wi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:e,height:n,depth:d};super(f,s,o,a,l,c,h,i,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new jm(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}class Ix extends un{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class jc extends Hn{constructor(e=1,n=1,i=1,s=32,o=1,a=!1,l=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:s,heightSegments:o,openEnded:a,thetaStart:l,thetaLength:c};const u=this;s=Math.floor(s),o=Math.floor(o);const h=[],d=[],f=[],p=[];let m=0;const y=[],_=i/2;let g=0;v(),a===!1&&(e>0&&x(!0),n>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new dn(d,3)),this.setAttribute("normal",new dn(f,3)),this.setAttribute("uv",new dn(p,2));function v(){const T=new L,b=new L;let S=0;const M=(n-e)/i;for(let A=0;A<=o;A++){const E=[],w=A/o,N=w*(n-e)+e;for(let D=0;D<=s;D++){const F=D/s,k=F*c+l,Y=Math.sin(k),$=Math.cos(k);b.x=N*Y,b.y=-w*i+_,b.z=N*$,d.push(b.x,b.y,b.z),T.set(Y,M,$).normalize(),f.push(T.x,T.y,T.z),p.push(F,1-w),E.push(m++)}y.push(E)}for(let A=0;A<s;A++)for(let E=0;E<o;E++){const w=y[E][A],N=y[E+1][A],D=y[E+1][A+1],F=y[E][A+1];(e>0||E!==0)&&(h.push(w,N,F),S+=3),(n>0||E!==o-1)&&(h.push(N,D,F),S+=3)}u.addGroup(g,S,0),g+=S}function x(T){const b=m,S=new ue,M=new L;let A=0;const E=T===!0?e:n,w=T===!0?1:-1;for(let D=1;D<=s;D++)d.push(0,_*w,0),f.push(0,w,0),p.push(.5,.5),m++;const N=m;for(let D=0;D<=s;D++){const k=D/s*c+l,Y=Math.cos(k),$=Math.sin(k);M.x=E*$,M.y=_*w,M.z=E*Y,d.push(M.x,M.y,M.z),f.push(0,w,0),S.x=Y*.5+.5,S.y=$*.5*w+.5,p.push(S.x,S.y),m++}for(let D=0;D<s;D++){const F=b+D,k=N+D;T===!0?h.push(k,k+1,F):h.push(k+1,k,F),A+=3}u.addGroup(g,A,T===!0?1:2),g+=A}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class tg extends jc{constructor(e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(0,e,n,i,s,o,a,l),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l}}static fromJSON(e){return new tg(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class rs{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,s=this.getPoint(0),o=0;n.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),o+=i.distanceTo(s),n.push(o),s=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n=null){const i=this.getLengths();let s=0;const o=i.length;let a;n?a=n:a=e*i[o-1];let l=0,c=o-1,u;for(;l<=c;)if(s=Math.floor(l+(c-l)/2),u=i[s]-a,u<0)l=s+1;else if(u>0)c=s-1;else{c=s;break}if(s=c,i[s]===a)return s/(o-1);const h=i[s],f=i[s+1]-h,p=(a-h)/f;return(s+p)/(o-1)}getTangent(e,n){let s=e-1e-4,o=e+1e-4;s<0&&(s=0),o>1&&(o=1);const a=this.getPoint(s),l=this.getPoint(o),c=n||(a.isVector2?new ue:new L);return c.copy(l).sub(a).normalize(),c}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n=!1){const i=new L,s=[],o=[],a=[],l=new L,c=new _t;for(let p=0;p<=e;p++){const m=p/e;s[p]=this.getTangentAt(m,new L)}o[0]=new L,a[0]=new L;let u=Number.MAX_VALUE;const h=Math.abs(s[0].x),d=Math.abs(s[0].y),f=Math.abs(s[0].z);h<=u&&(u=h,i.set(1,0,0)),d<=u&&(u=d,i.set(0,1,0)),f<=u&&i.set(0,0,1),l.crossVectors(s[0],i).normalize(),o[0].crossVectors(s[0],l),a[0].crossVectors(s[0],o[0]);for(let p=1;p<=e;p++){if(o[p]=o[p-1].clone(),a[p]=a[p-1].clone(),l.crossVectors(s[p-1],s[p]),l.length()>Number.EPSILON){l.normalize();const m=Math.acos(ht(s[p-1].dot(s[p]),-1,1));o[p].applyMatrix4(c.makeRotationAxis(l,m))}a[p].crossVectors(s[p],o[p])}if(n===!0){let p=Math.acos(ht(o[0].dot(o[e]),-1,1));p/=e,s[0].dot(l.crossVectors(o[0],o[e]))>0&&(p=-p);for(let m=1;m<=e;m++)o[m].applyMatrix4(c.makeRotationAxis(s[m],p*m)),a[m].crossVectors(s[m],o[m])}return{tangents:s,normals:o,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ux extends rs{constructor(e=0,n=0,i=1,s=1,o=0,a=Math.PI*2,l=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=s,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=l,this.aRotation=c}getPoint(e,n=new ue){const i=n,s=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const a=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=s;for(;o>s;)o-=s;o<Number.EPSILON&&(a?o=0:o=s),this.aClockwise===!0&&!a&&(o===s?o=-s:o=o-s);const l=this.aStartAngle+e*o;let c=this.aX+this.xRadius*Math.cos(l),u=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),f=c-this.aX,p=u-this.aY;c=f*h-p*d+this.aX,u=f*d+p*h+this.aY}return i.set(c,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ow extends Ux{constructor(e,n,i,s,o,a){super(e,n,i,i,s,o,a),this.isArcCurve=!0,this.type="ArcCurve"}}function ng(){let r=0,e=0,n=0,i=0;function s(o,a,l,c){r=o,e=l,n=-3*o+3*a-2*l-c,i=2*o-2*a+l+c}return{initCatmullRom:function(o,a,l,c,u){s(a,l,u*(l-o),u*(c-a))},initNonuniformCatmullRom:function(o,a,l,c,u,h,d){let f=(a-o)/u-(l-o)/(u+h)+(l-a)/h,p=(l-a)/h-(c-a)/(h+d)+(c-l)/d;f*=h,p*=h,s(a,l,f,p)},calc:function(o){const a=o*o,l=a*o;return r+e*o+n*a+i*l}}}const Ru=new L,Jd=new ng,ef=new ng,tf=new ng;class aw extends rs{constructor(e=[],n=!1,i="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=s}getPoint(e,n=new L){const i=n,s=this.points,o=s.length,a=(o-(this.closed?0:1))*e;let l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/o)+1)*o:c===0&&l===o-1&&(l=o-2,c=1);let u,h;this.closed||l>0?u=s[(l-1)%o]:(Ru.subVectors(s[0],s[1]).add(s[0]),u=Ru);const d=s[l%o],f=s[(l+1)%o];if(this.closed||l+2<o?h=s[(l+2)%o]:(Ru.subVectors(s[o-1],s[o-2]).add(s[o-1]),h=Ru),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let m=Math.pow(u.distanceToSquared(d),p),y=Math.pow(d.distanceToSquared(f),p),_=Math.pow(f.distanceToSquared(h),p);y<1e-4&&(y=1),m<1e-4&&(m=y),_<1e-4&&(_=y),Jd.initNonuniformCatmullRom(u.x,d.x,f.x,h.x,m,y,_),ef.initNonuniformCatmullRom(u.y,d.y,f.y,h.y,m,y,_),tf.initNonuniformCatmullRom(u.z,d.z,f.z,h.z,m,y,_)}else this.curveType==="catmullrom"&&(Jd.initCatmullRom(u.x,d.x,f.x,h.x,this.tension),ef.initCatmullRom(u.y,d.y,f.y,h.y,this.tension),tf.initCatmullRom(u.z,d.z,f.z,h.z,this.tension));return i.set(Jd.calc(c),ef.calc(c),tf.calc(c)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const s=this.points[n];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(new L().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function B_(r,e,n,i,s){const o=(i-e)*.5,a=(s-n)*.5,l=r*r,c=r*l;return(2*n-2*i+o+a)*c+(-3*n+3*i-2*o-a)*l+o*r+n}function lw(r,e){const n=1-r;return n*n*e}function cw(r,e){return 2*(1-r)*r*e}function uw(r,e){return r*r*e}function rc(r,e,n,i){return lw(r,e)+cw(r,n)+uw(r,i)}function hw(r,e){const n=1-r;return n*n*n*e}function dw(r,e){const n=1-r;return 3*n*n*r*e}function fw(r,e){return 3*(1-r)*r*r*e}function pw(r,e){return r*r*r*e}function sc(r,e,n,i,s){return hw(r,e)+dw(r,n)+fw(r,i)+pw(r,s)}class mw extends rs{constructor(e=new ue,n=new ue,i=new ue,s=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=s}getPoint(e,n=new ue){const i=n,s=this.v0,o=this.v1,a=this.v2,l=this.v3;return i.set(sc(e,s.x,o.x,a.x,l.x),sc(e,s.y,o.y,a.y,l.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Fx extends rs{constructor(e=new L,n=new L,i=new L,s=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=s}getPoint(e,n=new L){const i=n,s=this.v0,o=this.v1,a=this.v2,l=this.v3;return i.set(sc(e,s.x,o.x,a.x,l.x),sc(e,s.y,o.y,a.y,l.y),sc(e,s.z,o.z,a.z,l.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class gw extends rs{constructor(e=new ue,n=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new ue){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new ue){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _w extends rs{constructor(e=new L,n=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=n}getPoint(e,n=new L){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new L){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yw extends rs{constructor(e=new ue,n=new ue,i=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new ue){const i=n,s=this.v0,o=this.v1,a=this.v2;return i.set(rc(e,s.x,o.x,a.x),rc(e,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ig extends rs{constructor(e=new L,n=new L,i=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new L){const i=n,s=this.v0,o=this.v1,a=this.v2;return i.set(rc(e,s.x,o.x,a.x),rc(e,s.y,o.y,a.y),rc(e,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vw extends rs{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,n=new ue){const i=n,s=this.points,o=(s.length-1)*e,a=Math.floor(o),l=o-a,c=s[a===0?a:a-1],u=s[a],h=s[a>s.length-2?s.length-1:a+1],d=s[a>s.length-3?s.length-1:a+2];return i.set(B_(l,c.x,u.x,h.x,d.x),B_(l,c.y,u.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const s=this.points[n];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(new ue().fromArray(s))}return this}}var xw=Object.freeze({__proto__:null,ArcCurve:ow,CatmullRomCurve3:aw,CubicBezierCurve:mw,CubicBezierCurve3:Fx,EllipseCurve:Ux,LineCurve:gw,LineCurve3:_w,QuadraticBezierCurve:yw,QuadraticBezierCurve3:ig,SplineCurve:vw});class qc extends Hn{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const o=e/2,a=n/2,l=Math.floor(i),c=Math.floor(s),u=l+1,h=c+1,d=e/l,f=n/c,p=[],m=[],y=[],_=[];for(let g=0;g<h;g++){const v=g*f-a;for(let x=0;x<u;x++){const T=x*d-o;m.push(T,-v,0),y.push(0,0,1),_.push(x/l),_.push(1-g/c)}}for(let g=0;g<c;g++)for(let v=0;v<l;v++){const x=v+u*g,T=v+u*(g+1),b=v+1+u*(g+1),S=v+1+u*g;p.push(x,T,S),p.push(T,b,S)}this.setIndex(p),this.setAttribute("position",new dn(m,3)),this.setAttribute("normal",new dn(y,3)),this.setAttribute("uv",new dn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qc(e.width,e.height,e.widthSegments,e.heightSegments)}}class Xc extends Hn{constructor(e=1,n=32,i=16,s=0,o=Math.PI*2,a=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:s,phiLength:o,thetaStart:a,thetaLength:l},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const c=Math.min(a+l,Math.PI);let u=0;const h=[],d=new L,f=new L,p=[],m=[],y=[],_=[];for(let g=0;g<=i;g++){const v=[],x=g/i;let T=0;g===0&&a===0?T=.5/n:g===i&&c===Math.PI&&(T=-.5/n);for(let b=0;b<=n;b++){const S=b/n;d.x=-e*Math.cos(s+S*o)*Math.sin(a+x*l),d.y=e*Math.cos(a+x*l),d.z=e*Math.sin(s+S*o)*Math.sin(a+x*l),m.push(d.x,d.y,d.z),f.copy(d).normalize(),y.push(f.x,f.y,f.z),_.push(S+T,1-x),v.push(u++)}h.push(v)}for(let g=0;g<i;g++)for(let v=0;v<n;v++){const x=h[g][v+1],T=h[g][v],b=h[g+1][v],S=h[g+1][v+1];(g!==0||a>0)&&p.push(x,T,S),(g!==i-1||c<Math.PI)&&p.push(T,b,S)}this.setIndex(p),this.setAttribute("position",new dn(m,3)),this.setAttribute("normal",new dn(y,3)),this.setAttribute("uv",new dn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class rg extends Hn{constructor(e=new ig(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),n=64,i=1,s=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:s,closed:o};const a=e.computeFrenetFrames(n,o);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const l=new L,c=new L,u=new ue;let h=new L;const d=[],f=[],p=[],m=[];y(),this.setIndex(m),this.setAttribute("position",new dn(d,3)),this.setAttribute("normal",new dn(f,3)),this.setAttribute("uv",new dn(p,2));function y(){for(let x=0;x<n;x++)_(x);_(o===!1?n:0),v(),g()}function _(x){h=e.getPointAt(x/n,h);const T=a.normals[x],b=a.binormals[x];for(let S=0;S<=s;S++){const M=S/s*Math.PI*2,A=Math.sin(M),E=-Math.cos(M);c.x=E*T.x+A*b.x,c.y=E*T.y+A*b.y,c.z=E*T.z+A*b.z,c.normalize(),f.push(c.x,c.y,c.z),l.x=h.x+i*c.x,l.y=h.y+i*c.y,l.z=h.z+i*c.z,d.push(l.x,l.y,l.z)}}function g(){for(let x=1;x<=n;x++)for(let T=1;T<=s;T++){const b=(s+1)*(x-1)+(T-1),S=(s+1)*x+(T-1),M=(s+1)*x+T,A=(s+1)*(x-1)+T;m.push(b,S,A),m.push(S,M,A)}}function v(){for(let x=0;x<=n;x++)for(let T=0;T<=s;T++)u.x=x/n,u.y=T/s,p.push(u.x,u.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new rg(new xw[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class bw extends Gn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ge(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Ox extends Gn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new li,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Tw extends Ox{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ht(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ge(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ge(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ge(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Sw extends Gn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new li,this.combine=zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Mw extends Gn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Ew extends Gn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Bx extends Gn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new li,this.combine=zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ww extends Gn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=KM,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Aw extends Gn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Rw extends Gn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ts,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cw extends id{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const nf={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Nw{constructor(e,n,i){const s=this;let o=!1,a=0,l=0,c;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.abortController=new AbortController,this.itemStart=function(h){l++,o===!1&&s.onStart!==void 0&&s.onStart(h,a,l),o=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,l),a===l&&(o=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,d){return u.push(h,d),this},this.removeHandler=function(h){const d=u.indexOf(h);return d!==-1&&u.splice(d,2),this},this.getHandler=function(h){for(let d=0,f=u.length;d<f;d+=2){const p=u[d],m=u[d+1];if(p.global&&(p.lastIndex=0),p.test(h))return m}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const Pw=new Nw;class sg{constructor(e){this.manager=e!==void 0?e:Pw,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(s,o){i.load(e,s,n,o)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}sg.DEFAULT_MATERIAL_NAME="__DEFAULT";const Go=new WeakMap;class Dw extends sg{constructor(e){super(e)}load(e,n,i,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,a=nf.get(`image:${e}`);if(a!==void 0){if(a.complete===!0)o.manager.itemStart(e),setTimeout(function(){n&&n(a),o.manager.itemEnd(e)},0);else{let d=Go.get(a);d===void 0&&(d=[],Go.set(a,d)),d.push({onLoad:n,onError:s})}return a}const l=Rc("img");function c(){h(),n&&n(this);const d=Go.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onLoad&&p.onLoad(this)}Go.delete(this),o.manager.itemEnd(e)}function u(d){h(),s&&s(d),nf.remove(`image:${e}`);const f=Go.get(this)||[];for(let p=0;p<f.length;p++){const m=f[p];m.onError&&m.onError(d)}Go.delete(this),o.manager.itemError(e),o.manager.itemEnd(e)}function h(){l.removeEventListener("load",c,!1),l.removeEventListener("error",u,!1)}return l.addEventListener("load",c,!1),l.addEventListener("error",u,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),nf.add(`image:${e}`,l),o.manager.itemStart(e),l.src=e,l}}class Lw extends sg{constructor(e){super(e)}load(e,n,i,s){const o=new un,a=new Dw(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(l){o.image=l,o.needsUpdate=!0,n!==void 0&&n(o)},i,s),o}}class bo extends hn{constructor(e,n=1){super(),this.isLight=!0,this.type="Light",this.color=new Ge(e),this.intensity=n}dispose(){}copy(e,n){return super.copy(e,n),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(n.object.target=this.target.uuid),n}}class Iw extends bo{constructor(e,n,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(hn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ge(n)}copy(e,n){return super.copy(e,n),this.groundColor.copy(e.groundColor),this}}const rf=new _t,k_=new L,z_=new L;class og{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.mapType=nn,this.map=null,this.mapPass=null,this.matrix=new _t,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $c,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Qe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;k_.setFromMatrixPosition(e.matrixWorld),n.position.copy(k_),z_.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(z_),n.updateMatrixWorld(),rf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(rf,n.coordinateSystem,n.reversedDepth),n.reversedDepth?i.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(rf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Uw extends og{constructor(){super(new wn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const n=this.camera,i=mo*2*e.angle*this.focus,s=this.mapSize.width/this.mapSize.height*this.aspect,o=e.distance||n.far;(i!==n.fov||s!==n.aspect||o!==n.far)&&(n.fov=i,n.aspect=s,n.far=o,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ag extends bo{constructor(e,n,i=0,s=Math.PI/3,o=0,a=2){super(e,n),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(hn.DEFAULT_UP),this.updateMatrix(),this.target=new hn,this.distance=i,this.angle=s,this.penumbra=o,this.decay=a,this.map=null,this.shadow=new Uw}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const G_=new _t,Ml=new L,sf=new L;class Fw extends og{constructor(){super(new wn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Qe(2,1,1,1),new Qe(0,1,1,1),new Qe(3,1,1,1),new Qe(1,1,1,1),new Qe(3,0,1,1),new Qe(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,s=this.matrix,o=e.distance||i.far;o!==i.far&&(i.far=o,i.updateProjectionMatrix()),Ml.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ml),sf.copy(i.position),sf.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(sf),i.updateMatrixWorld(),s.makeTranslation(-Ml.x,-Ml.y,-Ml.z),G_.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(G_,i.coordinateSystem,i.reversedDepth)}}class Ow extends bo{constructor(e,n,i=0,s=2){super(e,n),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=s,this.shadow=new Fw}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Yc extends Zm{constructor(e=-1,n=1,i=1,s=-1,o=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=o,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,o,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let o=i-e,a=i+e,l=s+n,c=s-n;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=u*this.view.offsetX,a=o+u*this.view.width,l-=h*this.view.offsetY,c=l-h*this.view.height}this.projectionMatrix.makeOrthographic(o,a,l,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}class Bw extends og{constructor(){super(new Yc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class kx extends bo{constructor(e,n){super(e,n),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(hn.DEFAULT_UP),this.updateMatrix(),this.target=new hn,this.shadow=new Bw}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class zx extends bo{constructor(e,n){super(e,n),this.isAmbientLight=!0,this.type="AmbientLight"}}class kw extends bo{constructor(e,n,i=10,s=10){super(e,n),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=s}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}}class zw{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new L)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,s=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*s),n.addScaledVector(a[2],.488603*o),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*s)),n.addScaledVector(a[5],1.092548*(s*o)),n.addScaledVector(a[6],.315392*(3*o*o-1)),n.addScaledVector(a[7],1.092548*(i*o)),n.addScaledVector(a[8],.546274*(i*i-s*s)),n}getIrradianceAt(e,n){const i=e.x,s=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*s),n.addScaledVector(a[2],2*.511664*o),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*s),n.addScaledVector(a[5],2*.429043*s*o),n.addScaledVector(a[6],.743125*o*o-.247708),n.addScaledVector(a[7],2*.429043*i*o),n.addScaledVector(a[8],.429043*(i*i-s*s)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].fromArray(e,n+s*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].toArray(e,n+s*3);return e}static getBasisAt(e,n){const i=e.x,s=e.y,o=e.z;n[0]=.282095,n[1]=.488603*s,n[2]=.488603*o,n[3]=.488603*i,n[4]=1.092548*i*s,n[5]=1.092548*s*o,n[6]=.315392*(3*o*o-1),n[7]=1.092548*i*o,n[8]=.546274*(i*i-s*s)}}class Gw extends bo{constructor(e=new zw,n=1){super(void 0,n),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}class Gx extends wn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Vx{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=performance.now();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}class Vw extends Qm{constructor(e,n,i=1){super(e,n),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}const V_=new _t;class Hx{constructor(e,n,i=0,s=1/0){this.ray=new td(e,n),this.near=i,this.far=s,this.camera=null,this.layers=new Xm,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,n){this.ray.set(e,n)}setFromCamera(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}setFromXRController(e){return V_.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(V_),this}intersectObject(e,n=!0,i=[]){return Lp(e,this,i,n),i.sort(H_),i}intersectObjects(e,n=!0,i=[]){for(let s=0,o=e.length;s<o;s++)Lp(e[s],this,i,n);return i.sort(H_),i}}function H_(r,e){return r.distance-e.distance}function Lp(r,e,n,i){let s=!0;if(r.layers.test(e.layers)&&r.raycast(e,n)===!1&&(s=!1),s===!0&&i===!0){const o=r.children;for(let a=0,l=o.length;a<l;a++)Lp(o[a],e,n,!0)}}class W_{constructor(e=1,n=0,i=0){this.radius=e,this.phi=n,this.theta=i}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=ht(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(ht(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class rd{constructor(e,n,i,s){rd.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,n,i,s)}identity(){return this.set(1,0,0,1),this}fromArray(e,n=0){for(let i=0;i<4;i++)this.elements[i]=e[i+n];return this}set(e,n,i,s){const o=this.elements;return o[0]=e,o[2]=n,o[1]=i,o[3]=s,this}}class sd extends is{constructor(e,n=null){super(),this.object=e,this.domElement=n,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function Ip(r,e,n,i){const s=Hw(i);switch(n){case Om:return r*e;case Vc:return r*e/s.components*s.byteLength;case rl:return r*e/s.components*s.byteLength;case qr:return r*e*2/s.components*s.byteLength;case sl:return r*e*2/s.components*s.byteLength;case Gc:return r*e*3/s.components*s.byteLength;case sn:return r*e*4/s.components*s.byteLength;case ol:return r*e*4/s.components*s.byteLength;case vs:case xs:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case bs:case Ts:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Ec:case Ac:return Math.max(r,16)*Math.max(e,8)/4;case Mc:case wc:return Math.max(r,8)*Math.max(e,8)/2;case Ea:case wa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Aa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Ra:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Ca:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Na:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Pa:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Da:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case La:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Ia:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Ua:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Fa:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Oa:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Ba:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case ka:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case za:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Ga:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case Va:case Np:case Pp:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Ha:case Wa:return Math.ceil(r/4)*Math.ceil(e/4)*8;case $a:case ja:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function Hw(r){switch(r){case nn:case ao:return{byteLength:1,components:1};case Qi:case lo:case An:return{byteLength:2,components:1};case Yh:case Kh:return{byteLength:2,components:4};case Gt:case En:case ln:return{byteLength:4,components:1};case Zh:case Qh:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:il}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=il);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Wx(){let r=null,e=!1,n=null,i=null;function s(o,a){n(o,a),i=r.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=r.requestAnimationFrame(s),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(o){n=o},setContext:function(o){r=o}}}function Ww(r){const e=new WeakMap;function n(l,c){const u=l.array,h=l.usage,d=u.byteLength,f=r.createBuffer();r.bindBuffer(c,f),r.bufferData(c,u,h),l.onUploadCallback();let p;if(u instanceof Float32Array)p=r.FLOAT;else if(typeof Float16Array<"u"&&u instanceof Float16Array)p=r.HALF_FLOAT;else if(u instanceof Uint16Array)l.isFloat16BufferAttribute?p=r.HALF_FLOAT:p=r.UNSIGNED_SHORT;else if(u instanceof Int16Array)p=r.SHORT;else if(u instanceof Uint32Array)p=r.UNSIGNED_INT;else if(u instanceof Int32Array)p=r.INT;else if(u instanceof Int8Array)p=r.BYTE;else if(u instanceof Uint8Array)p=r.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)p=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:f,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:d}}function i(l,c,u){const h=c.array,d=c.updateRanges;if(r.bindBuffer(u,l),d.length===0)r.bufferSubData(u,0,h);else{d.sort((p,m)=>p.start-m.start);let f=0;for(let p=1;p<d.length;p++){const m=d[f],y=d[p];y.start<=m.start+m.count+1?m.count=Math.max(m.count,y.start+y.count-m.start):(++f,d[f]=y)}d.length=f+1;for(let p=0,m=d.length;p<m;p++){const y=d[p];r.bufferSubData(u,y.start*h.BYTES_PER_ELEMENT,h,y.start,y.count)}c.clearUpdateRanges()}c.onUploadCallback()}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),e.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const c=e.get(l);c&&(r.deleteBuffer(c.buffer),e.delete(l))}function a(l,c){if(l.isInterleavedBufferAttribute&&(l=l.data),l.isGLBufferAttribute){const h=e.get(l);(!h||h.version<l.version)&&e.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}const u=e.get(l);if(u===void 0)e.set(l,n(l,c));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(u.buffer,l,c),u.version=l.version}}return{get:s,remove:o,update:a}}var $w=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,jw=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,qw=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Xw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Yw=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Kw=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Zw=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Qw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Jw=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,eA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,tA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,nA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,iA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,rA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,sA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,oA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,aA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,lA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,cA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,uA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,hA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,dA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,fA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,pA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,mA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,gA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,_A=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,yA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,vA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,xA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,bA="gl_FragColor = linearToOutputTexel( gl_FragColor );",TA=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,SA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,MA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,EA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,wA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,AA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,RA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,CA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,NA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,PA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,DA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,LA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,IA=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,UA=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,FA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,OA=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,BA=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,kA=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,zA=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,GA=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,VA=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,HA=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,WA=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,$A=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,jA=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,qA=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,XA=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,YA=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,KA=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,ZA=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,QA=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,JA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,eR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,tR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,nR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,iR=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,rR=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,sR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,oR=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,aR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,lR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,cR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,uR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,hR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,fR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,pR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,mR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,gR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,_R=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,yR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,vR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,xR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,bR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,TR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,SR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,MR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ER=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,wR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,AR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,RR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,CR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,NR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,PR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,DR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,LR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,IR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,UR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,FR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,OR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,BR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,kR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,zR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,GR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,VR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,HR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const WR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$R=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,jR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,qR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,XR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,YR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,KR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ZR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,QR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,JR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,eC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,tC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,iC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,sC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,cC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,hC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,dC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,mC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_C=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,vC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,xC=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,TC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,SC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:$w,alphahash_pars_fragment:jw,alphamap_fragment:qw,alphamap_pars_fragment:Xw,alphatest_fragment:Yw,alphatest_pars_fragment:Kw,aomap_fragment:Zw,aomap_pars_fragment:Qw,batching_pars_vertex:Jw,batching_vertex:eA,begin_vertex:tA,beginnormal_vertex:nA,bsdfs:iA,iridescence_fragment:rA,bumpmap_pars_fragment:sA,clipping_planes_fragment:oA,clipping_planes_pars_fragment:aA,clipping_planes_pars_vertex:lA,clipping_planes_vertex:cA,color_fragment:uA,color_pars_fragment:hA,color_pars_vertex:dA,color_vertex:fA,common:pA,cube_uv_reflection_fragment:mA,defaultnormal_vertex:gA,displacementmap_pars_vertex:_A,displacementmap_vertex:yA,emissivemap_fragment:vA,emissivemap_pars_fragment:xA,colorspace_fragment:bA,colorspace_pars_fragment:TA,envmap_fragment:SA,envmap_common_pars_fragment:MA,envmap_pars_fragment:EA,envmap_pars_vertex:wA,envmap_physical_pars_fragment:OA,envmap_vertex:AA,fog_vertex:RA,fog_pars_vertex:CA,fog_fragment:NA,fog_pars_fragment:PA,gradientmap_pars_fragment:DA,lightmap_pars_fragment:LA,lights_lambert_fragment:IA,lights_lambert_pars_fragment:UA,lights_pars_begin:FA,lights_toon_fragment:BA,lights_toon_pars_fragment:kA,lights_phong_fragment:zA,lights_phong_pars_fragment:GA,lights_physical_fragment:VA,lights_physical_pars_fragment:HA,lights_fragment_begin:WA,lights_fragment_maps:$A,lights_fragment_end:jA,logdepthbuf_fragment:qA,logdepthbuf_pars_fragment:XA,logdepthbuf_pars_vertex:YA,logdepthbuf_vertex:KA,map_fragment:ZA,map_pars_fragment:QA,map_particle_fragment:JA,map_particle_pars_fragment:eR,metalnessmap_fragment:tR,metalnessmap_pars_fragment:nR,morphinstance_vertex:iR,morphcolor_vertex:rR,morphnormal_vertex:sR,morphtarget_pars_vertex:oR,morphtarget_vertex:aR,normal_fragment_begin:lR,normal_fragment_maps:cR,normal_pars_fragment:uR,normal_pars_vertex:hR,normal_vertex:dR,normalmap_pars_fragment:fR,clearcoat_normal_fragment_begin:pR,clearcoat_normal_fragment_maps:mR,clearcoat_pars_fragment:gR,iridescence_pars_fragment:_R,opaque_fragment:yR,packing:vR,premultiplied_alpha_fragment:xR,project_vertex:bR,dithering_fragment:TR,dithering_pars_fragment:SR,roughnessmap_fragment:MR,roughnessmap_pars_fragment:ER,shadowmap_pars_fragment:wR,shadowmap_pars_vertex:AR,shadowmap_vertex:RR,shadowmask_pars_fragment:CR,skinbase_vertex:NR,skinning_pars_vertex:PR,skinning_vertex:DR,skinnormal_vertex:LR,specularmap_fragment:IR,specularmap_pars_fragment:UR,tonemapping_fragment:FR,tonemapping_pars_fragment:OR,transmission_fragment:BR,transmission_pars_fragment:kR,uv_pars_fragment:zR,uv_pars_vertex:GR,uv_vertex:VR,worldpos_vertex:HR,background_vert:WR,background_frag:$R,backgroundCube_vert:jR,backgroundCube_frag:qR,cube_vert:XR,cube_frag:YR,depth_vert:KR,depth_frag:ZR,distanceRGBA_vert:QR,distanceRGBA_frag:JR,equirect_vert:eC,equirect_frag:tC,linedashed_vert:nC,linedashed_frag:iC,meshbasic_vert:rC,meshbasic_frag:sC,meshlambert_vert:oC,meshlambert_frag:aC,meshmatcap_vert:lC,meshmatcap_frag:cC,meshnormal_vert:uC,meshnormal_frag:hC,meshphong_vert:dC,meshphong_frag:fC,meshphysical_vert:pC,meshphysical_frag:mC,meshtoon_vert:gC,meshtoon_frag:_C,points_vert:yC,points_frag:vC,shadow_vert:xC,shadow_frag:bC,sprite_vert:TC,sprite_frag:SC},Ee={common:{diffuse:{value:new Ge(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new at},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new at}},envmap:{envMap:{value:null},envMapRotation:{value:new at},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new at}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new at}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new at},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new at},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new at},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new at}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new at}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new at}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ge(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0},uvTransform:{value:new at}},sprite:{diffuse:{value:new Ge(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new at},alphaMap:{value:null},alphaMapTransform:{value:new at},alphaTest:{value:0}}},hr={basic:{uniforms:jn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:jn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ge(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:jn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:jn([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:jn([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Ge(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:jn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:jn([Ee.points,Ee.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:jn([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:jn([Ee.common,Ee.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:jn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:jn([Ee.sprite,Ee.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new at},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new at}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:jn([Ee.common,Ee.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:jn([Ee.lights,Ee.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};hr.physical={uniforms:jn([hr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new at},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new at},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new at},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new at},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new at},sheen:{value:0},sheenColor:{value:new Ge(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new at},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new at},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new at},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new at},attenuationDistance:{value:0},attenuationColor:{value:new Ge(0)},specularColor:{value:new Ge(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new at},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new at},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new at}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const Cu={r:0,b:0,g:0},Vs=new li,MC=new _t;function EC(r,e,n,i,s,o,a){const l=new Ge(0);let c=o===!0?0:1,u,h,d=null,f=0,p=null;function m(x){let T=x.isScene===!0?x.background:null;return T&&T.isTexture&&(T=(x.backgroundBlurriness>0?n:e).get(T)),T}function y(x){let T=!1;const b=m(x);b===null?g(l,c):b&&b.isColor&&(g(b,1),T=!0);const S=r.xr.getEnvironmentBlendMode();S==="additive"?i.buffers.color.setClear(0,0,0,1,a):S==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(r.autoClear||T)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function _(x,T){const b=m(T);b&&(b.isCubeTexture||b.mapping===uo)?(h===void 0&&(h=new mn(new xo(1,1,1),new vr({name:"BackgroundCubeMaterial",uniforms:Xa(hr.backgroundCube.uniforms),vertexShader:hr.backgroundCube.vertexShader,fragmentShader:hr.backgroundCube.fragmentShader,side:Ut,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(S,M,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),Vs.copy(T.backgroundRotation),Vs.x*=-1,Vs.y*=-1,Vs.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(Vs.y*=-1,Vs.z*=-1),h.material.uniforms.envMap.value=b,h.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(MC.makeRotationFromEuler(Vs)),h.material.toneMapped=Ze.getTransfer(b.colorSpace)!==Ae,(d!==b||f!==b.version||p!==r.toneMapping)&&(h.material.needsUpdate=!0,d=b,f=b.version,p=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):b&&b.isTexture&&(u===void 0&&(u=new mn(new qc(2,2),new vr({name:"BackgroundMaterial",uniforms:Xa(hr.background.uniforms),vertexShader:hr.background.vertexShader,fragmentShader:hr.background.fragmentShader,side:Ti,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=b,u.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,u.material.toneMapped=Ze.getTransfer(b.colorSpace)!==Ae,b.matrixAutoUpdate===!0&&b.updateMatrix(),u.material.uniforms.uvTransform.value.copy(b.matrix),(d!==b||f!==b.version||p!==r.toneMapping)&&(u.material.needsUpdate=!0,d=b,f=b.version,p=r.toneMapping),u.layers.enableAll(),x.unshift(u,u.geometry,u.material,0,0,null))}function g(x,T){x.getRGB(Cu,Cx(r)),i.buffers.color.setClear(Cu.r,Cu.g,Cu.b,T,a)}function v(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return l},setClearColor:function(x,T=1){l.set(x),c=T,g(l,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,g(l,c)},render:y,addToRenderList:_,dispose:v}}function wC(r,e){const n=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},s=f(null);let o=s,a=!1;function l(w,N,D,F,k){let Y=!1;const $=d(F,D,N);o!==$&&(o=$,u(o.object)),Y=p(w,F,D,k),Y&&m(w,F,D,k),k!==null&&e.update(k,r.ELEMENT_ARRAY_BUFFER),(Y||a)&&(a=!1,T(w,N,D,F),k!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(k).buffer))}function c(){return r.createVertexArray()}function u(w){return r.bindVertexArray(w)}function h(w){return r.deleteVertexArray(w)}function d(w,N,D){const F=D.wireframe===!0;let k=i[w.id];k===void 0&&(k={},i[w.id]=k);let Y=k[N.id];Y===void 0&&(Y={},k[N.id]=Y);let $=Y[F];return $===void 0&&($=f(c()),Y[F]=$),$}function f(w){const N=[],D=[],F=[];for(let k=0;k<n;k++)N[k]=0,D[k]=0,F[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:D,attributeDivisors:F,object:w,attributes:{},index:null}}function p(w,N,D,F){const k=o.attributes,Y=N.attributes;let $=0;const V=D.getAttributes();for(const B in V)if(V[B].location>=0){const X=k[B];let re=Y[B];if(re===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(re=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(re=w.instanceColor)),X===void 0||X.attribute!==re||re&&X.data!==re.data)return!0;$++}return o.attributesNum!==$||o.index!==F}function m(w,N,D,F){const k={},Y=N.attributes;let $=0;const V=D.getAttributes();for(const B in V)if(V[B].location>=0){let X=Y[B];X===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(X=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(X=w.instanceColor));const re={};re.attribute=X,X&&X.data&&(re.data=X.data),k[B]=re,$++}o.attributes=k,o.attributesNum=$,o.index=F}function y(){const w=o.newAttributes;for(let N=0,D=w.length;N<D;N++)w[N]=0}function _(w){g(w,0)}function g(w,N){const D=o.newAttributes,F=o.enabledAttributes,k=o.attributeDivisors;D[w]=1,F[w]===0&&(r.enableVertexAttribArray(w),F[w]=1),k[w]!==N&&(r.vertexAttribDivisor(w,N),k[w]=N)}function v(){const w=o.newAttributes,N=o.enabledAttributes;for(let D=0,F=N.length;D<F;D++)N[D]!==w[D]&&(r.disableVertexAttribArray(D),N[D]=0)}function x(w,N,D,F,k,Y,$){$===!0?r.vertexAttribIPointer(w,N,D,k,Y):r.vertexAttribPointer(w,N,D,F,k,Y)}function T(w,N,D,F){y();const k=F.attributes,Y=D.getAttributes(),$=N.defaultAttributeValues;for(const V in Y){const B=Y[V];if(B.location>=0){let J=k[V];if(J===void 0&&(V==="instanceMatrix"&&w.instanceMatrix&&(J=w.instanceMatrix),V==="instanceColor"&&w.instanceColor&&(J=w.instanceColor)),J!==void 0){const X=J.normalized,re=J.itemSize,fe=e.get(J);if(fe===void 0)continue;const De=fe.buffer,it=fe.type,q=fe.bytesPerElement,z=it===r.INT||it===r.UNSIGNED_INT||J.gpuType===En;if(J.isInterleavedBufferAttribute){const Z=J.data,pe=Z.stride,Ne=J.offset;if(Z.isInstancedInterleavedBuffer){for(let Me=0;Me<B.locationSize;Me++)g(B.location+Me,Z.meshPerAttribute);w.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let Me=0;Me<B.locationSize;Me++)_(B.location+Me);r.bindBuffer(r.ARRAY_BUFFER,De);for(let Me=0;Me<B.locationSize;Me++)x(B.location+Me,re/B.locationSize,it,X,pe*q,(Ne+re/B.locationSize*Me)*q,z)}else{if(J.isInstancedBufferAttribute){for(let Z=0;Z<B.locationSize;Z++)g(B.location+Z,J.meshPerAttribute);w.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let Z=0;Z<B.locationSize;Z++)_(B.location+Z);r.bindBuffer(r.ARRAY_BUFFER,De);for(let Z=0;Z<B.locationSize;Z++)x(B.location+Z,re/B.locationSize,it,X,re*q,re/B.locationSize*Z*q,z)}}else if($!==void 0){const X=$[V];if(X!==void 0)switch(X.length){case 2:r.vertexAttrib2fv(B.location,X);break;case 3:r.vertexAttrib3fv(B.location,X);break;case 4:r.vertexAttrib4fv(B.location,X);break;default:r.vertexAttrib1fv(B.location,X)}}}}v()}function b(){A();for(const w in i){const N=i[w];for(const D in N){const F=N[D];for(const k in F)h(F[k].object),delete F[k];delete N[D]}delete i[w]}}function S(w){if(i[w.id]===void 0)return;const N=i[w.id];for(const D in N){const F=N[D];for(const k in F)h(F[k].object),delete F[k];delete N[D]}delete i[w.id]}function M(w){for(const N in i){const D=i[N];if(D[w.id]===void 0)continue;const F=D[w.id];for(const k in F)h(F[k].object),delete F[k];delete D[w.id]}}function A(){E(),a=!0,o!==s&&(o=s,u(o.object))}function E(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:l,reset:A,resetDefaultState:E,dispose:b,releaseStatesOfGeometry:S,releaseStatesOfProgram:M,initAttributes:y,enableAttribute:_,disableUnusedAttributes:v}}function AC(r,e,n){let i;function s(u){i=u}function o(u,h){r.drawArrays(i,u,h),n.update(h,i,1)}function a(u,h,d){d!==0&&(r.drawArraysInstanced(i,u,h,d),n.update(h,i,d))}function l(u,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,u,0,h,0,d);let p=0;for(let m=0;m<d;m++)p+=h[m];n.update(p,i,1)}function c(u,h,d,f){if(d===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<u.length;m++)a(u[m],h[m],f[m]);else{p.multiDrawArraysInstancedWEBGL(i,u,0,h,0,f,0,d);let m=0;for(let y=0;y<d;y++)m+=h[y]*f[y];n.update(m,i,1)}}this.setMode=s,this.render=o,this.renderInstances=a,this.renderMultiDraw=l,this.renderMultiDrawInstances=c}function RC(r,e,n,i){let s;function o(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");s=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function a(M){return!(M!==sn&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function l(M){const A=M===An&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==nn&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==ln&&!A)}function c(M){if(M==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=n.precision!==void 0?n.precision:"highp";const h=c(u);h!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",h,"instead."),u=h);const d=n.logarithmicDepthBuffer===!0,f=n.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),b=m>0,S=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:l,precision:u,logarithmicDepthBuffer:d,reversedDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:y,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:T,vertexTextures:b,maxSamples:S}}function CC(r){const e=this;let n=null,i=0,s=!1,o=!1;const a=new Xi,l=new at,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f){const p=d.length!==0||f||i!==0||s;return s=f,i=d.length,p},this.beginShadows=function(){o=!0,h(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(d,f){n=h(d,f,0)},this.setState=function(d,f,p){const m=d.clippingPlanes,y=d.clipIntersection,_=d.clipShadows,g=r.get(d);if(!s||m===null||m.length===0||o&&!_)o?h(null):u();else{const v=o?0:i,x=v*4;let T=g.clippingState||null;c.value=T,T=h(m,f,x,p);for(let b=0;b!==x;++b)T[b]=n[b];g.clippingState=T,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=v}};function u(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,f,p,m){const y=d!==null?d.length:0;let _=null;if(y!==0){if(_=c.value,m!==!0||_===null){const g=p+y*4,v=f.matrixWorldInverse;l.getNormalMatrix(v),(_===null||_.length<g)&&(_=new Float32Array(g));for(let x=0,T=p;x!==y;++x,T+=4)a.copy(d[x]).applyMatrix4(v,l),a.normal.toArray(_,T),_[T+3]=a.constant}c.value=_,c.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,_}}function NC(r){let e=new WeakMap;function n(a,l){return l===Sa?a.mapping=_r:l===Ma&&(a.mapping=yr),a}function i(a){if(a&&a.isTexture){const l=a.mapping;if(l===Sa||l===Ma)if(e.has(a)){const c=e.get(a).texture;return n(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const u=new Dx(c.height);return u.fromEquirectangularTexture(r,a),e.set(a,u),a.addEventListener("dispose",s),n(u.texture,a.mapping)}else return null}}return a}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap}return{get:i,dispose:o}}const oa=4,$_=[.125,.215,.35,.446,.526,.582],to=20,of=new Yc,j_=new Ge;let af=null,lf=0,cf=0,uf=!1;const Zs=(1+Math.sqrt(5))/2,Vo=1/Zs,q_=[new L(-Zs,Vo,0),new L(Zs,Vo,0),new L(-Vo,0,Zs),new L(Vo,0,Zs),new L(0,Zs,-Vo),new L(0,Zs,Vo),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],PC=new L;let X_=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100,o={}){const{size:a=256,position:l=PC}=o;af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,i,s,c,l),n>0&&this._blur(c,0,0,n),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Z_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=K_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(af,lf,cf),this._renderer.xr.enabled=uf,e.scissorTest=!1,Nu(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===_r||e.mapping===yr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:vn,minFilter:vn,generateMipmaps:!1,type:An,format:sn,colorSpace:po,depthBuffer:!1},s=Y_(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Y_(e,n,i);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=DC(o)),this._blurMaterial=LC(o,e,n)}return s}_compileMaterial(e){const n=new mn(this._lodPlanes[0],e);this._renderer.compile(n,of)}_sceneToCubeUV(e,n,i,s,o){const c=new wn(90,1,n,i),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,f=d.autoClear,p=d.toneMapping;d.getClearColor(j_),d.toneMapping=ai,d.autoClear=!1,d.state.buffers.depth.getReversed()&&(d.setRenderTarget(s),d.clearDepth(),d.setRenderTarget(null));const y=new dr({name:"PMREM.Background",side:Ut,depthWrite:!1,depthTest:!1}),_=new mn(new xo,y);let g=!1;const v=e.background;v?v.isColor&&(y.color.copy(v),e.background=null,g=!0):(y.color.copy(j_),g=!0);for(let x=0;x<6;x++){const T=x%3;T===0?(c.up.set(0,u[x],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x+h[x],o.y,o.z)):T===1?(c.up.set(0,0,u[x]),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y+h[x],o.z)):(c.up.set(0,u[x],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y,o.z+h[x]));const b=this._cubeSize;Nu(s,T*b,x>2?b:0,b,b),d.setRenderTarget(s),g&&d.render(_,c),d.render(e,c)}_.geometry.dispose(),_.material.dispose(),d.toneMapping=p,d.autoClear=f,e.background=v}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===_r||e.mapping===yr;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Z_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=K_());const o=s?this._cubemapMaterial:this._equirectMaterial,a=new mn(this._lodPlanes[0],o),l=o.uniforms;l.envMap.value=e;const c=this._cubeSize;Nu(n,0,0,3*c,2*c),i.setRenderTarget(n),i.render(a,of)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let o=1;o<s;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),l=q_[(s-o-1)%q_.length];this._blur(e,o-1,o,a,l)}n.autoClear=i}_blur(e,n,i,s,o){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,s,"latitudinal",o),this._halfBlur(a,e,i,i,s,"longitudinal",o)}_halfBlur(e,n,i,s,o,a,l){const c=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new mn(this._lodPlanes[s],u),f=u.uniforms,p=this._sizeLods[i]-1,m=isFinite(o)?Math.PI/(2*p):2*Math.PI/(2*to-1),y=o/m,_=isFinite(o)?1+Math.floor(h*y):to;_>to&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${to}`);const g=[];let v=0;for(let M=0;M<to;++M){const A=M/y,E=Math.exp(-A*A/2);g.push(E),M===0?v+=E:M<_&&(v+=2*E)}for(let M=0;M<g.length;M++)g[M]=g[M]/v;f.envMap.value=e.texture,f.samples.value=_,f.weights.value=g,f.latitudinal.value=a==="latitudinal",l&&(f.poleAxis.value=l);const{_lodMax:x}=this;f.dTheta.value=m,f.mipInt.value=x-i;const T=this._sizeLods[s],b=3*T*(s>x-oa?s-x+oa:0),S=4*(this._cubeSize-T);Nu(n,b,S,3*T,2*T),c.setRenderTarget(n),c.render(d,of)}};function DC(r){const e=[],n=[],i=[];let s=r;const o=r-oa+1+$_.length;for(let a=0;a<o;a++){const l=Math.pow(2,s);n.push(l);let c=1/l;a>r-oa?c=$_[a-r+oa-1]:a===0&&(c=0),i.push(c);const u=1/(l-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,m=6,y=3,_=2,g=1,v=new Float32Array(y*m*p),x=new Float32Array(_*m*p),T=new Float32Array(g*m*p);for(let S=0;S<p;S++){const M=S%3*2/3-1,A=S>2?0:-1,E=[M,A,0,M+2/3,A,0,M+2/3,A+1,0,M,A,0,M+2/3,A+1,0,M,A+1,0];v.set(E,y*m*S),x.set(f,_*m*S);const w=[S,S,S,S,S,S];T.set(w,g*m*S)}const b=new Hn;b.setAttribute("position",new Nn(v,y)),b.setAttribute("uv",new Nn(x,_)),b.setAttribute("faceIndex",new Nn(T,g)),e.push(b),s>oa&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function Y_(r,e,n){const i=new As(r,e,n);return i.texture.mapping=uo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Nu(r,e,n,i,s){r.viewport.set(e,n,i,s),r.scissor.set(e,n,i,s)}function LC(r,e,n){const i=new Float32Array(to),s=new L(0,1,0);return new vr({name:"SphericalGaussianBlur",defines:{n:to,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:lg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:oi,depthTest:!1,depthWrite:!1})}function K_(){return new vr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:lg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:oi,depthTest:!1,depthWrite:!1})}function Z_(){return new vr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:lg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:oi,depthTest:!1,depthWrite:!1})}function lg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function IC(r){let e=new WeakMap,n=null;function i(l){if(l&&l.isTexture){const c=l.mapping,u=c===Sa||c===Ma,h=c===_r||c===yr;if(u||h){let d=e.get(l);const f=d!==void 0?d.texture.pmremVersion:0;if(l.isRenderTargetTexture&&l.pmremVersion!==f)return n===null&&(n=new X_(r)),d=u?n.fromEquirectangular(l,d):n.fromCubemap(l,d),d.texture.pmremVersion=l.pmremVersion,e.set(l,d),d.texture;if(d!==void 0)return d.texture;{const p=l.image;return u&&p&&p.height>0||h&&p&&s(p)?(n===null&&(n=new X_(r)),d=u?n.fromEquirectangular(l):n.fromCubemap(l),d.texture.pmremVersion=l.pmremVersion,e.set(l,d),l.addEventListener("dispose",o),d.texture):null}}}return l}function s(l){let c=0;const u=6;for(let h=0;h<u;h++)l[h]!==void 0&&c++;return c===u}function o(l){const c=l.target;c.removeEventListener("dispose",o);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function UC(r){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=r.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const s=n(i);return s===null&&Ai("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function FC(r,e,n,i){const s={},o=new WeakMap;function a(d){const f=d.target;f.index!==null&&e.remove(f.index);for(const m in f.attributes)e.remove(f.attributes[m]);f.removeEventListener("dispose",a),delete s[f.id];const p=o.get(f);p&&(e.remove(p),o.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function l(d,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,n.memory.geometries++),f}function c(d){const f=d.attributes;for(const p in f)e.update(f[p],r.ARRAY_BUFFER)}function u(d){const f=[],p=d.index,m=d.attributes.position;let y=0;if(p!==null){const v=p.array;y=p.version;for(let x=0,T=v.length;x<T;x+=3){const b=v[x+0],S=v[x+1],M=v[x+2];f.push(b,S,S,M,M,b)}}else if(m!==void 0){const v=m.array;y=m.version;for(let x=0,T=v.length/3-1;x<T;x+=3){const b=x+0,S=x+1,M=x+2;f.push(b,S,S,M,M,b)}}else return;const _=new($m(f)?Km:Ym)(f,1);_.version=y;const g=o.get(d);g&&e.remove(g),o.set(d,_)}function h(d){const f=o.get(d);if(f){const p=d.index;p!==null&&f.version<p.version&&u(d)}else u(d);return o.get(d)}return{get:l,update:c,getWireframeAttribute:h}}function OC(r,e,n){let i;function s(f){i=f}let o,a;function l(f){o=f.type,a=f.bytesPerElement}function c(f,p){r.drawElements(i,p,o,f*a),n.update(p,i,1)}function u(f,p,m){m!==0&&(r.drawElementsInstanced(i,p,o,f*a,m),n.update(p,i,m))}function h(f,p,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,p,0,o,f,0,m);let _=0;for(let g=0;g<m;g++)_+=p[g];n.update(_,i,1)}function d(f,p,m,y){if(m===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let g=0;g<f.length;g++)u(f[g]/a,p[g],y[g]);else{_.multiDrawElementsInstancedWEBGL(i,p,0,o,f,0,y,0,m);let g=0;for(let v=0;v<m;v++)g+=p[v]*y[v];n.update(g,i,1)}}this.setMode=s,this.setIndex=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function BC(r){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(o,a,l){switch(n.calls++,a){case r.TRIANGLES:n.triangles+=l*(o/3);break;case r.LINES:n.lines+=l*(o/2);break;case r.LINE_STRIP:n.lines+=l*(o-1);break;case r.LINE_LOOP:n.lines+=l*o;break;case r.POINTS:n.points+=l*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function kC(r,e,n){const i=new WeakMap,s=new Qe;function o(a,l,c){const u=a.morphTargetInfluences,h=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,d=h!==void 0?h.length:0;let f=i.get(l);if(f===void 0||f.count!==d){let E=function(){M.dispose(),i.delete(l),l.removeEventListener("dispose",E)};f!==void 0&&f.texture.dispose();const p=l.morphAttributes.position!==void 0,m=l.morphAttributes.normal!==void 0,y=l.morphAttributes.color!==void 0,_=l.morphAttributes.position||[],g=l.morphAttributes.normal||[],v=l.morphAttributes.color||[];let x=0;p===!0&&(x=1),m===!0&&(x=2),y===!0&&(x=3);let T=l.attributes.position.count*x,b=1;T>e.maxTextureSize&&(b=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const S=new Float32Array(T*b*4*d),M=new qm(S,T,b,d);M.type=ln,M.needsUpdate=!0;const A=x*4;for(let w=0;w<d;w++){const N=_[w],D=g[w],F=v[w],k=T*b*4*w;for(let Y=0;Y<N.count;Y++){const $=Y*A;p===!0&&(s.fromBufferAttribute(N,Y),S[k+$+0]=s.x,S[k+$+1]=s.y,S[k+$+2]=s.z,S[k+$+3]=0),m===!0&&(s.fromBufferAttribute(D,Y),S[k+$+4]=s.x,S[k+$+5]=s.y,S[k+$+6]=s.z,S[k+$+7]=0),y===!0&&(s.fromBufferAttribute(F,Y),S[k+$+8]=s.x,S[k+$+9]=s.y,S[k+$+10]=s.z,S[k+$+11]=F.itemSize===4?s.w:1)}}f={count:d,texture:M,size:new ue(T,b)},i.set(l,f),l.addEventListener("dispose",E)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(r,"morphTexture",a.morphTexture,n);else{let p=0;for(let y=0;y<u.length;y++)p+=u[y];const m=l.morphTargetsRelative?1:1-p;c.getUniforms().setValue(r,"morphTargetBaseInfluence",m),c.getUniforms().setValue(r,"morphTargetInfluences",u)}c.getUniforms().setValue(r,"morphTargetsTexture",f.texture,n),c.getUniforms().setValue(r,"morphTargetsTextureSize",f.size)}return{update:o}}function zC(r,e,n,i){let s=new WeakMap;function o(c){const u=i.render.frame,h=c.geometry,d=e.get(c,h);if(s.get(d)!==u&&(e.update(d),s.set(d,u)),c.isInstancedMesh&&(c.hasEventListener("dispose",l)===!1&&c.addEventListener("dispose",l),s.get(c)!==u&&(n.update(c.instanceMatrix,r.ARRAY_BUFFER),c.instanceColor!==null&&n.update(c.instanceColor,r.ARRAY_BUFFER),s.set(c,u))),c.isSkinnedMesh){const f=c.skeleton;s.get(f)!==u&&(f.update(),s.set(f,u))}return d}function a(){s=new WeakMap}function l(c){const u=c.target;u.removeEventListener("dispose",l),n.remove(u.instanceMatrix),u.instanceColor!==null&&n.remove(u.instanceColor)}return{update:o,dispose:a}}const $x=new un,Q_=new Bi(1,1),jx=new qm,qx=new LE,Xx=new Wc,J_=[],ey=[],ty=new Float32Array(16),ny=new Float32Array(9),iy=new Float32Array(4);function al(r,e,n){const i=r[0];if(i<=0||i>0)return r;const s=e*n;let o=J_[s];if(o===void 0&&(o=new Float32Array(s),J_[s]=o),e!==0){i.toArray(o,0);for(let a=1,l=0;a!==e;++a)l+=n,r[a].toArray(o,l)}return o}function xn(r,e){if(r.length!==e.length)return!1;for(let n=0,i=r.length;n<i;n++)if(r[n]!==e[n])return!1;return!0}function bn(r,e){for(let n=0,i=e.length;n<i;n++)r[n]=e[n]}function od(r,e){let n=ey[e];n===void 0&&(n=new Int32Array(e),ey[e]=n);for(let i=0;i!==e;++i)n[i]=r.allocateTextureUnit();return n}function GC(r,e){const n=this.cache;n[0]!==e&&(r.uniform1f(this.addr,e),n[0]=e)}function VC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(xn(n,e))return;r.uniform2fv(this.addr,e),bn(n,e)}}function HC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(xn(n,e))return;r.uniform3fv(this.addr,e),bn(n,e)}}function WC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(xn(n,e))return;r.uniform4fv(this.addr,e),bn(n,e)}}function $C(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(xn(n,e))return;r.uniformMatrix2fv(this.addr,!1,e),bn(n,e)}else{if(xn(n,i))return;iy.set(i),r.uniformMatrix2fv(this.addr,!1,iy),bn(n,i)}}function jC(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(xn(n,e))return;r.uniformMatrix3fv(this.addr,!1,e),bn(n,e)}else{if(xn(n,i))return;ny.set(i),r.uniformMatrix3fv(this.addr,!1,ny),bn(n,i)}}function qC(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(xn(n,e))return;r.uniformMatrix4fv(this.addr,!1,e),bn(n,e)}else{if(xn(n,i))return;ty.set(i),r.uniformMatrix4fv(this.addr,!1,ty),bn(n,i)}}function XC(r,e){const n=this.cache;n[0]!==e&&(r.uniform1i(this.addr,e),n[0]=e)}function YC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(xn(n,e))return;r.uniform2iv(this.addr,e),bn(n,e)}}function KC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(xn(n,e))return;r.uniform3iv(this.addr,e),bn(n,e)}}function ZC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(xn(n,e))return;r.uniform4iv(this.addr,e),bn(n,e)}}function QC(r,e){const n=this.cache;n[0]!==e&&(r.uniform1ui(this.addr,e),n[0]=e)}function JC(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(xn(n,e))return;r.uniform2uiv(this.addr,e),bn(n,e)}}function e1(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(xn(n,e))return;r.uniform3uiv(this.addr,e),bn(n,e)}}function t1(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(xn(n,e))return;r.uniform4uiv(this.addr,e),bn(n,e)}}function n1(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s);let o;this.type===r.SAMPLER_2D_SHADOW?(Q_.compareFunction=ed,o=Q_):o=$x,n.setTexture2D(e||o,s)}function i1(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||qx,s)}function r1(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||Xx,s)}function s1(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||jx,s)}function o1(r){switch(r){case 5126:return GC;case 35664:return VC;case 35665:return HC;case 35666:return WC;case 35674:return $C;case 35675:return jC;case 35676:return qC;case 5124:case 35670:return XC;case 35667:case 35671:return YC;case 35668:case 35672:return KC;case 35669:case 35673:return ZC;case 5125:return QC;case 36294:return JC;case 36295:return e1;case 36296:return t1;case 35678:case 36198:case 36298:case 36306:case 35682:return n1;case 35679:case 36299:case 36307:return i1;case 35680:case 36300:case 36308:case 36293:return r1;case 36289:case 36303:case 36311:case 36292:return s1}}function a1(r,e){r.uniform1fv(this.addr,e)}function l1(r,e){const n=al(e,this.size,2);r.uniform2fv(this.addr,n)}function c1(r,e){const n=al(e,this.size,3);r.uniform3fv(this.addr,n)}function u1(r,e){const n=al(e,this.size,4);r.uniform4fv(this.addr,n)}function h1(r,e){const n=al(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,n)}function d1(r,e){const n=al(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,n)}function f1(r,e){const n=al(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,n)}function p1(r,e){r.uniform1iv(this.addr,e)}function m1(r,e){r.uniform2iv(this.addr,e)}function g1(r,e){r.uniform3iv(this.addr,e)}function _1(r,e){r.uniform4iv(this.addr,e)}function y1(r,e){r.uniform1uiv(this.addr,e)}function v1(r,e){r.uniform2uiv(this.addr,e)}function x1(r,e){r.uniform3uiv(this.addr,e)}function b1(r,e){r.uniform4uiv(this.addr,e)}function T1(r,e,n){const i=this.cache,s=e.length,o=od(n,s);xn(i,o)||(r.uniform1iv(this.addr,o),bn(i,o));for(let a=0;a!==s;++a)n.setTexture2D(e[a]||$x,o[a])}function S1(r,e,n){const i=this.cache,s=e.length,o=od(n,s);xn(i,o)||(r.uniform1iv(this.addr,o),bn(i,o));for(let a=0;a!==s;++a)n.setTexture3D(e[a]||qx,o[a])}function M1(r,e,n){const i=this.cache,s=e.length,o=od(n,s);xn(i,o)||(r.uniform1iv(this.addr,o),bn(i,o));for(let a=0;a!==s;++a)n.setTextureCube(e[a]||Xx,o[a])}function E1(r,e,n){const i=this.cache,s=e.length,o=od(n,s);xn(i,o)||(r.uniform1iv(this.addr,o),bn(i,o));for(let a=0;a!==s;++a)n.setTexture2DArray(e[a]||jx,o[a])}function w1(r){switch(r){case 5126:return a1;case 35664:return l1;case 35665:return c1;case 35666:return u1;case 35674:return h1;case 35675:return d1;case 35676:return f1;case 5124:case 35670:return p1;case 35667:case 35671:return m1;case 35668:case 35672:return g1;case 35669:case 35673:return _1;case 5125:return y1;case 36294:return v1;case 36295:return x1;case 36296:return b1;case 35678:case 36198:case 36298:case 36306:case 35682:return T1;case 35679:case 36299:case 36307:return S1;case 35680:case 36300:case 36308:case 36293:return M1;case 36289:case 36303:case 36311:case 36292:return E1}}class A1{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=o1(n.type)}}class R1{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=w1(n.type)}}class C1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let o=0,a=s.length;o!==a;++o){const l=s[o];l.setValue(e,n[l.id],i)}}}const hf=/(\w+)(\])?(\[|\.)?/g;function ry(r,e){r.seq.push(e),r.map[e.id]=e}function N1(r,e,n){const i=r.name,s=i.length;for(hf.lastIndex=0;;){const o=hf.exec(i),a=hf.lastIndex;let l=o[1];const c=o[2]==="]",u=o[3];if(c&&(l=l|0),u===void 0||u==="["&&a+2===s){ry(n,u===void 0?new A1(l,r,e):new R1(l,r,e));break}else{let d=n.map[l];d===void 0&&(d=new C1(l),ry(n,d)),n=d}}}class mh{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const o=e.getActiveUniform(n,s),a=e.getUniformLocation(n,o.name);N1(o,a,this)}}setValue(e,n,i,s){const o=this.map[n];o!==void 0&&o.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let o=0,a=n.length;o!==a;++o){const l=n[o],c=i[l.id];c.needsUpdate!==!1&&l.setValue(e,c.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,o=e.length;s!==o;++s){const a=e[s];a.id in n&&i.push(a)}return i}}function sy(r,e,n){const i=r.createShader(e);return r.shaderSource(i,n),r.compileShader(i),i}const P1=37297;let D1=0;function L1(r,e){const n=r.split(`
`),i=[],s=Math.max(e-6,0),o=Math.min(e+6,n.length);for(let a=s;a<o;a++){const l=a+1;i.push(`${l===e?">":" "} ${l}: ${n[a]}`)}return i.join(`
`)}const oy=new at;function I1(r){Ze._getMatrix(oy,Ze.workingColorSpace,r);const e=`mat3( ${oy.elements.map(n=>n.toFixed(4))} )`;switch(Ze.getTransfer(r)){case qa:return[e,"LinearTransferOETF"];case Ae:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function ay(r,e,n){const i=r.getShaderParameter(e,r.COMPILE_STATUS),o=(r.getShaderInfoLog(e)||"").trim();if(i&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const l=parseInt(a[1]);return n.toUpperCase()+`

`+o+`

`+L1(r.getShaderSource(e),l)}else return o}function U1(r,e){const n=I1(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join(`
`)}function F1(r,e){let n;switch(e){case vx:n="Linear";break;case xx:n="Reinhard";break;case bx:n="Cineon";break;case Tx:n="ACESFilmic";break;case Sx:n="AgX";break;case Mx:n="Neutral";break;case XM:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+r+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Pu=new L;function O1(){Ze.getLuminanceCoefficients(Pu);const r=Pu.x.toFixed(4),e=Pu.y.toFixed(4),n=Pu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${n} );`,"	return dot( weights, rgb );","}"].join(`
`)}function B1(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Kl).join(`
`)}function k1(r){const e=[];for(const n in r){const i=r[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function z1(r,e){const n={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const o=r.getActiveAttrib(e,s),a=o.name;let l=1;o.type===r.FLOAT_MAT2&&(l=2),o.type===r.FLOAT_MAT3&&(l=3),o.type===r.FLOAT_MAT4&&(l=4),n[a]={type:o.type,location:r.getAttribLocation(e,a),locationSize:l}}return n}function Kl(r){return r!==""}function ly(r,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function cy(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const G1=/^[ \t]*#include +<([\w\d./]+)>/gm;function Up(r){return r.replace(G1,H1)}const V1=new Map;function H1(r,e){let n=gt[e];if(n===void 0){const i=V1.get(e);if(i!==void 0)n=gt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Up(n)}const W1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function uy(r){return r.replace(W1,$1)}function $1(r,e,n,i){let s="";for(let o=parseInt(e);o<parseInt(n);o++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return s}function hy(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function j1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Mm?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===HM?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===xi&&(e="SHADOWMAP_TYPE_VSM"),e}function q1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case _r:case yr:e="ENVMAP_TYPE_CUBE";break;case uo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function X1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case yr:e="ENVMAP_MODE_REFRACTION";break}return e}function Y1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case zc:e="ENVMAP_BLENDING_MULTIPLY";break;case _x:e="ENVMAP_BLENDING_MIX";break;case yx:e="ENVMAP_BLENDING_ADD";break}return e}function K1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function Z1(r,e,n,i){const s=r.getContext(),o=n.defines;let a=n.vertexShader,l=n.fragmentShader;const c=j1(n),u=q1(n),h=X1(n),d=Y1(n),f=K1(n),p=B1(n),m=k1(o),y=s.createProgram();let _,g,v=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(Kl).join(`
`),_.length>0&&(_+=`
`),g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(Kl).join(`
`),g.length>0&&(g+=`
`)):(_=[hy(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Kl).join(`
`),g=[hy(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ai?"#define TONE_MAPPING":"",n.toneMapping!==ai?gt.tonemapping_pars_fragment:"",n.toneMapping!==ai?F1("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,U1("linearToOutputTexel",n.outputColorSpace),O1(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Kl).join(`
`)),a=Up(a),a=ly(a,n),a=cy(a,n),l=Up(l),l=ly(l,n),l=cy(l,n),a=uy(a),l=uy(l),n.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,_=[p,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,g=["#define varying in",n.glslVersion===m_?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===m_?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=v+_+a,T=v+g+l,b=sy(s,s.VERTEX_SHADER,x),S=sy(s,s.FRAGMENT_SHADER,T);s.attachShader(y,b),s.attachShader(y,S),n.index0AttributeName!==void 0?s.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(y,0,"position"),s.linkProgram(y);function M(N){if(r.debug.checkShaderErrors){const D=s.getProgramInfoLog(y)||"",F=s.getShaderInfoLog(b)||"",k=s.getShaderInfoLog(S)||"",Y=D.trim(),$=F.trim(),V=k.trim();let B=!0,J=!0;if(s.getProgramParameter(y,s.LINK_STATUS)===!1)if(B=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(s,y,b,S);else{const X=ay(s,b,"vertex"),re=ay(s,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(y,s.VALIDATE_STATUS)+`

Material Name: `+N.name+`
Material Type: `+N.type+`

Program Info Log: `+Y+`
`+X+`
`+re)}else Y!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Y):($===""||V==="")&&(J=!1);J&&(N.diagnostics={runnable:B,programLog:Y,vertexShader:{log:$,prefix:_},fragmentShader:{log:V,prefix:g}})}s.deleteShader(b),s.deleteShader(S),A=new mh(s,y),E=z1(s,y)}let A;this.getUniforms=function(){return A===void 0&&M(this),A};let E;this.getAttributes=function(){return E===void 0&&M(this),E};let w=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=s.getProgramParameter(y,P1)),w},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(y),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=D1++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=b,this.fragmentShader=S,this}let Q1=0;class J1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),o=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(o)===!1&&(a.add(o),o.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new eN(e),n.set(e,i)),i}}class eN{constructor(e){this.id=Q1++,this.code=e,this.usedTimes=0}}function tN(r,e,n,i,s,o,a){const l=new Xm,c=new J1,u=new Set,h=[],d=s.logarithmicDepthBuffer,f=s.vertexTextures;let p=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(E){return u.add(E),E===0?"uv":`uv${E}`}function _(E,w,N,D,F){const k=D.fog,Y=F.geometry,$=E.isMeshStandardMaterial?D.environment:null,V=(E.isMeshStandardMaterial?n:e).get(E.envMap||$),B=V&&V.mapping===uo?V.image.height:null,J=m[E.type];E.precision!==null&&(p=s.getMaxPrecision(E.precision),p!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",p,"instead."));const X=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,re=X!==void 0?X.length:0;let fe=0;Y.morphAttributes.position!==void 0&&(fe=1),Y.morphAttributes.normal!==void 0&&(fe=2),Y.morphAttributes.color!==void 0&&(fe=3);let De,it,q,z;if(J){const Ct=hr[J];De=Ct.vertexShader,it=Ct.fragmentShader}else De=E.vertexShader,it=E.fragmentShader,c.update(E),q=c.getVertexShaderID(E),z=c.getFragmentShaderID(E);const Z=r.getRenderTarget(),pe=r.state.buffers.depth.getReversed(),Ne=F.isInstancedMesh===!0,Me=F.isBatchedMesh===!0,We=!!E.map,Ft=!!E.matcap,U=!!V,bt=!!E.aoMap,rt=!!E.lightMap,Xe=!!E.bumpMap,Le=!!E.normalMap,Rt=!!E.displacementMap,ze=!!E.emissiveMap,mt=!!E.metalnessMap,Sn=!!E.roughnessMap,an=E.anisotropy>0,I=E.clearcoat>0,C=E.dispersion>0,K=E.iridescence>0,ae=E.sheen>0,de=E.transmission>0,se=an&&!!E.anisotropyMap,qe=I&&!!E.clearcoatMap,Te=I&&!!E.clearcoatNormalMap,He=I&&!!E.clearcoatRoughnessMap,$e=K&&!!E.iridescenceMap,ye=K&&!!E.iridescenceThicknessMap,Ce=ae&&!!E.sheenColorMap,st=ae&&!!E.sheenRoughnessMap,je=!!E.specularMap,we=!!E.specularColorMap,dt=!!E.specularIntensityMap,G=de&&!!E.transmissionMap,ve=de&&!!E.thicknessMap,Se=!!E.gradientMap,Fe=!!E.alphaMap,me=E.alphaTest>0,ce=!!E.alphaHash,Be=!!E.extensions;let ct=ai;E.toneMapped&&(Z===null||Z.isXRRenderTarget===!0)&&(ct=r.toneMapping);const Vt={shaderID:J,shaderType:E.type,shaderName:E.name,vertexShader:De,fragmentShader:it,defines:E.defines,customVertexShaderID:q,customFragmentShaderID:z,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:p,batching:Me,batchingColor:Me&&F._colorsTexture!==null,instancing:Ne,instancingColor:Ne&&F.instanceColor!==null,instancingMorph:Ne&&F.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:Z===null?r.outputColorSpace:Z.isXRRenderTarget===!0?Z.texture.colorSpace:po,alphaToCoverage:!!E.alphaToCoverage,map:We,matcap:Ft,envMap:U,envMapMode:U&&V.mapping,envMapCubeUVHeight:B,aoMap:bt,lightMap:rt,bumpMap:Xe,normalMap:Le,displacementMap:f&&Rt,emissiveMap:ze,normalMapObjectSpace:Le&&E.normalMapType===Ex,normalMapTangentSpace:Le&&E.normalMapType===ts,metalnessMap:mt,roughnessMap:Sn,anisotropy:an,anisotropyMap:se,clearcoat:I,clearcoatMap:qe,clearcoatNormalMap:Te,clearcoatRoughnessMap:He,dispersion:C,iridescence:K,iridescenceMap:$e,iridescenceThicknessMap:ye,sheen:ae,sheenColorMap:Ce,sheenRoughnessMap:st,specularMap:je,specularColorMap:we,specularIntensityMap:dt,transmission:de,transmissionMap:G,thicknessMap:ve,gradientMap:Se,opaque:E.transparent===!1&&E.blending===Si&&E.alphaToCoverage===!1,alphaMap:Fe,alphaTest:me,alphaHash:ce,combine:E.combine,mapUv:We&&y(E.map.channel),aoMapUv:bt&&y(E.aoMap.channel),lightMapUv:rt&&y(E.lightMap.channel),bumpMapUv:Xe&&y(E.bumpMap.channel),normalMapUv:Le&&y(E.normalMap.channel),displacementMapUv:Rt&&y(E.displacementMap.channel),emissiveMapUv:ze&&y(E.emissiveMap.channel),metalnessMapUv:mt&&y(E.metalnessMap.channel),roughnessMapUv:Sn&&y(E.roughnessMap.channel),anisotropyMapUv:se&&y(E.anisotropyMap.channel),clearcoatMapUv:qe&&y(E.clearcoatMap.channel),clearcoatNormalMapUv:Te&&y(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:He&&y(E.clearcoatRoughnessMap.channel),iridescenceMapUv:$e&&y(E.iridescenceMap.channel),iridescenceThicknessMapUv:ye&&y(E.iridescenceThicknessMap.channel),sheenColorMapUv:Ce&&y(E.sheenColorMap.channel),sheenRoughnessMapUv:st&&y(E.sheenRoughnessMap.channel),specularMapUv:je&&y(E.specularMap.channel),specularColorMapUv:we&&y(E.specularColorMap.channel),specularIntensityMapUv:dt&&y(E.specularIntensityMap.channel),transmissionMapUv:G&&y(E.transmissionMap.channel),thicknessMapUv:ve&&y(E.thicknessMap.channel),alphaMapUv:Fe&&y(E.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(Le||an),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!Y.attributes.uv&&(We||Fe),fog:!!k,useFog:E.fog===!0,fogExp2:!!k&&k.isFogExp2,flatShading:E.flatShading===!0&&E.wireframe===!1,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:d,reversedDepthBuffer:pe,skinning:F.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:re,morphTextureStride:fe,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:E.dithering,shadowMapEnabled:r.shadowMap.enabled&&N.length>0,shadowMapType:r.shadowMap.type,toneMapping:ct,decodeVideoTexture:We&&E.map.isVideoTexture===!0&&Ze.getTransfer(E.map.colorSpace)===Ae,decodeVideoTextureEmissive:ze&&E.emissiveMap.isVideoTexture===!0&&Ze.getTransfer(E.emissiveMap.colorSpace)===Ae,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===Bn,flipSided:E.side===Ut,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:Be&&E.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Be&&E.extensions.multiDraw===!0||Me)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return Vt.vertexUv1s=u.has(1),Vt.vertexUv2s=u.has(2),Vt.vertexUv3s=u.has(3),u.clear(),Vt}function g(E){const w=[];if(E.shaderID?w.push(E.shaderID):(w.push(E.customVertexShaderID),w.push(E.customFragmentShaderID)),E.defines!==void 0)for(const N in E.defines)w.push(N),w.push(E.defines[N]);return E.isRawShaderMaterial===!1&&(v(w,E),x(w,E),w.push(r.outputColorSpace)),w.push(E.customProgramCacheKey),w.join()}function v(E,w){E.push(w.precision),E.push(w.outputColorSpace),E.push(w.envMapMode),E.push(w.envMapCubeUVHeight),E.push(w.mapUv),E.push(w.alphaMapUv),E.push(w.lightMapUv),E.push(w.aoMapUv),E.push(w.bumpMapUv),E.push(w.normalMapUv),E.push(w.displacementMapUv),E.push(w.emissiveMapUv),E.push(w.metalnessMapUv),E.push(w.roughnessMapUv),E.push(w.anisotropyMapUv),E.push(w.clearcoatMapUv),E.push(w.clearcoatNormalMapUv),E.push(w.clearcoatRoughnessMapUv),E.push(w.iridescenceMapUv),E.push(w.iridescenceThicknessMapUv),E.push(w.sheenColorMapUv),E.push(w.sheenRoughnessMapUv),E.push(w.specularMapUv),E.push(w.specularColorMapUv),E.push(w.specularIntensityMapUv),E.push(w.transmissionMapUv),E.push(w.thicknessMapUv),E.push(w.combine),E.push(w.fogExp2),E.push(w.sizeAttenuation),E.push(w.morphTargetsCount),E.push(w.morphAttributeCount),E.push(w.numDirLights),E.push(w.numPointLights),E.push(w.numSpotLights),E.push(w.numSpotLightMaps),E.push(w.numHemiLights),E.push(w.numRectAreaLights),E.push(w.numDirLightShadows),E.push(w.numPointLightShadows),E.push(w.numSpotLightShadows),E.push(w.numSpotLightShadowsWithMaps),E.push(w.numLightProbes),E.push(w.shadowMapType),E.push(w.toneMapping),E.push(w.numClippingPlanes),E.push(w.numClipIntersection),E.push(w.depthPacking)}function x(E,w){l.disableAll(),w.supportsVertexTextures&&l.enable(0),w.instancing&&l.enable(1),w.instancingColor&&l.enable(2),w.instancingMorph&&l.enable(3),w.matcap&&l.enable(4),w.envMap&&l.enable(5),w.normalMapObjectSpace&&l.enable(6),w.normalMapTangentSpace&&l.enable(7),w.clearcoat&&l.enable(8),w.iridescence&&l.enable(9),w.alphaTest&&l.enable(10),w.vertexColors&&l.enable(11),w.vertexAlphas&&l.enable(12),w.vertexUv1s&&l.enable(13),w.vertexUv2s&&l.enable(14),w.vertexUv3s&&l.enable(15),w.vertexTangents&&l.enable(16),w.anisotropy&&l.enable(17),w.alphaHash&&l.enable(18),w.batching&&l.enable(19),w.dispersion&&l.enable(20),w.batchingColor&&l.enable(21),w.gradientMap&&l.enable(22),E.push(l.mask),l.disableAll(),w.fog&&l.enable(0),w.useFog&&l.enable(1),w.flatShading&&l.enable(2),w.logarithmicDepthBuffer&&l.enable(3),w.reversedDepthBuffer&&l.enable(4),w.skinning&&l.enable(5),w.morphTargets&&l.enable(6),w.morphNormals&&l.enable(7),w.morphColors&&l.enable(8),w.premultipliedAlpha&&l.enable(9),w.shadowMapEnabled&&l.enable(10),w.doubleSided&&l.enable(11),w.flipSided&&l.enable(12),w.useDepthPacking&&l.enable(13),w.dithering&&l.enable(14),w.transmission&&l.enable(15),w.sheen&&l.enable(16),w.opaque&&l.enable(17),w.pointsUvs&&l.enable(18),w.decodeVideoTexture&&l.enable(19),w.decodeVideoTextureEmissive&&l.enable(20),w.alphaToCoverage&&l.enable(21),E.push(l.mask)}function T(E){const w=m[E.type];let N;if(w){const D=hr[w];N=Nx.clone(D.uniforms)}else N=E.uniforms;return N}function b(E,w){let N;for(let D=0,F=h.length;D<F;D++){const k=h[D];if(k.cacheKey===w){N=k,++N.usedTimes;break}}return N===void 0&&(N=new Z1(r,w,E,o),h.push(N)),N}function S(E){if(--E.usedTimes===0){const w=h.indexOf(E);h[w]=h[h.length-1],h.pop(),E.destroy()}}function M(E){c.remove(E)}function A(){c.dispose()}return{getParameters:_,getProgramCacheKey:g,getUniforms:T,acquireProgram:b,releaseProgram:S,releaseShaderCache:M,programs:h,dispose:A}}function nN(){let r=new WeakMap;function e(a){return r.has(a)}function n(a){let l=r.get(a);return l===void 0&&(l={},r.set(a,l)),l}function i(a){r.delete(a)}function s(a,l,c){r.get(a)[l]=c}function o(){r=new WeakMap}return{has:e,get:n,remove:i,update:s,dispose:o}}function iN(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function dy(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function fy(){const r=[];let e=0;const n=[],i=[],s=[];function o(){e=0,n.length=0,i.length=0,s.length=0}function a(d,f,p,m,y,_){let g=r[e];return g===void 0?(g={id:d.id,object:d,geometry:f,material:p,groupOrder:m,renderOrder:d.renderOrder,z:y,group:_},r[e]=g):(g.id=d.id,g.object=d,g.geometry=f,g.material=p,g.groupOrder=m,g.renderOrder=d.renderOrder,g.z=y,g.group=_),e++,g}function l(d,f,p,m,y,_){const g=a(d,f,p,m,y,_);p.transmission>0?i.push(g):p.transparent===!0?s.push(g):n.push(g)}function c(d,f,p,m,y,_){const g=a(d,f,p,m,y,_);p.transmission>0?i.unshift(g):p.transparent===!0?s.unshift(g):n.unshift(g)}function u(d,f){n.length>1&&n.sort(d||iN),i.length>1&&i.sort(f||dy),s.length>1&&s.sort(f||dy)}function h(){for(let d=e,f=r.length;d<f;d++){const p=r[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:n,transmissive:i,transparent:s,init:o,push:l,unshift:c,finish:h,sort:u}}function rN(){let r=new WeakMap;function e(i,s){const o=r.get(i);let a;return o===void 0?(a=new fy,r.set(i,[a])):s>=o.length?(a=new fy,o.push(a)):a=o[s],a}function n(){r=new WeakMap}return{get:e,dispose:n}}function sN(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new L,color:new Ge};break;case"SpotLight":n={position:new L,direction:new L,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new L,color:new Ge,distance:0,decay:0};break;case"HemisphereLight":n={direction:new L,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":n={color:new Ge,position:new L,halfWidth:new L,halfHeight:new L};break}return r[e.id]=n,n}}}function oN(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=n,n}}}let aN=0;function lN(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function cN(r){const e=new sN,n=oN(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)i.probe.push(new L);const s=new L,o=new _t,a=new _t;function l(u){let h=0,d=0,f=0;for(let E=0;E<9;E++)i.probe[E].set(0,0,0);let p=0,m=0,y=0,_=0,g=0,v=0,x=0,T=0,b=0,S=0,M=0;u.sort(lN);for(let E=0,w=u.length;E<w;E++){const N=u[E],D=N.color,F=N.intensity,k=N.distance,Y=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)h+=D.r*F,d+=D.g*F,f+=D.b*F;else if(N.isLightProbe){for(let $=0;$<9;$++)i.probe[$].addScaledVector(N.sh.coefficients[$],F);M++}else if(N.isDirectionalLight){const $=e.get(N);if($.color.copy(N.color).multiplyScalar(N.intensity),N.castShadow){const V=N.shadow,B=n.get(N);B.shadowIntensity=V.intensity,B.shadowBias=V.bias,B.shadowNormalBias=V.normalBias,B.shadowRadius=V.radius,B.shadowMapSize=V.mapSize,i.directionalShadow[p]=B,i.directionalShadowMap[p]=Y,i.directionalShadowMatrix[p]=N.shadow.matrix,v++}i.directional[p]=$,p++}else if(N.isSpotLight){const $=e.get(N);$.position.setFromMatrixPosition(N.matrixWorld),$.color.copy(D).multiplyScalar(F),$.distance=k,$.coneCos=Math.cos(N.angle),$.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),$.decay=N.decay,i.spot[y]=$;const V=N.shadow;if(N.map&&(i.spotLightMap[b]=N.map,b++,V.updateMatrices(N),N.castShadow&&S++),i.spotLightMatrix[y]=V.matrix,N.castShadow){const B=n.get(N);B.shadowIntensity=V.intensity,B.shadowBias=V.bias,B.shadowNormalBias=V.normalBias,B.shadowRadius=V.radius,B.shadowMapSize=V.mapSize,i.spotShadow[y]=B,i.spotShadowMap[y]=Y,T++}y++}else if(N.isRectAreaLight){const $=e.get(N);$.color.copy(D).multiplyScalar(F),$.halfWidth.set(N.width*.5,0,0),$.halfHeight.set(0,N.height*.5,0),i.rectArea[_]=$,_++}else if(N.isPointLight){const $=e.get(N);if($.color.copy(N.color).multiplyScalar(N.intensity),$.distance=N.distance,$.decay=N.decay,N.castShadow){const V=N.shadow,B=n.get(N);B.shadowIntensity=V.intensity,B.shadowBias=V.bias,B.shadowNormalBias=V.normalBias,B.shadowRadius=V.radius,B.shadowMapSize=V.mapSize,B.shadowCameraNear=V.camera.near,B.shadowCameraFar=V.camera.far,i.pointShadow[m]=B,i.pointShadowMap[m]=Y,i.pointShadowMatrix[m]=N.shadow.matrix,x++}i.point[m]=$,m++}else if(N.isHemisphereLight){const $=e.get(N);$.skyColor.copy(N.color).multiplyScalar(F),$.groundColor.copy(N.groundColor).multiplyScalar(F),i.hemi[g]=$,g++}}_>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=f;const A=i.hash;(A.directionalLength!==p||A.pointLength!==m||A.spotLength!==y||A.rectAreaLength!==_||A.hemiLength!==g||A.numDirectionalShadows!==v||A.numPointShadows!==x||A.numSpotShadows!==T||A.numSpotMaps!==b||A.numLightProbes!==M)&&(i.directional.length=p,i.spot.length=y,i.rectArea.length=_,i.point.length=m,i.hemi.length=g,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=T,i.spotShadowMap.length=T,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=T+b-S,i.spotLightMap.length=b,i.numSpotLightShadowsWithMaps=S,i.numLightProbes=M,A.directionalLength=p,A.pointLength=m,A.spotLength=y,A.rectAreaLength=_,A.hemiLength=g,A.numDirectionalShadows=v,A.numPointShadows=x,A.numSpotShadows=T,A.numSpotMaps=b,A.numLightProbes=M,i.version=aN++)}function c(u,h){let d=0,f=0,p=0,m=0,y=0;const _=h.matrixWorldInverse;for(let g=0,v=u.length;g<v;g++){const x=u[g];if(x.isDirectionalLight){const T=i.directional[d];T.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(_),d++}else if(x.isSpotLight){const T=i.spot[p];T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(_),T.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(_),p++}else if(x.isRectAreaLight){const T=i.rectArea[m];T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(_),a.identity(),o.copy(x.matrixWorld),o.premultiply(_),a.extractRotation(o),T.halfWidth.set(x.width*.5,0,0),T.halfHeight.set(0,x.height*.5,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),m++}else if(x.isPointLight){const T=i.point[f];T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(_),f++}else if(x.isHemisphereLight){const T=i.hemi[y];T.direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(_),y++}}}return{setup:l,setupView:c,state:i}}function py(r){const e=new cN(r),n=[],i=[];function s(h){u.camera=h,n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(){e.setup(n)}function c(h){e.setupView(n,h)}const u={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:u,setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function uN(r){let e=new WeakMap;function n(s,o=0){const a=e.get(s);let l;return a===void 0?(l=new py(r),e.set(s,[l])):o>=a.length?(l=new py(r),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}const hN=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,dN=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function fN(r,e,n){let i=new $c;const s=new ue,o=new ue,a=new Qe,l=new ww({depthPacking:ZM}),c=new Aw,u={},h=n.maxTextureSize,d={[Ti]:Ut,[Ut]:Ti,[Bn]:Bn},f=new vr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:hN,fragmentShader:dN}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const m=new Hn;m.setAttribute("position",new Nn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new mn(m,f),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Mm;let g=this.type;this.render=function(S,M,A){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||S.length===0)return;const E=r.getRenderTarget(),w=r.getActiveCubeFace(),N=r.getActiveMipmapLevel(),D=r.state;D.setBlending(oi),D.buffers.depth.getReversed()===!0?D.buffers.color.setClear(0,0,0,0):D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const F=g!==xi&&this.type===xi,k=g===xi&&this.type!==xi;for(let Y=0,$=S.length;Y<$;Y++){const V=S[Y],B=V.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",V,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;s.copy(B.mapSize);const J=B.getFrameExtents();if(s.multiply(J),o.copy(B.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(o.x=Math.floor(h/J.x),s.x=o.x*J.x,B.mapSize.x=o.x),s.y>h&&(o.y=Math.floor(h/J.y),s.y=o.y*J.y,B.mapSize.y=o.y)),B.map===null||F===!0||k===!0){const re=this.type!==xi?{minFilter:Wt,magFilter:Wt}:{};B.map!==null&&B.map.dispose(),B.map=new As(s.x,s.y,re),B.map.texture.name=V.name+".shadowMap",B.camera.updateProjectionMatrix()}r.setRenderTarget(B.map),r.clear();const X=B.getViewportCount();for(let re=0;re<X;re++){const fe=B.getViewport(re);a.set(o.x*fe.x,o.y*fe.y,o.x*fe.z,o.y*fe.w),D.viewport(a),B.updateMatrices(V,re),i=B.getFrustum(),T(M,A,B.camera,V,this.type)}B.isPointLightShadow!==!0&&this.type===xi&&v(B,A),B.needsUpdate=!1}g=this.type,_.needsUpdate=!1,r.setRenderTarget(E,w,N)};function v(S,M){const A=e.update(y);f.defines.VSM_SAMPLES!==S.blurSamples&&(f.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new As(s.x,s.y)),f.uniforms.shadow_pass.value=S.map.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(M,null,A,f,y,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(M,null,A,p,y,null)}function x(S,M,A,E){let w=null;const N=A.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(N!==void 0)w=N;else if(w=A.isPointLight===!0?c:l,r.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0||M.alphaToCoverage===!0){const D=w.uuid,F=M.uuid;let k=u[D];k===void 0&&(k={},u[D]=k);let Y=k[F];Y===void 0&&(Y=w.clone(),k[F]=Y,M.addEventListener("dispose",b)),w=Y}if(w.visible=M.visible,w.wireframe=M.wireframe,E===xi?w.side=M.shadowSide!==null?M.shadowSide:M.side:w.side=M.shadowSide!==null?M.shadowSide:d[M.side],w.alphaMap=M.alphaMap,w.alphaTest=M.alphaToCoverage===!0?.5:M.alphaTest,w.map=M.map,w.clipShadows=M.clipShadows,w.clippingPlanes=M.clippingPlanes,w.clipIntersection=M.clipIntersection,w.displacementMap=M.displacementMap,w.displacementScale=M.displacementScale,w.displacementBias=M.displacementBias,w.wireframeLinewidth=M.wireframeLinewidth,w.linewidth=M.linewidth,A.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const D=r.properties.get(w);D.light=A}return w}function T(S,M,A,E,w){if(S.visible===!1)return;if(S.layers.test(M.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&w===xi)&&(!S.frustumCulled||i.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,S.matrixWorld);const F=e.update(S),k=S.material;if(Array.isArray(k)){const Y=F.groups;for(let $=0,V=Y.length;$<V;$++){const B=Y[$],J=k[B.materialIndex];if(J&&J.visible){const X=x(S,J,E,w);S.onBeforeShadow(r,S,M,A,F,X,B),r.renderBufferDirect(A,null,F,X,S,B),S.onAfterShadow(r,S,M,A,F,X,B)}}}else if(k.visible){const Y=x(S,k,E,w);S.onBeforeShadow(r,S,M,A,F,Y,null),r.renderBufferDirect(A,null,F,Y,S,null),S.onAfterShadow(r,S,M,A,F,Y,null)}}const D=S.children;for(let F=0,k=D.length;F<k;F++)T(D[F],M,A,E,w)}function b(S){S.target.removeEventListener("dispose",b);for(const A in u){const E=u[A],w=S.target.uuid;w in E&&(E[w].dispose(),delete E[w])}}}const pN={[_c]:yc,[vc]:Tc,[xc]:Sc,[Es]:bc,[yc]:_c,[Tc]:vc,[Sc]:xc,[bc]:Es};function mN(r,e){function n(){let G=!1;const ve=new Qe;let Se=null;const Fe=new Qe(0,0,0,0);return{setMask:function(me){Se!==me&&!G&&(r.colorMask(me,me,me,me),Se=me)},setLocked:function(me){G=me},setClear:function(me,ce,Be,ct,Vt){Vt===!0&&(me*=ct,ce*=ct,Be*=ct),ve.set(me,ce,Be,ct),Fe.equals(ve)===!1&&(r.clearColor(me,ce,Be,ct),Fe.copy(ve))},reset:function(){G=!1,Se=null,Fe.set(-1,0,0,0)}}}function i(){let G=!1,ve=!1,Se=null,Fe=null,me=null;return{setReversed:function(ce){if(ve!==ce){const Be=e.get("EXT_clip_control");ce?Be.clipControlEXT(Be.LOWER_LEFT_EXT,Be.ZERO_TO_ONE_EXT):Be.clipControlEXT(Be.LOWER_LEFT_EXT,Be.NEGATIVE_ONE_TO_ONE_EXT),ve=ce;const ct=me;me=null,this.setClear(ct)}},getReversed:function(){return ve},setTest:function(ce){ce?Z(r.DEPTH_TEST):pe(r.DEPTH_TEST)},setMask:function(ce){Se!==ce&&!G&&(r.depthMask(ce),Se=ce)},setFunc:function(ce){if(ve&&(ce=pN[ce]),Fe!==ce){switch(ce){case _c:r.depthFunc(r.NEVER);break;case yc:r.depthFunc(r.ALWAYS);break;case vc:r.depthFunc(r.LESS);break;case Es:r.depthFunc(r.LEQUAL);break;case xc:r.depthFunc(r.EQUAL);break;case bc:r.depthFunc(r.GEQUAL);break;case Tc:r.depthFunc(r.GREATER);break;case Sc:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Fe=ce}},setLocked:function(ce){G=ce},setClear:function(ce){me!==ce&&(ve&&(ce=1-ce),r.clearDepth(ce),me=ce)},reset:function(){G=!1,Se=null,Fe=null,me=null,ve=!1}}}function s(){let G=!1,ve=null,Se=null,Fe=null,me=null,ce=null,Be=null,ct=null,Vt=null;return{setTest:function(Ct){G||(Ct?Z(r.STENCIL_TEST):pe(r.STENCIL_TEST))},setMask:function(Ct){ve!==Ct&&!G&&(r.stencilMask(Ct),ve=Ct)},setFunc:function(Ct,Er,nr){(Se!==Ct||Fe!==Er||me!==nr)&&(r.stencilFunc(Ct,Er,nr),Se=Ct,Fe=Er,me=nr)},setOp:function(Ct,Er,nr){(ce!==Ct||Be!==Er||ct!==nr)&&(r.stencilOp(Ct,Er,nr),ce=Ct,Be=Er,ct=nr)},setLocked:function(Ct){G=Ct},setClear:function(Ct){Vt!==Ct&&(r.clearStencil(Ct),Vt=Ct)},reset:function(){G=!1,ve=null,Se=null,Fe=null,me=null,ce=null,Be=null,ct=null,Vt=null}}}const o=new n,a=new i,l=new s,c=new WeakMap,u=new WeakMap;let h={},d={},f=new WeakMap,p=[],m=null,y=!1,_=null,g=null,v=null,x=null,T=null,b=null,S=null,M=new Ge(0,0,0),A=0,E=!1,w=null,N=null,D=null,F=null,k=null;const Y=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let $=!1,V=0;const B=r.getParameter(r.VERSION);B.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(B)[1]),$=V>=1):B.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),$=V>=2);let J=null,X={};const re=r.getParameter(r.SCISSOR_BOX),fe=r.getParameter(r.VIEWPORT),De=new Qe().fromArray(re),it=new Qe().fromArray(fe);function q(G,ve,Se,Fe){const me=new Uint8Array(4),ce=r.createTexture();r.bindTexture(G,ce),r.texParameteri(G,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(G,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Be=0;Be<Se;Be++)G===r.TEXTURE_3D||G===r.TEXTURE_2D_ARRAY?r.texImage3D(ve,0,r.RGBA,1,1,Fe,0,r.RGBA,r.UNSIGNED_BYTE,me):r.texImage2D(ve+Be,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,me);return ce}const z={};z[r.TEXTURE_2D]=q(r.TEXTURE_2D,r.TEXTURE_2D,1),z[r.TEXTURE_CUBE_MAP]=q(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),z[r.TEXTURE_2D_ARRAY]=q(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),z[r.TEXTURE_3D]=q(r.TEXTURE_3D,r.TEXTURE_3D,1,1),o.setClear(0,0,0,1),a.setClear(1),l.setClear(0),Z(r.DEPTH_TEST),a.setFunc(Es),Xe(!1),Le(Cp),Z(r.CULL_FACE),bt(oi);function Z(G){h[G]!==!0&&(r.enable(G),h[G]=!0)}function pe(G){h[G]!==!1&&(r.disable(G),h[G]=!1)}function Ne(G,ve){return d[G]!==ve?(r.bindFramebuffer(G,ve),d[G]=ve,G===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=ve),G===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=ve),!0):!1}function Me(G,ve){let Se=p,Fe=!1;if(G){Se=f.get(ve),Se===void 0&&(Se=[],f.set(ve,Se));const me=G.textures;if(Se.length!==me.length||Se[0]!==r.COLOR_ATTACHMENT0){for(let ce=0,Be=me.length;ce<Be;ce++)Se[ce]=r.COLOR_ATTACHMENT0+ce;Se.length=me.length,Fe=!0}}else Se[0]!==r.BACK&&(Se[0]=r.BACK,Fe=!0);Fe&&r.drawBuffers(Se)}function We(G){return m!==G?(r.useProgram(G),m=G,!0):!1}const Ft={[kn]:r.FUNC_ADD,[Em]:r.FUNC_SUBTRACT,[wm]:r.FUNC_REVERSE_SUBTRACT};Ft[mx]=r.MIN,Ft[gx]=r.MAX;const U={[Br]:r.ZERO,[Am]:r.ONE,[Rm]:r.SRC_COLOR,[mc]:r.SRC_ALPHA,[Im]:r.SRC_ALPHA_SATURATE,[Dm]:r.DST_COLOR,[Nm]:r.DST_ALPHA,[Cm]:r.ONE_MINUS_SRC_COLOR,[gc]:r.ONE_MINUS_SRC_ALPHA,[Lm]:r.ONE_MINUS_DST_COLOR,[Pm]:r.ONE_MINUS_DST_ALPHA,[WM]:r.CONSTANT_COLOR,[$M]:r.ONE_MINUS_CONSTANT_COLOR,[jM]:r.CONSTANT_ALPHA,[qM]:r.ONE_MINUS_CONSTANT_ALPHA};function bt(G,ve,Se,Fe,me,ce,Be,ct,Vt,Ct){if(G===oi){y===!0&&(pe(r.BLEND),y=!1);return}if(y===!1&&(Z(r.BLEND),y=!0),G!==ha){if(G!==_||Ct!==E){if((g!==kn||T!==kn)&&(r.blendEquation(r.FUNC_ADD),g=kn,T=kn),Ct)switch(G){case Si:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case xa:r.blendFunc(r.ONE,r.ONE);break;case ba:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ta:r.blendFuncSeparate(r.DST_COLOR,r.ONE_MINUS_SRC_ALPHA,r.ZERO,r.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Si:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case xa:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE,r.ONE,r.ONE);break;case ba:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ta:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}v=null,x=null,b=null,S=null,M.set(0,0,0),A=0,_=G,E=Ct}return}me=me||ve,ce=ce||Se,Be=Be||Fe,(ve!==g||me!==T)&&(r.blendEquationSeparate(Ft[ve],Ft[me]),g=ve,T=me),(Se!==v||Fe!==x||ce!==b||Be!==S)&&(r.blendFuncSeparate(U[Se],U[Fe],U[ce],U[Be]),v=Se,x=Fe,b=ce,S=Be),(ct.equals(M)===!1||Vt!==A)&&(r.blendColor(ct.r,ct.g,ct.b,Vt),M.copy(ct),A=Vt),_=G,E=!1}function rt(G,ve){G.side===Bn?pe(r.CULL_FACE):Z(r.CULL_FACE);let Se=G.side===Ut;ve&&(Se=!Se),Xe(Se),G.blending===Si&&G.transparent===!1?bt(oi):bt(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),a.setFunc(G.depthFunc),a.setTest(G.depthTest),a.setMask(G.depthWrite),o.setMask(G.colorWrite);const Fe=G.stencilWrite;l.setTest(Fe),Fe&&(l.setMask(G.stencilWriteMask),l.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),l.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),ze(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?Z(r.SAMPLE_ALPHA_TO_COVERAGE):pe(r.SAMPLE_ALPHA_TO_COVERAGE)}function Xe(G){w!==G&&(G?r.frontFace(r.CW):r.frontFace(r.CCW),w=G)}function Le(G){G!==fx?(Z(r.CULL_FACE),G!==N&&(G===Cp?r.cullFace(r.BACK):G===px?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):pe(r.CULL_FACE),N=G}function Rt(G){G!==D&&($&&r.lineWidth(G),D=G)}function ze(G,ve,Se){G?(Z(r.POLYGON_OFFSET_FILL),(F!==ve||k!==Se)&&(r.polygonOffset(ve,Se),F=ve,k=Se)):pe(r.POLYGON_OFFSET_FILL)}function mt(G){G?Z(r.SCISSOR_TEST):pe(r.SCISSOR_TEST)}function Sn(G){G===void 0&&(G=r.TEXTURE0+Y-1),J!==G&&(r.activeTexture(G),J=G)}function an(G,ve,Se){Se===void 0&&(J===null?Se=r.TEXTURE0+Y-1:Se=J);let Fe=X[Se];Fe===void 0&&(Fe={type:void 0,texture:void 0},X[Se]=Fe),(Fe.type!==G||Fe.texture!==ve)&&(J!==Se&&(r.activeTexture(Se),J=Se),r.bindTexture(G,ve||z[G]),Fe.type=G,Fe.texture=ve)}function I(){const G=X[J];G!==void 0&&G.type!==void 0&&(r.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function C(){try{r.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function K(){try{r.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ae(){try{r.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function de(){try{r.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function se(){try{r.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function qe(){try{r.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Te(){try{r.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function He(){try{r.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function $e(){try{r.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ye(){try{r.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ce(G){De.equals(G)===!1&&(r.scissor(G.x,G.y,G.z,G.w),De.copy(G))}function st(G){it.equals(G)===!1&&(r.viewport(G.x,G.y,G.z,G.w),it.copy(G))}function je(G,ve){let Se=u.get(ve);Se===void 0&&(Se=new WeakMap,u.set(ve,Se));let Fe=Se.get(G);Fe===void 0&&(Fe=r.getUniformBlockIndex(ve,G.name),Se.set(G,Fe))}function we(G,ve){const Fe=u.get(ve).get(G);c.get(ve)!==Fe&&(r.uniformBlockBinding(ve,Fe,G.__bindingPointIndex),c.set(ve,Fe))}function dt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},J=null,X={},d={},f=new WeakMap,p=[],m=null,y=!1,_=null,g=null,v=null,x=null,T=null,b=null,S=null,M=new Ge(0,0,0),A=0,E=!1,w=null,N=null,D=null,F=null,k=null,De.set(0,0,r.canvas.width,r.canvas.height),it.set(0,0,r.canvas.width,r.canvas.height),o.reset(),a.reset(),l.reset()}return{buffers:{color:o,depth:a,stencil:l},enable:Z,disable:pe,bindFramebuffer:Ne,drawBuffers:Me,useProgram:We,setBlending:bt,setMaterial:rt,setFlipSided:Xe,setCullFace:Le,setLineWidth:Rt,setPolygonOffset:ze,setScissorTest:mt,activeTexture:Sn,bindTexture:an,unbindTexture:I,compressedTexImage2D:C,compressedTexImage3D:K,texImage2D:$e,texImage3D:ye,updateUBOMapping:je,uniformBlockBinding:we,texStorage2D:Te,texStorage3D:He,texSubImage2D:ae,texSubImage3D:de,compressedTexSubImage2D:se,compressedTexSubImage3D:qe,scissor:Ce,viewport:st,reset:dt}}function gN(r,e,n,i,s,o,a){const l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new ue,h=new WeakMap;let d;const f=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(I,C){return p?new OffscreenCanvas(I,C):Rc("canvas")}function y(I,C,K){let ae=1;const de=an(I);if((de.width>K||de.height>K)&&(ae=K/Math.max(de.width,de.height)),ae<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const se=Math.floor(ae*de.width),qe=Math.floor(ae*de.height);d===void 0&&(d=m(se,qe));const Te=C?m(se,qe):d;return Te.width=se,Te.height=qe,Te.getContext("2d").drawImage(I,0,0,se,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+de.width+"x"+de.height+") to ("+se+"x"+qe+")."),Te}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+de.width+"x"+de.height+")."),I;return I}function _(I){return I.generateMipmaps}function g(I){r.generateMipmap(I)}function v(I){return I.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:I.isWebGL3DRenderTarget?r.TEXTURE_3D:I.isWebGLArrayRenderTarget||I.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function x(I,C,K,ae,de=!1){if(I!==null){if(r[I]!==void 0)return r[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let se=C;if(C===r.RED&&(K===r.FLOAT&&(se=r.R32F),K===r.HALF_FLOAT&&(se=r.R16F),K===r.UNSIGNED_BYTE&&(se=r.R8)),C===r.RED_INTEGER&&(K===r.UNSIGNED_BYTE&&(se=r.R8UI),K===r.UNSIGNED_SHORT&&(se=r.R16UI),K===r.UNSIGNED_INT&&(se=r.R32UI),K===r.BYTE&&(se=r.R8I),K===r.SHORT&&(se=r.R16I),K===r.INT&&(se=r.R32I)),C===r.RG&&(K===r.FLOAT&&(se=r.RG32F),K===r.HALF_FLOAT&&(se=r.RG16F),K===r.UNSIGNED_BYTE&&(se=r.RG8)),C===r.RG_INTEGER&&(K===r.UNSIGNED_BYTE&&(se=r.RG8UI),K===r.UNSIGNED_SHORT&&(se=r.RG16UI),K===r.UNSIGNED_INT&&(se=r.RG32UI),K===r.BYTE&&(se=r.RG8I),K===r.SHORT&&(se=r.RG16I),K===r.INT&&(se=r.RG32I)),C===r.RGB_INTEGER&&(K===r.UNSIGNED_BYTE&&(se=r.RGB8UI),K===r.UNSIGNED_SHORT&&(se=r.RGB16UI),K===r.UNSIGNED_INT&&(se=r.RGB32UI),K===r.BYTE&&(se=r.RGB8I),K===r.SHORT&&(se=r.RGB16I),K===r.INT&&(se=r.RGB32I)),C===r.RGBA_INTEGER&&(K===r.UNSIGNED_BYTE&&(se=r.RGBA8UI),K===r.UNSIGNED_SHORT&&(se=r.RGBA16UI),K===r.UNSIGNED_INT&&(se=r.RGBA32UI),K===r.BYTE&&(se=r.RGBA8I),K===r.SHORT&&(se=r.RGBA16I),K===r.INT&&(se=r.RGBA32I)),C===r.RGB&&(K===r.UNSIGNED_INT_5_9_9_9_REV&&(se=r.RGB9_E5),K===r.UNSIGNED_INT_10F_11F_11F_REV&&(se=r.R11F_G11F_B10F)),C===r.RGBA){const qe=de?qa:Ze.getTransfer(ae);K===r.FLOAT&&(se=r.RGBA32F),K===r.HALF_FLOAT&&(se=r.RGBA16F),K===r.UNSIGNED_BYTE&&(se=qe===Ae?r.SRGB8_ALPHA8:r.RGBA8),K===r.UNSIGNED_SHORT_4_4_4_4&&(se=r.RGBA4),K===r.UNSIGNED_SHORT_5_5_5_1&&(se=r.RGB5_A1)}return(se===r.R16F||se===r.R32F||se===r.RG16F||se===r.RG32F||se===r.RGBA16F||se===r.RGBA32F)&&e.get("EXT_color_buffer_float"),se}function T(I,C){let K;return I?C===null||C===Gt||C===Mi?K=r.DEPTH24_STENCIL8:C===ln?K=r.DEPTH32F_STENCIL8:C===Qi&&(K=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===Gt||C===Mi?K=r.DEPTH_COMPONENT24:C===ln?K=r.DEPTH_COMPONENT32F:C===Qi&&(K=r.DEPTH_COMPONENT16),K}function b(I,C){return _(I)===!0||I.isFramebufferTexture&&I.minFilter!==Wt&&I.minFilter!==vn?Math.log2(Math.max(C.width,C.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?C.mipmaps.length:1}function S(I){const C=I.target;C.removeEventListener("dispose",S),A(C),C.isVideoTexture&&h.delete(C)}function M(I){const C=I.target;C.removeEventListener("dispose",M),w(C)}function A(I){const C=i.get(I);if(C.__webglInit===void 0)return;const K=I.source,ae=f.get(K);if(ae){const de=ae[C.__cacheKey];de.usedTimes--,de.usedTimes===0&&E(I),Object.keys(ae).length===0&&f.delete(K)}i.remove(I)}function E(I){const C=i.get(I);r.deleteTexture(C.__webglTexture);const K=I.source,ae=f.get(K);delete ae[C.__cacheKey],a.memory.textures--}function w(I){const C=i.get(I);if(I.depthTexture&&(I.depthTexture.dispose(),i.remove(I.depthTexture)),I.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(C.__webglFramebuffer[ae]))for(let de=0;de<C.__webglFramebuffer[ae].length;de++)r.deleteFramebuffer(C.__webglFramebuffer[ae][de]);else r.deleteFramebuffer(C.__webglFramebuffer[ae]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[ae])}else{if(Array.isArray(C.__webglFramebuffer))for(let ae=0;ae<C.__webglFramebuffer.length;ae++)r.deleteFramebuffer(C.__webglFramebuffer[ae]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let ae=0;ae<C.__webglColorRenderbuffer.length;ae++)C.__webglColorRenderbuffer[ae]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[ae]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const K=I.textures;for(let ae=0,de=K.length;ae<de;ae++){const se=i.get(K[ae]);se.__webglTexture&&(r.deleteTexture(se.__webglTexture),a.memory.textures--),i.remove(K[ae])}i.remove(I)}let N=0;function D(){N=0}function F(){const I=N;return I>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+s.maxTextures),N+=1,I}function k(I){const C=[];return C.push(I.wrapS),C.push(I.wrapT),C.push(I.wrapR||0),C.push(I.magFilter),C.push(I.minFilter),C.push(I.anisotropy),C.push(I.internalFormat),C.push(I.format),C.push(I.type),C.push(I.generateMipmaps),C.push(I.premultiplyAlpha),C.push(I.flipY),C.push(I.unpackAlignment),C.push(I.colorSpace),C.join()}function Y(I,C){const K=i.get(I);if(I.isVideoTexture&&mt(I),I.isRenderTargetTexture===!1&&I.isExternalTexture!==!0&&I.version>0&&K.__version!==I.version){const ae=I.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{z(K,I,C);return}}else I.isExternalTexture&&(K.__webglTexture=I.sourceTexture?I.sourceTexture:null);n.bindTexture(r.TEXTURE_2D,K.__webglTexture,r.TEXTURE0+C)}function $(I,C){const K=i.get(I);if(I.isRenderTargetTexture===!1&&I.version>0&&K.__version!==I.version){z(K,I,C);return}n.bindTexture(r.TEXTURE_2D_ARRAY,K.__webglTexture,r.TEXTURE0+C)}function V(I,C){const K=i.get(I);if(I.isRenderTargetTexture===!1&&I.version>0&&K.__version!==I.version){z(K,I,C);return}n.bindTexture(r.TEXTURE_3D,K.__webglTexture,r.TEXTURE0+C)}function B(I,C){const K=i.get(I);if(I.version>0&&K.__version!==I.version){Z(K,I,C);return}n.bindTexture(r.TEXTURE_CUBE_MAP,K.__webglTexture,r.TEXTURE0+C)}const J={[ho]:r.REPEAT,[fr]:r.CLAMP_TO_EDGE,[fo]:r.MIRRORED_REPEAT},X={[Wt]:r.NEAREST,[Fm]:r.NEAREST_MIPMAP_NEAREST,[jr]:r.NEAREST_MIPMAP_LINEAR,[vn]:r.LINEAR,[da]:r.LINEAR_MIPMAP_NEAREST,[ii]:r.LINEAR_MIPMAP_LINEAR},re={[Bm]:r.NEVER,[Hm]:r.ALWAYS,[Jh]:r.LESS,[ed]:r.LEQUAL,[km]:r.EQUAL,[Vm]:r.GEQUAL,[zm]:r.GREATER,[Gm]:r.NOTEQUAL};function fe(I,C){if(C.type===ln&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===vn||C.magFilter===da||C.magFilter===jr||C.magFilter===ii||C.minFilter===vn||C.minFilter===da||C.minFilter===jr||C.minFilter===ii)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(I,r.TEXTURE_WRAP_S,J[C.wrapS]),r.texParameteri(I,r.TEXTURE_WRAP_T,J[C.wrapT]),(I===r.TEXTURE_3D||I===r.TEXTURE_2D_ARRAY)&&r.texParameteri(I,r.TEXTURE_WRAP_R,J[C.wrapR]),r.texParameteri(I,r.TEXTURE_MAG_FILTER,X[C.magFilter]),r.texParameteri(I,r.TEXTURE_MIN_FILTER,X[C.minFilter]),C.compareFunction&&(r.texParameteri(I,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(I,r.TEXTURE_COMPARE_FUNC,re[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===Wt||C.minFilter!==jr&&C.minFilter!==ii||C.type===ln&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||i.get(C).__currentAnisotropy){const K=e.get("EXT_texture_filter_anisotropic");r.texParameterf(I,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,s.getMaxAnisotropy())),i.get(C).__currentAnisotropy=C.anisotropy}}}function De(I,C){let K=!1;I.__webglInit===void 0&&(I.__webglInit=!0,C.addEventListener("dispose",S));const ae=C.source;let de=f.get(ae);de===void 0&&(de={},f.set(ae,de));const se=k(C);if(se!==I.__cacheKey){de[se]===void 0&&(de[se]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,K=!0),de[se].usedTimes++;const qe=de[I.__cacheKey];qe!==void 0&&(de[I.__cacheKey].usedTimes--,qe.usedTimes===0&&E(C)),I.__cacheKey=se,I.__webglTexture=de[se].texture}return K}function it(I,C,K){return Math.floor(Math.floor(I/K)/C)}function q(I,C,K,ae){const se=I.updateRanges;if(se.length===0)n.texSubImage2D(r.TEXTURE_2D,0,0,0,C.width,C.height,K,ae,C.data);else{se.sort((ye,Ce)=>ye.start-Ce.start);let qe=0;for(let ye=1;ye<se.length;ye++){const Ce=se[qe],st=se[ye],je=Ce.start+Ce.count,we=it(st.start,C.width,4),dt=it(Ce.start,C.width,4);st.start<=je+1&&we===dt&&it(st.start+st.count-1,C.width,4)===we?Ce.count=Math.max(Ce.count,st.start+st.count-Ce.start):(++qe,se[qe]=st)}se.length=qe+1;const Te=r.getParameter(r.UNPACK_ROW_LENGTH),He=r.getParameter(r.UNPACK_SKIP_PIXELS),$e=r.getParameter(r.UNPACK_SKIP_ROWS);r.pixelStorei(r.UNPACK_ROW_LENGTH,C.width);for(let ye=0,Ce=se.length;ye<Ce;ye++){const st=se[ye],je=Math.floor(st.start/4),we=Math.ceil(st.count/4),dt=je%C.width,G=Math.floor(je/C.width),ve=we,Se=1;r.pixelStorei(r.UNPACK_SKIP_PIXELS,dt),r.pixelStorei(r.UNPACK_SKIP_ROWS,G),n.texSubImage2D(r.TEXTURE_2D,0,dt,G,ve,Se,K,ae,C.data)}I.clearUpdateRanges(),r.pixelStorei(r.UNPACK_ROW_LENGTH,Te),r.pixelStorei(r.UNPACK_SKIP_PIXELS,He),r.pixelStorei(r.UNPACK_SKIP_ROWS,$e)}}function z(I,C,K){let ae=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(ae=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(ae=r.TEXTURE_3D);const de=De(I,C),se=C.source;n.bindTexture(ae,I.__webglTexture,r.TEXTURE0+K);const qe=i.get(se);if(se.version!==qe.__version||de===!0){n.activeTexture(r.TEXTURE0+K);const Te=Ze.getPrimaries(Ze.workingColorSpace),He=C.colorSpace===ni?null:Ze.getPrimaries(C.colorSpace),$e=C.colorSpace===ni||Te===He?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,$e);let ye=y(C.image,!1,s.maxTextureSize);ye=Sn(C,ye);const Ce=o.convert(C.format,C.colorSpace),st=o.convert(C.type);let je=x(C.internalFormat,Ce,st,C.colorSpace,C.isVideoTexture);fe(ae,C);let we;const dt=C.mipmaps,G=C.isVideoTexture!==!0,ve=qe.__version===void 0||de===!0,Se=se.dataReady,Fe=b(C,ye);if(C.isDepthTexture)je=T(C.format===wi,C.type),ve&&(G?n.texStorage2D(r.TEXTURE_2D,1,je,ye.width,ye.height):n.texImage2D(r.TEXTURE_2D,0,je,ye.width,ye.height,0,Ce,st,null));else if(C.isDataTexture)if(dt.length>0){G&&ve&&n.texStorage2D(r.TEXTURE_2D,Fe,je,dt[0].width,dt[0].height);for(let me=0,ce=dt.length;me<ce;me++)we=dt[me],G?Se&&n.texSubImage2D(r.TEXTURE_2D,me,0,0,we.width,we.height,Ce,st,we.data):n.texImage2D(r.TEXTURE_2D,me,je,we.width,we.height,0,Ce,st,we.data);C.generateMipmaps=!1}else G?(ve&&n.texStorage2D(r.TEXTURE_2D,Fe,je,ye.width,ye.height),Se&&q(C,ye,Ce,st)):n.texImage2D(r.TEXTURE_2D,0,je,ye.width,ye.height,0,Ce,st,ye.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){G&&ve&&n.texStorage3D(r.TEXTURE_2D_ARRAY,Fe,je,dt[0].width,dt[0].height,ye.depth);for(let me=0,ce=dt.length;me<ce;me++)if(we=dt[me],C.format!==sn)if(Ce!==null)if(G){if(Se)if(C.layerUpdates.size>0){const Be=Ip(we.width,we.height,C.format,C.type);for(const ct of C.layerUpdates){const Vt=we.data.subarray(ct*Be/we.data.BYTES_PER_ELEMENT,(ct+1)*Be/we.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,me,0,0,ct,we.width,we.height,1,Ce,Vt)}C.clearLayerUpdates()}else n.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,me,0,0,0,we.width,we.height,ye.depth,Ce,we.data)}else n.compressedTexImage3D(r.TEXTURE_2D_ARRAY,me,je,we.width,we.height,ye.depth,0,we.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else G?Se&&n.texSubImage3D(r.TEXTURE_2D_ARRAY,me,0,0,0,we.width,we.height,ye.depth,Ce,st,we.data):n.texImage3D(r.TEXTURE_2D_ARRAY,me,je,we.width,we.height,ye.depth,0,Ce,st,we.data)}else{G&&ve&&n.texStorage2D(r.TEXTURE_2D,Fe,je,dt[0].width,dt[0].height);for(let me=0,ce=dt.length;me<ce;me++)we=dt[me],C.format!==sn?Ce!==null?G?Se&&n.compressedTexSubImage2D(r.TEXTURE_2D,me,0,0,we.width,we.height,Ce,we.data):n.compressedTexImage2D(r.TEXTURE_2D,me,je,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G?Se&&n.texSubImage2D(r.TEXTURE_2D,me,0,0,we.width,we.height,Ce,st,we.data):n.texImage2D(r.TEXTURE_2D,me,je,we.width,we.height,0,Ce,st,we.data)}else if(C.isDataArrayTexture)if(G){if(ve&&n.texStorage3D(r.TEXTURE_2D_ARRAY,Fe,je,ye.width,ye.height,ye.depth),Se)if(C.layerUpdates.size>0){const me=Ip(ye.width,ye.height,C.format,C.type);for(const ce of C.layerUpdates){const Be=ye.data.subarray(ce*me/ye.data.BYTES_PER_ELEMENT,(ce+1)*me/ye.data.BYTES_PER_ELEMENT);n.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,ce,ye.width,ye.height,1,Ce,st,Be)}C.clearLayerUpdates()}else n.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,Ce,st,ye.data)}else n.texImage3D(r.TEXTURE_2D_ARRAY,0,je,ye.width,ye.height,ye.depth,0,Ce,st,ye.data);else if(C.isData3DTexture)G?(ve&&n.texStorage3D(r.TEXTURE_3D,Fe,je,ye.width,ye.height,ye.depth),Se&&n.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,Ce,st,ye.data)):n.texImage3D(r.TEXTURE_3D,0,je,ye.width,ye.height,ye.depth,0,Ce,st,ye.data);else if(C.isFramebufferTexture){if(ve)if(G)n.texStorage2D(r.TEXTURE_2D,Fe,je,ye.width,ye.height);else{let me=ye.width,ce=ye.height;for(let Be=0;Be<Fe;Be++)n.texImage2D(r.TEXTURE_2D,Be,je,me,ce,0,Ce,st,null),me>>=1,ce>>=1}}else if(dt.length>0){if(G&&ve){const me=an(dt[0]);n.texStorage2D(r.TEXTURE_2D,Fe,je,me.width,me.height)}for(let me=0,ce=dt.length;me<ce;me++)we=dt[me],G?Se&&n.texSubImage2D(r.TEXTURE_2D,me,0,0,Ce,st,we):n.texImage2D(r.TEXTURE_2D,me,je,Ce,st,we);C.generateMipmaps=!1}else if(G){if(ve){const me=an(ye);n.texStorage2D(r.TEXTURE_2D,Fe,je,me.width,me.height)}Se&&n.texSubImage2D(r.TEXTURE_2D,0,0,0,Ce,st,ye)}else n.texImage2D(r.TEXTURE_2D,0,je,Ce,st,ye);_(C)&&g(ae),qe.__version=se.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function Z(I,C,K){if(C.image.length!==6)return;const ae=De(I,C),de=C.source;n.bindTexture(r.TEXTURE_CUBE_MAP,I.__webglTexture,r.TEXTURE0+K);const se=i.get(de);if(de.version!==se.__version||ae===!0){n.activeTexture(r.TEXTURE0+K);const qe=Ze.getPrimaries(Ze.workingColorSpace),Te=C.colorSpace===ni?null:Ze.getPrimaries(C.colorSpace),He=C.colorSpace===ni||qe===Te?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);const $e=C.isCompressedTexture||C.image[0].isCompressedTexture,ye=C.image[0]&&C.image[0].isDataTexture,Ce=[];for(let ce=0;ce<6;ce++)!$e&&!ye?Ce[ce]=y(C.image[ce],!0,s.maxCubemapSize):Ce[ce]=ye?C.image[ce].image:C.image[ce],Ce[ce]=Sn(C,Ce[ce]);const st=Ce[0],je=o.convert(C.format,C.colorSpace),we=o.convert(C.type),dt=x(C.internalFormat,je,we,C.colorSpace),G=C.isVideoTexture!==!0,ve=se.__version===void 0||ae===!0,Se=de.dataReady;let Fe=b(C,st);fe(r.TEXTURE_CUBE_MAP,C);let me;if($e){G&&ve&&n.texStorage2D(r.TEXTURE_CUBE_MAP,Fe,dt,st.width,st.height);for(let ce=0;ce<6;ce++){me=Ce[ce].mipmaps;for(let Be=0;Be<me.length;Be++){const ct=me[Be];C.format!==sn?je!==null?G?Se&&n.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be,0,0,ct.width,ct.height,je,ct.data):n.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be,dt,ct.width,ct.height,0,ct.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?Se&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be,0,0,ct.width,ct.height,je,we,ct.data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be,dt,ct.width,ct.height,0,je,we,ct.data)}}}else{if(me=C.mipmaps,G&&ve){me.length>0&&Fe++;const ce=an(Ce[0]);n.texStorage2D(r.TEXTURE_CUBE_MAP,Fe,dt,ce.width,ce.height)}for(let ce=0;ce<6;ce++)if(ye){G?Se&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,0,0,Ce[ce].width,Ce[ce].height,je,we,Ce[ce].data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,dt,Ce[ce].width,Ce[ce].height,0,je,we,Ce[ce].data);for(let Be=0;Be<me.length;Be++){const Vt=me[Be].image[ce].image;G?Se&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be+1,0,0,Vt.width,Vt.height,je,we,Vt.data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be+1,dt,Vt.width,Vt.height,0,je,we,Vt.data)}}else{G?Se&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,0,0,je,we,Ce[ce]):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0,dt,je,we,Ce[ce]);for(let Be=0;Be<me.length;Be++){const ct=me[Be];G?Se&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be+1,0,0,je,we,ct.image[ce]):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Be+1,dt,je,we,ct.image[ce])}}}_(C)&&g(r.TEXTURE_CUBE_MAP),se.__version=de.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function pe(I,C,K,ae,de,se){const qe=o.convert(K.format,K.colorSpace),Te=o.convert(K.type),He=x(K.internalFormat,qe,Te,K.colorSpace),$e=i.get(C),ye=i.get(K);if(ye.__renderTarget=C,!$e.__hasExternalTextures){const Ce=Math.max(1,C.width>>se),st=Math.max(1,C.height>>se);de===r.TEXTURE_3D||de===r.TEXTURE_2D_ARRAY?n.texImage3D(de,se,He,Ce,st,C.depth,0,qe,Te,null):n.texImage2D(de,se,He,Ce,st,0,qe,Te,null)}n.bindFramebuffer(r.FRAMEBUFFER,I),ze(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ae,de,ye.__webglTexture,0,Rt(C)):(de===r.TEXTURE_2D||de>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ae,de,ye.__webglTexture,se),n.bindFramebuffer(r.FRAMEBUFFER,null)}function Ne(I,C,K){if(r.bindRenderbuffer(r.RENDERBUFFER,I),C.depthBuffer){const ae=C.depthTexture,de=ae&&ae.isDepthTexture?ae.type:null,se=T(C.stencilBuffer,de),qe=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Te=Rt(C);ze(C)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Te,se,C.width,C.height):K?r.renderbufferStorageMultisample(r.RENDERBUFFER,Te,se,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,se,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,qe,r.RENDERBUFFER,I)}else{const ae=C.textures;for(let de=0;de<ae.length;de++){const se=ae[de],qe=o.convert(se.format,se.colorSpace),Te=o.convert(se.type),He=x(se.internalFormat,qe,Te,se.colorSpace),$e=Rt(C);K&&ze(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,$e,He,C.width,C.height):ze(C)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,$e,He,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,He,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Me(I,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(r.FRAMEBUFFER,I),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ae=i.get(C.depthTexture);ae.__renderTarget=C,(!ae.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),Y(C.depthTexture,0);const de=ae.__webglTexture,se=Rt(C);if(C.depthTexture.format===Ei)ze(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,de,0,se):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,de,0);else if(C.depthTexture.format===wi)ze(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,de,0,se):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,de,0);else throw new Error("Unknown depthTexture format")}function We(I){const C=i.get(I),K=I.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==I.depthTexture){const ae=I.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),ae){const de=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,ae.removeEventListener("dispose",de)};ae.addEventListener("dispose",de),C.__depthDisposeCallback=de}C.__boundDepthTexture=ae}if(I.depthTexture&&!C.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");const ae=I.texture.mipmaps;ae&&ae.length>0?Me(C.__webglFramebuffer[0],I):Me(C.__webglFramebuffer,I)}else if(K){C.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)if(n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[ae]),C.__webglDepthbuffer[ae]===void 0)C.__webglDepthbuffer[ae]=r.createRenderbuffer(),Ne(C.__webglDepthbuffer[ae],I,!1);else{const de=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,se=C.__webglDepthbuffer[ae];r.bindRenderbuffer(r.RENDERBUFFER,se),r.framebufferRenderbuffer(r.FRAMEBUFFER,de,r.RENDERBUFFER,se)}}else{const ae=I.texture.mipmaps;if(ae&&ae.length>0?n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[0]):n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=r.createRenderbuffer(),Ne(C.__webglDepthbuffer,I,!1);else{const de=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,se=C.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,se),r.framebufferRenderbuffer(r.FRAMEBUFFER,de,r.RENDERBUFFER,se)}}n.bindFramebuffer(r.FRAMEBUFFER,null)}function Ft(I,C,K){const ae=i.get(I);C!==void 0&&pe(ae.__webglFramebuffer,I,I.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),K!==void 0&&We(I)}function U(I){const C=I.texture,K=i.get(I),ae=i.get(C);I.addEventListener("dispose",M);const de=I.textures,se=I.isWebGLCubeRenderTarget===!0,qe=de.length>1;if(qe||(ae.__webglTexture===void 0&&(ae.__webglTexture=r.createTexture()),ae.__version=C.version,a.memory.textures++),se){K.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer[Te]=[];for(let He=0;He<C.mipmaps.length;He++)K.__webglFramebuffer[Te][He]=r.createFramebuffer()}else K.__webglFramebuffer[Te]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer=[];for(let Te=0;Te<C.mipmaps.length;Te++)K.__webglFramebuffer[Te]=r.createFramebuffer()}else K.__webglFramebuffer=r.createFramebuffer();if(qe)for(let Te=0,He=de.length;Te<He;Te++){const $e=i.get(de[Te]);$e.__webglTexture===void 0&&($e.__webglTexture=r.createTexture(),a.memory.textures++)}if(I.samples>0&&ze(I)===!1){K.__webglMultisampledFramebuffer=r.createFramebuffer(),K.__webglColorRenderbuffer=[],n.bindFramebuffer(r.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Te=0;Te<de.length;Te++){const He=de[Te];K.__webglColorRenderbuffer[Te]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,K.__webglColorRenderbuffer[Te]);const $e=o.convert(He.format,He.colorSpace),ye=o.convert(He.type),Ce=x(He.internalFormat,$e,ye,He.colorSpace,I.isXRRenderTarget===!0),st=Rt(I);r.renderbufferStorageMultisample(r.RENDERBUFFER,st,Ce,I.width,I.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,K.__webglColorRenderbuffer[Te])}r.bindRenderbuffer(r.RENDERBUFFER,null),I.depthBuffer&&(K.__webglDepthRenderbuffer=r.createRenderbuffer(),Ne(K.__webglDepthRenderbuffer,I,!0)),n.bindFramebuffer(r.FRAMEBUFFER,null)}}if(se){n.bindTexture(r.TEXTURE_CUBE_MAP,ae.__webglTexture),fe(r.TEXTURE_CUBE_MAP,C);for(let Te=0;Te<6;Te++)if(C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)pe(K.__webglFramebuffer[Te][He],I,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Te,He);else pe(K.__webglFramebuffer[Te],I,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Te,0);_(C)&&g(r.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(qe){for(let Te=0,He=de.length;Te<He;Te++){const $e=de[Te],ye=i.get($e);let Ce=r.TEXTURE_2D;(I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Ce=I.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),n.bindTexture(Ce,ye.__webglTexture),fe(Ce,$e),pe(K.__webglFramebuffer,I,$e,r.COLOR_ATTACHMENT0+Te,Ce,0),_($e)&&g(Ce)}n.unbindTexture()}else{let Te=r.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Te=I.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),n.bindTexture(Te,ae.__webglTexture),fe(Te,C),C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)pe(K.__webglFramebuffer[He],I,C,r.COLOR_ATTACHMENT0,Te,He);else pe(K.__webglFramebuffer,I,C,r.COLOR_ATTACHMENT0,Te,0);_(C)&&g(Te),n.unbindTexture()}I.depthBuffer&&We(I)}function bt(I){const C=I.textures;for(let K=0,ae=C.length;K<ae;K++){const de=C[K];if(_(de)){const se=v(I),qe=i.get(de).__webglTexture;n.bindTexture(se,qe),g(se),n.unbindTexture()}}}const rt=[],Xe=[];function Le(I){if(I.samples>0){if(ze(I)===!1){const C=I.textures,K=I.width,ae=I.height;let de=r.COLOR_BUFFER_BIT;const se=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,qe=i.get(I),Te=C.length>1;if(Te)for(let $e=0;$e<C.length;$e++)n.bindFramebuffer(r.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+$e,r.RENDERBUFFER,null),n.bindFramebuffer(r.FRAMEBUFFER,qe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+$e,r.TEXTURE_2D,null,0);n.bindFramebuffer(r.READ_FRAMEBUFFER,qe.__webglMultisampledFramebuffer);const He=I.texture.mipmaps;He&&He.length>0?n.bindFramebuffer(r.DRAW_FRAMEBUFFER,qe.__webglFramebuffer[0]):n.bindFramebuffer(r.DRAW_FRAMEBUFFER,qe.__webglFramebuffer);for(let $e=0;$e<C.length;$e++){if(I.resolveDepthBuffer&&(I.depthBuffer&&(de|=r.DEPTH_BUFFER_BIT),I.stencilBuffer&&I.resolveStencilBuffer&&(de|=r.STENCIL_BUFFER_BIT)),Te){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,qe.__webglColorRenderbuffer[$e]);const ye=i.get(C[$e]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,ye,0)}r.blitFramebuffer(0,0,K,ae,0,0,K,ae,de,r.NEAREST),c===!0&&(rt.length=0,Xe.length=0,rt.push(r.COLOR_ATTACHMENT0+$e),I.depthBuffer&&I.resolveDepthBuffer===!1&&(rt.push(se),Xe.push(se),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,Xe)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,rt))}if(n.bindFramebuffer(r.READ_FRAMEBUFFER,null),n.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Te)for(let $e=0;$e<C.length;$e++){n.bindFramebuffer(r.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+$e,r.RENDERBUFFER,qe.__webglColorRenderbuffer[$e]);const ye=i.get(C[$e]).__webglTexture;n.bindFramebuffer(r.FRAMEBUFFER,qe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+$e,r.TEXTURE_2D,ye,0)}n.bindFramebuffer(r.DRAW_FRAMEBUFFER,qe.__webglMultisampledFramebuffer)}else if(I.depthBuffer&&I.resolveDepthBuffer===!1&&c){const C=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[C])}}}function Rt(I){return Math.min(s.maxSamples,I.samples)}function ze(I){const C=i.get(I);return I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function mt(I){const C=a.render.frame;h.get(I)!==C&&(h.set(I,C),I.update())}function Sn(I,C){const K=I.colorSpace,ae=I.format,de=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||K!==po&&K!==ni&&(Ze.getTransfer(K)===Ae?(ae!==sn||de!==nn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),C}function an(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(u.width=I.naturalWidth||I.width,u.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(u.width=I.displayWidth,u.height=I.displayHeight):(u.width=I.width,u.height=I.height),u}this.allocateTextureUnit=F,this.resetTextureUnits=D,this.setTexture2D=Y,this.setTexture2DArray=$,this.setTexture3D=V,this.setTextureCube=B,this.rebindTextures=Ft,this.setupRenderTarget=U,this.updateRenderTargetMipmap=bt,this.updateMultisampleRenderTarget=Le,this.setupDepthRenderbuffer=We,this.setupFrameBufferTexture=pe,this.useMultisampledRTT=ze}function _N(r,e){function n(i,s=ni){let o;const a=Ze.getTransfer(s);if(i===nn)return r.UNSIGNED_BYTE;if(i===Yh)return r.UNSIGNED_SHORT_4_4_4_4;if(i===Kh)return r.UNSIGNED_SHORT_5_5_5_1;if(i===Zh)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===Qh)return r.UNSIGNED_INT_10F_11F_11F_REV;if(i===ao)return r.BYTE;if(i===lo)return r.SHORT;if(i===Qi)return r.UNSIGNED_SHORT;if(i===En)return r.INT;if(i===Gt)return r.UNSIGNED_INT;if(i===ln)return r.FLOAT;if(i===An)return r.HALF_FLOAT;if(i===Om)return r.ALPHA;if(i===Gc)return r.RGB;if(i===sn)return r.RGBA;if(i===Ei)return r.DEPTH_COMPONENT;if(i===wi)return r.DEPTH_STENCIL;if(i===Vc)return r.RED;if(i===rl)return r.RED_INTEGER;if(i===qr)return r.RG;if(i===sl)return r.RG_INTEGER;if(i===ol)return r.RGBA_INTEGER;if(i===vs||i===xs||i===bs||i===Ts)if(a===Ae)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(i===vs)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===xs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===bs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Ts)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(i===vs)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===xs)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===bs)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Ts)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Mc||i===Ec||i===wc||i===Ac)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(i===Mc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Ec)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===wc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Ac)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Ea||i===wa||i===Aa)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(i===Ea||i===wa)return a===Ae?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===Aa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Ra||i===Ca||i===Na||i===Pa||i===Da||i===La||i===Ia||i===Ua||i===Fa||i===Oa||i===Ba||i===ka||i===za||i===Ga)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(i===Ra)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Ca)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Na)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Pa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Da)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===La)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ia)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Ua)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Fa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Oa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Ba)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===ka)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===za)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ga)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Va||i===Np||i===Pp)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(i===Va)return a===Ae?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Np)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Pp)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Ha||i===Wa||i===$a||i===ja)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(i===Ha)return o.COMPRESSED_RED_RGTC1_EXT;if(i===Wa)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===$a)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===ja)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Mi?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:n}}const yN=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,vN=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class xN{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n){if(this.texture===null){const i=new Ix(e.texture);(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const n=e.cameras[0].viewport,i=new vr({vertexShader:yN,fragmentShader:vN,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new mn(new qc(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class bN extends is{constructor(e,n){super();const i=this;let s=null,o=1,a=null,l="local-floor",c=1,u=null,h=null,d=null,f=null,p=null,m=null;const y=typeof XRWebGLBinding<"u",_=new xN,g={},v=n.getContextAttributes();let x=null,T=null;const b=[],S=[],M=new ue;let A=null;const E=new wn;E.viewport=new Qe;const w=new wn;w.viewport=new Qe;const N=[E,w],D=new Gx;let F=null,k=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let Z=b[z];return Z===void 0&&(Z=new ph,b[z]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(z){let Z=b[z];return Z===void 0&&(Z=new ph,b[z]=Z),Z.getGripSpace()},this.getHand=function(z){let Z=b[z];return Z===void 0&&(Z=new ph,b[z]=Z),Z.getHandSpace()};function Y(z){const Z=S.indexOf(z.inputSource);if(Z===-1)return;const pe=b[Z];pe!==void 0&&(pe.update(z.inputSource,z.frame,u||a),pe.dispatchEvent({type:z.type,data:z.inputSource}))}function $(){s.removeEventListener("select",Y),s.removeEventListener("selectstart",Y),s.removeEventListener("selectend",Y),s.removeEventListener("squeeze",Y),s.removeEventListener("squeezestart",Y),s.removeEventListener("squeezeend",Y),s.removeEventListener("end",$),s.removeEventListener("inputsourceschange",V);for(let z=0;z<b.length;z++){const Z=S[z];Z!==null&&(S[z]=null,b[z].disconnect(Z))}F=null,k=null,_.reset();for(const z in g)delete g[z];e.setRenderTarget(x),p=null,f=null,d=null,s=null,T=null,q.stop(),i.isPresenting=!1,e.setPixelRatio(A),e.setSize(M.width,M.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(z){o=z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){l=z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(z){u=z},this.getBaseLayer=function(){return f!==null?f:p},this.getBinding=function(){return d===null&&y&&(d=new XRWebGLBinding(s,n)),d},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(z){if(s=z,s!==null){if(x=e.getRenderTarget(),s.addEventListener("select",Y),s.addEventListener("selectstart",Y),s.addEventListener("selectend",Y),s.addEventListener("squeeze",Y),s.addEventListener("squeezestart",Y),s.addEventListener("squeezeend",Y),s.addEventListener("end",$),s.addEventListener("inputsourceschange",V),v.xrCompatible!==!0&&await n.makeXRCompatible(),A=e.getPixelRatio(),e.getSize(M),y&&"createProjectionLayer"in XRWebGLBinding.prototype){let pe=null,Ne=null,Me=null;v.depth&&(Me=v.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,pe=v.stencil?wi:Ei,Ne=v.stencil?Mi:Gt);const We={colorFormat:n.RGBA8,depthFormat:Me,scaleFactor:o};d=this.getBinding(),f=d.createProjectionLayer(We),s.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),T=new As(f.textureWidth,f.textureHeight,{format:sn,type:nn,depthTexture:new Bi(f.textureWidth,f.textureHeight,Ne,void 0,void 0,void 0,void 0,void 0,void 0,pe),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const pe={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:o};p=new XRWebGLLayer(s,n,pe),s.updateRenderState({baseLayer:p}),e.setPixelRatio(1),e.setSize(p.framebufferWidth,p.framebufferHeight,!1),T=new As(p.framebufferWidth,p.framebufferHeight,{format:sn,type:nn,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil,resolveDepthBuffer:p.ignoreDepthValues===!1,resolveStencilBuffer:p.ignoreDepthValues===!1})}T.isXRRenderTarget=!0,this.setFoveation(c),u=null,a=await s.requestReferenceSpace(l),q.setContext(s),q.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function V(z){for(let Z=0;Z<z.removed.length;Z++){const pe=z.removed[Z],Ne=S.indexOf(pe);Ne>=0&&(S[Ne]=null,b[Ne].disconnect(pe))}for(let Z=0;Z<z.added.length;Z++){const pe=z.added[Z];let Ne=S.indexOf(pe);if(Ne===-1){for(let We=0;We<b.length;We++)if(We>=S.length){S.push(pe),Ne=We;break}else if(S[We]===null){S[We]=pe,Ne=We;break}if(Ne===-1)break}const Me=b[Ne];Me&&Me.connect(pe)}}const B=new L,J=new L;function X(z,Z,pe){B.setFromMatrixPosition(Z.matrixWorld),J.setFromMatrixPosition(pe.matrixWorld);const Ne=B.distanceTo(J),Me=Z.projectionMatrix.elements,We=pe.projectionMatrix.elements,Ft=Me[14]/(Me[10]-1),U=Me[14]/(Me[10]+1),bt=(Me[9]+1)/Me[5],rt=(Me[9]-1)/Me[5],Xe=(Me[8]-1)/Me[0],Le=(We[8]+1)/We[0],Rt=Ft*Xe,ze=Ft*Le,mt=Ne/(-Xe+Le),Sn=mt*-Xe;if(Z.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(Sn),z.translateZ(mt),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert(),Me[10]===-1)z.projectionMatrix.copy(Z.projectionMatrix),z.projectionMatrixInverse.copy(Z.projectionMatrixInverse);else{const an=Ft+mt,I=U+mt,C=Rt-Sn,K=ze+(Ne-Sn),ae=bt*U/I*an,de=rt*U/I*an;z.projectionMatrix.makePerspective(C,K,ae,de,an,I),z.projectionMatrixInverse.copy(z.projectionMatrix).invert()}}function re(z,Z){Z===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(Z.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.updateCamera=function(z){if(s===null)return;let Z=z.near,pe=z.far;_.texture!==null&&(_.depthNear>0&&(Z=_.depthNear),_.depthFar>0&&(pe=_.depthFar)),D.near=w.near=E.near=Z,D.far=w.far=E.far=pe,(F!==D.near||k!==D.far)&&(s.updateRenderState({depthNear:D.near,depthFar:D.far}),F=D.near,k=D.far),D.layers.mask=z.layers.mask|6,E.layers.mask=D.layers.mask&3,w.layers.mask=D.layers.mask&5;const Ne=z.parent,Me=D.cameras;re(D,Ne);for(let We=0;We<Me.length;We++)re(Me[We],Ne);Me.length===2?X(D,E,w):D.projectionMatrix.copy(E.projectionMatrix),fe(z,D,Ne)};function fe(z,Z,pe){pe===null?z.matrix.copy(Z.matrixWorld):(z.matrix.copy(pe.matrixWorld),z.matrix.invert(),z.matrix.multiply(Z.matrixWorld)),z.matrix.decompose(z.position,z.quaternion,z.scale),z.updateMatrixWorld(!0),z.projectionMatrix.copy(Z.projectionMatrix),z.projectionMatrixInverse.copy(Z.projectionMatrixInverse),z.isPerspectiveCamera&&(z.fov=mo*2*Math.atan(1/z.projectionMatrix.elements[5]),z.zoom=1)}this.getCamera=function(){return D},this.getFoveation=function(){if(!(f===null&&p===null))return c},this.setFoveation=function(z){c=z,f!==null&&(f.fixedFoveation=z),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=z)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(D)},this.getCameraTexture=function(z){return g[z]};let De=null;function it(z,Z){if(h=Z.getViewerPose(u||a),m=Z,h!==null){const pe=h.views;p!==null&&(e.setRenderTargetFramebuffer(T,p.framebuffer),e.setRenderTarget(T));let Ne=!1;pe.length!==D.cameras.length&&(D.cameras.length=0,Ne=!0);for(let U=0;U<pe.length;U++){const bt=pe[U];let rt=null;if(p!==null)rt=p.getViewport(bt);else{const Le=d.getViewSubImage(f,bt);rt=Le.viewport,U===0&&(e.setRenderTargetTextures(T,Le.colorTexture,Le.depthStencilTexture),e.setRenderTarget(T))}let Xe=N[U];Xe===void 0&&(Xe=new wn,Xe.layers.enable(U),Xe.viewport=new Qe,N[U]=Xe),Xe.matrix.fromArray(bt.transform.matrix),Xe.matrix.decompose(Xe.position,Xe.quaternion,Xe.scale),Xe.projectionMatrix.fromArray(bt.projectionMatrix),Xe.projectionMatrixInverse.copy(Xe.projectionMatrix).invert(),Xe.viewport.set(rt.x,rt.y,rt.width,rt.height),U===0&&(D.matrix.copy(Xe.matrix),D.matrix.decompose(D.position,D.quaternion,D.scale)),Ne===!0&&D.cameras.push(Xe)}const Me=s.enabledFeatures;if(Me&&Me.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&y){d=i.getBinding();const U=d.getDepthInformation(pe[0]);U&&U.isValid&&U.texture&&_.init(U,s.renderState)}if(Me&&Me.includes("camera-access")&&y){e.state.unbindTexture(),d=i.getBinding();for(let U=0;U<pe.length;U++){const bt=pe[U].camera;if(bt){let rt=g[bt];rt||(rt=new Ix,g[bt]=rt);const Xe=d.getCameraImage(bt);rt.sourceTexture=Xe}}}}for(let pe=0;pe<b.length;pe++){const Ne=S[pe],Me=b[pe];Ne!==null&&Me!==void 0&&Me.update(Ne,Z,u||a)}De&&De(z,Z),Z.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:Z}),m=null}const q=new Wx;q.setAnimationLoop(it),this.setAnimationLoop=function(z){De=z},this.dispose=function(){}}}const Hs=new li,TN=new _t;function SN(r,e){function n(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function i(_,g){g.color.getRGB(_.fogColor.value,Cx(r)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function s(_,g,v,x,T){g.isMeshBasicMaterial||g.isMeshLambertMaterial?o(_,g):g.isMeshToonMaterial?(o(_,g),d(_,g)):g.isMeshPhongMaterial?(o(_,g),h(_,g)):g.isMeshStandardMaterial?(o(_,g),f(_,g),g.isMeshPhysicalMaterial&&p(_,g,T)):g.isMeshMatcapMaterial?(o(_,g),m(_,g)):g.isMeshDepthMaterial?o(_,g):g.isMeshDistanceMaterial?(o(_,g),y(_,g)):g.isMeshNormalMaterial?o(_,g):g.isLineBasicMaterial?(a(_,g),g.isLineDashedMaterial&&l(_,g)):g.isPointsMaterial?c(_,g,v,x):g.isSpriteMaterial?u(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function o(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,n(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,n(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===Ut&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,n(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===Ut&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,n(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,n(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,n(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const v=e.get(g),x=v.envMap,T=v.envMapRotation;x&&(_.envMap.value=x,Hs.copy(T),Hs.x*=-1,Hs.y*=-1,Hs.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Hs.y*=-1,Hs.z*=-1),_.envMapRotation.value.setFromMatrix4(TN.makeRotationFromEuler(Hs)),_.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap&&(_.lightMap.value=g.lightMap,_.lightMapIntensity.value=g.lightMapIntensity,n(g.lightMap,_.lightMapTransform)),g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,n(g.aoMap,_.aoMapTransform))}function a(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,n(g.map,_.mapTransform))}function l(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function c(_,g,v,x){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*v,_.scale.value=x*.5,g.map&&(_.map.value=g.map,n(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function u(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,n(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function d(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function f(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,n(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,n(g.roughnessMap,_.roughnessMapTransform)),g.envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function p(_,g,v){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,n(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,n(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,n(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,n(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,n(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Ut&&_.clearcoatNormalScale.value.negate())),g.dispersion>0&&(_.dispersion.value=g.dispersion),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,n(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,n(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=v.texture,_.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,n(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,n(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,n(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,n(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,n(g.specularIntensityMap,_.specularIntensityMapTransform))}function m(_,g){g.matcap&&(_.matcap.value=g.matcap)}function y(_,g){const v=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(v.matrixWorld),_.nearDistance.value=v.shadow.camera.near,_.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function MN(r,e,n,i){let s={},o={},a=[];const l=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function c(v,x){const T=x.program;i.uniformBlockBinding(v,T)}function u(v,x){let T=s[v.id];T===void 0&&(m(v),T=h(v),s[v.id]=T,v.addEventListener("dispose",_));const b=x.program;i.updateUBOMapping(v,b);const S=e.render.frame;o[v.id]!==S&&(f(v),o[v.id]=S)}function h(v){const x=d();v.__bindingPointIndex=x;const T=r.createBuffer(),b=v.__size,S=v.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,b,S),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,x,T),T}function d(){for(let v=0;v<l;v++)if(a.indexOf(v)===-1)return a.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(v){const x=s[v.id],T=v.uniforms,b=v.__cache;r.bindBuffer(r.UNIFORM_BUFFER,x);for(let S=0,M=T.length;S<M;S++){const A=Array.isArray(T[S])?T[S]:[T[S]];for(let E=0,w=A.length;E<w;E++){const N=A[E];if(p(N,S,E,b)===!0){const D=N.__offset,F=Array.isArray(N.value)?N.value:[N.value];let k=0;for(let Y=0;Y<F.length;Y++){const $=F[Y],V=y($);typeof $=="number"||typeof $=="boolean"?(N.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,D+k,N.__data)):$.isMatrix3?(N.__data[0]=$.elements[0],N.__data[1]=$.elements[1],N.__data[2]=$.elements[2],N.__data[3]=0,N.__data[4]=$.elements[3],N.__data[5]=$.elements[4],N.__data[6]=$.elements[5],N.__data[7]=0,N.__data[8]=$.elements[6],N.__data[9]=$.elements[7],N.__data[10]=$.elements[8],N.__data[11]=0):($.toArray(N.__data,k),k+=V.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,D,N.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function p(v,x,T,b){const S=v.value,M=x+"_"+T;if(b[M]===void 0)return typeof S=="number"||typeof S=="boolean"?b[M]=S:b[M]=S.clone(),!0;{const A=b[M];if(typeof S=="number"||typeof S=="boolean"){if(A!==S)return b[M]=S,!0}else if(A.equals(S)===!1)return A.copy(S),!0}return!1}function m(v){const x=v.uniforms;let T=0;const b=16;for(let M=0,A=x.length;M<A;M++){const E=Array.isArray(x[M])?x[M]:[x[M]];for(let w=0,N=E.length;w<N;w++){const D=E[w],F=Array.isArray(D.value)?D.value:[D.value];for(let k=0,Y=F.length;k<Y;k++){const $=F[k],V=y($),B=T%b,J=B%V.boundary,X=B+J;T+=J,X!==0&&b-X<V.storage&&(T+=b-X),D.__data=new Float32Array(V.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=T,T+=V.storage}}}const S=T%b;return S>0&&(T+=b-S),v.__size=T,v.__cache={},this}function y(v){const x={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(x.boundary=4,x.storage=4):v.isVector2?(x.boundary=8,x.storage=8):v.isVector3||v.isColor?(x.boundary=16,x.storage=12):v.isVector4?(x.boundary=16,x.storage=16):v.isMatrix3?(x.boundary=48,x.storage=48):v.isMatrix4?(x.boundary=64,x.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),x}function _(v){const x=v.target;x.removeEventListener("dispose",_);const T=a.indexOf(x.__bindingPointIndex);a.splice(T,1),r.deleteBuffer(s[x.id]),delete s[x.id],delete o[x.id]}function g(){for(const v in s)r.deleteBuffer(s[v]);a=[],s={},o={}}return{bind:c,update:u,dispose:g}}class EN{constructor(e={}){const{canvas:n=wx(),context:i=null,depth:s=!0,stencil:o=!1,alpha:a=!1,antialias:l=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:u=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reversedDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let p;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=a;const m=new Uint32Array(4),y=new Int32Array(4);let _=null,g=null;const v=[],x=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ai,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let b=!1;this._outputColorSpace=Fn;let S=0,M=0,A=null,E=-1,w=null;const N=new Qe,D=new Qe;let F=null;const k=new Ge(0);let Y=0,$=n.width,V=n.height,B=1,J=null,X=null;const re=new Qe(0,0,$,V),fe=new Qe(0,0,$,V);let De=!1;const it=new $c;let q=!1,z=!1;const Z=new _t,pe=new L,Ne=new Qe,Me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let We=!1;function Ft(){return A===null?B:1}let U=i;function bt(P,W){return n.getContext(P,W)}try{const P={alpha:!0,depth:s,stencil:o,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:u,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${il}`),n.addEventListener("webglcontextlost",Se,!1),n.addEventListener("webglcontextrestored",Fe,!1),n.addEventListener("webglcontextcreationerror",me,!1),U===null){const W="webgl2";if(U=bt(W,P),U===null)throw bt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let rt,Xe,Le,Rt,ze,mt,Sn,an,I,C,K,ae,de,se,qe,Te,He,$e,ye,Ce,st,je,we,dt;function G(){rt=new UC(U),rt.init(),je=new _N(U,rt),Xe=new RC(U,rt,e,je),Le=new mN(U,rt),Xe.reversedDepthBuffer&&f&&Le.buffers.depth.setReversed(!0),Rt=new BC(U),ze=new nN,mt=new gN(U,rt,Le,ze,Xe,je,Rt),Sn=new NC(T),an=new IC(T),I=new Ww(U),we=new wC(U,I),C=new FC(U,I,Rt,we),K=new zC(U,C,I,Rt),ye=new kC(U,Xe,mt),Te=new CC(ze),ae=new tN(T,Sn,an,rt,Xe,we,Te),de=new SN(T,ze),se=new rN,qe=new uN(rt),$e=new EC(T,Sn,an,Le,K,p,c),He=new fN(T,K,Xe),dt=new MN(U,Rt,Xe,Le),Ce=new AC(U,rt,Rt),st=new OC(U,rt,Rt),Rt.programs=ae.programs,T.capabilities=Xe,T.extensions=rt,T.properties=ze,T.renderLists=se,T.shadowMap=He,T.state=Le,T.info=Rt}G();const ve=new bN(T,U);this.xr=ve,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const P=rt.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=rt.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(P){P!==void 0&&(B=P,this.setSize($,V,!1))},this.getSize=function(P){return P.set($,V)},this.setSize=function(P,W,Q=!0){if(ve.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=P,V=W,n.width=Math.floor(P*B),n.height=Math.floor(W*B),Q===!0&&(n.style.width=P+"px",n.style.height=W+"px"),this.setViewport(0,0,P,W)},this.getDrawingBufferSize=function(P){return P.set($*B,V*B).floor()},this.setDrawingBufferSize=function(P,W,Q){$=P,V=W,B=Q,n.width=Math.floor(P*Q),n.height=Math.floor(W*Q),this.setViewport(0,0,P,W)},this.getCurrentViewport=function(P){return P.copy(N)},this.getViewport=function(P){return P.copy(re)},this.setViewport=function(P,W,Q,ee){P.isVector4?re.set(P.x,P.y,P.z,P.w):re.set(P,W,Q,ee),Le.viewport(N.copy(re).multiplyScalar(B).round())},this.getScissor=function(P){return P.copy(fe)},this.setScissor=function(P,W,Q,ee){P.isVector4?fe.set(P.x,P.y,P.z,P.w):fe.set(P,W,Q,ee),Le.scissor(D.copy(fe).multiplyScalar(B).round())},this.getScissorTest=function(){return De},this.setScissorTest=function(P){Le.setScissorTest(De=P)},this.setOpaqueSort=function(P){J=P},this.setTransparentSort=function(P){X=P},this.getClearColor=function(P){return P.copy($e.getClearColor())},this.setClearColor=function(){$e.setClearColor(...arguments)},this.getClearAlpha=function(){return $e.getClearAlpha()},this.setClearAlpha=function(){$e.setClearAlpha(...arguments)},this.clear=function(P=!0,W=!0,Q=!0){let ee=0;if(P){let j=!1;if(A!==null){const ge=A.texture.format;j=ge===ol||ge===sl||ge===rl}if(j){const ge=A.texture.type,Re=ge===nn||ge===Gt||ge===Qi||ge===Mi||ge===Yh||ge===Kh,Oe=$e.getClearColor(),Ue=$e.getClearAlpha(),nt=Oe.r,ot=Oe.g,Ke=Oe.b;Re?(m[0]=nt,m[1]=ot,m[2]=Ke,m[3]=Ue,U.clearBufferuiv(U.COLOR,0,m)):(y[0]=nt,y[1]=ot,y[2]=Ke,y[3]=Ue,U.clearBufferiv(U.COLOR,0,y))}else ee|=U.COLOR_BUFFER_BIT}W&&(ee|=U.DEPTH_BUFFER_BIT),Q&&(ee|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Se,!1),n.removeEventListener("webglcontextrestored",Fe,!1),n.removeEventListener("webglcontextcreationerror",me,!1),$e.dispose(),se.dispose(),qe.dispose(),ze.dispose(),Sn.dispose(),an.dispose(),K.dispose(),we.dispose(),dt.dispose(),ae.dispose(),ve.dispose(),ve.removeEventListener("sessionstart",nr),ve.removeEventListener("sessionend",s_),Fs.stop()};function Se(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Fe(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const P=Rt.autoReset,W=He.enabled,Q=He.autoUpdate,ee=He.needsUpdate,j=He.type;G(),Rt.autoReset=P,He.enabled=W,He.autoUpdate=Q,He.needsUpdate=ee,He.type=j}function me(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function ce(P){const W=P.target;W.removeEventListener("dispose",ce),Be(W)}function Be(P){ct(P),ze.remove(P)}function ct(P){const W=ze.get(P).programs;W!==void 0&&(W.forEach(function(Q){ae.releaseProgram(Q)}),P.isShaderMaterial&&ae.releaseShaderCache(P))}this.renderBufferDirect=function(P,W,Q,ee,j,ge){W===null&&(W=Me);const Re=j.isMesh&&j.matrixWorld.determinant()<0,Oe=uM(P,W,Q,ee,j);Le.setMaterial(ee,Re);let Ue=Q.index,nt=1;if(ee.wireframe===!0){if(Ue=C.getWireframeAttribute(Q),Ue===void 0)return;nt=2}const ot=Q.drawRange,Ke=Q.attributes.position;let vt=ot.start*nt,Dt=(ot.start+ot.count)*nt;ge!==null&&(vt=Math.max(vt,ge.start*nt),Dt=Math.min(Dt,(ge.start+ge.count)*nt)),Ue!==null?(vt=Math.max(vt,0),Dt=Math.min(Dt,Ue.count)):Ke!=null&&(vt=Math.max(vt,0),Dt=Math.min(Dt,Ke.count));const rn=Dt-vt;if(rn<0||rn===1/0)return;we.setup(j,ee,Oe,Q,Ue);let $t,Ot=Ce;if(Ue!==null&&($t=I.get(Ue),Ot=st,Ot.setIndex($t)),j.isMesh)ee.wireframe===!0?(Le.setLineWidth(ee.wireframeLinewidth*Ft()),Ot.setMode(U.LINES)):Ot.setMode(U.TRIANGLES);else if(j.isLine){let Je=ee.linewidth;Je===void 0&&(Je=1),Le.setLineWidth(Je*Ft()),j.isLineSegments?Ot.setMode(U.LINES):j.isLineLoop?Ot.setMode(U.LINE_LOOP):Ot.setMode(U.LINE_STRIP)}else j.isPoints?Ot.setMode(U.POINTS):j.isSprite&&Ot.setMode(U.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)Ai("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ot.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(rt.get("WEBGL_multi_draw"))Ot.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const Je=j._multiDrawStarts,Jt=j._multiDrawCounts,Mt=j._multiDrawCount,di=Ue?I.get(Ue).bytesPerElement:1,So=ze.get(ee).currentProgram.getUniforms();for(let fi=0;fi<Mt;fi++)So.setValue(U,"_gl_DrawID",fi),Ot.render(Je[fi]/di,Jt[fi])}else if(j.isInstancedMesh)Ot.renderInstances(vt,rn,j.count);else if(Q.isInstancedBufferGeometry){const Je=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,Jt=Math.min(Q.instanceCount,Je);Ot.renderInstances(vt,rn,Jt)}else Ot.render(vt,rn)};function Vt(P,W,Q){P.transparent===!0&&P.side===Bn&&P.forceSinglePass===!1?(P.side=Ut,P.needsUpdate=!0,ru(P,W,Q),P.side=Ti,P.needsUpdate=!0,ru(P,W,Q),P.side=Bn):ru(P,W,Q)}this.compile=function(P,W,Q=null){Q===null&&(Q=P),g=qe.get(Q),g.init(W),x.push(g),Q.traverseVisible(function(j){j.isLight&&j.layers.test(W.layers)&&(g.pushLight(j),j.castShadow&&g.pushShadow(j))}),P!==Q&&P.traverseVisible(function(j){j.isLight&&j.layers.test(W.layers)&&(g.pushLight(j),j.castShadow&&g.pushShadow(j))}),g.setupLights();const ee=new Set;return P.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const ge=j.material;if(ge)if(Array.isArray(ge))for(let Re=0;Re<ge.length;Re++){const Oe=ge[Re];Vt(Oe,Q,j),ee.add(Oe)}else Vt(ge,Q,j),ee.add(ge)}),g=x.pop(),ee},this.compileAsync=function(P,W,Q=null){const ee=this.compile(P,W,Q);return new Promise(j=>{function ge(){if(ee.forEach(function(Re){ze.get(Re).currentProgram.isReady()&&ee.delete(Re)}),ee.size===0){j(P);return}setTimeout(ge,10)}rt.get("KHR_parallel_shader_compile")!==null?ge():setTimeout(ge,10)})};let Ct=null;function Er(P){Ct&&Ct(P)}function nr(){Fs.stop()}function s_(){Fs.start()}const Fs=new Wx;Fs.setAnimationLoop(Er),typeof self<"u"&&Fs.setContext(self),this.setAnimationLoop=function(P){Ct=P,ve.setAnimationLoop(P),P===null?Fs.stop():Fs.start()},ve.addEventListener("sessionstart",nr),ve.addEventListener("sessionend",s_),this.render=function(P,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;if(P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),ve.enabled===!0&&ve.isPresenting===!0&&(ve.cameraAutoUpdate===!0&&ve.updateCamera(W),W=ve.getCamera()),P.isScene===!0&&P.onBeforeRender(T,P,W,A),g=qe.get(P,x.length),g.init(W),x.push(g),Z.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),it.setFromProjectionMatrix(Z,Zn,W.reversedDepth),z=this.localClippingEnabled,q=Te.init(this.clippingPlanes,z),_=se.get(P,v.length),_.init(),v.push(_),ve.enabled===!0&&ve.isPresenting===!0){const ge=T.xr.getDepthSensingMesh();ge!==null&&Rd(ge,W,-1/0,T.sortObjects)}Rd(P,W,0,T.sortObjects),_.finish(),T.sortObjects===!0&&_.sort(J,X),We=ve.enabled===!1||ve.isPresenting===!1||ve.hasDepthSensing()===!1,We&&$e.addToRenderList(_,P),this.info.render.frame++,q===!0&&Te.beginShadows();const Q=g.state.shadowsArray;He.render(Q,P,W),q===!0&&Te.endShadows(),this.info.autoReset===!0&&this.info.reset();const ee=_.opaque,j=_.transmissive;if(g.setupLights(),W.isArrayCamera){const ge=W.cameras;if(j.length>0)for(let Re=0,Oe=ge.length;Re<Oe;Re++){const Ue=ge[Re];a_(ee,j,P,Ue)}We&&$e.render(P);for(let Re=0,Oe=ge.length;Re<Oe;Re++){const Ue=ge[Re];o_(_,P,Ue,Ue.viewport)}}else j.length>0&&a_(ee,j,P,W),We&&$e.render(P),o_(_,P,W);A!==null&&M===0&&(mt.updateMultisampleRenderTarget(A),mt.updateRenderTargetMipmap(A)),P.isScene===!0&&P.onAfterRender(T,P,W),we.resetDefaultState(),E=-1,w=null,x.pop(),x.length>0?(g=x[x.length-1],q===!0&&Te.setGlobalState(T.clippingPlanes,g.state.camera)):g=null,v.pop(),v.length>0?_=v[v.length-1]:_=null};function Rd(P,W,Q,ee){if(P.visible===!1)return;if(P.layers.test(W.layers)){if(P.isGroup)Q=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(W);else if(P.isLight)g.pushLight(P),P.castShadow&&g.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||it.intersectsSprite(P)){ee&&Ne.setFromMatrixPosition(P.matrixWorld).applyMatrix4(Z);const Re=K.update(P),Oe=P.material;Oe.visible&&_.push(P,Re,Oe,Q,Ne.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||it.intersectsObject(P))){const Re=K.update(P),Oe=P.material;if(ee&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),Ne.copy(P.boundingSphere.center)):(Re.boundingSphere===null&&Re.computeBoundingSphere(),Ne.copy(Re.boundingSphere.center)),Ne.applyMatrix4(P.matrixWorld).applyMatrix4(Z)),Array.isArray(Oe)){const Ue=Re.groups;for(let nt=0,ot=Ue.length;nt<ot;nt++){const Ke=Ue[nt],vt=Oe[Ke.materialIndex];vt&&vt.visible&&_.push(P,Re,vt,Q,Ne.z,Ke)}}else Oe.visible&&_.push(P,Re,Oe,Q,Ne.z,null)}}const ge=P.children;for(let Re=0,Oe=ge.length;Re<Oe;Re++)Rd(ge[Re],W,Q,ee)}function o_(P,W,Q,ee){const j=P.opaque,ge=P.transmissive,Re=P.transparent;g.setupLightsView(Q),q===!0&&Te.setGlobalState(T.clippingPlanes,Q),ee&&Le.viewport(N.copy(ee)),j.length>0&&iu(j,W,Q),ge.length>0&&iu(ge,W,Q),Re.length>0&&iu(Re,W,Q),Le.buffers.depth.setTest(!0),Le.buffers.depth.setMask(!0),Le.buffers.color.setMask(!0),Le.setPolygonOffset(!1)}function a_(P,W,Q,ee){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ee.id]===void 0&&(g.state.transmissionRenderTarget[ee.id]=new As(1,1,{generateMipmaps:!0,type:rt.has("EXT_color_buffer_half_float")||rt.has("EXT_color_buffer_float")?An:nn,minFilter:ii,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ze.workingColorSpace}));const ge=g.state.transmissionRenderTarget[ee.id],Re=ee.viewport||N;ge.setSize(Re.z*T.transmissionResolutionScale,Re.w*T.transmissionResolutionScale);const Oe=T.getRenderTarget(),Ue=T.getActiveCubeFace(),nt=T.getActiveMipmapLevel();T.setRenderTarget(ge),T.getClearColor(k),Y=T.getClearAlpha(),Y<1&&T.setClearColor(16777215,.5),T.clear(),We&&$e.render(Q);const ot=T.toneMapping;T.toneMapping=ai;const Ke=ee.viewport;if(ee.viewport!==void 0&&(ee.viewport=void 0),g.setupLightsView(ee),q===!0&&Te.setGlobalState(T.clippingPlanes,ee),iu(P,Q,ee),mt.updateMultisampleRenderTarget(ge),mt.updateRenderTargetMipmap(ge),rt.has("WEBGL_multisampled_render_to_texture")===!1){let vt=!1;for(let Dt=0,rn=W.length;Dt<rn;Dt++){const $t=W[Dt],Ot=$t.object,Je=$t.geometry,Jt=$t.material,Mt=$t.group;if(Jt.side===Bn&&Ot.layers.test(ee.layers)){const di=Jt.side;Jt.side=Ut,Jt.needsUpdate=!0,l_(Ot,Q,ee,Je,Jt,Mt),Jt.side=di,Jt.needsUpdate=!0,vt=!0}}vt===!0&&(mt.updateMultisampleRenderTarget(ge),mt.updateRenderTargetMipmap(ge))}T.setRenderTarget(Oe,Ue,nt),T.setClearColor(k,Y),Ke!==void 0&&(ee.viewport=Ke),T.toneMapping=ot}function iu(P,W,Q){const ee=W.isScene===!0?W.overrideMaterial:null;for(let j=0,ge=P.length;j<ge;j++){const Re=P[j],Oe=Re.object,Ue=Re.geometry,nt=Re.group;let ot=Re.material;ot.allowOverride===!0&&ee!==null&&(ot=ee),Oe.layers.test(Q.layers)&&l_(Oe,W,Q,Ue,ot,nt)}}function l_(P,W,Q,ee,j,ge){P.onBeforeRender(T,W,Q,ee,j,ge),P.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),j.onBeforeRender(T,W,Q,ee,P,ge),j.transparent===!0&&j.side===Bn&&j.forceSinglePass===!1?(j.side=Ut,j.needsUpdate=!0,T.renderBufferDirect(Q,W,ee,j,P,ge),j.side=Ti,j.needsUpdate=!0,T.renderBufferDirect(Q,W,ee,j,P,ge),j.side=Bn):T.renderBufferDirect(Q,W,ee,j,P,ge),P.onAfterRender(T,W,Q,ee,j,ge)}function ru(P,W,Q){W.isScene!==!0&&(W=Me);const ee=ze.get(P),j=g.state.lights,ge=g.state.shadowsArray,Re=j.state.version,Oe=ae.getParameters(P,j.state,ge,W,Q),Ue=ae.getProgramCacheKey(Oe);let nt=ee.programs;ee.environment=P.isMeshStandardMaterial?W.environment:null,ee.fog=W.fog,ee.envMap=(P.isMeshStandardMaterial?an:Sn).get(P.envMap||ee.environment),ee.envMapRotation=ee.environment!==null&&P.envMap===null?W.environmentRotation:P.envMapRotation,nt===void 0&&(P.addEventListener("dispose",ce),nt=new Map,ee.programs=nt);let ot=nt.get(Ue);if(ot!==void 0){if(ee.currentProgram===ot&&ee.lightsStateVersion===Re)return u_(P,Oe),ot}else Oe.uniforms=ae.getUniforms(P),P.onBeforeCompile(Oe,T),ot=ae.acquireProgram(Oe,Ue),nt.set(Ue,ot),ee.uniforms=Oe.uniforms;const Ke=ee.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(Ke.clippingPlanes=Te.uniform),u_(P,Oe),ee.needsLights=dM(P),ee.lightsStateVersion=Re,ee.needsLights&&(Ke.ambientLightColor.value=j.state.ambient,Ke.lightProbe.value=j.state.probe,Ke.directionalLights.value=j.state.directional,Ke.directionalLightShadows.value=j.state.directionalShadow,Ke.spotLights.value=j.state.spot,Ke.spotLightShadows.value=j.state.spotShadow,Ke.rectAreaLights.value=j.state.rectArea,Ke.ltc_1.value=j.state.rectAreaLTC1,Ke.ltc_2.value=j.state.rectAreaLTC2,Ke.pointLights.value=j.state.point,Ke.pointLightShadows.value=j.state.pointShadow,Ke.hemisphereLights.value=j.state.hemi,Ke.directionalShadowMap.value=j.state.directionalShadowMap,Ke.directionalShadowMatrix.value=j.state.directionalShadowMatrix,Ke.spotShadowMap.value=j.state.spotShadowMap,Ke.spotLightMatrix.value=j.state.spotLightMatrix,Ke.spotLightMap.value=j.state.spotLightMap,Ke.pointShadowMap.value=j.state.pointShadowMap,Ke.pointShadowMatrix.value=j.state.pointShadowMatrix),ee.currentProgram=ot,ee.uniformsList=null,ot}function c_(P){if(P.uniformsList===null){const W=P.currentProgram.getUniforms();P.uniformsList=mh.seqWithValue(W.seq,P.uniforms)}return P.uniformsList}function u_(P,W){const Q=ze.get(P);Q.outputColorSpace=W.outputColorSpace,Q.batching=W.batching,Q.batchingColor=W.batchingColor,Q.instancing=W.instancing,Q.instancingColor=W.instancingColor,Q.instancingMorph=W.instancingMorph,Q.skinning=W.skinning,Q.morphTargets=W.morphTargets,Q.morphNormals=W.morphNormals,Q.morphColors=W.morphColors,Q.morphTargetsCount=W.morphTargetsCount,Q.numClippingPlanes=W.numClippingPlanes,Q.numIntersection=W.numClipIntersection,Q.vertexAlphas=W.vertexAlphas,Q.vertexTangents=W.vertexTangents,Q.toneMapping=W.toneMapping}function uM(P,W,Q,ee,j){W.isScene!==!0&&(W=Me),mt.resetTextureUnits();const ge=W.fog,Re=ee.isMeshStandardMaterial?W.environment:null,Oe=A===null?T.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:po,Ue=(ee.isMeshStandardMaterial?an:Sn).get(ee.envMap||Re),nt=ee.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,ot=!!Q.attributes.tangent&&(!!ee.normalMap||ee.anisotropy>0),Ke=!!Q.morphAttributes.position,vt=!!Q.morphAttributes.normal,Dt=!!Q.morphAttributes.color;let rn=ai;ee.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(rn=T.toneMapping);const $t=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,Ot=$t!==void 0?$t.length:0,Je=ze.get(ee),Jt=g.state.lights;if(q===!0&&(z===!0||P!==w)){const Wn=P===w&&ee.id===E;Te.setState(ee,P,Wn)}let Mt=!1;ee.version===Je.__version?(Je.needsLights&&Je.lightsStateVersion!==Jt.state.version||Je.outputColorSpace!==Oe||j.isBatchedMesh&&Je.batching===!1||!j.isBatchedMesh&&Je.batching===!0||j.isBatchedMesh&&Je.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&Je.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&Je.instancing===!1||!j.isInstancedMesh&&Je.instancing===!0||j.isSkinnedMesh&&Je.skinning===!1||!j.isSkinnedMesh&&Je.skinning===!0||j.isInstancedMesh&&Je.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&Je.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&Je.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&Je.instancingMorph===!1&&j.morphTexture!==null||Je.envMap!==Ue||ee.fog===!0&&Je.fog!==ge||Je.numClippingPlanes!==void 0&&(Je.numClippingPlanes!==Te.numPlanes||Je.numIntersection!==Te.numIntersection)||Je.vertexAlphas!==nt||Je.vertexTangents!==ot||Je.morphTargets!==Ke||Je.morphNormals!==vt||Je.morphColors!==Dt||Je.toneMapping!==rn||Je.morphTargetsCount!==Ot)&&(Mt=!0):(Mt=!0,Je.__version=ee.version);let di=Je.currentProgram;Mt===!0&&(di=ru(ee,W,j));let So=!1,fi=!1,ml=!1;const en=di.getUniforms(),Ci=Je.uniforms;if(Le.useProgram(di.program)&&(So=!0,fi=!0,ml=!0),ee.id!==E&&(E=ee.id,fi=!0),So||w!==P){Le.buffers.depth.getReversed()&&P.reversedDepth!==!0&&(P._reversedDepth=!0,P.updateProjectionMatrix()),en.setValue(U,"projectionMatrix",P.projectionMatrix),en.setValue(U,"viewMatrix",P.matrixWorldInverse);const ei=en.map.cameraPosition;ei!==void 0&&ei.setValue(U,pe.setFromMatrixPosition(P.matrixWorld)),Xe.logarithmicDepthBuffer&&en.setValue(U,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&en.setValue(U,"isOrthographic",P.isOrthographicCamera===!0),w!==P&&(w=P,fi=!0,ml=!0)}if(j.isSkinnedMesh){en.setOptional(U,j,"bindMatrix"),en.setOptional(U,j,"bindMatrixInverse");const Wn=j.skeleton;Wn&&(Wn.boneTexture===null&&Wn.computeBoneTexture(),en.setValue(U,"boneTexture",Wn.boneTexture,mt))}j.isBatchedMesh&&(en.setOptional(U,j,"batchingTexture"),en.setValue(U,"batchingTexture",j._matricesTexture,mt),en.setOptional(U,j,"batchingIdTexture"),en.setValue(U,"batchingIdTexture",j._indirectTexture,mt),en.setOptional(U,j,"batchingColorTexture"),j._colorsTexture!==null&&en.setValue(U,"batchingColorTexture",j._colorsTexture,mt));const Ni=Q.morphAttributes;if((Ni.position!==void 0||Ni.normal!==void 0||Ni.color!==void 0)&&ye.update(j,Q,di),(fi||Je.receiveShadow!==j.receiveShadow)&&(Je.receiveShadow=j.receiveShadow,en.setValue(U,"receiveShadow",j.receiveShadow)),ee.isMeshGouraudMaterial&&ee.envMap!==null&&(Ci.envMap.value=Ue,Ci.flipEnvMap.value=Ue.isCubeTexture&&Ue.isRenderTargetTexture===!1?-1:1),ee.isMeshStandardMaterial&&ee.envMap===null&&W.environment!==null&&(Ci.envMapIntensity.value=W.environmentIntensity),fi&&(en.setValue(U,"toneMappingExposure",T.toneMappingExposure),Je.needsLights&&hM(Ci,ml),ge&&ee.fog===!0&&de.refreshFogUniforms(Ci,ge),de.refreshMaterialUniforms(Ci,ee,B,V,g.state.transmissionRenderTarget[P.id]),mh.upload(U,c_(Je),Ci,mt)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(mh.upload(U,c_(Je),Ci,mt),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&en.setValue(U,"center",j.center),en.setValue(U,"modelViewMatrix",j.modelViewMatrix),en.setValue(U,"normalMatrix",j.normalMatrix),en.setValue(U,"modelMatrix",j.matrixWorld),ee.isShaderMaterial||ee.isRawShaderMaterial){const Wn=ee.uniformsGroups;for(let ei=0,Cd=Wn.length;ei<Cd;ei++){const Os=Wn[ei];dt.update(Os,di),dt.bind(Os,di)}}return di}function hM(P,W){P.ambientLightColor.needsUpdate=W,P.lightProbe.needsUpdate=W,P.directionalLights.needsUpdate=W,P.directionalLightShadows.needsUpdate=W,P.pointLights.needsUpdate=W,P.pointLightShadows.needsUpdate=W,P.spotLights.needsUpdate=W,P.spotLightShadows.needsUpdate=W,P.rectAreaLights.needsUpdate=W,P.hemisphereLights.needsUpdate=W}function dM(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(P,W,Q){const ee=ze.get(P);ee.__autoAllocateDepthBuffer=P.resolveDepthBuffer===!1,ee.__autoAllocateDepthBuffer===!1&&(ee.__useRenderToTexture=!1),ze.get(P.texture).__webglTexture=W,ze.get(P.depthTexture).__webglTexture=ee.__autoAllocateDepthBuffer?void 0:Q,ee.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(P,W){const Q=ze.get(P);Q.__webglFramebuffer=W,Q.__useDefaultFramebuffer=W===void 0};const fM=U.createFramebuffer();this.setRenderTarget=function(P,W=0,Q=0){A=P,S=W,M=Q;let ee=!0,j=null,ge=!1,Re=!1;if(P){const Ue=ze.get(P);if(Ue.__useDefaultFramebuffer!==void 0)Le.bindFramebuffer(U.FRAMEBUFFER,null),ee=!1;else if(Ue.__webglFramebuffer===void 0)mt.setupRenderTarget(P);else if(Ue.__hasExternalTextures)mt.rebindTextures(P,ze.get(P.texture).__webglTexture,ze.get(P.depthTexture).__webglTexture);else if(P.depthBuffer){const Ke=P.depthTexture;if(Ue.__boundDepthTexture!==Ke){if(Ke!==null&&ze.has(Ke)&&(P.width!==Ke.image.width||P.height!==Ke.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");mt.setupDepthRenderbuffer(P)}}const nt=P.texture;(nt.isData3DTexture||nt.isDataArrayTexture||nt.isCompressedArrayTexture)&&(Re=!0);const ot=ze.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(ot[W])?j=ot[W][Q]:j=ot[W],ge=!0):P.samples>0&&mt.useMultisampledRTT(P)===!1?j=ze.get(P).__webglMultisampledFramebuffer:Array.isArray(ot)?j=ot[Q]:j=ot,N.copy(P.viewport),D.copy(P.scissor),F=P.scissorTest}else N.copy(re).multiplyScalar(B).floor(),D.copy(fe).multiplyScalar(B).floor(),F=De;if(Q!==0&&(j=fM),Le.bindFramebuffer(U.FRAMEBUFFER,j)&&ee&&Le.drawBuffers(P,j),Le.viewport(N),Le.scissor(D),Le.setScissorTest(F),ge){const Ue=ze.get(P.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+W,Ue.__webglTexture,Q)}else if(Re){const Ue=W;for(let nt=0;nt<P.textures.length;nt++){const ot=ze.get(P.textures[nt]);U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0+nt,ot.__webglTexture,Q,Ue)}}else if(P!==null&&Q!==0){const Ue=ze.get(P.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Ue.__webglTexture,Q)}E=-1},this.readRenderTargetPixels=function(P,W,Q,ee,j,ge,Re,Oe=0){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ue=ze.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Re!==void 0&&(Ue=Ue[Re]),Ue){Le.bindFramebuffer(U.FRAMEBUFFER,Ue);try{const nt=P.textures[Oe],ot=nt.format,Ke=nt.type;if(!Xe.textureFormatReadable(ot)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Xe.textureTypeReadable(Ke)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=P.width-ee&&Q>=0&&Q<=P.height-j&&(P.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+Oe),U.readPixels(W,Q,ee,j,je.convert(ot),je.convert(Ke),ge))}finally{const nt=A!==null?ze.get(A).__webglFramebuffer:null;Le.bindFramebuffer(U.FRAMEBUFFER,nt)}}},this.readRenderTargetPixelsAsync=async function(P,W,Q,ee,j,ge,Re,Oe=0){if(!(P&&P.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ue=ze.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Re!==void 0&&(Ue=Ue[Re]),Ue)if(W>=0&&W<=P.width-ee&&Q>=0&&Q<=P.height-j){Le.bindFramebuffer(U.FRAMEBUFFER,Ue);const nt=P.textures[Oe],ot=nt.format,Ke=nt.type;if(!Xe.textureFormatReadable(ot))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Xe.textureTypeReadable(Ke))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const vt=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,vt),U.bufferData(U.PIXEL_PACK_BUFFER,ge.byteLength,U.STREAM_READ),P.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+Oe),U.readPixels(W,Q,ee,j,je.convert(ot),je.convert(Ke),0);const Dt=A!==null?ze.get(A).__webglFramebuffer:null;Le.bindFramebuffer(U.FRAMEBUFFER,Dt);const rn=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);return U.flush(),await RE(U,rn,4),U.bindBuffer(U.PIXEL_PACK_BUFFER,vt),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,ge),U.deleteBuffer(vt),U.deleteSync(rn),ge}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(P,W=null,Q=0){const ee=Math.pow(2,-Q),j=Math.floor(P.image.width*ee),ge=Math.floor(P.image.height*ee),Re=W!==null?W.x:0,Oe=W!==null?W.y:0;mt.setTexture2D(P,0),U.copyTexSubImage2D(U.TEXTURE_2D,Q,0,0,Re,Oe,j,ge),Le.unbindTexture()};const pM=U.createFramebuffer(),mM=U.createFramebuffer();this.copyTextureToTexture=function(P,W,Q=null,ee=null,j=0,ge=null){ge===null&&(j!==0?(Ai("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ge=j,j=0):ge=0);let Re,Oe,Ue,nt,ot,Ke,vt,Dt,rn;const $t=P.isCompressedTexture?P.mipmaps[ge]:P.image;if(Q!==null)Re=Q.max.x-Q.min.x,Oe=Q.max.y-Q.min.y,Ue=Q.isBox3?Q.max.z-Q.min.z:1,nt=Q.min.x,ot=Q.min.y,Ke=Q.isBox3?Q.min.z:0;else{const Ni=Math.pow(2,-j);Re=Math.floor($t.width*Ni),Oe=Math.floor($t.height*Ni),P.isDataArrayTexture?Ue=$t.depth:P.isData3DTexture?Ue=Math.floor($t.depth*Ni):Ue=1,nt=0,ot=0,Ke=0}ee!==null?(vt=ee.x,Dt=ee.y,rn=ee.z):(vt=0,Dt=0,rn=0);const Ot=je.convert(W.format),Je=je.convert(W.type);let Jt;W.isData3DTexture?(mt.setTexture3D(W,0),Jt=U.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(mt.setTexture2DArray(W,0),Jt=U.TEXTURE_2D_ARRAY):(mt.setTexture2D(W,0),Jt=U.TEXTURE_2D),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,W.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,W.unpackAlignment);const Mt=U.getParameter(U.UNPACK_ROW_LENGTH),di=U.getParameter(U.UNPACK_IMAGE_HEIGHT),So=U.getParameter(U.UNPACK_SKIP_PIXELS),fi=U.getParameter(U.UNPACK_SKIP_ROWS),ml=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,$t.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,$t.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,nt),U.pixelStorei(U.UNPACK_SKIP_ROWS,ot),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Ke);const en=P.isDataArrayTexture||P.isData3DTexture,Ci=W.isDataArrayTexture||W.isData3DTexture;if(P.isDepthTexture){const Ni=ze.get(P),Wn=ze.get(W),ei=ze.get(Ni.__renderTarget),Cd=ze.get(Wn.__renderTarget);Le.bindFramebuffer(U.READ_FRAMEBUFFER,ei.__webglFramebuffer),Le.bindFramebuffer(U.DRAW_FRAMEBUFFER,Cd.__webglFramebuffer);for(let Os=0;Os<Ue;Os++)en&&(U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,ze.get(P).__webglTexture,j,Ke+Os),U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,ze.get(W).__webglTexture,ge,rn+Os)),U.blitFramebuffer(nt,ot,Re,Oe,vt,Dt,Re,Oe,U.DEPTH_BUFFER_BIT,U.NEAREST);Le.bindFramebuffer(U.READ_FRAMEBUFFER,null),Le.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else if(j!==0||P.isRenderTargetTexture||ze.has(P)){const Ni=ze.get(P),Wn=ze.get(W);Le.bindFramebuffer(U.READ_FRAMEBUFFER,pM),Le.bindFramebuffer(U.DRAW_FRAMEBUFFER,mM);for(let ei=0;ei<Ue;ei++)en?U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Ni.__webglTexture,j,Ke+ei):U.framebufferTexture2D(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Ni.__webglTexture,j),Ci?U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Wn.__webglTexture,ge,rn+ei):U.framebufferTexture2D(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Wn.__webglTexture,ge),j!==0?U.blitFramebuffer(nt,ot,Re,Oe,vt,Dt,Re,Oe,U.COLOR_BUFFER_BIT,U.NEAREST):Ci?U.copyTexSubImage3D(Jt,ge,vt,Dt,rn+ei,nt,ot,Re,Oe):U.copyTexSubImage2D(Jt,ge,vt,Dt,nt,ot,Re,Oe);Le.bindFramebuffer(U.READ_FRAMEBUFFER,null),Le.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else Ci?P.isDataTexture||P.isData3DTexture?U.texSubImage3D(Jt,ge,vt,Dt,rn,Re,Oe,Ue,Ot,Je,$t.data):W.isCompressedArrayTexture?U.compressedTexSubImage3D(Jt,ge,vt,Dt,rn,Re,Oe,Ue,Ot,$t.data):U.texSubImage3D(Jt,ge,vt,Dt,rn,Re,Oe,Ue,Ot,Je,$t):P.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,ge,vt,Dt,Re,Oe,Ot,Je,$t.data):P.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,ge,vt,Dt,$t.width,$t.height,Ot,$t.data):U.texSubImage2D(U.TEXTURE_2D,ge,vt,Dt,Re,Oe,Ot,Je,$t);U.pixelStorei(U.UNPACK_ROW_LENGTH,Mt),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,di),U.pixelStorei(U.UNPACK_SKIP_PIXELS,So),U.pixelStorei(U.UNPACK_SKIP_ROWS,fi),U.pixelStorei(U.UNPACK_SKIP_IMAGES,ml),ge===0&&W.generateMipmaps&&U.generateMipmap(Jt),Le.unbindTexture()},this.initRenderTarget=function(P){ze.get(P).__webglFramebuffer===void 0&&mt.setupRenderTarget(P)},this.initTexture=function(P){P.isCubeTexture?mt.setTextureCube(P,0):P.isData3DTexture?mt.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?mt.setTexture2DArray(P,0):mt.setTexture2D(P,0),Le.unbindTexture()},this.resetState=function(){S=0,M=0,A=null,Le.reset(),we.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Zn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorSpace=Ze._getDrawingBufferColorSpace(e),n.unpackColorSpace=Ze._getUnpackColorSpace()}}const pa=new Xi,Vr=new ue,Yx=new L,df=new ue,gh=new ue,Ch=new L,Fp=new L,Kx=new _t,Zx=new L,Qx=new L;let On=null,cr=null;const Hr=[],Ss={NONE:-1,PAN:0,ROTATE:1};class wN extends sd{constructor(e,n,i=null){super(n,i),this.objects=e,this.recursive=!0,this.transformGroup=!1,this.rotateSpeed=1,this.raycaster=new Hx,this.mouseButtons={LEFT:Cn.PAN,MIDDLE:Cn.PAN,RIGHT:Cn.ROTATE},this.touches={ONE:$r.PAN},this._onPointerMove=AN.bind(this),this._onPointerDown=RN.bind(this),this._onPointerCancel=CN.bind(this),this._onContextMenu=NN.bind(this),i!==null&&this.connect(i)}connect(e){super.connect(e),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerCancel),this.domElement.addEventListener("pointerleave",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerCancel),this.domElement.removeEventListener("pointerleave",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto",this.domElement.style.cursor=""}dispose(){this.disconnect()}_updatePointer(e){const n=this.domElement.getBoundingClientRect();Vr.x=(e.clientX-n.left)/n.width*2-1,Vr.y=-(e.clientY-n.top)/n.height*2+1}_updateState(e){let n;if(e.pointerType==="touch")n=this.touches.ONE;else switch(e.button){case 0:n=this.mouseButtons.LEFT;break;case 1:n=this.mouseButtons.MIDDLE;break;case 2:n=this.mouseButtons.RIGHT;break;default:n=null}switch(n){case Cn.PAN:case $r.PAN:this.state=Ss.PAN;break;case Cn.ROTATE:case $r.ROTATE:this.state=Ss.ROTATE;break;default:this.state=Ss.NONE}}}function AN(r){const e=this.object,n=this.domElement,i=this.raycaster;if(this.enabled!==!1){if(this._updatePointer(r),i.setFromCamera(Vr,e),On)this.state===Ss.PAN?i.ray.intersectPlane(pa,Ch)&&(On.position.copy(Ch.sub(Yx).applyMatrix4(Kx)),this.dispatchEvent({type:"drag",object:On})):this.state===Ss.ROTATE&&(df.subVectors(Vr,gh).multiplyScalar(this.rotateSpeed),On.rotateOnWorldAxis(Zx,df.x),On.rotateOnWorldAxis(Qx.normalize(),-df.y),this.dispatchEvent({type:"drag",object:On})),gh.copy(Vr);else if(r.pointerType==="mouse"||r.pointerType==="pen")if(Hr.length=0,i.setFromCamera(Vr,e),i.intersectObjects(this.objects,this.recursive,Hr),Hr.length>0){const s=Hr[0].object;pa.setFromNormalAndCoplanarPoint(e.getWorldDirection(pa.normal),Fp.setFromMatrixPosition(s.matrixWorld)),cr!==s&&cr!==null&&(this.dispatchEvent({type:"hoveroff",object:cr}),n.style.cursor="auto",cr=null),cr!==s&&(this.dispatchEvent({type:"hoveron",object:s}),n.style.cursor="pointer",cr=s)}else cr!==null&&(this.dispatchEvent({type:"hoveroff",object:cr}),n.style.cursor="auto",cr=null);gh.copy(Vr)}}function RN(r){const e=this.object,n=this.domElement,i=this.raycaster;this.enabled!==!1&&(this._updatePointer(r),this._updateState(r),Hr.length=0,i.setFromCamera(Vr,e),i.intersectObjects(this.objects,this.recursive,Hr),Hr.length>0&&(this.transformGroup===!0?On=Jx(Hr[0].object):On=Hr[0].object,pa.setFromNormalAndCoplanarPoint(e.getWorldDirection(pa.normal),Fp.setFromMatrixPosition(On.matrixWorld)),i.ray.intersectPlane(pa,Ch)&&(this.state===Ss.PAN?(Kx.copy(On.parent.matrixWorld).invert(),Yx.copy(Ch).sub(Fp.setFromMatrixPosition(On.matrixWorld)),n.style.cursor="move",this.dispatchEvent({type:"dragstart",object:On})):this.state===Ss.ROTATE&&(Zx.set(0,1,0).applyQuaternion(e.quaternion).normalize(),Qx.set(1,0,0).applyQuaternion(e.quaternion).normalize(),n.style.cursor="move",this.dispatchEvent({type:"dragstart",object:On})))),gh.copy(Vr))}function CN(){this.enabled!==!1&&(On&&(this.dispatchEvent({type:"dragend",object:On}),On=null),this.domElement.style.cursor=cr?"pointer":"auto",this.state=Ss.NONE)}function NN(r){this.enabled!==!1&&r.preventDefault()}function Jx(r,e=null){return r.isGroup&&(e=r),r.parent===null?e:Jx(r.parent,e)}function eb(r,e,n){var i,s=1;r==null&&(r=0),e==null&&(e=0),n==null&&(n=0);function o(){var a,l=i.length,c,u=0,h=0,d=0;for(a=0;a<l;++a)c=i[a],u+=c.x||0,h+=c.y||0,d+=c.z||0;for(u=(u/l-r)*s,h=(h/l-e)*s,d=(d/l-n)*s,a=0;a<l;++a)c=i[a],u&&(c.x-=u),h&&(c.y-=h),d&&(c.z-=d)}return o.initialize=function(a){i=a},o.x=function(a){return arguments.length?(r=+a,o):r},o.y=function(a){return arguments.length?(e=+a,o):e},o.z=function(a){return arguments.length?(n=+a,o):n},o.strength=function(a){return arguments.length?(s=+a,o):s},o}function PN(r){const e=+this._x.call(null,r);return tb(this.cover(e),e,r)}function tb(r,e,n){if(isNaN(e))return r;var i,s=r._root,o={data:n},a=r._x0,l=r._x1,c,u,h,d,f;if(!s)return r._root=o,r;for(;s.length;)if((h=e>=(c=(a+l)/2))?a=c:l=c,i=s,!(s=s[d=+h]))return i[d]=o,r;if(u=+r._x.call(null,s.data),e===u)return o.next=s,i?i[d]=o:r._root=o,r;do i=i?i[d]=new Array(2):r._root=new Array(2),(h=e>=(c=(a+l)/2))?a=c:l=c;while((d=+h)==(f=+(u>=c)));return i[f]=s,i[d]=o,r}function DN(r){Array.isArray(r)||(r=Array.from(r));const e=r.length,n=new Float64Array(e);let i=1/0,s=-1/0;for(let o=0,a;o<e;++o)isNaN(a=+this._x.call(null,r[o]))||(n[o]=a,a<i&&(i=a),a>s&&(s=a));if(i>s)return this;this.cover(i).cover(s);for(let o=0;o<e;++o)tb(this,n[o],r[o]);return this}function LN(r){if(isNaN(r=+r))return this;var e=this._x0,n=this._x1;if(isNaN(e))n=(e=Math.floor(r))+1;else{for(var i=n-e||1,s=this._root,o,a;e>r||r>=n;)switch(a=+(r<e),o=new Array(2),o[a]=s,s=o,i*=2,a){case 0:n=e+i;break;case 1:e=n-i;break}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._x1=n,this}function IN(){var r=[];return this.visit(function(e){if(!e.length)do r.push(e.data);while(e=e.next)}),r}function UN(r){return arguments.length?this.cover(+r[0][0]).cover(+r[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]}function Zr(r,e,n){this.node=r,this.x0=e,this.x1=n}function FN(r,e){var n,i=this._x0,s,o,a=this._x1,l=[],c=this._root,u,h;for(c&&l.push(new Zr(c,i,a)),e==null?e=1/0:(i=r-e,a=r+e);u=l.pop();)if(!(!(c=u.node)||(s=u.x0)>a||(o=u.x1)<i))if(c.length){var d=(s+o)/2;l.push(new Zr(c[1],d,o),new Zr(c[0],s,d)),(h=+(r>=d))&&(u=l[l.length-1],l[l.length-1]=l[l.length-1-h],l[l.length-1-h]=u)}else{var f=Math.abs(r-+this._x.call(null,c.data));f<e&&(e=f,i=r-f,a=r+f,n=c.data)}return n}function ON(r){if(isNaN(c=+this._x.call(null,r)))return this;var e,n=this._root,i,s,o,a=this._x0,l=this._x1,c,u,h,d,f;if(!n)return this;if(n.length)for(;;){if((h=c>=(u=(a+l)/2))?a=u:l=u,e=n,!(n=n[d=+h]))return this;if(!n.length)break;e[d+1&1]&&(i=e,f=d)}for(;n.data!==r;)if(s=n,!(n=n.next))return this;return(o=n.next)&&delete n.next,s?(o?s.next=o:delete s.next,this):e?(o?e[d]=o:delete e[d],(n=e[0]||e[1])&&n===(e[1]||e[0])&&!n.length&&(i?i[f]=n:this._root=n),this):(this._root=o,this)}function BN(r){for(var e=0,n=r.length;e<n;++e)this.remove(r[e]);return this}function kN(){return this._root}function zN(){var r=0;return this.visit(function(e){if(!e.length)do++r;while(e=e.next)}),r}function GN(r){var e=[],n,i=this._root,s,o,a;for(i&&e.push(new Zr(i,this._x0,this._x1));n=e.pop();)if(!r(i=n.node,o=n.x0,a=n.x1)&&i.length){var l=(o+a)/2;(s=i[1])&&e.push(new Zr(s,l,a)),(s=i[0])&&e.push(new Zr(s,o,l))}return this}function VN(r){var e=[],n=[],i;for(this._root&&e.push(new Zr(this._root,this._x0,this._x1));i=e.pop();){var s=i.node;if(s.length){var o,a=i.x0,l=i.x1,c=(a+l)/2;(o=s[0])&&e.push(new Zr(o,a,c)),(o=s[1])&&e.push(new Zr(o,c,l))}n.push(i)}for(;i=n.pop();)r(i.node,i.x0,i.x1);return this}function HN(r){return r[0]}function WN(r){return arguments.length?(this._x=r,this):this._x}function nb(r,e){var n=new cg(e??HN,NaN,NaN);return r==null?n:n.addAll(r)}function cg(r,e,n){this._x=r,this._x0=e,this._x1=n,this._root=void 0}function my(r){for(var e={data:r.data},n=e;r=r.next;)n=n.next={data:r.data};return e}var hi=nb.prototype=cg.prototype;hi.copy=function(){var r=new cg(this._x,this._x0,this._x1),e=this._root,n,i;if(!e)return r;if(!e.length)return r._root=my(e),r;for(n=[{source:e,target:r._root=new Array(2)}];e=n.pop();)for(var s=0;s<2;++s)(i=e.source[s])&&(i.length?n.push({source:i,target:e.target[s]=new Array(2)}):e.target[s]=my(i));return r};hi.add=PN;hi.addAll=DN;hi.cover=LN;hi.data=IN;hi.extent=UN;hi.find=FN;hi.remove=ON;hi.removeAll=BN;hi.root=kN;hi.size=zN;hi.visit=GN;hi.visitAfter=VN;hi.x=WN;function $N(r){const e=+this._x.call(null,r),n=+this._y.call(null,r),i=+this._z.call(null,r);return ib(this.cover(e,n,i),e,n,i,r)}function ib(r,e,n,i,s){if(isNaN(e)||isNaN(n)||isNaN(i))return r;var o,a=r._root,l={data:s},c=r._x0,u=r._y0,h=r._z0,d=r._x1,f=r._y1,p=r._z1,m,y,_,g,v,x,T,b,S,M,A;if(!a)return r._root=l,r;for(;a.length;)if((T=e>=(m=(c+d)/2))?c=m:d=m,(b=n>=(y=(u+f)/2))?u=y:f=y,(S=i>=(_=(h+p)/2))?h=_:p=_,o=a,!(a=a[M=S<<2|b<<1|T]))return o[M]=l,r;if(g=+r._x.call(null,a.data),v=+r._y.call(null,a.data),x=+r._z.call(null,a.data),e===g&&n===v&&i===x)return l.next=a,o?o[M]=l:r._root=l,r;do o=o?o[M]=new Array(8):r._root=new Array(8),(T=e>=(m=(c+d)/2))?c=m:d=m,(b=n>=(y=(u+f)/2))?u=y:f=y,(S=i>=(_=(h+p)/2))?h=_:p=_;while((M=S<<2|b<<1|T)===(A=(x>=_)<<2|(v>=y)<<1|g>=m));return o[A]=a,o[M]=l,r}function jN(r){Array.isArray(r)||(r=Array.from(r));const e=r.length,n=new Float64Array(e),i=new Float64Array(e),s=new Float64Array(e);let o=1/0,a=1/0,l=1/0,c=-1/0,u=-1/0,h=-1/0;for(let d=0,f,p,m,y;d<e;++d)isNaN(p=+this._x.call(null,f=r[d]))||isNaN(m=+this._y.call(null,f))||isNaN(y=+this._z.call(null,f))||(n[d]=p,i[d]=m,s[d]=y,p<o&&(o=p),p>c&&(c=p),m<a&&(a=m),m>u&&(u=m),y<l&&(l=y),y>h&&(h=y));if(o>c||a>u||l>h)return this;this.cover(o,a,l).cover(c,u,h);for(let d=0;d<e;++d)ib(this,n[d],i[d],s[d],r[d]);return this}function qN(r,e,n){if(isNaN(r=+r)||isNaN(e=+e)||isNaN(n=+n))return this;var i=this._x0,s=this._y0,o=this._z0,a=this._x1,l=this._y1,c=this._z1;if(isNaN(i))a=(i=Math.floor(r))+1,l=(s=Math.floor(e))+1,c=(o=Math.floor(n))+1;else{for(var u=a-i||1,h=this._root,d,f;i>r||r>=a||s>e||e>=l||o>n||n>=c;)switch(f=(n<o)<<2|(e<s)<<1|r<i,d=new Array(8),d[f]=h,h=d,u*=2,f){case 0:a=i+u,l=s+u,c=o+u;break;case 1:i=a-u,l=s+u,c=o+u;break;case 2:a=i+u,s=l-u,c=o+u;break;case 3:i=a-u,s=l-u,c=o+u;break;case 4:a=i+u,l=s+u,o=c-u;break;case 5:i=a-u,l=s+u,o=c-u;break;case 6:a=i+u,s=l-u,o=c-u;break;case 7:i=a-u,s=l-u,o=c-u;break}this._root&&this._root.length&&(this._root=h)}return this._x0=i,this._y0=s,this._z0=o,this._x1=a,this._y1=l,this._z1=c,this}function XN(){var r=[];return this.visit(function(e){if(!e.length)do r.push(e.data);while(e=e.next)}),r}function YN(r){return arguments.length?this.cover(+r[0][0],+r[0][1],+r[0][2]).cover(+r[1][0],+r[1][1],+r[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]}function kt(r,e,n,i,s,o,a){this.node=r,this.x0=e,this.y0=n,this.z0=i,this.x1=s,this.y1=o,this.z1=a}function KN(r,e,n,i){var s,o=this._x0,a=this._y0,l=this._z0,c,u,h,d,f,p,m=this._x1,y=this._y1,_=this._z1,g=[],v=this._root,x,T;for(v&&g.push(new kt(v,o,a,l,m,y,_)),i==null?i=1/0:(o=r-i,a=e-i,l=n-i,m=r+i,y=e+i,_=n+i,i*=i);x=g.pop();)if(!(!(v=x.node)||(c=x.x0)>m||(u=x.y0)>y||(h=x.z0)>_||(d=x.x1)<o||(f=x.y1)<a||(p=x.z1)<l))if(v.length){var b=(c+d)/2,S=(u+f)/2,M=(h+p)/2;g.push(new kt(v[7],b,S,M,d,f,p),new kt(v[6],c,S,M,b,f,p),new kt(v[5],b,u,M,d,S,p),new kt(v[4],c,u,M,b,S,p),new kt(v[3],b,S,h,d,f,M),new kt(v[2],c,S,h,b,f,M),new kt(v[1],b,u,h,d,S,M),new kt(v[0],c,u,h,b,S,M)),(T=(n>=M)<<2|(e>=S)<<1|r>=b)&&(x=g[g.length-1],g[g.length-1]=g[g.length-1-T],g[g.length-1-T]=x)}else{var A=r-+this._x.call(null,v.data),E=e-+this._y.call(null,v.data),w=n-+this._z.call(null,v.data),N=A*A+E*E+w*w;if(N<i){var D=Math.sqrt(i=N);o=r-D,a=e-D,l=n-D,m=r+D,y=e+D,_=n+D,s=v.data}}return s}const ZN=(r,e,n,i,s,o)=>Math.sqrt((r-i)**2+(e-s)**2+(n-o)**2);function QN(r,e,n,i){const s=[],o=r-i,a=e-i,l=n-i,c=r+i,u=e+i,h=n+i;return this.visit((d,f,p,m,y,_,g)=>{if(!d.length)do{const v=d.data;ZN(r,e,n,this._x(v),this._y(v),this._z(v))<=i&&s.push(v)}while(d=d.next);return f>c||p>u||m>h||y<o||_<a||g<l}),s}function JN(r){if(isNaN(f=+this._x.call(null,r))||isNaN(p=+this._y.call(null,r))||isNaN(m=+this._z.call(null,r)))return this;var e,n=this._root,i,s,o,a=this._x0,l=this._y0,c=this._z0,u=this._x1,h=this._y1,d=this._z1,f,p,m,y,_,g,v,x,T,b,S;if(!n)return this;if(n.length)for(;;){if((v=f>=(y=(a+u)/2))?a=y:u=y,(x=p>=(_=(l+h)/2))?l=_:h=_,(T=m>=(g=(c+d)/2))?c=g:d=g,e=n,!(n=n[b=T<<2|x<<1|v]))return this;if(!n.length)break;(e[b+1&7]||e[b+2&7]||e[b+3&7]||e[b+4&7]||e[b+5&7]||e[b+6&7]||e[b+7&7])&&(i=e,S=b)}for(;n.data!==r;)if(s=n,!(n=n.next))return this;return(o=n.next)&&delete n.next,s?(o?s.next=o:delete s.next,this):e?(o?e[b]=o:delete e[b],(n=e[0]||e[1]||e[2]||e[3]||e[4]||e[5]||e[6]||e[7])&&n===(e[7]||e[6]||e[5]||e[4]||e[3]||e[2]||e[1]||e[0])&&!n.length&&(i?i[S]=n:this._root=n),this):(this._root=o,this)}function eP(r){for(var e=0,n=r.length;e<n;++e)this.remove(r[e]);return this}function tP(){return this._root}function nP(){var r=0;return this.visit(function(e){if(!e.length)do++r;while(e=e.next)}),r}function iP(r){var e=[],n,i=this._root,s,o,a,l,c,u,h;for(i&&e.push(new kt(i,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));n=e.pop();)if(!r(i=n.node,o=n.x0,a=n.y0,l=n.z0,c=n.x1,u=n.y1,h=n.z1)&&i.length){var d=(o+c)/2,f=(a+u)/2,p=(l+h)/2;(s=i[7])&&e.push(new kt(s,d,f,p,c,u,h)),(s=i[6])&&e.push(new kt(s,o,f,p,d,u,h)),(s=i[5])&&e.push(new kt(s,d,a,p,c,f,h)),(s=i[4])&&e.push(new kt(s,o,a,p,d,f,h)),(s=i[3])&&e.push(new kt(s,d,f,l,c,u,p)),(s=i[2])&&e.push(new kt(s,o,f,l,d,u,p)),(s=i[1])&&e.push(new kt(s,d,a,l,c,f,p)),(s=i[0])&&e.push(new kt(s,o,a,l,d,f,p))}return this}function rP(r){var e=[],n=[],i;for(this._root&&e.push(new kt(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));i=e.pop();){var s=i.node;if(s.length){var o,a=i.x0,l=i.y0,c=i.z0,u=i.x1,h=i.y1,d=i.z1,f=(a+u)/2,p=(l+h)/2,m=(c+d)/2;(o=s[0])&&e.push(new kt(o,a,l,c,f,p,m)),(o=s[1])&&e.push(new kt(o,f,l,c,u,p,m)),(o=s[2])&&e.push(new kt(o,a,p,c,f,h,m)),(o=s[3])&&e.push(new kt(o,f,p,c,u,h,m)),(o=s[4])&&e.push(new kt(o,a,l,m,f,p,d)),(o=s[5])&&e.push(new kt(o,f,l,m,u,p,d)),(o=s[6])&&e.push(new kt(o,a,p,m,f,h,d)),(o=s[7])&&e.push(new kt(o,f,p,m,u,h,d))}n.push(i)}for(;i=n.pop();)r(i.node,i.x0,i.y0,i.z0,i.x1,i.y1,i.z1);return this}function sP(r){return r[0]}function oP(r){return arguments.length?(this._x=r,this):this._x}function aP(r){return r[1]}function lP(r){return arguments.length?(this._y=r,this):this._y}function cP(r){return r[2]}function uP(r){return arguments.length?(this._z=r,this):this._z}function rb(r,e,n,i){var s=new ug(e??sP,n??aP,i??cP,NaN,NaN,NaN,NaN,NaN,NaN);return r==null?s:s.addAll(r)}function ug(r,e,n,i,s,o,a,l,c){this._x=r,this._y=e,this._z=n,this._x0=i,this._y0=s,this._z0=o,this._x1=a,this._y1=l,this._z1=c,this._root=void 0}function gy(r){for(var e={data:r.data},n=e;r=r.next;)n=n.next={data:r.data};return e}var Pn=rb.prototype=ug.prototype;Pn.copy=function(){var r=new ug(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),e=this._root,n,i;if(!e)return r;if(!e.length)return r._root=gy(e),r;for(n=[{source:e,target:r._root=new Array(8)}];e=n.pop();)for(var s=0;s<8;++s)(i=e.source[s])&&(i.length?n.push({source:i,target:e.target[s]=new Array(8)}):e.target[s]=gy(i));return r};Pn.add=$N;Pn.addAll=jN;Pn.cover=qN;Pn.data=XN;Pn.extent=YN;Pn.find=KN;Pn.findAllWithinRadius=QN;Pn.remove=JN;Pn.removeAll=eP;Pn.root=tP;Pn.size=nP;Pn.visit=iP;Pn.visitAfter=rP;Pn.x=oP;Pn.y=lP;Pn.z=uP;function Xr(r){return function(){return r}}function kr(r){return(r()-.5)*1e-6}function hP(r){return r.index}function _y(r,e){var n=r.get(e);if(!n)throw new Error("node not found: "+e);return n}function sb(r){var e=hP,n=f,i,s=Xr(30),o,a,l,c,u,h,d=1;r==null&&(r=[]);function f(g){return 1/Math.min(c[g.source.index],c[g.target.index])}function p(g){for(var v=0,x=r.length;v<d;++v)for(var T=0,b,S,M,A=0,E=0,w=0,N,D;T<x;++T)b=r[T],S=b.source,M=b.target,A=M.x+M.vx-S.x-S.vx||kr(h),l>1&&(E=M.y+M.vy-S.y-S.vy||kr(h)),l>2&&(w=M.z+M.vz-S.z-S.vz||kr(h)),N=Math.sqrt(A*A+E*E+w*w),N=(N-o[T])/N*g*i[T],A*=N,E*=N,w*=N,M.vx-=A*(D=u[T]),l>1&&(M.vy-=E*D),l>2&&(M.vz-=w*D),S.vx+=A*(D=1-D),l>1&&(S.vy+=E*D),l>2&&(S.vz+=w*D)}function m(){if(a){var g,v=a.length,x=r.length,T=new Map(a.map((S,M)=>[e(S,M,a),S])),b;for(g=0,c=new Array(v);g<x;++g)b=r[g],b.index=g,typeof b.source!="object"&&(b.source=_y(T,b.source)),typeof b.target!="object"&&(b.target=_y(T,b.target)),c[b.source.index]=(c[b.source.index]||0)+1,c[b.target.index]=(c[b.target.index]||0)+1;for(g=0,u=new Array(x);g<x;++g)b=r[g],u[g]=c[b.source.index]/(c[b.source.index]+c[b.target.index]);i=new Array(x),y(),o=new Array(x),_()}}function y(){if(a)for(var g=0,v=r.length;g<v;++g)i[g]=+n(r[g],g,r)}function _(){if(a)for(var g=0,v=r.length;g<v;++g)o[g]=+s(r[g],g,r)}return p.initialize=function(g,...v){a=g,h=v.find(x=>typeof x=="function")||Math.random,l=v.find(x=>[1,2,3].includes(x))||2,m()},p.links=function(g){return arguments.length?(r=g,m(),p):r},p.id=function(g){return arguments.length?(e=g,p):e},p.iterations=function(g){return arguments.length?(d=+g,p):d},p.strength=function(g){return arguments.length?(n=typeof g=="function"?g:Xr(+g),y(),p):n},p.distance=function(g){return arguments.length?(s=typeof g=="function"?g:Xr(+g),_(),p):s},p}const dP=1664525,fP=1013904223,yy=4294967296;function pP(){let r=1;return()=>(r=(dP*r+fP)%yy)/yy}var vy=3;function ff(r){return r.x}function xy(r){return r.y}function mP(r){return r.z}var gP=10,_P=Math.PI*(3-Math.sqrt(5)),yP=Math.PI*20/(9+Math.sqrt(221));function ob(r,e){e=e||2;var n=Math.min(vy,Math.max(1,Math.round(e))),i,s=1,o=.001,a=1-Math.pow(o,1/300),l=0,c=.6,u=new Map,h=_M(p),d=yM("tick","end"),f=pP();r==null&&(r=[]);function p(){m(),d.call("tick",i),s<o&&(h.stop(),d.call("end",i))}function m(g){var v,x=r.length,T;g===void 0&&(g=1);for(var b=0;b<g;++b)for(s+=(l-s)*a,u.forEach(function(S){S(s)}),v=0;v<x;++v)T=r[v],T.fx==null?T.x+=T.vx*=c:(T.x=T.fx,T.vx=0),n>1&&(T.fy==null?T.y+=T.vy*=c:(T.y=T.fy,T.vy=0)),n>2&&(T.fz==null?T.z+=T.vz*=c:(T.z=T.fz,T.vz=0));return i}function y(){for(var g=0,v=r.length,x;g<v;++g){if(x=r[g],x.index=g,x.fx!=null&&(x.x=x.fx),x.fy!=null&&(x.y=x.fy),x.fz!=null&&(x.z=x.fz),isNaN(x.x)||n>1&&isNaN(x.y)||n>2&&isNaN(x.z)){var T=gP*(n>2?Math.cbrt(.5+g):n>1?Math.sqrt(.5+g):g),b=g*_P,S=g*yP;n===1?x.x=T:n===2?(x.x=T*Math.cos(b),x.y=T*Math.sin(b)):(x.x=T*Math.sin(b)*Math.cos(S),x.y=T*Math.cos(b),x.z=T*Math.sin(b)*Math.sin(S))}(isNaN(x.vx)||n>1&&isNaN(x.vy)||n>2&&isNaN(x.vz))&&(x.vx=0,n>1&&(x.vy=0),n>2&&(x.vz=0))}}function _(g){return g.initialize&&g.initialize(r,f,n),g}return y(),i={tick:m,restart:function(){return h.restart(p),i},stop:function(){return h.stop(),i},numDimensions:function(g){return arguments.length?(n=Math.min(vy,Math.max(1,Math.round(g))),u.forEach(_),i):n},nodes:function(g){return arguments.length?(r=g,y(),u.forEach(_),i):r},alpha:function(g){return arguments.length?(s=+g,i):s},alphaMin:function(g){return arguments.length?(o=+g,i):o},alphaDecay:function(g){return arguments.length?(a=+g,i):+a},alphaTarget:function(g){return arguments.length?(l=+g,i):l},velocityDecay:function(g){return arguments.length?(c=1-g,i):1-c},randomSource:function(g){return arguments.length?(f=g,u.forEach(_),i):f},force:function(g,v){return arguments.length>1?(v==null?u.delete(g):u.set(g,_(v)),i):u.get(g)},find:function(){var g=Array.prototype.slice.call(arguments),v=g.shift()||0,x=(n>1?g.shift():null)||0,T=(n>2?g.shift():null)||0,b=g.shift()||1/0,S=0,M=r.length,A,E,w,N,D,F;for(b*=b,S=0;S<M;++S)D=r[S],A=v-D.x,E=x-(D.y||0),w=T-(D.z||0),N=A*A+E*E+w*w,N<b&&(F=D,b=N);return F},on:function(g,v){return arguments.length>1?(d.on(g,v),i):d.on(g)}}}function ab(){var r,e,n,i,s,o=Xr(-30),a,l=1,c=1/0,u=.81;function h(m){var y,_=r.length,g=(e===1?nb(r,ff):e===2?vM(r,ff,xy):e===3?rb(r,ff,xy,mP):null).visitAfter(f);for(s=m,y=0;y<_;++y)n=r[y],g.visit(p)}function d(){if(r){var m,y=r.length,_;for(a=new Array(y),m=0;m<y;++m)_=r[m],a[_.index]=+o(_,m,r)}}function f(m){var y=0,_,g,v=0,x,T,b,S,M=m.length;if(M){for(x=T=b=S=0;S<M;++S)(_=m[S])&&(g=Math.abs(_.value))&&(y+=_.value,v+=g,x+=g*(_.x||0),T+=g*(_.y||0),b+=g*(_.z||0));y*=Math.sqrt(4/M),m.x=x/v,e>1&&(m.y=T/v),e>2&&(m.z=b/v)}else{_=m,_.x=_.data.x,e>1&&(_.y=_.data.y),e>2&&(_.z=_.data.z);do y+=a[_.data.index];while(_=_.next)}m.value=y}function p(m,y,_,g,v){if(!m.value)return!0;var x=[_,g,v][e-1],T=m.x-n.x,b=e>1?m.y-n.y:0,S=e>2?m.z-n.z:0,M=x-y,A=T*T+b*b+S*S;if(M*M/u<A)return A<c&&(T===0&&(T=kr(i),A+=T*T),e>1&&b===0&&(b=kr(i),A+=b*b),e>2&&S===0&&(S=kr(i),A+=S*S),A<l&&(A=Math.sqrt(l*A)),n.vx+=T*m.value*s/A,e>1&&(n.vy+=b*m.value*s/A),e>2&&(n.vz+=S*m.value*s/A)),!0;if(m.length||A>=c)return;(m.data!==n||m.next)&&(T===0&&(T=kr(i),A+=T*T),e>1&&b===0&&(b=kr(i),A+=b*b),e>2&&S===0&&(S=kr(i),A+=S*S),A<l&&(A=Math.sqrt(l*A)));do m.data!==n&&(M=a[m.data.index]*s/A,n.vx+=T*M,e>1&&(n.vy+=b*M),e>2&&(n.vz+=S*M));while(m=m.next)}return h.initialize=function(m,...y){r=m,i=y.find(_=>typeof _=="function")||Math.random,e=y.find(_=>[1,2,3].includes(_))||2,d()},h.strength=function(m){return arguments.length?(o=typeof m=="function"?m:Xr(+m),d(),h):o},h.distanceMin=function(m){return arguments.length?(l=m*m,h):Math.sqrt(l)},h.distanceMax=function(m){return arguments.length?(c=m*m,h):Math.sqrt(c)},h.theta=function(m){return arguments.length?(u=m*m,h):Math.sqrt(u)},h}function lb(r,e,n,i){var s,o,a=Xr(.1),l,c;typeof r!="function"&&(r=Xr(+r)),e==null&&(e=0),n==null&&(n=0),i==null&&(i=0);function u(d){for(var f=0,p=s.length;f<p;++f){var m=s[f],y=m.x-e||1e-6,_=(m.y||0)-n||1e-6,g=(m.z||0)-i||1e-6,v=Math.sqrt(y*y+_*_+g*g),x=(c[f]-v)*l[f]*d/v;m.vx+=y*x,o>1&&(m.vy+=_*x),o>2&&(m.vz+=g*x)}}function h(){if(s){var d,f=s.length;for(l=new Array(f),c=new Array(f),d=0;d<f;++d)c[d]=+r(s[d],d,s),l[d]=isNaN(c[d])?0:+a(s[d],d,s)}}return u.initialize=function(d,...f){s=d,o=f.find(p=>[1,2,3].includes(p))||2,h()},u.strength=function(d){return arguments.length?(a=typeof d=="function"?d:Xr(+d),h(),u):a},u.radius=function(d){return arguments.length?(r=typeof d=="function"?d:Xr(+d),h(),u):r},u.x=function(d){return arguments.length?(e=+d,u):e},u.y=function(d){return arguments.length?(n=+d,u):n},u.z=function(d){return arguments.length?(i=+d,u):i},u}function vP(r){bP(r);const e=xP(r);return r.on=e.on,r.off=e.off,r.fire=e.fire,r}function xP(r){let e=Object.create(null);return{on:function(n,i,s){if(typeof i!="function")throw new Error("callback is expected to be a function");let o=e[n];return o||(o=e[n]=[]),o.push({callback:i,ctx:s}),r},off:function(n,i){if(typeof n>"u")return e=Object.create(null),r;if(e[n])if(typeof i!="function")delete e[n];else{const a=e[n];for(let l=0;l<a.length;++l)a[l].callback===i&&a.splice(l,1)}return r},fire:function(n){const i=e[n];if(!i)return r;let s;arguments.length>1&&(s=Array.prototype.slice.call(arguments,1));for(let o=0;o<i.length;++o){const a=i[o];a.callback.apply(a.ctx,s)}return r}}}function bP(r){if(!r)throw new Error("Eventify cannot use falsy object as events subject");const e=["on","fire","off"];for(let n=0;n<e.length;++n)if(r.hasOwnProperty(e[n]))throw new Error("Subject cannot be eventified, since it already has property '"+e[n]+"'")}function TP(r){if(r=r||{},"uniqueLinkId"in r&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),r.multigraph=r.uniqueLinkId),r.multigraph===void 0&&(r.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var e=new Map,n=new Map,i={},s=0,o=r.multigraph?T:x,a=[],l=$,c=$,u=$,h=$,d={version:20,addNode:y,addLink:v,removeLink:A,removeNode:g,getNode:_,getNodeCount:b,getLinkCount:S,getEdgeCount:S,getLinksCount:S,getNodesCount:b,getLinks:M,forEachNode:J,forEachLinkedNode:F,forEachLink:D,beginUpdate:u,endUpdate:h,clear:N,hasLink:w,hasNode:_,getLink:w};return vP(d),f(),d;function f(){var X=d.on;d.on=re;function re(){return d.beginUpdate=u=V,d.endUpdate=h=B,l=p,c=m,d.on=X,X.apply(d,arguments)}}function p(X,re){a.push({link:X,changeType:re})}function m(X,re){a.push({node:X,changeType:re})}function y(X,re){if(X===void 0)throw new Error("Invalid node identifier");u();var fe=_(X);return fe?(fe.data=re,c(fe,"update")):(fe=new SP(X,re),c(fe,"add")),e.set(X,fe),h(),fe}function _(X){return e.get(X)}function g(X){var re=_(X);if(!re)return!1;u();var fe=re.links;return fe&&(fe.forEach(E),re.links=null),e.delete(X),c(re,"remove"),h(),!0}function v(X,re,fe){u();var De=_(X)||y(X),it=_(re)||y(re),q=o(X,re,fe),z=n.has(q.id);return n.set(q.id,q),by(De,q),X!==re&&by(it,q),l(q,z?"update":"add"),h(),q}function x(X,re,fe){var De=Du(X,re),it=n.get(De);return it?(it.data=fe,it):new Ty(X,re,fe,De)}function T(X,re,fe){var De=Du(X,re),it=i.hasOwnProperty(De);if(it||w(X,re)){it||(i[De]=0);var q="@"+ ++i[De];De=Du(X+q,re+q)}return new Ty(X,re,fe,De)}function b(){return e.size}function S(){return n.size}function M(X){var re=_(X);return re?re.links:null}function A(X,re){return re!==void 0&&(X=w(X,re)),E(X)}function E(X){if(!X||!n.get(X.id))return!1;u(),n.delete(X.id);var re=_(X.fromId),fe=_(X.toId);return re&&re.links.delete(X),fe&&fe.links.delete(X),l(X,"remove"),h(),!0}function w(X,re){if(!(X===void 0||re===void 0))return n.get(Du(X,re))}function N(){u(),J(function(X){g(X.id)}),h()}function D(X){if(typeof X=="function")for(var re=n.values(),fe=re.next();!fe.done;){if(X(fe.value))return!0;fe=re.next()}}function F(X,re,fe){var De=_(X);if(De&&De.links&&typeof re=="function")return fe?Y(De.links,X,re):k(De.links,X,re)}function k(X,re,fe){for(var De,it=X.values(),q=it.next();!q.done;){var z=q.value,Z=z.fromId===re?z.toId:z.fromId;if(De=fe(e.get(Z),z),De)return!0;q=it.next()}}function Y(X,re,fe){for(var De,it=X.values(),q=it.next();!q.done;){var z=q.value;if(z.fromId===re&&(De=fe(e.get(z.toId),z),De))return!0;q=it.next()}}function $(){}function V(){s+=1}function B(){s-=1,s===0&&a.length>0&&(d.fire("changed",a),a.length=0)}function J(X){if(typeof X!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+X);for(var re=e.values(),fe=re.next();!fe.done;){if(X(fe.value))return!0;fe=re.next()}}}function SP(r,e){this.id=r,this.links=null,this.data=e}function by(r,e){r.links?r.links.add(e):r.links=new Set([e])}function Ty(r,e,n,i){this.fromId=r,this.toId=e,this.data=n,this.id=i}function Du(r,e){return r.toString()+"👉 "+e.toString()}var Lu={exports:{}},Ho={exports:{}},pf,Sy;function cb(){return Sy||(Sy=1,pf=function(e){return e===0?"x":e===1?"y":e===2?"z":"c"+(e+1)}),pf}var mf,My;function ll(){if(My)return mf;My=1;const r=cb();return mf=function(n){return i;function i(s,o){let a=o&&o.indent||0,l=o&&o.join!==void 0?o.join:`
`,c=Array(a+1).join(" "),u=[];for(let h=0;h<n;++h){let d=r(h),f=h===0?"":c;u.push(f+s.replace(/{var}/g,d))}return u.join(l)}},mf}var Ey;function MP(){if(Ey)return Ho.exports;Ey=1;const r=ll();Ho.exports=e,Ho.exports.generateCreateBodyFunctionBody=n,Ho.exports.getVectorCode=s,Ho.exports.getBodyCode=i;function e(o,a){let l=n(o,a),{Body:c}=new Function(l)();return c}function n(o,a){return`
${s(o,a)}
${i(o)}
return {Body: Body, Vector: Vector};
`}function i(o){let a=r(o),l=a("{var}",{join:", "});return`
function Body(${l}) {
  this.isPinned = false;
  this.pos = new Vector(${l});
  this.force = new Vector();
  this.velocity = new Vector();
  this.mass = 1;

  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.reset = function() {
  this.force.reset();
  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.setPosition = function (${l}) {
  ${a("this.pos.{var} = {var} || 0;",{indent:2})}
};`}function s(o,a){let l=r(o),c="";return a&&(c=`${l(`
	   var v{var};
	Object.defineProperty(this, '{var}', {
	  set: function(v) { 
	    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');
	    v{var} = v; 
	  },
	  get: function() { return v{var}; }
	});`)}`),`function Vector(${l("{var}",{join:", "})}) {
  ${c}
    if (typeof arguments[0] === 'object') {
      // could be another vector
      let v = arguments[0];
      ${l('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4})}
      ${l("this.{var} = v.{var};",{indent:4})}
    } else {
      ${l('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4})}
    }
  }
  
  Vector.prototype.reset = function () {
    ${l("this.{var} = ",{join:""})}0;
  };`}return Ho.exports}var Pr={exports:{}},wy;function EP(){if(wy)return Pr.exports;wy=1;const r=ll(),e=cb();Pr.exports=n,Pr.exports.generateQuadTreeFunctionBody=i,Pr.exports.getInsertStackCode=c,Pr.exports.getQuadNodeCode=l,Pr.exports.isSamePosition=s,Pr.exports.getChildBodyCode=a,Pr.exports.setChildBodyCode=o;function n(u){let h=i(u);return new Function(h)()}function i(u){let h=r(u),d=Math.pow(2,u);return`
${c()}
${l(u)}
${s(u)}
${a(u)}
${o(u)}

function createQuadTree(options, random) {
  options = options || {};
  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;
  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;

  var gravity = options.gravity;
  var updateQueue = [];
  var insertStack = new InsertStack();
  var theta = options.theta;

  var nodesCache = [];
  var currentInCache = 0;
  var root = newNode();

  return {
    insertBodies: insertBodies,

    /**
     * Gets root node if it is present
     */
    getRoot: function() {
      return root;
    },

    updateBodyForce: update,

    options: function(newOptions) {
      if (newOptions) {
        if (typeof newOptions.gravity === 'number') {
          gravity = newOptions.gravity;
        }
        if (typeof newOptions.theta === 'number') {
          theta = newOptions.theta;
        }

        return this;
      }

      return {
        gravity: gravity,
        theta: theta
      };
    }
  };

  function newNode() {
    // To avoid pressure on GC we reuse nodes.
    var node = nodesCache[currentInCache];
    if (node) {
${y("      node.")}
      node.body = null;
      node.mass = ${h("node.mass_{var} = ",{join:""})}0;
      ${h("node.min_{var} = node.max_{var} = ",{join:""})}0;
    } else {
      node = new QuadNode();
      nodesCache[currentInCache] = node;
    }

    ++currentInCache;
    return node;
  }

  function update(sourceBody) {
    var queue = updateQueue;
    var v;
    ${h("var d{var};",{indent:4})}
    var r; 
    ${h("var f{var} = 0;",{indent:4})}
    var queueLength = 1;
    var shiftIdx = 0;
    var pushIdx = 1;

    queue[0] = root;

    while (queueLength) {
      var node = queue[shiftIdx];
      var body = node.body;

      queueLength -= 1;
      shiftIdx += 1;
      var differentBody = (body !== sourceBody);
      if (body && differentBody) {
        // If the current node is a leaf node (and it is not source body),
        // calculate the force exerted by the current node on body, and add this
        // amount to body's net force.
        ${h("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Poor man's protection against zero distance.
          ${h("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});
        }

        // This is standard gravitation force calculation but we divide
        // by r^3 to save two operations when normalizing force vector.
        v = gravity * body.mass * sourceBody.mass / (r * r * r);
        ${h("f{var} += v * d{var};",{indent:8})}
      } else if (differentBody) {
        // Otherwise, calculate the ratio s / r,  where s is the width of the region
        // represented by the internal node, and r is the distance between the body
        // and the node's center-of-mass
        ${h("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Sorry about code duplication. I don't want to create many functions
          // right away. Just want to see performance first.
          ${h("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});
        }
        // If s / r < θ, treat this internal node as a single body, and calculate the
        // force it exerts on sourceBody, and add this amount to sourceBody's net force.
        if ((node.max_${e(0)} - node.min_${e(0)}) / r < theta) {
          // in the if statement above we consider node's width only
          // because the region was made into square during tree creation.
          // Thus there is no difference between using width or height.
          v = gravity * node.mass * sourceBody.mass / (r * r * r);
          ${h("f{var} += v * d{var};",{indent:10})}
        } else {
          // Otherwise, run the procedure recursively on each of the current node's children.

          // I intentionally unfolded this loop, to save several CPU cycles.
${m()}
        }
      }
    }

    ${h("sourceBody.force.{var} += f{var};",{indent:4})}
  }

  function insertBodies(bodies) {
    ${h("var {var}min = Number.MAX_VALUE;",{indent:4})}
    ${h("var {var}max = Number.MIN_VALUE;",{indent:4})}
    var i = bodies.length;

    // To reduce quad tree depth we are looking for exact bounding box of all particles.
    while (i--) {
      var pos = bodies[i].pos;
      ${h("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6})}
      ${h("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6})}
    }

    // Makes the bounds square.
    var maxSideLength = -Infinity;
    ${h("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4})}

    currentInCache = 0;
    root = newNode();
    ${h("root.min_{var} = {var}min;",{indent:4})}
    ${h("root.max_{var} = {var}min + maxSideLength;",{indent:4})}

    i = bodies.length - 1;
    if (i >= 0) {
      root.body = bodies[i];
    }
    while (i--) {
      insert(bodies[i], root);
    }
  }

  function insert(newBody) {
    insertStack.reset();
    insertStack.push(root, newBody);

    while (!insertStack.isEmpty()) {
      var stackItem = insertStack.pop();
      var node = stackItem.node;
      var body = stackItem.body;

      if (!node.body) {
        // This is internal node. Update the total mass of the node and center-of-mass.
        ${h("var {var} = body.pos.{var};",{indent:8})}
        node.mass += body.mass;
        ${h("node.mass_{var} += body.mass * {var};",{indent:8})}

        // Recursively insert the body in the appropriate quadrant.
        // But first find the appropriate quadrant.
        var quadIdx = 0; // Assume we are in the 0's quad.
        ${h("var min_{var} = node.min_{var};",{indent:8})}
        ${h("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8})}

${p(8)}

        var child = getChild(node, quadIdx);

        if (!child) {
          // The node is internal but this quadrant is not taken. Add
          // subnode to it.
          child = newNode();
          ${h("child.min_{var} = min_{var};",{indent:10})}
          ${h("child.max_{var} = max_{var};",{indent:10})}
          child.body = body;

          setChild(node, quadIdx, child);
        } else {
          // continue searching in this quadrant.
          insertStack.push(child, body);
        }
      } else {
        // We are trying to add to the leaf node.
        // We have to convert current leaf into internal node
        // and continue adding two nodes.
        var oldBody = node.body;
        node.body = null; // internal nodes do not cary bodies

        if (isSamePosition(oldBody.pos, body.pos)) {
          // Prevent infinite subdivision by bumping one node
          // anywhere in this quadrant
          var retriesCount = 3;
          do {
            var offset = random.nextDouble();
            ${h("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12})}

            ${h("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12})}
            retriesCount -= 1;
            // Make sure we don't bump it out of the box. If we do, next iteration should fix it
          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));

          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {
            // This is very bad, we ran out of precision.
            // if we do not return from the method we'll get into
            // infinite loop here. So we sacrifice correctness of layout, and keep the app running
            // Next layout iteration should get larger bounding box in the first step and fix this
            return;
          }
        }
        // Next iteration should subdivide node further.
        insertStack.push(node, oldBody);
        insertStack.push(node, body);
      }
    }
  }
}
return createQuadTree;

`;function p(_){let g=[],v=Array(_+1).join(" ");for(let x=0;x<u;++x)g.push(v+`if (${e(x)} > max_${e(x)}) {`),g.push(v+`  quadIdx = quadIdx + ${Math.pow(2,x)};`),g.push(v+`  min_${e(x)} = max_${e(x)};`),g.push(v+`  max_${e(x)} = node.max_${e(x)};`),g.push(v+"}");return g.join(`
`)}function m(){let _=Array(11).join(" "),g=[];for(let v=0;v<d;++v)g.push(_+`if (node.quad${v}) {`),g.push(_+`  queue[pushIdx] = node.quad${v};`),g.push(_+"  queueLength += 1;"),g.push(_+"  pushIdx += 1;"),g.push(_+"}");return g.join(`
`)}function y(_){let g=[];for(let v=0;v<d;++v)g.push(`${_}quad${v} = null;`);return g.join(`
`)}}function s(u){let h=r(u);return`
  function isSamePosition(point1, point2) {
    ${h("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2})}
  
    return ${h("d{var} < 1e-8",{join:" && "})};
  }  
`}function o(u){var h=Math.pow(2,u);return`
function setChild(node, idx, child) {
  ${d()}
}`;function d(){let f=[];for(let p=0;p<h;++p){let m=p===0?"  ":"  else ";f.push(`${m}if (idx === ${p}) node.quad${p} = child;`)}return f.join(`
`)}}function a(u){return`function getChild(node, idx) {
${h()}
  return null;
}`;function h(){let d=[],f=Math.pow(2,u);for(let p=0;p<f;++p)d.push(`  if (idx === ${p}) return node.quad${p};`);return d.join(`
`)}}function l(u){let h=r(u),d=Math.pow(2,u);var f=`
function QuadNode() {
  // body stored inside this node. In quad tree only leaf nodes (by construction)
  // contain bodies:
  this.body = null;

  // Child nodes are stored in quads. Each quad is presented by number:
  // 0 | 1
  // -----
  // 2 | 3
${p("  this.")}

  // Total mass of current node
  this.mass = 0;

  // Center of mass coordinates
  ${h("this.mass_{var} = 0;",{indent:2})}

  // bounding box coordinates
  ${h("this.min_{var} = 0;",{indent:2})}
  ${h("this.max_{var} = 0;",{indent:2})}
}
`;return f;function p(m){let y=[];for(let _=0;_<d;++_)y.push(`${m}quad${_} = null;`);return y.join(`
`)}}function c(){return`
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function InsertStack () {
    this.stack = [];
    this.popIdx = 0;
}

InsertStack.prototype = {
    isEmpty: function() {
        return this.popIdx === 0;
    },
    push: function (node, body) {
        var item = this.stack[this.popIdx];
        if (!item) {
            // we are trying to avoid memory pressure: create new element
            // only when absolutely necessary
            this.stack[this.popIdx] = new InsertStackElement(node, body);
        } else {
            item.node = node;
            item.body = body;
        }
        ++this.popIdx;
    },
    pop: function () {
        if (this.popIdx > 0) {
            return this.stack[--this.popIdx];
        }
    },
    reset: function () {
        this.popIdx = 0;
    }
};

function InsertStackElement(node, body) {
    this.node = node; // QuadTree node
    this.body = body; // physical body which needs to be inserted to node
}
`}return Pr.exports}var Iu={exports:{}},Ay;function wP(){if(Ay)return Iu.exports;Ay=1,Iu.exports=e,Iu.exports.generateFunctionBody=n;const r=ll();function e(i){let s=n(i);return new Function("bodies","settings","random",s)}function n(i){let s=r(i);return`
  var boundingBox = {
    ${s("min_{var}: 0, max_{var}: 0,",{indent:4})}
  };

  return {
    box: boundingBox,

    update: updateBoundingBox,

    reset: resetBoundingBox,

    getBestNewPosition: function (neighbors) {
      var ${s("base_{var} = 0",{join:", "})};

      if (neighbors.length) {
        for (var i = 0; i < neighbors.length; ++i) {
          let neighborPos = neighbors[i].pos;
          ${s("base_{var} += neighborPos.{var};",{indent:10})}
        }

        ${s("base_{var} /= neighbors.length;",{indent:8})}
      } else {
        ${s("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8})}
      }

      var springLength = settings.springLength;
      return {
        ${s("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8})}
      };
    }
  };

  function updateBoundingBox() {
    var i = bodies.length;
    if (i === 0) return; // No bodies - no borders.

    ${s("var max_{var} = -Infinity;",{indent:4})}
    ${s("var min_{var} = Infinity;",{indent:4})}

    while(i--) {
      // this is O(n), it could be done faster with quadtree, if we check the root node bounds
      var bodyPos = bodies[i].pos;
      ${s("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6})}
      ${s("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6})}
    }

    ${s("boundingBox.min_{var} = min_{var};",{indent:4})}
    ${s("boundingBox.max_{var} = max_{var};",{indent:4})}
  }

  function resetBoundingBox() {
    ${s("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4})}
  }
`}return Iu.exports}var Uu={exports:{}},Ry;function AP(){if(Ry)return Uu.exports;Ry=1;const r=ll();Uu.exports=e,Uu.exports.generateCreateDragForceFunctionBody=n;function e(i){let s=n(i);return new Function("options",s)}function n(i){return`
  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');

  return {
    update: function(body) {
      ${r(i)("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6})}
    }
  };
`}return Uu.exports}var Fu={exports:{}},Cy;function RP(){if(Cy)return Fu.exports;Cy=1;const r=ll();Fu.exports=e,Fu.exports.generateCreateSpringForceFunctionBody=n;function e(i){let s=n(i);return new Function("options","random",s)}function n(i){let s=r(i);return`
  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');
  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');

  return {
    /**
     * Updates forces acting on a spring
     */
    update: function (spring) {
      var body1 = spring.from;
      var body2 = spring.to;
      var length = spring.length < 0 ? options.springLength : spring.length;
      ${s("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6})}
      var r = Math.sqrt(${s("d{var} * d{var}",{join:" + "})});

      if (r === 0) {
        ${s("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8})}
        r = Math.sqrt(${s("d{var} * d{var}",{join:" + "})});
      }

      var d = r - length;
      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;

      ${s("body1.force.{var} += coefficient * d{var}",{indent:6})};
      body1.springCount += 1;
      body1.springLength += r;

      ${s("body2.force.{var} -= coefficient * d{var}",{indent:6})};
      body2.springCount += 1;
      body2.springLength += r;
    }
  };
`}return Fu.exports}var Ou={exports:{}},Ny;function CP(){if(Ny)return Ou.exports;Ny=1;const r=ll();Ou.exports=e,Ou.exports.generateIntegratorFunctionBody=n;function e(i){let s=n(i);return new Function("bodies","timeStep","adaptiveTimeStepWeight",s)}function n(i){let s=r(i);return`
  var length = bodies.length;
  if (length === 0) return 0;

  ${s("var d{var} = 0, t{var} = 0;",{indent:2})}

  for (var i = 0; i < length; ++i) {
    var body = bodies[i];
    if (body.isPinned) continue;

    if (adaptiveTimeStepWeight && body.springCount) {
      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);
    }

    var coeff = timeStep / body.mass;

    ${s("body.velocity.{var} += coeff * body.force.{var};",{indent:4})}
    ${s("var v{var} = body.velocity.{var};",{indent:4})}
    var v = Math.sqrt(${s("v{var} * v{var}",{join:" + "})});

    if (v > 1) {
      // We normalize it so that we move within timeStep range. 
      // for the case when v <= 1 - we let velocity to fade out.
      ${s("body.velocity.{var} = v{var} / v;",{indent:6})}
    }

    ${s("d{var} = timeStep * body.velocity.{var};",{indent:4})}

    ${s("body.pos.{var} += d{var};",{indent:4})}

    ${s("t{var} += Math.abs(d{var});",{indent:4})}
  }

  return (${s("t{var} * t{var}",{join:" + "})})/length;
`}return Ou.exports}var gf,Py;function NP(){if(Py)return gf;Py=1,gf=r;function r(e,n,i,s){this.from=e,this.to=n,this.length=i,this.coefficient=s}return gf}var _f,Dy;function PP(){if(Dy)return _f;Dy=1,_f=r;function r(e,n){var i;if(e||(e={}),n){for(i in n)if(n.hasOwnProperty(i)){var s=e.hasOwnProperty(i),o=typeof n[i],a=!s||typeof e[i]!==o;a?e[i]=n[i]:o==="object"&&(e[i]=r(e[i],n[i]))}}return e}return _f}var yf,Ly;function ub(){if(Ly)return yf;Ly=1;function r(i){n(i);const s=e(i);return i.on=s.on,i.off=s.off,i.fire=s.fire,i}function e(i){let s=Object.create(null);return{on:function(o,a,l){if(typeof a!="function")throw new Error("callback is expected to be a function");let c=s[o];return c||(c=s[o]=[]),c.push({callback:a,ctx:l}),i},off:function(o,a){if(typeof o>"u")return s=Object.create(null),i;if(s[o])if(typeof a!="function")delete s[o];else{const l=s[o];for(let c=0;c<l.length;++c)l[c].callback===a&&l.splice(c,1)}return i},fire:function(o){const a=s[o];if(!a)return i;let l;arguments.length>1&&(l=Array.prototype.slice.call(arguments,1));for(let c=0;c<a.length;++c){const u=a[c];u.callback.apply(u.ctx,l)}return i}}}function n(i){if(!i)throw new Error("Eventify cannot use falsy object as events subject");const s=["on","fire","off"];for(let o=0;o<s.length;++o)if(i.hasOwnProperty(s[o]))throw new Error("Subject cannot be eventified, since it already has property '"+s[o]+"'")}return yf=r,yf}var El={exports:{}},Iy;function DP(){if(Iy)return El.exports;Iy=1,El.exports=r,El.exports.random=r,El.exports.randomIterator=l;function r(c){var u=typeof c=="number"?c:+new Date;return new e(u)}function e(c){this.seed=c}e.prototype.next=a,e.prototype.nextDouble=o,e.prototype.uniform=o,e.prototype.gaussian=n,e.prototype.random=o;function n(){var c,u,h;do u=this.nextDouble()*2-1,h=this.nextDouble()*2-1,c=u*u+h*h;while(c>=1||c===0);return u*Math.sqrt(-2*Math.log(c)/c)}e.prototype.levy=i;function i(){var c=1.5,u=Math.pow(s(1+c)*Math.sin(Math.PI*c/2)/(s((1+c)/2)*c*Math.pow(2,(c-1)/2)),1/c);return this.gaussian()*u/Math.pow(Math.abs(this.gaussian()),1/c)}function s(c){return Math.sqrt(2*Math.PI/c)*Math.pow(1/Math.E*(c+1/(12*c-1/(10*c))),c)}function o(){var c=this.seed;return c=c+2127912214+(c<<12)&4294967295,c=(c^3345072700^c>>>19)&4294967295,c=c+374761393+(c<<5)&4294967295,c=(c+3550635116^c<<9)&4294967295,c=c+4251993797+(c<<3)&4294967295,c=(c^3042594569^c>>>16)&4294967295,this.seed=c,(c&268435455)/268435456}function a(c){return Math.floor(this.nextDouble()*c)}function l(c,u){var h=u||r();if(typeof h.next!="function")throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:f,shuffle:d};function d(){var p,m,y;for(p=c.length-1;p>0;--p)m=h.next(p+1),y=c[m],c[m]=c[p],c[p]=y;return c}function f(p){var m,y,_;for(m=c.length-1;m>0;--m)y=h.next(m+1),_=c[y],c[y]=c[m],c[m]=_,p(_);c.length&&p(c[0])}}return El.exports}var vf,Uy;function Fy(){if(Uy)return vf;Uy=1,vf=l;var r=MP(),e=EP(),n=wP(),i=AP(),s=RP(),o=CP(),a={};function l(h){var d=NP(),f=PP(),p=ub();if(h){if(h.springCoeff!==void 0)throw new Error("springCoeff was renamed to springCoefficient");if(h.dragCoeff!==void 0)throw new Error("dragCoeff was renamed to dragCoefficient")}h=f(h,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var m=a[h.dimensions];if(!m){var y=h.dimensions;m={Body:r(y,h.debug),createQuadTree:e(y),createBounds:n(y),createDragForce:i(y),createSpringForce:s(y),integrate:o(y)},a[y]=m}var _=m.Body,g=m.createQuadTree,v=m.createBounds,x=m.createDragForce,T=m.createSpringForce,b=m.integrate,S=q=>new _(q),M=DP().random(42),A=[],E=[],w=g(h,M),N=v(A,h,M),D=T(h,M),F=x(h),k=0,Y=[],$=new Map,V=0;X("nbody",De),X("spring",it);var B={bodies:A,quadTree:w,springs:E,settings:h,addForce:X,removeForce:re,getForces:fe,step:function(){for(var q=0;q<Y.length;++q)Y[q](V);var z=b(A,h.timeStep,h.adaptiveTimeStepWeight);return V+=1,z},addBody:function(q){if(!q)throw new Error("Body is required");return A.push(q),q},addBodyAt:function(q){if(!q)throw new Error("Body position is required");var z=S(q);return A.push(z),z},removeBody:function(q){if(q){var z=A.indexOf(q);if(!(z<0))return A.splice(z,1),A.length===0&&N.reset(),!0}},addSpring:function(q,z,Z,pe){if(!q||!z)throw new Error("Cannot add null spring to force simulator");typeof Z!="number"&&(Z=-1);var Ne=new d(q,z,Z,pe>=0?pe:-1);return E.push(Ne),Ne},getTotalMovement:function(){return k},removeSpring:function(q){if(q){var z=E.indexOf(q);if(z>-1)return E.splice(z,1),!0}},getBestNewBodyPosition:function(q){return N.getBestNewPosition(q)},getBBox:J,getBoundingBox:J,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(q){return q!==void 0?(h.gravity=q,w.options({gravity:q}),this):h.gravity},theta:function(q){return q!==void 0?(h.theta=q,w.options({theta:q}),this):h.theta},random:M};return c(h,B),p(B),B;function J(){return N.update(),N.box}function X(q,z){if($.has(q))throw new Error("Force "+q+" is already added");$.set(q,z),Y.push(z)}function re(q){var z=Y.indexOf($.get(q));z<0||(Y.splice(z,1),$.delete(q))}function fe(){return $}function De(){if(A.length!==0){w.insertBodies(A);for(var q=A.length;q--;){var z=A[q];z.isPinned||(z.reset(),w.updateBodyForce(z),F.update(z))}}}function it(){for(var q=E.length;q--;)D.update(E[q])}}function c(h,d){for(var f in h)u(h,d,f)}function u(h,d,f){if(h.hasOwnProperty(f)&&typeof d[f]!="function"){var p=Number.isFinite(h[f]);p?d[f]=function(m){if(m!==void 0){if(!Number.isFinite(m))throw new Error("Value of "+f+" should be a valid number.");return h[f]=m,d}return h[f]}:d[f]=function(m){return m!==void 0?(h[f]=m,d):h[f]}}}return vf}var Oy;function LP(){if(Oy)return Lu.exports;Oy=1,Lu.exports=e,Lu.exports.simulator=Fy();var r=ub();function e(i,s){if(!i)throw new Error("Graph structure cannot be undefined");var o=s&&s.createSimulator||Fy(),a=o(s);if(Array.isArray(s))throw new Error("Physics settings is expected to be an object");var l=i.version>19?$:Y;s&&typeof s.nodeMass=="function"&&(l=s.nodeMass);var c=new Map,u={},h=0,d=a.settings.springTransform||n;S(),x();var f=!1,p={step:function(){if(h===0)return m(!0),!0;var V=a.step();p.lastMove=V,p.fire("step");var B=V/h,J=B<=.01;return m(J),J},getNodePosition:function(V){return k(V).pos},setNodePosition:function(V){var B=k(V);B.setPosition.apply(B,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(V){var B=u[V];if(B)return{from:B.from.pos,to:B.to.pos}},getGraphRect:function(){return a.getBBox()},forEachBody:y,pinNode:function(V,B){var J=k(V.id);J.isPinned=!!B},isNodePinned:function(V){return k(V.id).isPinned},dispose:function(){i.off("changed",b),p.fire("disposed")},getBody:v,getSpring:g,getForceVectorLength:_,simulator:a,graph:i,lastMove:0};return r(p),p;function m(V){f!==V&&(f=V,T(V))}function y(V){c.forEach(V)}function _(){var V=0,B=0;return y(function(J){V+=Math.abs(J.force.x),B+=Math.abs(J.force.y)}),Math.sqrt(V*V+B*B)}function g(V,B){var J;if(B===void 0)typeof V!="object"?J=V:J=V.id;else{var X=i.hasLink(V,B);if(!X)return;J=X.id}return u[J]}function v(V){return c.get(V)}function x(){i.on("changed",b)}function T(V){p.fire("stable",V)}function b(V){for(var B=0;B<V.length;++B){var J=V[B];J.changeType==="add"?(J.node&&M(J.node.id),J.link&&E(J.link)):J.changeType==="remove"&&(J.node&&A(J.node),J.link&&w(J.link))}h=i.getNodesCount()}function S(){h=0,i.forEachNode(function(V){M(V.id),h+=1}),i.forEachLink(E)}function M(V){var B=c.get(V);if(!B){var J=i.getNode(V);if(!J)throw new Error("initBody() was called with unknown node id");var X=J.position;if(!X){var re=N(J);X=a.getBestNewBodyPosition(re)}B=a.addBodyAt(X),B.id=V,c.set(V,B),D(V),F(J)&&(B.isPinned=!0)}}function A(V){var B=V.id,J=c.get(B);J&&(c.delete(B),a.removeBody(J))}function E(V){D(V.fromId),D(V.toId);var B=c.get(V.fromId),J=c.get(V.toId),X=a.addSpring(B,J,V.length);d(V,X),u[V.id]=X}function w(V){var B=u[V.id];if(B){var J=i.getNode(V.fromId),X=i.getNode(V.toId);J&&D(J.id),X&&D(X.id),delete u[V.id],a.removeSpring(B)}}function N(V){var B=[];if(!V.links)return B;for(var J=Math.min(V.links.length,2),X=0;X<J;++X){var re=V.links[X],fe=re.fromId!==V.id?c.get(re.fromId):c.get(re.toId);fe&&fe.pos&&B.push(fe)}return B}function D(V){var B=c.get(V);if(B.mass=l(V),Number.isNaN(B.mass))throw new Error("Node mass should be a number")}function F(V){return V&&(V.isPinned||V.data&&V.data.isPinned)}function k(V){var B=c.get(V);return B||(M(V),B=c.get(V)),B}function Y(V){var B=i.getLinks(V);return B?1+B.length/3:1}function $(V){var B=i.getLinks(V);return B?1+B.size/3:1}}function n(){}return Lu.exports}var IP=LP();const UP=lx(IP);function Nh(r){var e=typeof r;return r!=null&&(e=="object"||e=="function")}var FP=typeof global=="object"&&global&&global.Object===Object&&global,OP=typeof self=="object"&&self&&self.Object===Object&&self,hb=FP||OP||Function("return this")(),xf=function(){return hb.Date.now()},BP=/\s/;function kP(r){for(var e=r.length;e--&&BP.test(r.charAt(e)););return e}var zP=/^\s+/;function GP(r){return r&&r.slice(0,kP(r)+1).replace(zP,"")}var Ph=hb.Symbol,db=Object.prototype,VP=db.hasOwnProperty,HP=db.toString,wl=Ph?Ph.toStringTag:void 0;function WP(r){var e=VP.call(r,wl),n=r[wl];try{r[wl]=void 0;var i=!0}catch{}var s=HP.call(r);return i&&(e?r[wl]=n:delete r[wl]),s}var $P=Object.prototype,jP=$P.toString;function qP(r){return jP.call(r)}var XP="[object Null]",YP="[object Undefined]",By=Ph?Ph.toStringTag:void 0;function KP(r){return r==null?r===void 0?YP:XP:By&&By in Object(r)?WP(r):qP(r)}function ZP(r){return r!=null&&typeof r=="object"}var QP="[object Symbol]";function JP(r){return typeof r=="symbol"||ZP(r)&&KP(r)==QP}var ky=NaN,eD=/^[-+]0x[0-9a-f]+$/i,tD=/^0b[01]+$/i,nD=/^0o[0-7]+$/i,iD=parseInt;function zy(r){if(typeof r=="number")return r;if(JP(r))return ky;if(Nh(r)){var e=typeof r.valueOf=="function"?r.valueOf():r;r=Nh(e)?e+"":e}if(typeof r!="string")return r===0?r:+r;r=GP(r);var n=tD.test(r);return n||nD.test(r)?iD(r.slice(2),n?2:8):eD.test(r)?ky:+r}var rD="Expected a function",sD=Math.max,oD=Math.min;function fb(r,e,n){var i,s,o,a,l,c,u=0,h=!1,d=!1,f=!0;if(typeof r!="function")throw new TypeError(rD);e=zy(e)||0,Nh(n)&&(h=!!n.leading,d="maxWait"in n,o=d?sD(zy(n.maxWait)||0,e):o,f="trailing"in n?!!n.trailing:f);function p(S){var M=i,A=s;return i=s=void 0,u=S,a=r.apply(A,M),a}function m(S){return u=S,l=setTimeout(g,e),h?p(S):a}function y(S){var M=S-c,A=S-u,E=e-M;return d?oD(E,o-A):E}function _(S){var M=S-c,A=S-u;return c===void 0||M>=e||M<0||d&&A>=o}function g(){var S=xf();if(_(S))return v(S);l=setTimeout(g,y(S))}function v(S){return l=void 0,f&&i?p(S):(i=s=void 0,a)}function x(){l!==void 0&&clearTimeout(l),u=0,i=c=s=l=void 0}function T(){return l===void 0?a:v(xf())}function b(){var S=xf(),M=_(S);if(i=arguments,s=this,c=S,M){if(l===void 0)return m(c);if(d)return clearTimeout(l),l=setTimeout(g,e),p(c)}return l===void 0&&(l=setTimeout(g,e)),a}return b.cancel=x,b.flush=T,b}function Gy(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function aD(r){if(Array.isArray(r))return r}function lD(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function cD(r,e,n){return Object.defineProperty(r,"prototype",{writable:!1}),r}function uD(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function hD(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function dD(r,e){return aD(r)||uD(r,e)||fD(r,e)||hD()}function fD(r,e){if(r){if(typeof r=="string")return Gy(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Gy(r,e):void 0}}var pD=cD(function r(e,n){var i=n.default,s=i===void 0?null:i,o=n.triggerUpdate,a=o===void 0?!0:o,l=n.onChange,c=l===void 0?function(u,h){}:l;lD(this,r),this.name=e,this.defaultVal=s,this.triggerUpdate=a,this.onChange=c});function cl(r){var e=r.stateInit,n=e===void 0?function(){return{}}:e,i=r.props,s=i===void 0?{}:i,o=r.methods,a=o===void 0?{}:o,l=r.aliases,c=l===void 0?{}:l,u=r.init,h=u===void 0?function(){}:u,d=r.update,f=d===void 0?function(){}:d,p=Object.keys(s).map(function(m){return new pD(m,s[m])});return function m(){for(var y=arguments.length,_=new Array(y),g=0;g<y;g++)_[g]=arguments[g];var v=!!(this instanceof m&&this.constructor),x=v?_.shift():void 0,T=_[0],b=T===void 0?{}:T,S=Object.assign({},n instanceof Function?n(b):n,{initialised:!1}),M={};function A(N){return E(N,b),w(),A}var E=function(D,F){h.call(A,D,S,F),S.initialised=!0},w=fb(function(){S.initialised&&(f.call(A,S,M),M={})},1);return p.forEach(function(N){A[N.name]=D(N);function D(F){var k=F.name,Y=F.triggerUpdate,$=Y===void 0?!1:Y,V=F.onChange,B=V===void 0?function(re,fe){}:V,J=F.defaultVal,X=J===void 0?null:J;return function(re){var fe=S[k];if(!arguments.length)return fe;var De=re===void 0?X:re;return S[k]=De,B.call(A,De,S,fe),!M.hasOwnProperty(k)&&(M[k]=fe),$&&w(),A}}}),Object.keys(a).forEach(function(N){A[N]=function(){for(var D,F=arguments.length,k=new Array(F),Y=0;Y<F;Y++)k[Y]=arguments[Y];return(D=a[N]).call.apply(D,[A,S].concat(k))}}),Object.entries(c).forEach(function(N){var D=dD(N,2),F=D[0],k=D[1];return A[F]=A[k]}),A.resetProps=function(){return p.forEach(function(N){A[N.name](N.defaultVal)}),A},A.resetProps(),S._rerender=w,v&&x&&A(x),A}}var Ie=function(r){return typeof r=="function"?r:typeof r=="string"?function(e){return e[r]}:function(e){return r}};function Op(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function mD(r){if(Array.isArray(r))return r}function gD(r){if(Array.isArray(r))return Op(r)}function pb(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function _D(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function yD(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function In(r,e){return r.get(pb(r,e))}function Wo(r,e,n){_D(r,e),e.set(r,n)}function Bu(r,e,n){return r.set(pb(r,e),n),n}function vD(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,RD(i.key),i)}}function xD(r,e,n){return e&&vD(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function bD(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function TD(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function SD(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function MD(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function ED(r,e){return mD(r)||TD(r,e)||mb(r,e)||SD()}function wD(r){return gD(r)||bD(r)||mb(r)||MD()}function AD(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function RD(r){var e=AD(r,"string");return typeof e=="symbol"?e:e+""}function mb(r,e){if(r){if(typeof r=="string")return Op(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Op(r,e):void 0}}var $o=new WeakMap,Al=new WeakMap,jo=new WeakMap,bf=new WeakMap,Tf=new WeakMap,Sf=new WeakMap,CD=function(){function r(){yD(this,r),Wo(this,$o,new Map),Wo(this,Al,new Map),Wo(this,jo,function(e){return e}),Wo(this,bf,function(){return{}}),Wo(this,Tf,function(){}),Wo(this,Sf,function(){})}return xD(r,[{key:"getObj",value:function(n){return In($o,this).get(In(jo,this).call(this,n))}},{key:"getData",value:function(n){return In(Al,this).get(n)}},{key:"entries",value:function(){return wD(In(Al,this).entries()).map(function(n){var i=ED(n,2),s=i[0],o=i[1];return[o,s]})}},{key:"id",value:function(n){return Bu(jo,this,Ie(n)),this}},{key:"onCreateObj",value:function(n){return Bu(bf,this,n),this}},{key:"onUpdateObj",value:function(n){return Bu(Tf,this,n),this}},{key:"onRemoveObj",value:function(n){return Bu(Sf,this,n),this}},{key:"digest",value:function(n){var i=this;n.filter(function(o){return!In($o,i).has(In(jo,i).call(i,o))}).forEach(function(o){var a=In(bf,i).call(i,o);In($o,i).set(In(jo,i).call(i,o),a),In(Al,i).set(a,o)});var s=new Map(n.map(function(o){return[In(jo,i).call(i,o),o]}));return In($o,this).forEach(function(o,a){s.has(a)?In(Tf,i).call(i,o,s.get(a)):(In(Sf,i).call(i,o,a),In($o,i).delete(a),In(Al,i).delete(o))}),this}},{key:"clear",value:function(){return this.digest([]),this}}])}();function ND(r,e){switch(arguments.length){case 0:break;case 1:this.range(r);break;default:this.range(e).domain(r);break}return this}const Vy=Symbol("implicit");function hg(){var r=new h_,e=[],n=[],i=Vy;function s(o){let a=r.get(o);if(a===void 0){if(i!==Vy)return i;r.set(o,a=e.push(o)-1)}return n[a%n.length]}return s.domain=function(o){if(!arguments.length)return e.slice();e=[],r=new h_;for(const a of o)r.has(a)||r.set(a,e.push(a)-1);return s},s.range=function(o){return arguments.length?(n=Array.from(o),s):n.slice()},s.unknown=function(o){return arguments.length?(i=o,s):i},s.copy=function(){return hg(e,n).unknown(i)},ND.apply(s,arguments),s}function Dh(r){"@babel/helpers - typeof";return Dh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Dh(r)}var PD=/^\s+/,DD=/\s+$/;function Ve(r,e){if(r=r||"",e=e||{},r instanceof Ve)return r;if(!(this instanceof Ve))return new Ve(r,e);var n=LD(r);this._originalInput=r,this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=Math.round(100*this._a)/100,this._format=e.format||n.format,this._gradientType=e.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=n.ok}Ve.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},getLuminance:function(){var e=this.toRgb(),n,i,s,o,a,l;return n=e.r/255,i=e.g/255,s=e.b/255,n<=.03928?o=n/12.92:o=Math.pow((n+.055)/1.055,2.4),i<=.03928?a=i/12.92:a=Math.pow((i+.055)/1.055,2.4),s<=.03928?l=s/12.92:l=Math.pow((s+.055)/1.055,2.4),.2126*o+.7152*a+.0722*l},setAlpha:function(e){return this._a=gb(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=Wy(this._r,this._g,this._b);return{h:e.h*360,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=Wy(this._r,this._g,this._b),n=Math.round(e.h*360),i=Math.round(e.s*100),s=Math.round(e.v*100);return this._a==1?"hsv("+n+", "+i+"%, "+s+"%)":"hsva("+n+", "+i+"%, "+s+"%, "+this._roundA+")"},toHsl:function(){var e=Hy(this._r,this._g,this._b);return{h:e.h*360,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=Hy(this._r,this._g,this._b),n=Math.round(e.h*360),i=Math.round(e.s*100),s=Math.round(e.l*100);return this._a==1?"hsl("+n+", "+i+"%, "+s+"%)":"hsla("+n+", "+i+"%, "+s+"%, "+this._roundA+")"},toHex:function(e){return $y(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return OD(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(Kt(this._r,255)*100)+"%",g:Math.round(Kt(this._g,255)*100)+"%",b:Math.round(Kt(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(Kt(this._r,255)*100)+"%, "+Math.round(Kt(this._g,255)*100)+"%, "+Math.round(Kt(this._b,255)*100)+"%)":"rgba("+Math.round(Kt(this._r,255)*100)+"%, "+Math.round(Kt(this._g,255)*100)+"%, "+Math.round(Kt(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:YD[$y(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var n="#"+jy(this._r,this._g,this._b,this._a),i=n,s=this._gradientType?"GradientType = 1, ":"";if(e){var o=Ve(e);i="#"+jy(o._r,o._g,o._b,o._a)}return"progid:DXImageTransform.Microsoft.gradient("+s+"startColorstr="+n+",endColorstr="+i+")"},toString:function(e){var n=!!e;e=e||this._format;var i=!1,s=this._a<1&&this._a>=0,o=!n&&s&&(e==="hex"||e==="hex6"||e==="hex3"||e==="hex4"||e==="hex8"||e==="name");return o?e==="name"&&this._a===0?this.toName():this.toRgbString():(e==="rgb"&&(i=this.toRgbString()),e==="prgb"&&(i=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(i=this.toHexString()),e==="hex3"&&(i=this.toHexString(!0)),e==="hex4"&&(i=this.toHex8String(!0)),e==="hex8"&&(i=this.toHex8String()),e==="name"&&(i=this.toName()),e==="hsl"&&(i=this.toHslString()),e==="hsv"&&(i=this.toHsvString()),i||this.toHexString())},clone:function(){return Ve(this.toString())},_applyModification:function(e,n){var i=e.apply(null,[this].concat([].slice.call(n)));return this._r=i._r,this._g=i._g,this._b=i._b,this.setAlpha(i._a),this},lighten:function(){return this._applyModification(GD,arguments)},brighten:function(){return this._applyModification(VD,arguments)},darken:function(){return this._applyModification(HD,arguments)},desaturate:function(){return this._applyModification(BD,arguments)},saturate:function(){return this._applyModification(kD,arguments)},greyscale:function(){return this._applyModification(zD,arguments)},spin:function(){return this._applyModification(WD,arguments)},_applyCombination:function(e,n){return e.apply(null,[this].concat([].slice.call(n)))},analogous:function(){return this._applyCombination(qD,arguments)},complement:function(){return this._applyCombination($D,arguments)},monochromatic:function(){return this._applyCombination(XD,arguments)},splitcomplement:function(){return this._applyCombination(jD,arguments)},triad:function(){return this._applyCombination(qy,[3])},tetrad:function(){return this._applyCombination(qy,[4])}};Ve.fromRatio=function(r,e){if(Dh(r)=="object"){var n={};for(var i in r)r.hasOwnProperty(i)&&(i==="a"?n[i]=r[i]:n[i]=Zl(r[i]));r=n}return Ve(r,e)};function LD(r){var e={r:0,g:0,b:0},n=1,i=null,s=null,o=null,a=!1,l=!1;return typeof r=="string"&&(r=JD(r)),Dh(r)=="object"&&(Dr(r.r)&&Dr(r.g)&&Dr(r.b)?(e=ID(r.r,r.g,r.b),a=!0,l=String(r.r).substr(-1)==="%"?"prgb":"rgb"):Dr(r.h)&&Dr(r.s)&&Dr(r.v)?(i=Zl(r.s),s=Zl(r.v),e=FD(r.h,i,s),a=!0,l="hsv"):Dr(r.h)&&Dr(r.s)&&Dr(r.l)&&(i=Zl(r.s),o=Zl(r.l),e=UD(r.h,i,o),a=!0,l="hsl"),r.hasOwnProperty("a")&&(n=r.a)),n=gb(n),{ok:a,format:r.format||l,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:n}}function ID(r,e,n){return{r:Kt(r,255)*255,g:Kt(e,255)*255,b:Kt(n,255)*255}}function Hy(r,e,n){r=Kt(r,255),e=Kt(e,255),n=Kt(n,255);var i=Math.max(r,e,n),s=Math.min(r,e,n),o,a,l=(i+s)/2;if(i==s)o=a=0;else{var c=i-s;switch(a=l>.5?c/(2-i-s):c/(i+s),i){case r:o=(e-n)/c+(e<n?6:0);break;case e:o=(n-r)/c+2;break;case n:o=(r-e)/c+4;break}o/=6}return{h:o,s:a,l}}function UD(r,e,n){var i,s,o;r=Kt(r,360),e=Kt(e,100),n=Kt(n,100);function a(u,h,d){return d<0&&(d+=1),d>1&&(d-=1),d<1/6?u+(h-u)*6*d:d<1/2?h:d<2/3?u+(h-u)*(2/3-d)*6:u}if(e===0)i=s=o=n;else{var l=n<.5?n*(1+e):n+e-n*e,c=2*n-l;i=a(c,l,r+1/3),s=a(c,l,r),o=a(c,l,r-1/3)}return{r:i*255,g:s*255,b:o*255}}function Wy(r,e,n){r=Kt(r,255),e=Kt(e,255),n=Kt(n,255);var i=Math.max(r,e,n),s=Math.min(r,e,n),o,a,l=i,c=i-s;if(a=i===0?0:c/i,i==s)o=0;else{switch(i){case r:o=(e-n)/c+(e<n?6:0);break;case e:o=(n-r)/c+2;break;case n:o=(r-e)/c+4;break}o/=6}return{h:o,s:a,v:l}}function FD(r,e,n){r=Kt(r,360)*6,e=Kt(e,100),n=Kt(n,100);var i=Math.floor(r),s=r-i,o=n*(1-e),a=n*(1-s*e),l=n*(1-(1-s)*e),c=i%6,u=[n,a,o,o,l,n][c],h=[l,n,n,a,o,o][c],d=[o,o,l,n,n,a][c];return{r:u*255,g:h*255,b:d*255}}function $y(r,e,n,i){var s=[Ji(Math.round(r).toString(16)),Ji(Math.round(e).toString(16)),Ji(Math.round(n).toString(16))];return i&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)?s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0):s.join("")}function OD(r,e,n,i,s){var o=[Ji(Math.round(r).toString(16)),Ji(Math.round(e).toString(16)),Ji(Math.round(n).toString(16)),Ji(_b(i))];return s&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)&&o[3].charAt(0)==o[3].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0)+o[3].charAt(0):o.join("")}function jy(r,e,n,i){var s=[Ji(_b(i)),Ji(Math.round(r).toString(16)),Ji(Math.round(e).toString(16)),Ji(Math.round(n).toString(16))];return s.join("")}Ve.equals=function(r,e){return!r||!e?!1:Ve(r).toRgbString()==Ve(e).toRgbString()};Ve.random=function(){return Ve.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function BD(r,e){e=e===0?0:e||10;var n=Ve(r).toHsl();return n.s-=e/100,n.s=ad(n.s),Ve(n)}function kD(r,e){e=e===0?0:e||10;var n=Ve(r).toHsl();return n.s+=e/100,n.s=ad(n.s),Ve(n)}function zD(r){return Ve(r).desaturate(100)}function GD(r,e){e=e===0?0:e||10;var n=Ve(r).toHsl();return n.l+=e/100,n.l=ad(n.l),Ve(n)}function VD(r,e){e=e===0?0:e||10;var n=Ve(r).toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(255*-(e/100)))),n.g=Math.max(0,Math.min(255,n.g-Math.round(255*-(e/100)))),n.b=Math.max(0,Math.min(255,n.b-Math.round(255*-(e/100)))),Ve(n)}function HD(r,e){e=e===0?0:e||10;var n=Ve(r).toHsl();return n.l-=e/100,n.l=ad(n.l),Ve(n)}function WD(r,e){var n=Ve(r).toHsl(),i=(n.h+e)%360;return n.h=i<0?360+i:i,Ve(n)}function $D(r){var e=Ve(r).toHsl();return e.h=(e.h+180)%360,Ve(e)}function qy(r,e){if(isNaN(e)||e<=0)throw new Error("Argument to polyad must be a positive number");for(var n=Ve(r).toHsl(),i=[Ve(r)],s=360/e,o=1;o<e;o++)i.push(Ve({h:(n.h+o*s)%360,s:n.s,l:n.l}));return i}function jD(r){var e=Ve(r).toHsl(),n=e.h;return[Ve(r),Ve({h:(n+72)%360,s:e.s,l:e.l}),Ve({h:(n+216)%360,s:e.s,l:e.l})]}function qD(r,e,n){e=e||6,n=n||30;var i=Ve(r).toHsl(),s=360/n,o=[Ve(r)];for(i.h=(i.h-(s*e>>1)+720)%360;--e;)i.h=(i.h+s)%360,o.push(Ve(i));return o}function XD(r,e){e=e||6;for(var n=Ve(r).toHsv(),i=n.h,s=n.s,o=n.v,a=[],l=1/e;e--;)a.push(Ve({h:i,s,v:o})),o=(o+l)%1;return a}Ve.mix=function(r,e,n){n=n===0?0:n||50;var i=Ve(r).toRgb(),s=Ve(e).toRgb(),o=n/100,a={r:(s.r-i.r)*o+i.r,g:(s.g-i.g)*o+i.g,b:(s.b-i.b)*o+i.b,a:(s.a-i.a)*o+i.a};return Ve(a)};Ve.readability=function(r,e){var n=Ve(r),i=Ve(e);return(Math.max(n.getLuminance(),i.getLuminance())+.05)/(Math.min(n.getLuminance(),i.getLuminance())+.05)};Ve.isReadable=function(r,e,n){var i=Ve.readability(r,e),s,o;switch(o=!1,s=e2(n),s.level+s.size){case"AAsmall":case"AAAlarge":o=i>=4.5;break;case"AAlarge":o=i>=3;break;case"AAAsmall":o=i>=7;break}return o};Ve.mostReadable=function(r,e,n){var i=null,s=0,o,a,l,c;n=n||{},a=n.includeFallbackColors,l=n.level,c=n.size;for(var u=0;u<e.length;u++)o=Ve.readability(r,e[u]),o>s&&(s=o,i=Ve(e[u]));return Ve.isReadable(r,i,{level:l,size:c})||!a?i:(n.includeFallbackColors=!1,Ve.mostReadable(r,["#fff","#000"],n))};var Bp=Ve.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},YD=Ve.hexNames=KD(Bp);function KD(r){var e={};for(var n in r)r.hasOwnProperty(n)&&(e[r[n]]=n);return e}function gb(r){return r=parseFloat(r),(isNaN(r)||r<0||r>1)&&(r=1),r}function Kt(r,e){ZD(r)&&(r="100%");var n=QD(r);return r=Math.min(e,Math.max(0,parseFloat(r))),n&&(r=parseInt(r*e,10)/100),Math.abs(r-e)<1e-6?1:r%e/parseFloat(e)}function ad(r){return Math.min(1,Math.max(0,r))}function yi(r){return parseInt(r,16)}function ZD(r){return typeof r=="string"&&r.indexOf(".")!=-1&&parseFloat(r)===1}function QD(r){return typeof r=="string"&&r.indexOf("%")!=-1}function Ji(r){return r.length==1?"0"+r:""+r}function Zl(r){return r<=1&&(r=r*100+"%"),r}function _b(r){return Math.round(parseFloat(r)*255).toString(16)}function Xy(r){return yi(r)/255}var $i=function(){var r="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",n="(?:"+e+")|(?:"+r+")",i="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?",s="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?";return{CSS_UNIT:new RegExp(n),rgb:new RegExp("rgb"+i),rgba:new RegExp("rgba"+s),hsl:new RegExp("hsl"+i),hsla:new RegExp("hsla"+s),hsv:new RegExp("hsv"+i),hsva:new RegExp("hsva"+s),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function Dr(r){return!!$i.CSS_UNIT.exec(r)}function JD(r){r=r.replace(PD,"").replace(DD,"").toLowerCase();var e=!1;if(Bp[r])r=Bp[r],e=!0;else if(r=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var n;return(n=$i.rgb.exec(r))?{r:n[1],g:n[2],b:n[3]}:(n=$i.rgba.exec(r))?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=$i.hsl.exec(r))?{h:n[1],s:n[2],l:n[3]}:(n=$i.hsla.exec(r))?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=$i.hsv.exec(r))?{h:n[1],s:n[2],v:n[3]}:(n=$i.hsva.exec(r))?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=$i.hex8.exec(r))?{r:yi(n[1]),g:yi(n[2]),b:yi(n[3]),a:Xy(n[4]),format:e?"name":"hex8"}:(n=$i.hex6.exec(r))?{r:yi(n[1]),g:yi(n[2]),b:yi(n[3]),format:e?"name":"hex"}:(n=$i.hex4.exec(r))?{r:yi(n[1]+""+n[1]),g:yi(n[2]+""+n[2]),b:yi(n[3]+""+n[3]),a:Xy(n[4]+""+n[4]),format:e?"name":"hex8"}:(n=$i.hex3.exec(r))?{r:yi(n[1]+""+n[1]),g:yi(n[2]+""+n[2]),b:yi(n[3]+""+n[3]),format:e?"name":"hex"}:!1}function e2(r){var e,n;return r=r||{level:"AA",size:"small"},e=(r.level||"AA").toUpperCase(),n=(r.size||"small").toLowerCase(),e!=="AA"&&e!=="AAA"&&(e="AA"),n!=="small"&&n!=="large"&&(n="small"),{level:e,size:n}}function kp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function t2(r){if(Array.isArray(r))return r}function n2(r){if(Array.isArray(r))return kp(r)}function yb(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function i2(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function vb(r,e,n){return e=Ya(e),h2(r,dg()?Reflect.construct(e,n||[],Ya(r).constructor):e.apply(r,n))}function r2(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function xb(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function Mf(r,e){return r.get(yb(r,e))}function Yy(r,e,n){r2(r,e),e.set(r,n)}function Ky(r,e,n){return r.set(yb(r,e),n),n}function bb(r,e,n){if(dg())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return s}function s2(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,Mb(i.key),i)}}function Tb(r,e,n){return e&&s2(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function ld(r,e,n){return(e=Mb(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function zp(){return zp=typeof Reflect<"u"&&Reflect.get?Reflect.get.bind():function(r,e,n){var i=d2(r,e);if(i){var s=Object.getOwnPropertyDescriptor(i,e);return s.get?s.get.call(arguments.length<3?r:n):s.value}},zp.apply(null,arguments)}function Ya(r){return Ya=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ya(r)}function Sb(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(e&&e.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,"prototype",{writable:!1}),e&&Gp(r,e)}function dg(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(dg=function(){return!!r})()}function o2(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function a2(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function l2(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function c2(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Zy(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function u2(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Zy(Object(n),!0).forEach(function(i){ld(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):Zy(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function h2(r,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return i2(r)}function Gp(r,e){return Gp=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Gp(r,e)}function oc(r,e){return t2(r)||a2(r,e)||Eb(r,e)||l2()}function d2(r,e){for(;!{}.hasOwnProperty.call(r,e)&&(r=Ya(r))!==null;);return r}function Ef(r,e,n,i){var s=zp(Ya(r.prototype),e,n);return typeof s=="function"?function(o){return s.apply(n,o)}:s}function qi(r){return n2(r)||o2(r)||Eb(r)||c2()}function f2(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function Mb(r){var e=f2(r,"string");return typeof e=="symbol"?e:e+""}function Vp(r){"@babel/helpers - typeof";return Vp=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Vp(r)}function Eb(r,e){if(r){if(typeof r=="string")return kp(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?kp(r,e):void 0}}var wb=function(e){e instanceof Array?e.forEach(wb):(e.map&&e.map.dispose(),e.dispose())},Ab=function(e){e.geometry&&e.geometry.dispose(),e.material&&wb(e.material),e.texture&&e.texture.dispose(),e.children&&e.children.forEach(Ab)},Hp=function(e){for(;e.children.length;){var n=e.children[0];e.remove(n),Ab(n)}},wf=new WeakMap,ku=new WeakMap,Rl=function(r){function e(n){var i,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},o=s.dataBindAttr,a=o===void 0?"__data":o,l=s.objBindAttr,c=l===void 0?"__threeObj":l;return xb(this,e),i=vb(this,e),ld(i,"scene",void 0),Yy(i,wf,void 0),Yy(i,ku,void 0),i.scene=n,Ky(wf,i,a),Ky(ku,i,c),i.onRemoveObj(function(){}),i}return Sb(e,r),Tb(e,[{key:"onCreateObj",value:function(i){var s=this;return Ef(e,"onCreateObj",this)([function(o){var a=i(o);return o[Mf(ku,s)]=a,a[Mf(wf,s)]=o,s.scene.add(a),a}]),this}},{key:"onRemoveObj",value:function(i){var s=this;return Ef(e,"onRemoveObj",this)([function(o,a){var l=Ef(e,"getData",s)([o]);i(o,a),s.scene.remove(o),Hp(o),delete l[Mf(ku,s)]}]),this}}])}(CD),Cl=function(e){return isNaN(e)?parseInt(Ve(e).toHex(),16):e},Af=function(e){return isNaN(e)?Ve(e).getAlpha():1},p2=hg(cx);function Qy(r,e,n){!e||typeof n!="string"||r.filter(function(i){return!i[n]}).forEach(function(i){i[n]=p2(e(i))})}function m2(r,e){var n=r.nodes,i=r.links,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},o=s.nodeFilter,a=o===void 0?function(){return!0}:o,l=s.onLoopError,c=l===void 0?function(p){throw"Invalid DAG structure! Found cycle in node path: ".concat(p.join(" -> "),".")}:l,u={};n.forEach(function(p){return u[e(p)]={data:p,out:[],depth:-1,skip:!a(p)}}),i.forEach(function(p){var m=p.source,y=p.target,_=T(m),g=T(y);if(!u.hasOwnProperty(_))throw"Missing source node with id: ".concat(_);if(!u.hasOwnProperty(g))throw"Missing target node with id: ".concat(g);var v=u[_],x=u[g];v.out.push(x);function T(b){return Vp(b)==="object"?e(b):b}});var h=[];f(Object.values(u));var d=Object.assign.apply(Object,[{}].concat(qi(Object.entries(u).filter(function(p){var m=oc(p,2),y=m[1];return!y.skip}).map(function(p){var m=oc(p,2),y=m[0],_=m[1];return ld({},y,_.depth)}))));return d;function f(p){for(var m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],y=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,_=function(){var T=p[g];if(m.indexOf(T)!==-1){var b=[].concat(qi(m.slice(m.indexOf(T))),[T]).map(function(S){return e(S.data)});return h.some(function(S){return S.length===b.length&&S.every(function(M,A){return M===b[A]})})||(h.push(b),c(b)),1}y>T.depth&&(T.depth=y,f(T.out,[].concat(qi(m),[T]),y+(T.skip?0:1)))},g=0,v=p.length;g<v;g++)_()}}var et=window.THREE?window.THREE:{Group:sa,Mesh:mn,MeshLambertMaterial:Bx,Color:Ge,BufferGeometry:Hn,BufferAttribute:Nn,Matrix4:_t,Vector3:L,SphereGeometry:Xc,CylinderGeometry:jc,TubeGeometry:rg,ConeGeometry:tg,Line:nw,LineBasicMaterial:id,QuadraticBezierCurve3:ig,CubicBezierCurve3:Fx,Box3:vo},Jy={graph:TP,forcelayout:UP},g2=2,Rf=new et.BufferGeometry().setAttribute?"setAttribute":"addAttribute",zu=new et.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",_2=cl({props:{jsonUrl:{onChange:function(e,n){var i=this;e&&!n.fetchingJson&&(n.fetchingJson=!0,n.onLoading(),fetch(e).then(function(s){return s.json()}).then(function(s){n.fetchingJson=!1,n.onFinishLoading(s),i.graphData(s)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,n){n.engineRunning=!1}},numDimensions:{default:3,onChange:function(e,n){var i=n.d3ForceLayout.force("charge");i&&i.strength(e>2?-60:-30),e<3&&s(n.graphData.nodes,"z"),e<2&&s(n.graphData.nodes,"y");function s(o,a){o.forEach(function(l){delete l[a],delete l["v".concat(a)]})}}},dagMode:{onChange:function(e,n){!e&&n.forceEngine==="d3"&&(n.graphData.nodes||[]).forEach(function(i){return i.fx=i.fy=i.fz=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4},nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeVisibility:{default:!0},nodeThreeObject:{},nodeThreeObjectExtend:{default:!1},nodePositionUpdate:{triggerUpdate:!1},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkWidth:{},linkResolution:{default:6},linkCurvature:{default:0,triggerUpdate:!1},linkCurveRotation:{default:0,triggerUpdate:!1},linkMaterial:{},linkThreeObject:{},linkThreeObjectExtend:{default:!1},linkPositionUpdate:{triggerUpdate:!1},linkDirectionalArrowLength:{default:0},linkDirectionalArrowColor:{},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},linkDirectionalArrowResolution:{default:8},linkDirectionalParticles:{default:0},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleOffset:{default:0,triggerUpdate:!1},linkDirectionalParticleWidth:{default:.5},linkDirectionalParticleColor:{},linkDirectionalParticleResolution:{default:4},linkDirectionalParticleThreeObject:{},forceEngine:{default:"d3"},d3AlphaMin:{default:0},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.velocityDecay(e)}},ngraphPhysics:{default:{timeStep:20,gravity:-1.2,theta:.8,springLength:30,springCoefficient:8e-4,dragCoefficient:.02}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(e){return e._flushObjects=!0,e._rerender(),this},d3Force:function(e,n,i){return i===void 0?e.d3ForceLayout.force(n):(e.d3ForceLayout.force(n,i),this)},d3ReheatSimulation:function(e){return e.d3ForceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},tickFrame:function(e){var n=e.forceEngine!=="ngraph";return e.engineRunning&&i(),s(),o(),this;function i(){++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||n&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.layout[n?"tick":"step"](),e.onEngineTick());var a=Ie(e.nodeThreeObjectExtend);e.nodeDataMapper.entries().forEach(function(f){var p=oc(f,2),m=p[0],y=p[1];if(y){var _=n?m:e.layout.getNodePosition(m[e.nodeId]),g=a(m);(!e.nodePositionUpdate||!e.nodePositionUpdate(g?y.children[0]:y,{x:_.x,y:_.y,z:_.z},m)||g)&&(y.position.x=_.x,y.position.y=_.y||0,y.position.z=_.z||0)}});var l=Ie(e.linkWidth),c=Ie(e.linkCurvature),u=Ie(e.linkCurveRotation),h=Ie(e.linkThreeObjectExtend);e.linkDataMapper.entries().forEach(function(f){var p=oc(f,2),m=p[0],y=p[1];if(y){var _=n?m:e.layout.getLinkPosition(e.layout.graph.getLink(m.source,m.target).id),g=_[n?"source":"from"],v=_[n?"target":"to"];if(!(!g||!v||!g.hasOwnProperty("x")||!v.hasOwnProperty("x"))){d(m);var x=h(m);if(!(e.linkPositionUpdate&&e.linkPositionUpdate(x?y.children[1]:y,{start:{x:g.x,y:g.y,z:g.z},end:{x:v.x,y:v.y,z:v.z}},m)&&!x)){var T=30,b=m.__curve,S=y.children.length?y.children[0]:y;if(S.type==="Line"){if(b){var A=b.getPoints(T);S.geometry.getAttribute("position").array.length!==A.length*3&&S.geometry[Rf]("position",new et.BufferAttribute(new Float32Array(A.length*3),3)),S.geometry.setFromPoints(A)}else{var M=S.geometry.getAttribute("position");(!M||!M.array||M.array.length!==6)&&S.geometry[Rf]("position",M=new et.BufferAttribute(new Float32Array(2*3),3)),M.array[0]=g.x,M.array[1]=g.y||0,M.array[2]=g.z||0,M.array[3]=v.x,M.array[4]=v.y||0,M.array[5]=v.z||0,M.needsUpdate=!0}S.geometry.computeBoundingSphere()}else if(S.type==="Mesh")if(b){S.geometry.type.match(/^Tube(Buffer)?Geometry$/)||(S.position.set(0,0,0),S.rotation.set(0,0,0),S.scale.set(1,1,1));var Y=Math.ceil(l(m)*10)/10,$=Y/2,V=new et.TubeGeometry(b,T,$,e.linkResolution,!1);S.geometry.dispose(),S.geometry=V}else{if(!S.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)){var E=Math.ceil(l(m)*10)/10,w=E/2,N=new et.CylinderGeometry(w,w,1,e.linkResolution,1,!1);N[zu](new et.Matrix4().makeTranslation(0,1/2,0)),N[zu](new et.Matrix4().makeRotationX(Math.PI/2)),S.geometry.dispose(),S.geometry=N}var D=new et.Vector3(g.x,g.y||0,g.z||0),F=new et.Vector3(v.x,v.y||0,v.z||0),k=D.distanceTo(F);S.position.x=D.x,S.position.y=D.y,S.position.z=D.z,S.scale.z=k,S.parent.localToWorld(F),S.lookAt(F)}}}}});function d(f){var p=n?f:e.layout.getLinkPosition(e.layout.graph.getLink(f.source,f.target).id),m=p[n?"source":"from"],y=p[n?"target":"to"];if(!(!m||!y||!m.hasOwnProperty("x")||!y.hasOwnProperty("x"))){var _=c(f);if(!_)f.__curve=null;else{var g=new et.Vector3(m.x,m.y||0,m.z||0),v=new et.Vector3(y.x,y.y||0,y.z||0),x=g.distanceTo(v),T,b=u(f);if(x>0){var S=y.x-m.x,M=y.y-m.y||0,A=new et.Vector3().subVectors(v,g),E=A.clone().multiplyScalar(_).cross(S!==0||M!==0?new et.Vector3(0,0,1):new et.Vector3(0,1,0)).applyAxisAngle(A.normalize(),b).add(new et.Vector3().addVectors(g,v).divideScalar(2));T=new et.QuadraticBezierCurve3(g,E,v)}else{var w=_*70,N=-b,D=N+Math.PI/2;T=new et.CubicBezierCurve3(g,new et.Vector3(w*Math.cos(D),w*Math.sin(D),0).add(g),new et.Vector3(w*Math.cos(N),w*Math.sin(N),0).add(g),v)}f.__curve=T}}}}function s(){var a=Ie(e.linkDirectionalArrowRelPos),l=Ie(e.linkDirectionalArrowLength),c=Ie(e.nodeVal);e.arrowDataMapper.entries().forEach(function(u){var h=oc(u,2),d=h[0],f=h[1];if(f){var p=n?d:e.layout.getLinkPosition(e.layout.graph.getLink(d.source,d.target).id),m=p[n?"source":"from"],y=p[n?"target":"to"];if(!(!m||!y||!m.hasOwnProperty("x")||!y.hasOwnProperty("x"))){var _=Math.cbrt(Math.max(0,c(m)||1))*e.nodeRelSize,g=Math.cbrt(Math.max(0,c(y)||1))*e.nodeRelSize,v=l(d),x=a(d),T=d.__curve?function(w){return d.__curve.getPoint(w)}:function(w){var N=function(F,k,Y,$){return k[F]+(Y[F]-k[F])*$||0};return{x:N("x",m,y,w),y:N("y",m,y,w),z:N("z",m,y,w)}},b=d.__curve?d.__curve.getLength():Math.sqrt(["x","y","z"].map(function(w){return Math.pow((y[w]||0)-(m[w]||0),2)}).reduce(function(w,N){return w+N},0)),S=_+v+(b-_-g-v)*x,M=T(S/b),A=T((S-v)/b);["x","y","z"].forEach(function(w){return f.position[w]=A[w]});var E=bb(et.Vector3,qi(["x","y","z"].map(function(w){return M[w]})));f.parent.localToWorld(E),f.lookAt(E)}}})}function o(){var a=Ie(e.linkDirectionalParticleSpeed),l=Ie(e.linkDirectionalParticleOffset);e.graphData.links.forEach(function(c){var u=e.particlesDataMapper.getObj(c),h=u&&u.children,d=c.__singleHopPhotonsObj&&c.__singleHopPhotonsObj.children;if(!((!d||!d.length)&&(!h||!h.length))){var f=n?c:e.layout.getLinkPosition(e.layout.graph.getLink(c.source,c.target).id),p=f[n?"source":"from"],m=f[n?"target":"to"];if(!(!p||!m||!p.hasOwnProperty("x")||!m.hasOwnProperty("x"))){var y=a(c),_=Math.abs(l(c)),g=c.__curve?function(x){return c.__curve.getPoint(x)}:function(x){var T=function(S,M,A,E){return M[S]+(A[S]-M[S])*E||0};return{x:T("x",p,m,x),y:T("y",p,m,x),z:T("z",p,m,x)}},v=[].concat(qi(h||[]),qi(d||[]));v.forEach(function(x,T){var b=x.parent.__linkThreeObjType==="singleHopPhotons";if(x.hasOwnProperty("__progressRatio")||(x.__progressRatio=b?0:(T+_)/h.length),x.__progressRatio+=y,x.__progressRatio>=1)if(!b)x.__progressRatio=x.__progressRatio%1;else{x.parent.remove(x),Hp(x);return}var S=x.__progressRatio,M=g(S);x.geometry.type!=="SphereGeometry"&&x.lookAt(M.x,M.y,M.z),["x","y","z"].forEach(function(A){return x.position[A]=M[A]})})}}})}},emitParticle:function(e,n){if(n&&e.graphData.links.includes(n)){if(!n.__singleHopPhotonsObj){var i=new et.Group;i.__linkThreeObjType="singleHopPhotons",n.__singleHopPhotonsObj=i,e.graphScene.add(i)}var s=Ie(e.linkDirectionalParticleThreeObject)(n);if(s&&e.linkDirectionalParticleThreeObject===s&&(s=s.clone()),!s){var o=Ie(e.linkDirectionalParticleWidth),a=Math.ceil(o(n)*10)/10/2,l=e.linkDirectionalParticleResolution,c=new et.SphereGeometry(a,l,l),u=Ie(e.linkColor),h=Ie(e.linkDirectionalParticleColor),d=h(n)||u(n)||"#f0f0f0",f=new et.Color(Cl(d)),p=e.linkOpacity*3,m=new et.MeshLambertMaterial({color:f,transparent:!0,opacity:p});s=new et.Mesh(c,m)}n.__singleHopPhotonsObj.add(s)}return this},getGraphBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0};if(!e.initialised)return null;var i=function s(o){var a=[];if(o.geometry){o.geometry.computeBoundingBox();var l=new et.Box3;l.copy(o.geometry.boundingBox).applyMatrix4(o.matrixWorld),a.push(l)}return a.concat.apply(a,qi((o.children||[]).filter(function(c){return!c.hasOwnProperty("__graphObjType")||c.__graphObjType==="node"&&n(c.__data)}).map(s)))}(e.graphScene);return i.length?Object.assign.apply(Object,qi(["x","y","z"].map(function(s){return ld({},s,[Mp(i,function(o){return o.min[s]}),Ep(i,function(o){return o.max[s]})])}))):null}},stateInit:function(){return{d3ForceLayout:ob().force("link",sb()).force("charge",ab()).force("center",eb()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,n){n.graphScene=e,n.nodeDataMapper=new Rl(e,{objBindAttr:"__threeObj"}),n.linkDataMapper=new Rl(e,{objBindAttr:"__lineObj"}),n.arrowDataMapper=new Rl(e,{objBindAttr:"__arrowObj"}),n.particlesDataMapper=new Rl(e,{objBindAttr:"__photonsObj"})},update:function(e,n){var i=function(z){return z.some(function(Z){return n.hasOwnProperty(Z)})};if(e.engineRunning=!1,typeof e.onUpdate=="function"&&e.onUpdate(),e.nodeAutoColorBy!==null&&i(["nodeAutoColorBy","graphData","nodeColor"])&&Qy(e.graphData.nodes,Ie(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&i(["linkAutoColorBy","graphData","linkColor"])&&Qy(e.graphData.links,Ie(e.linkAutoColorBy),e.linkColor),e._flushObjects||i(["graphData","nodeThreeObject","nodeThreeObjectExtend","nodeVal","nodeColor","nodeVisibility","nodeRelSize","nodeResolution","nodeOpacity"])){var s=Ie(e.nodeThreeObject),o=Ie(e.nodeThreeObjectExtend),a=Ie(e.nodeVal),l=Ie(e.nodeColor),c=Ie(e.nodeVisibility),u={},h={};(e._flushObjects||i(["nodeThreeObject","nodeThreeObjectExtend"]))&&e.nodeDataMapper.clear(),e.nodeDataMapper.onCreateObj(function(q){var z=s(q),Z=o(q);z&&e.nodeThreeObject===z&&(z=z.clone());var pe;return z&&!Z?pe=z:(pe=new et.Mesh,pe.__graphDefaultObj=!0,z&&Z&&pe.add(z)),pe.__graphObjType="node",pe}).onUpdateObj(function(q,z){if(q.__graphDefaultObj){var Z=a(z)||1,pe=Math.cbrt(Z)*e.nodeRelSize,Ne=e.nodeResolution;(!q.geometry.type.match(/^Sphere(Buffer)?Geometry$/)||q.geometry.parameters.radius!==pe||q.geometry.parameters.widthSegments!==Ne)&&(u.hasOwnProperty(Z)||(u[Z]=new et.SphereGeometry(pe,Ne,Ne)),q.geometry.dispose(),q.geometry=u[Z]);var Me=l(z),We=new et.Color(Cl(Me||"#ffffaa")),Ft=e.nodeOpacity*Af(Me);(q.material.type!=="MeshLambertMaterial"||!q.material.color.equals(We)||q.material.opacity!==Ft)&&(h.hasOwnProperty(Me)||(h[Me]=new et.MeshLambertMaterial({color:We,transparent:!0,opacity:Ft})),q.material.dispose(),q.material=h[Me])}}).digest(e.graphData.nodes.filter(c))}if(e._flushObjects||i(["graphData","linkThreeObject","linkThreeObjectExtend","linkMaterial","linkColor","linkWidth","linkVisibility","linkResolution","linkOpacity","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","linkDirectionalParticleThreeObject"])){var d=Ie(e.linkThreeObject),f=Ie(e.linkThreeObjectExtend),p=Ie(e.linkMaterial),m=Ie(e.linkVisibility),y=Ie(e.linkColor),_=Ie(e.linkWidth),g={},v={},x={},T=e.graphData.links.filter(m);if((e._flushObjects||i(["linkThreeObject","linkThreeObjectExtend","linkWidth"]))&&e.linkDataMapper.clear(),e.linkDataMapper.onRemoveObj(function(q){var z=q.__data&&q.__data.__singleHopPhotonsObj;z&&(z.parent.remove(z),Hp(z),delete q.__data.__singleHopPhotonsObj)}).onCreateObj(function(q){var z=d(q),Z=f(q);z&&e.linkThreeObject===z&&(z=z.clone());var pe;if(!z||Z){var Ne=!!_(q);if(Ne)pe=new et.Mesh;else{var Me=new et.BufferGeometry;Me[Rf]("position",new et.BufferAttribute(new Float32Array(2*3),3)),pe=new et.Line(Me)}}var We;return z?Z?(We=new et.Group,We.__graphDefaultObj=!0,We.add(pe),We.add(z)):We=z:(We=pe,We.__graphDefaultObj=!0),We.renderOrder=10,We.__graphObjType="link",We}).onUpdateObj(function(q,z){if(q.__graphDefaultObj){var Z=q.children.length?q.children[0]:q,pe=Math.ceil(_(z)*10)/10,Ne=!!pe;if(Ne){var Me=pe/2,We=e.linkResolution;if(!Z.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)||Z.geometry.parameters.radiusTop!==Me||Z.geometry.parameters.radialSegments!==We){if(!g.hasOwnProperty(pe)){var Ft=new et.CylinderGeometry(Me,Me,1,We,1,!1);Ft[zu](new et.Matrix4().makeTranslation(0,1/2,0)),Ft[zu](new et.Matrix4().makeRotationX(Math.PI/2)),g[pe]=Ft}Z.geometry.dispose(),Z.geometry=g[pe]}}var U=p(z);if(U)Z.material=U;else{var bt=y(z),rt=new et.Color(Cl(bt||"#f0f0f0")),Xe=e.linkOpacity*Af(bt),Le=Ne?"MeshLambertMaterial":"LineBasicMaterial";if(Z.material.type!==Le||!Z.material.color.equals(rt)||Z.material.opacity!==Xe){var Rt=Ne?v:x;Rt.hasOwnProperty(bt)||(Rt[bt]=new et[Le]({color:rt,transparent:Xe<1,opacity:Xe,depthWrite:Xe>=1})),Z.material.dispose(),Z.material=Rt[bt]}}}}).digest(T),e.linkDirectionalArrowLength||n.hasOwnProperty("linkDirectionalArrowLength")){var b=Ie(e.linkDirectionalArrowLength),S=Ie(e.linkDirectionalArrowColor);e.arrowDataMapper.onCreateObj(function(){var q=new et.Mesh(void 0,new et.MeshLambertMaterial({transparent:!0}));return q.__linkThreeObjType="arrow",q}).onUpdateObj(function(q,z){var Z=b(z),pe=e.linkDirectionalArrowResolution;if(!q.geometry.type.match(/^Cone(Buffer)?Geometry$/)||q.geometry.parameters.height!==Z||q.geometry.parameters.radialSegments!==pe){var Ne=new et.ConeGeometry(Z*.25,Z,pe);Ne.translate(0,Z/2,0),Ne.rotateX(Math.PI/2),q.geometry.dispose(),q.geometry=Ne}var Me=S(z)||y(z)||"#f0f0f0";q.material.color=new et.Color(Cl(Me)),q.material.opacity=e.linkOpacity*3*Af(Me)}).digest(T.filter(b))}if(e.linkDirectionalParticles||n.hasOwnProperty("linkDirectionalParticles")){var M=Ie(e.linkDirectionalParticles),A=Ie(e.linkDirectionalParticleWidth),E=Ie(e.linkDirectionalParticleColor),w=Ie(e.linkDirectionalParticleThreeObject),N={},D={};e.particlesDataMapper.onCreateObj(function(){var q=new et.Group;return q.__linkThreeObjType="photons",q.__photonDataMapper=new Rl(q),q}).onUpdateObj(function(q,z){var Z=!!q.children.length&&q.children[0],pe=w(z),Ne,Me;if(pe)Ne=pe.geometry,Me=pe.material;else{var We=Math.ceil(A(z)*10)/10/2,Ft=e.linkDirectionalParticleResolution;Z&&Z.geometry.parameters.radius===We&&Z.geometry.parameters.widthSegments===Ft?Ne=Z.geometry:(D.hasOwnProperty(We)||(D[We]=new et.SphereGeometry(We,Ft,Ft)),Ne=D[We]);var U=E(z)||y(z)||"#f0f0f0",bt=new et.Color(Cl(U)),rt=e.linkOpacity*3;Z&&Z.material.color.equals(bt)&&Z.material.opacity===rt?Me=Z.material:(N.hasOwnProperty(U)||(N[U]=new et.MeshLambertMaterial({color:bt,transparent:!0,opacity:rt})),Me=N[U])}Z&&(Z.geometry!==Ne&&Z.geometry.dispose(),Z.material!==Me&&Z.material.dispose());var Xe=Math.round(Math.abs(M(z)));q.__photonDataMapper.id(function(Le){return Le.idx}).onCreateObj(function(){return new et.Mesh(Ne,Me)}).onUpdateObj(function(Le){Le.geometry=Ne,Le.material=Me}).digest(qi(new Array(Xe)).map(function(Le,Rt){return{idx:Rt}}))}).digest(T.filter(M))}}if(e._flushObjects=!1,i(["graphData","nodeId","linkSource","linkTarget","numDimensions","forceEngine","dagMode","dagNodeFilter","dagLevelDistance"])){e.engineRunning=!1,e.graphData.links.forEach(function(q){q.source=q[e.linkSource],q.target=q[e.linkTarget]});var F=e.forceEngine!=="ngraph",k;if(F){(k=e.d3ForceLayout).stop().alpha(1).numDimensions(e.numDimensions).nodes(e.graphData.nodes);var Y=e.d3ForceLayout.force("link");Y&&Y.id(function(q){return q[e.nodeId]}).links(e.graphData.links);var $=e.dagMode&&m2(e.graphData,function(q){return q[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),V=Math.max.apply(Math,qi(Object.values($||[]))),B=e.dagLevelDistance||e.graphData.nodes.length/(V||1)*g2*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu","zin","zout"].includes(n.dagMode)){var J=["lr","rl"].includes(n.dagMode)?"fx":["td","bu"].includes(n.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(q){return delete q[J]})}if(["lr","rl","td","bu","zin","zout"].includes(e.dagMode)){var X=["rl","td","zout"].includes(e.dagMode),re=function(z){return($[z[e.nodeId]]-V/2)*B*(X?-1:1)},fe=["lr","rl"].includes(e.dagMode)?"fx":["td","bu"].includes(e.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(q){return q[fe]=re(q)})}e.d3ForceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?lb(function(q){var z=$[q[e.nodeId]]||-1;return(e.dagMode==="radialin"?V-z:z)*B}).strength(function(q){return e.dagNodeFilter(q)?1:0}):null)}else{var De=Jy.graph();e.graphData.nodes.forEach(function(q){De.addNode(q[e.nodeId])}),e.graphData.links.forEach(function(q){De.addLink(q.source,q.target)}),k=Jy.forcelayout(De,u2({dimensions:e.numDimensions},e.ngraphPhysics)),k.graph=De}for(var it=0;it<e.warmupTicks&&!(F&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin);it++)k[F?"tick":"step"]();e.layout=k,this.resetCountdown()}e.engineRunning=!0,e.onFinishUpdate()}});function y2(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,i=function(s){function o(){var a;xb(this,o);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return a=vb(this,o,[].concat(c)),a.__kapsuleInstance=bb(r,[].concat(qi(n?[a]:[]),c)),a}return Sb(o,s),Tb(o)}(e);return Object.keys(r()).forEach(function(s){return i.prototype[s]=function(){var o,a=(o=this.__kapsuleInstance)[s].apply(o,arguments);return a===this.__kapsuleInstance?this:a}}),i}var v2=window.THREE?window.THREE:{Group:sa},Rb=y2(_2,v2.Group,!0);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const x2=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],Cf=new WeakMap;class b2{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=x2,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const n=e.getMRT();return n!==null&&n.has("velocity")}getRenderObjectData(e){let n=this.renderObjects.get(e);if(n===void 0){const{geometry:i,material:s,object:o}=e;if(n={material:this.getMaterialData(s),geometry:{id:i.id,attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:o.matrixWorld.clone()},o.center&&(n.center=o.center.clone()),o.morphTargetInfluences&&(n.morphTargetInfluences=o.morphTargetInfluences.slice()),e.bundle!==null&&(n.version=e.bundle.version),n.material.transmission>0){const{width:a,height:l}=e.context;n.bufferWidth=a,n.bufferHeight=l}n.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,n)}return n}getAttributesData(e){const n={};for(const i in e){const s=e[i];n[i]={version:s.version}}return n}containsNode(e){const n=e.material;for(const i in n)if(n[i]&&n[i].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const n={};for(const i of this.refreshUniforms){const s=e[i];s!=null&&(typeof s=="object"&&s.clone!==void 0?s.isTexture===!0?n[i]={id:s.id,version:s.version}:n[i]=s.clone():n[i]=s)}return n}equals(e,n){const{object:i,material:s,geometry:o}=e,a=this.getRenderObjectData(e);if(a.worldMatrix.equals(i.matrixWorld)!==!0)return a.worldMatrix.copy(i.matrixWorld),!1;const l=a.material;for(const _ in l){const g=l[_],v=s[_];if(g.equals!==void 0){if(g.equals(v)===!1)return g.copy(v),!1}else if(v.isTexture===!0){if(g.id!==v.id||g.version!==v.version)return g.id=v.id,g.version=v.version,!1}else if(g!==v)return l[_]=v,!1}if(l.transmission>0){const{width:_,height:g}=e.context;if(a.bufferWidth!==_||a.bufferHeight!==g)return a.bufferWidth=_,a.bufferHeight=g,!1}const c=a.geometry,u=o.attributes,h=c.attributes,d=Object.keys(h),f=Object.keys(u);if(c.id!==o.id)return c.id=o.id,!1;if(d.length!==f.length)return a.geometry.attributes=this.getAttributesData(u),!1;for(const _ of d){const g=h[_],v=u[_];if(v===void 0)return delete h[_],!1;if(g.version!==v.version)return g.version=v.version,!1}const p=o.index,m=c.indexVersion,y=p?p.version:null;if(m!==y)return c.indexVersion=y,!1;if(c.drawRange.start!==o.drawRange.start||c.drawRange.count!==o.drawRange.count)return c.drawRange.start=o.drawRange.start,c.drawRange.count=o.drawRange.count,!1;if(a.morphTargetInfluences){let _=!1;for(let g=0;g<a.morphTargetInfluences.length;g++)a.morphTargetInfluences[g]!==i.morphTargetInfluences[g]&&(_=!0);if(_)return!0}if(a.lights){for(let _=0;_<n.length;_++)if(a.lights[_].map!==n[_].map)return!1}return a.center&&a.center.equals(i.center)===!1?(a.center.copy(i.center),!0):(e.bundle!==null&&(a.version=e.bundle.version),!0)}getLightsData(e){const n=[];for(const i of e)i.isSpotLight===!0&&i.map!==null&&n.push({map:i.map.version});return n}getLights(e,n){if(Cf.has(e)){const s=Cf.get(e);if(s.renderId===n)return s.lightsData}const i=this.getLightsData(e.getLights());return Cf.set(e,{renderId:n,lightsData:i}),i}needsRefresh(e,n){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(n.renderer))return!0;const{renderId:i}=n;if(this.renderId!==i)return this.renderId=i,!0;const s=e.object.static===!0,o=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(s||o)return!1;const a=this.getLights(e.lightsNode,i);return this.equals(e,a)!==!0}}function Nc(r,e=0){let n=3735928559^e,i=1103547991^e;if(r instanceof Array)for(let s=0,o;s<r.length;s++)o=r[s],n=Math.imul(n^o,2654435761),i=Math.imul(i^o,1597334677);else for(let s=0,o;s<r.length;s++)o=r.charCodeAt(s),n=Math.imul(n^o,2654435761),i=Math.imul(i^o,1597334677);return n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)}const T2=r=>Nc(r),fg=r=>Nc(r),Lh=(...r)=>Nc(r);function Cb(r,e=!1){const n=[];r.isNode===!0&&n.push(r.id);for(const{property:i,childNode:s}of Ih(r))n.push(Nc(i.slice(0,-4)),s.getCacheKey(e));return Nc(n)}function*Ih(r,e=!1){for(const n of Object.getOwnPropertyNames(r)){if(n.startsWith("_")===!0)continue;const i=r[n];if(Array.isArray(i)===!0)for(let s=0;s<i.length;s++){const o=i[s];o&&(o.isNode===!0||e&&typeof o.toJSON=="function")&&(yield{property:n,index:s,childNode:o})}else if(i&&i.isNode===!0)yield{property:n,childNode:i};else if(i&&Object.getPrototypeOf(i)===Object.prototype)for(const s in i){if(s.startsWith("_")===!0)continue;const o=i[s];o&&(o.isNode===!0||e&&typeof o.toJSON=="function")&&(yield{property:n,index:s,childNode:o})}}}const S2=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),ev=new WeakMap;function M2(r){return S2.get(r)}function Uh(r){if(r==null)return null;const e=typeof r;return r.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":r.isVector2===!0?"vec2":r.isVector3===!0?"vec3":r.isVector4===!0?"vec4":r.isMatrix2===!0?"mat2":r.isMatrix3===!0?"mat3":r.isMatrix4===!0?"mat4":r.isColor===!0?"color":r instanceof ArrayBuffer?"ArrayBuffer":null}function pg(r,...e){const n=r?r.slice(-4):void 0;return e.length===1&&(n==="vec2"?e=[e[0],e[0]]:n==="vec3"?e=[e[0],e[0],e[0]]:n==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),r==="color"?new Ge(...e):n==="vec2"?new ue(...e):n==="vec3"?new L(...e):n==="vec4"?new Qe(...e):n==="mat2"?new rd(...e):n==="mat3"?new at(...e):n==="mat4"?new _t(...e):r==="bool"?e[0]||!1:r==="float"||r==="int"||r==="uint"?e[0]||0:r==="string"?e[0]||"":r==="ArrayBuffer"?w2(e[0]):null}function Nb(r){let e=ev.get(r);return e===void 0&&(e={},ev.set(r,e)),e}function E2(r){let e="";const n=new Uint8Array(r);for(let i=0;i<n.length;i++)e+=String.fromCharCode(n[i]);return btoa(e)}function w2(r){return Uint8Array.from(atob(r),e=>e.charCodeAt(0)).buffer}const Gu={VERTEX:"vertex"},ft={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},pr={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},A2=["fragment","vertex"],tv=["setup","analyze","generate"],nv=[...A2,"compute"],ul=["x","y","z","w"],R2={analyze:"setup",generate:"analyze"};let C2=0;class ke extends is{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=ft.NONE,this.updateBeforeType=ft.NONE,this.updateAfterType=ft.NONE,this.uuid=wh.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:C2++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,n){return this.updateType=n,this.update=e.bind(this),this}onFrameUpdate(e){return this.onUpdate(e,ft.FRAME)}onRenderUpdate(e){return this.onUpdate(e,ft.RENDER)}onObjectUpdate(e){return this.onUpdate(e,ft.OBJECT)}onReference(e){return this.updateReference=e.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Ih(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const n of this.getChildren())n.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Lh(Cb(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const n=this.getNodeType(e);return e.getElementType(n)}getMemberType(){return"void"}getNodeType(e){const n=e.getNodeProperties(this);return n.outputNode?n.outputNode.getNodeType(e):this.nodeType}getShared(e){const n=this.getHash(e);return e.getNodeFromHash(n)||this}getArrayCount(){return null}setup(e){const n=e.getNodeProperties(this);let i=0;for(const s of this.getChildren())n["node"+i++]=s;return n.outputNode||null}analyze(e,n=null){const i=e.increaseUsage(this);if(this.parents===!0){const s=e.getDataFromNode(this,"any");s.stages=s.stages||{},s.stages[e.shaderStage]=s.stages[e.shaderStage]||[],s.stages[e.shaderStage].push(n)}if(i===1){const s=e.getNodeProperties(this);for(const o of Object.values(s))o&&o.isNode===!0&&o.build(e,this)}}generate(e,n){const{outputNode:i}=e.getNodeProperties(this);if(i&&i.isNode===!0)return i.build(e,n)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,n=null){const i=this.getShared(e);if(this!==i)return i.build(e,n);const s=e.getDataFromNode(this);s.buildStages=s.buildStages||{},s.buildStages[e.buildStage]=!0;const o=R2[e.buildStage];if(o&&s.buildStages[o]!==!0){const c=e.getBuildStage();e.setBuildStage(o),this.build(e),e.setBuildStage(c)}e.addNode(this),e.addChain(this);let a=null;const l=e.getBuildStage();if(l==="setup"){this.updateReference(e);const c=e.getNodeProperties(this);if(c.initialized!==!0){c.initialized=!0,c.outputNode=this.setup(e)||c.outputNode||null;for(const u of Object.values(c))if(u&&u.isNode===!0){if(u.parents===!0){const h=e.getNodeProperties(u);h.parents=h.parents||[],h.parents.push(this)}u.build(e)}}a=c.outputNode}else if(l==="analyze")this.analyze(e,n);else if(l==="generate"){if(this.generate.length===1){const u=this.getNodeType(e),h=e.getDataFromNode(this);a=h.snippet,a===void 0?h.generated===void 0?(h.generated=!0,a=this.generate(e)||"",h.snippet=a):(console.warn("THREE.Node: Recursion detected.",this),a="/* Recursion detected. */"):h.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),a=e.format(a,u,n)}else a=this.generate(e,n)||"";a===""&&n!==null&&n!=="void"&&n!=="OutputType"&&(console.error(`THREE.TSL: Invalid generated code, expected a "${n}".`),a=e.generateConst(n))}return e.removeChain(this),e.addSequentialNode(this),a}getSerializeChildren(){return Ih(this)}serialize(e){const n=this.getSerializeChildren(),i={};for(const{property:s,index:o,childNode:a}of n)o!==void 0?(i[s]===void 0&&(i[s]=Number.isInteger(o)?[]:{}),i[s][o]=a.toJSON(e.meta).uuid):i[s]=a.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(e.inputNodes!==void 0){const n=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const s=[];for(const o of e.inputNodes[i])s.push(n[o]);this[i]=s}else if(typeof e.inputNodes[i]=="object"){const s={};for(const o in e.inputNodes[i]){const a=e.inputNodes[i][o];s[o]=n[a]}this[i]=s}else{const s=e.inputNodes[i];this[i]=n[s]}}}toJSON(e){const{uuid:n,type:i}=this,s=e===void 0||typeof e=="string";s&&(e={textures:{},images:{},nodes:{}});let o=e.nodes[n];o===void 0&&(o={uuid:n,type:i,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},s!==!0&&(e.nodes[o.uuid]=o),this.serialize(o),delete o.meta);function a(l){const c=[];for(const u in l){const h=l[u];delete h.metadata,c.push(h)}return c}if(s){const l=a(e.textures),c=a(e.images),u=a(e.nodes);l.length>0&&(o.textures=l),c.length>0&&(o.images=c),u.length>0&&(o.nodes=u)}return o}}class Kc extends ke{static get type(){return"ArrayElementNode"}constructor(e,n){super(),this.node=e,this.indexNode=n,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const n=this.indexNode.getNodeType(e),i=this.node.build(e),s=this.indexNode.build(e,!e.isVector(n)&&e.isInteger(n)?n:"uint");return`${i}[ ${s} ]`}}class Pb extends ke{static get type(){return"ConvertNode"}constructor(e,n){super(),this.node=e,this.convertTo=n}getNodeType(e){const n=this.node.getNodeType(e);let i=null;for(const s of this.convertTo.split("|"))(i===null||e.getTypeLength(n)===e.getTypeLength(s))&&(i=s);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,n){const i=this.node,s=this.getNodeType(e),o=i.build(e,s);return e.format(o,s,n)}}class Tn extends ke{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,n){if(e.getBuildStage()==="generate"){const s=e.getVectorType(this.getNodeType(e,n)),o=e.getDataFromNode(this);if(o.propertyName!==void 0)return e.format(o.propertyName,s,n);if(s!=="void"&&n!=="void"&&this.hasDependencies(e)){const a=super.build(e,s),l=e.getVarFromNode(this,null,s),c=e.getPropertyName(l);return e.addLineFlowCode(`${c} = ${a}`,this),o.snippet=a,o.propertyName=c,e.format(o.propertyName,s,n)}}return super.build(e,n)}}class N2 extends Tn{static get type(){return"JoinNode"}constructor(e=[],n=null){super(n),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((n,i)=>n+e.getTypeLength(i.getNodeType(e)),0))}generate(e,n){const i=this.getNodeType(e),s=e.getTypeLength(i),o=this.nodes,a=e.getComponentType(i),l=[];let c=0;for(const h of o){if(c>=s){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${i}()' type.`);break}let d=h.getNodeType(e),f=e.getTypeLength(d),p;if(c+f>s&&(console.error(`THREE.TSL: Length of '${i}()' data exceeds maximum length of output type.`),f=s-c,d=e.getTypeFromLength(f)),c+=f,p=h.build(e,d),e.getComponentType(d)!==a){const y=e.getTypeFromLength(f,a);p=e.format(p,d,y)}l.push(p)}const u=`${e.getType(i)}( ${l.join(", ")} )`;return e.format(u,i,n)}}const P2=ul.join("");class D2 extends ke{static get type(){return"SplitNode"}constructor(e,n="x"){super(),this.node=e,this.components=n,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const n of this.components)e=Math.max(ul.indexOf(n)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}getScope(){return this.node.getScope()}generate(e,n){const i=this.node,s=e.getTypeLength(i.getNodeType(e));let o=null;if(s>1){let a=null;this.getVectorLength()>=s&&(a=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const c=i.build(e,a);this.components.length===s&&this.components===P2.slice(0,this.components.length)?o=e.format(c,a,n):o=e.format(`${c}.${this.components}`,this.getNodeType(e),n)}else o=i.build(e,n);return o}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class L2 extends Tn{static get type(){return"SetNode"}constructor(e,n,i){super(),this.sourceNode=e,this.components=n,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:n,components:i,targetNode:s}=this,o=this.getNodeType(e),a=e.getComponentType(s.getNodeType(e)),l=e.getTypeFromLength(i.length,a),c=s.build(e,l),u=n.build(e,o),h=e.getTypeLength(o),d=[];for(let f=0;f<h;f++){const p=ul[f];p===i[0]?(d.push(c),f+=i.length-1):d.push(u+"."+p)}return`${e.getType(o)}( ${d.join(", ")} )`}}class I2 extends Tn{static get type(){return"FlipNode"}constructor(e,n){super(),this.sourceNode=e,this.components=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:n,sourceNode:i}=this,s=this.getNodeType(e),o=i.build(e),a=e.getVarFromNode(this),l=e.getPropertyName(a);e.addLineFlowCode(l+" = "+o,this);const c=e.getTypeLength(s),u=[];let h=0;for(let d=0;d<c;d++){const f=ul[d];f===n[h]?(u.push("1.0 - "+(l+"."+f)),h++):u.push(l+"."+f)}return`${e.getType(s)}( ${u.join(", ")} )`}}class mg extends ke{static get type(){return"InputNode"}constructor(e,n=null){super(n),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Uh(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Uh(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=E2(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?pg(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const iv=/float|u?int/;class Sr extends mg{static get type(){return"ConstNode"}constructor(e,n=null){super(e,n),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,n){const i=this.getNodeType(e);return iv.test(i)&&iv.test(n)?e.generateConst(n,this.value):e.format(this.generateConst(e),i,n)}}class U2 extends ke{static get type(){return"MemberNode"}constructor(e,n){super(),this.structNode=e,this.property=n,this.isMemberNode=!0}hasMember(e){return this.structNode.isMemberNode&&this.structNode.hasMember(e)===!1?!1:this.structNode.getMemberType(e,this.property)!=="void"}getNodeType(e){return this.hasMember(e)===!1?"float":this.structNode.getMemberType(e,this.property)}getMemberType(e,n){if(this.hasMember(e)===!1)return"float";const i=this.getNodeType(e);return e.getStructTypeNode(i).getMemberType(e,n)}generate(e){if(this.hasMember(e)===!1){console.warn(`THREE.TSL: Member "${this.property}" does not exist in struct.`);const i=this.getNodeType(e);return e.generateConst(i)}return this.structNode.build(e)+"."+this.property}}let go=null;const Wp=new Map;function te(r,e){if(Wp.has(r)){console.warn(`THREE.TSL: Redefinition of method chaining '${r}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${r} is not a function`);Wp.set(r,e),r!=="assign"&&(ke.prototype[r]=function(...n){return this.isStackNode?this.add(e(...n)):e(this,...n)},ke.prototype[r+"Assign"]=function(...n){return this.isStackNode?this.assign(n[0],e(...n)):this.assign(e(this,...n))})}const F2=r=>r.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),rv=r=>F2(r).split("").sort().join("");ke.prototype.assign=function(...r){if(this.isStackNode!==!0)return go!==null?go.assign(this,...r):console.error("THREE.TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const e=Wp.get("assign");return this.add(e(...r))}};ke.prototype.toVarIntent=function(){return this};ke.prototype.get=function(r){return new U2(this,r)};const ac={};function Vu(r,e,n){ac[r]=ac[e]=ac[n]={get(){this._cache=this._cache||{};let a=this._cache[r];return a===void 0&&(a=new D2(this,r),this._cache[r]=a),a},set(a){this[r].assign(he(a))}};const i=r.toUpperCase(),s=e.toUpperCase(),o=n.toUpperCase();ke.prototype["set"+i]=ke.prototype["set"+s]=ke.prototype["set"+o]=function(a){const l=rv(r);return new L2(this,l,he(a))},ke.prototype["flip"+i]=ke.prototype["flip"+s]=ke.prototype["flip"+o]=function(){const a=rv(r);return new I2(this,a)}}const sr=["x","y","z","w"],or=["r","g","b","a"],ar=["s","t","p","q"];for(let r=0;r<4;r++){let e=sr[r],n=or[r],i=ar[r];Vu(e,n,i);for(let s=0;s<4;s++){e=sr[r]+sr[s],n=or[r]+or[s],i=ar[r]+ar[s],Vu(e,n,i);for(let o=0;o<4;o++){e=sr[r]+sr[s]+sr[o],n=or[r]+or[s]+or[o],i=ar[r]+ar[s]+ar[o],Vu(e,n,i);for(let a=0;a<4;a++)e=sr[r]+sr[s]+sr[o]+sr[a],n=or[r]+or[s]+or[o]+or[a],i=ar[r]+ar[s]+ar[o]+ar[a],Vu(e,n,i)}}}for(let r=0;r<32;r++)ac[r]={get(){this._cache=this._cache||{};let e=this._cache[r];return e===void 0&&(e=new Kc(this,new Sr(r,"uint")),this._cache[r]=e),e},set(e){this[r].assign(he(e))}};Object.defineProperties(ke.prototype,ac);const sv=new WeakMap,O2=function(r,e=null){const n=Uh(r);return n==="node"?r:e===null&&(n==="float"||n==="boolean")||n&&n!=="shader"&&n!=="string"?he($p(r,e)):n==="shader"?r.isFn?r:le(r):r},B2=function(r,e=null){for(const n in r)r[n]=he(r[n],e);return r},k2=function(r,e=null){const n=r.length;for(let i=0;i<n;i++)r[i]=he(r[i],e);return r},Db=function(r,e=null,n=null,i=null){function s(h){return i!==null?(h=he(Object.assign(h,i)),i.intent===!0&&(h=h.toVarIntent())):h=he(h),h}let o,a=e,l,c;function u(h){let d;return a?d=/[a-z]/i.test(a)?a+"()":a:d=r.type,l!==void 0&&h.length<l?(console.error(`THREE.TSL: "${d}" parameter length is less than minimum required.`),h.concat(new Array(l-h.length).fill(0))):c!==void 0&&h.length>c?(console.error(`THREE.TSL: "${d}" parameter length exceeds limit.`),h.slice(0,c)):h}return e===null?o=(...h)=>s(new r(...ma(u(h)))):n!==null?(n=he(n),o=(...h)=>s(new r(e,...ma(u(h)),n))):o=(...h)=>s(new r(e,...ma(u(h)))),o.setParameterLength=(...h)=>(h.length===1?l=c=h[0]:h.length===2&&([l,c]=h),o),o.setName=h=>(a=h,o),o},z2=function(r,...e){return he(new r(...ma(e)))};class G2 extends ke{constructor(e,n){super(),this.shaderNode=e,this.rawInputs=n,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,n){return this.getOutputNode(e).getMemberType(e,n)}call(e){const{shaderNode:n,rawInputs:i}=this,s=e.getNodeProperties(n),o=e.getClosestSubBuild(n.subBuilds)||"",a=o||"default";if(s[a])return s[a];const l=e.subBuildFn;e.subBuildFn=o;let c=null;if(n.layout){let u=sv.get(e.constructor);u===void 0&&(u=new WeakMap,sv.set(e.constructor,u));let h=u.get(n);h===void 0&&(h=he(e.buildFunctionNode(n)),u.set(n,h)),e.addInclude(h);const d=i?V2(i):null;c=he(h.call(d))}else{const u=new Proxy(e,{get:(m,y,_)=>{let g;return Symbol.iterator===y?g=function*(){yield void 0}:g=Reflect.get(m,y,_),g}}),h=i?H2(i):null,d=Array.isArray(i)?i.length>0:i!==null,f=n.jsFunc,p=d||f.length>1?f(h,u):f(u);c=he(p)}return e.subBuildFn=l,n.once&&(s[a]=c),c}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const n=e.getNodeProperties(this),i=e.getSubBuildOutput(this);return n[i]=n[i]||this.setupOutput(e),n[i].subBuild=e.getClosestSubBuild(this),n[i]}build(e,n=null){let i=null;const s=e.getBuildStage(),o=e.getNodeProperties(this),a=e.getSubBuildOutput(this),l=this.getOutputNode(e);if(s==="setup"){const c=e.getSubBuildProperty("initialized",this);if(o[c]!==!0&&(o[c]=!0,o[a]=this.getOutputNode(e),o[a].build(e),this.shaderNode.subBuilds))for(const u of e.chaining){const h=e.getDataFromNode(u,"any");h.subBuilds=h.subBuilds||new Set;for(const d of this.shaderNode.subBuilds)h.subBuilds.add(d)}i=o[a]}else s==="analyze"?l.build(e,n):s==="generate"&&(i=l.build(e,n)||"");return i}}function V2(r){let e;return vg(r),r[0]&&(r[0].isNode||Object.getPrototypeOf(r[0])!==Object.prototype)?e=[...r]:e=r[0],e}function H2(r){let e=0;return vg(r),new Proxy(r,{get:(n,i,s)=>{let o;if(i==="length")return o=r.length,o;if(Symbol.iterator===i)o=function*(){for(const a of r)yield he(a)};else{if(r.length>0)if(Object.getPrototypeOf(r[0])===Object.prototype){const a=r[0];a[i]===void 0?o=a[e++]:o=Reflect.get(a,i,s)}else r[0]instanceof ke&&(r[i]===void 0?o=r[e++]:o=Reflect.get(r,i,s));else o=Reflect.get(n,i,s);o=he(o)}return o}})}class W2 extends ke{constructor(e,n){super(n),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return he(new G2(this,e))}setup(){return this.call()}}const $2=[!1,!0],j2=[0,1,2,3],q2=[-1,-2],Lb=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],gg=new Map;for(const r of $2)gg.set(r,new Sr(r));const _g=new Map;for(const r of j2)_g.set(r,new Sr(r,"uint"));const yg=new Map([..._g].map(r=>new Sr(r.value,"int")));for(const r of q2)yg.set(r,new Sr(r,"int"));const cd=new Map([...yg].map(r=>new Sr(r.value)));for(const r of Lb)cd.set(r,new Sr(r));for(const r of Lb)cd.set(-r,new Sr(-r));const ud={bool:gg,uint:_g,ints:yg,float:cd},ov=new Map([...gg,...cd]),$p=(r,e)=>ov.has(r)?ov.get(r):r.isNode===!0?r:new Sr(r,e),_n=function(r,e=null){return(...n)=>{for(const s of n)if(s===void 0)return console.error(`THREE.TSL: Invalid parameter for the type "${r}".`),he(new Sr(0,r));if((n.length===0||!["bool","float","int","uint"].includes(r)&&n.every(s=>{const o=typeof s;return o!=="object"&&o!=="function"}))&&(n=[pg(r,...n)]),n.length===1&&e!==null&&e.has(n[0]))return Hu(e.get(n[0]));if(n.length===1){const s=$p(n[0],r);return s.nodeType===r?Hu(s):Hu(new Pb(s,r))}const i=n.map(s=>$p(s));return Hu(new N2(i,r))}},av=r=>typeof r=="object"&&r!==null?r.value:r,X2=r=>r!=null?r.nodeType||r.convertTo||(typeof r=="string"?r:null):null;function Ql(r,e){return new W2(r,e)}const he=(r,e=null)=>O2(r,e),Hu=(r,e=null)=>he(r,e).toVarIntent(),vg=(r,e=null)=>new B2(r,e),ma=(r,e=null)=>new k2(r,e),St=(r,e=null,n=null,i=null)=>new Db(r,e,n,i),xe=(r,...e)=>new z2(r,...e),Pe=(r,e=null,n=null,i={})=>new Db(r,e,n,{intent:!0,...i});let Y2=0;class K2 extends ke{constructor(e,n=null){super();let i=null;n!==null&&(typeof n=="object"?i=n.return:(typeof n=="string"?i=n:console.error("THREE.TSL: Invalid layout type."),n=null)),this.shaderNode=new Ql(e,i),n!==null&&this.setLayout(n),this.isFn=!0}setLayout(e){const n=this.shaderNode.nodeType;if(typeof e.inputs!="object"){const i={name:"fn"+Y2++,type:n,inputs:[]};for(const s in e)s!=="return"&&i.inputs.push({name:s,type:e[s]});e=i}return this.shaderNode.setLayout(e),this}getNodeType(e){return this.shaderNode.getNodeType(e)||"float"}call(...e){const n=this.shaderNode.call(e);return this.shaderNode.nodeType==="void"&&n.toStack(),n.toVarIntent()}once(e=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=e,this}generate(e){const n=this.getNodeType(e);return console.error('THREE.TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),e.generateConst(n)}}function le(r,e=null){const n=new K2(r,e);return new Proxy(()=>{},{apply(i,s,o){return n.call(...o)},get(i,s,o){return Reflect.get(n,s,o)},set(i,s,o,a){return Reflect.set(n,s,o,a)}})}const Fh=r=>{go=r},xg=()=>go,on=(...r)=>go.If(...r);function Ib(r){return go&&go.add(r),r}te("toStack",Ib);const Z2=new _n("color"),ie=new _n("float",ud.float),Ht=new _n("int",ud.ints),Q2=new _n("uint",ud.uint),bg=new _n("bool",ud.bool),be=new _n("vec2"),zr=new _n("ivec2"),J2=new _n("uvec2"),eL=new _n("bvec2"),oe=new _n("vec3"),tL=new _n("ivec3"),nL=new _n("uvec3"),iL=new _n("bvec3"),lt=new _n("vec4"),rL=new _n("ivec4"),sL=new _n("uvec4"),oL=new _n("bvec4"),Tg=new _n("mat2"),Jn=new _n("mat3"),ga=new _n("mat4");te("toColor",Z2);te("toFloat",ie);te("toInt",Ht);te("toUint",Q2);te("toBool",bg);te("toVec2",be);te("toIVec2",zr);te("toUVec2",J2);te("toBVec2",eL);te("toVec3",oe);te("toIVec3",tL);te("toUVec3",nL);te("toBVec3",iL);te("toVec4",lt);te("toIVec4",rL);te("toUVec4",sL);te("toBVec4",oL);te("toMat2",Tg);te("toMat3",Jn);te("toMat4",ga);const aL=St(Kc).setParameterLength(2),lL=(r,e)=>he(new Pb(he(r),e));te("element",aL);te("convert",lL);te("append",r=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),Ib(r)));class Nt extends ke{static get type(){return"PropertyNode"}constructor(e,n=null,i=!1){super(e),this.name=n,this.varying=i,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let n;return this.varying===!0?(n=e.getVaryingFromNode(this,this.name),n.needsInterpolation=!0):n=e.getVarFromNode(this,this.name),e.getPropertyName(n)}}const Ms=(r,e)=>he(new Nt(r,e)),Oh=(r,e)=>he(new Nt(r,e,!0)),Et=xe(Nt,"vec4","DiffuseColor"),lv=xe(Nt,"vec3","EmissiveColor"),Wr=xe(Nt,"float","Roughness"),Bh=xe(Nt,"float","Metalness"),jp=xe(Nt,"float","Clearcoat"),kh=xe(Nt,"float","ClearcoatRoughness"),aa=xe(Nt,"vec3","Sheen"),Sg=xe(Nt,"float","SheenRoughness"),Mg=xe(Nt,"float","Iridescence"),Ub=xe(Nt,"float","IridescenceIOR"),Fb=xe(Nt,"float","IridescenceThickness"),qp=xe(Nt,"float","AlphaT"),Qs=xe(Nt,"float","Anisotropy"),_h=xe(Nt,"vec3","AnisotropyT"),_a=xe(Nt,"vec3","AnisotropyB"),vi=xe(Nt,"color","SpecularColor"),zh=xe(Nt,"float","SpecularF90"),Xp=xe(Nt,"float","Shininess"),lc=xe(Nt,"vec4","Output"),Nf=xe(Nt,"float","dashSize"),cv=xe(Nt,"float","gapSize"),yh=xe(Nt,"float","IOR"),Yp=xe(Nt,"float","Transmission"),Ob=xe(Nt,"float","Thickness"),Bb=xe(Nt,"float","AttenuationDistance"),kb=xe(Nt,"color","AttenuationColor"),zb=xe(Nt,"float","Dispersion");class Gb extends ke{static get type(){return"UniformGroupNode"}constructor(e,n=!1,i=1){super("string"),this.name=e,this.shared=n,this.order=i,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const cL=r=>new Gb(r),Eg=(r,e=0)=>new Gb(r,!0,e),uL=Eg("frame"),Ye=Eg("render"),Vb=cL("object");class Zc extends mg{static get type(){return"UniformNode"}constructor(e,n=null){super(e,n),this.isUniformNode=!0,this.name="",this.groupNode=Vb}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,n){return e=e.bind(this),super.onUpdate(i=>{const s=e(i,this);s!==void 0&&(this.value=s)},n)}getInputType(e){let n=super.getInputType(e);return n==="bool"&&(n="uint"),n}generate(e,n){const i=this.getNodeType(e),s=this.getUniformHash(e);let o=e.getNodeFromHash(s);o===void 0&&(e.setHashNode(this,s),o=this);const a=o.getInputType(e),l=e.getUniformFromNode(o,a,e.shaderStage,this.name||e.context.nodeName),c=e.getPropertyName(l);e.context.nodeName!==void 0&&delete e.context.nodeName;let u=c;if(i==="bool"){const h=e.getDataFromNode(this);let d=h.propertyName;if(d===void 0){const f=e.getVarFromNode(this,null,"bool");d=e.getPropertyName(f),h.propertyName=d,u=e.format(c,a,i),e.addLineFlowCode(`${d} = ${u}`,this)}u=d}return e.format(u,i,n)}}const tt=(r,e)=>{const n=X2(e||r);return n===r&&(r=pg(n)),r=r&&r.isNode===!0?r.node&&r.node.value||r.value:r,he(new Zc(r,n))};class uv extends Tn{static get type(){return"ArrayNode"}constructor(e,n,i=null){super(e),this.count=n,this.values=i,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const n=this.getNodeType(e);return e.generateArray(n,this.count,this.values)}}const hL=(...r)=>{let e;if(r.length===1){const n=r[0];e=new uv(null,n.length,n)}else{const n=r[0],i=r[1];e=new uv(n,i)}return he(e)};te("toArray",(r,e)=>hL(Array(e).fill(r)));class dL extends Tn{static get type(){return"AssignNode"}constructor(e,n){super(),this.targetNode=e,this.sourceNode=n,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,n){return n!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:n}=this;if(e.isAvailable("swizzleAssign")===!1&&n.isSplitNode&&n.components.length>1){const i=e.getTypeLength(n.node.getNodeType(e));return ul.join("").slice(0,i)!==n.components}return!1}setup(e){const{targetNode:n,sourceNode:i}=this,s=n.getScope(),o=e.getNodeProperties(s);o.assign=!0;const a=e.getNodeProperties(this);a.sourceNode=i,a.targetNode=n.context({assign:!0})}generate(e,n){const{targetNode:i,sourceNode:s}=e.getNodeProperties(this),o=this.needsSplitAssign(e),a=i.build(e),l=i.getNodeType(e),c=s.build(e,l),u=s.getNodeType(e),h=e.getDataFromNode(this);let d;if(h.initialized===!0)n!=="void"&&(d=a);else if(o){const f=e.getVarFromNode(this,null,l),p=e.getPropertyName(f);e.addLineFlowCode(`${p} = ${c}`,this);const m=i.node,_=m.node.context({assign:!0}).build(e);for(let g=0;g<m.components.length;g++){const v=m.components[g];e.addLineFlowCode(`${_}.${v} = ${p}[ ${g} ]`,this)}n!=="void"&&(d=a)}else d=`${a} = ${c}`,(n==="void"||u==="void")&&(e.addLineFlowCode(d,this),n!=="void"&&(d=a));return h.initialized=!0,e.format(d,l,n)}}const fL=St(dL).setParameterLength(2);te("assign",fL);class pL extends Tn{static get type(){return"FunctionCallNode"}constructor(e=null,n={}){super(),this.functionNode=e,this.parameters=n}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}getMemberType(e,n){return this.functionNode.getMemberType(e,n)}generate(e){const n=[],i=this.functionNode,s=i.getInputs(e),o=this.parameters,a=(c,u)=>{const h=u.type,d=h==="pointer";let f;return d?f="&"+c.build(e):f=c.build(e,h),f};if(Array.isArray(o)){if(o.length>s.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),o.length=s.length;else if(o.length<s.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");o.length<s.length;)o.push(ie(0));for(let c=0;c<o.length;c++)n.push(a(o[c],s[c]))}else for(const c of s){const u=o[c.name];u!==void 0?n.push(a(u,c)):(console.error(`THREE.TSL: Input '${c.name}' not found in 'Fn()'.`),n.push(a(ie(0),c)))}return`${i.build(e,"property")}( ${n.join(", ")} )`}}const mL=(r,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?ma(e):vg(e[0]),he(new pL(he(r),e)));te("call",mL);const gL={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class Qt extends Tn{static get type(){return"OperatorNode"}constructor(e,n,i,...s){if(super(),s.length>0){let o=new Qt(e,n,i);for(let a=0;a<s.length-1;a++)o=new Qt(e,o,s[a]);n=o,i=s[s.length-1]}this.op=e,this.aNode=n,this.bNode=i,this.isOperatorNode=!0}getOperatorMethod(e,n){return e.getMethod(gL[this.op],n)}getNodeType(e,n=null){const i=this.op,s=this.aNode,o=this.bNode,a=s.getNodeType(e),l=o?o.getNodeType(e):null;if(a==="void"||l==="void")return n||"void";if(i==="%")return a;if(i==="~"||i==="&"||i==="|"||i==="^"||i===">>"||i==="<<")return e.getIntegerType(a);if(i==="!"||i==="&&"||i==="||"||i==="^^")return"bool";if(i==="=="||i==="!="||i==="<"||i===">"||i==="<="||i===">="){const c=Math.max(e.getTypeLength(a),e.getTypeLength(l));return c>1?`bvec${c}`:"bool"}else{if(e.isMatrix(a)){if(l==="float")return a;if(e.isVector(l))return e.getVectorFromMatrix(a);if(e.isMatrix(l))return a}else if(e.isMatrix(l)){if(a==="float")return l;if(e.isVector(a))return e.getVectorFromMatrix(l)}return e.getTypeLength(l)>e.getTypeLength(a)?l:a}}generate(e,n){const i=this.op,{aNode:s,bNode:o}=this,a=this.getNodeType(e,n);let l=null,c=null;a!=="void"?(l=s.getNodeType(e),c=o?o.getNodeType(e):null,i==="<"||i===">"||i==="<="||i===">="||i==="=="||i==="!="?e.isVector(l)?c=l:e.isVector(c)?l=c:l!==c&&(l=c="float"):i===">>"||i==="<<"?(l=a,c=e.changeComponentType(c,"uint")):i==="%"?(l=a,c=e.isInteger(l)&&e.isInteger(c)?c:l):e.isMatrix(l)?c==="float"?c="float":e.isVector(c)?c=e.getVectorFromMatrix(l):e.isMatrix(c)||(l=c=a):e.isMatrix(c)?l==="float"?l="float":e.isVector(l)?l=e.getVectorFromMatrix(c):l=c=a:l=c=a):l=c=a;const u=s.build(e,l),h=o?o.build(e,c):null,d=e.getFunctionOperator(i);if(n!=="void"){const f=e.renderer.coordinateSystem===Zn;if(i==="=="||i==="!="||i==="<"||i===">"||i==="<="||i===">=")return f?e.isVector(l)?e.format(`${this.getOperatorMethod(e,n)}( ${u}, ${h} )`,a,n):e.format(`( ${u} ${i} ${h} )`,a,n):e.format(`( ${u} ${i} ${h} )`,a,n);if(i==="%")return e.isInteger(c)?e.format(`( ${u} % ${h} )`,a,n):e.format(`${this.getOperatorMethod(e,a)}( ${u}, ${h} )`,a,n);if(i==="!"||i==="~")return e.format(`(${i}${u})`,l,n);if(d)return e.format(`${d}( ${u}, ${h} )`,a,n);if(e.isMatrix(l)&&c==="float")return e.format(`( ${h} ${i} ${u} )`,a,n);if(l==="float"&&e.isMatrix(c))return e.format(`${u} ${i} ${h}`,a,n);{let p=`( ${u} ${i} ${h} )`;return!f&&a==="bool"&&e.isVector(l)&&e.isVector(c)&&(p=`all${p}`),e.format(p,a,n)}}else if(l!=="void")return d?e.format(`${d}( ${u}, ${h} )`,a,n):e.isMatrix(l)&&c==="float"?e.format(`${h} ${i} ${u}`,a,n):e.format(`${u} ${i} ${h}`,a,n)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const ci=Pe(Qt,"+").setParameterLength(2,1/0).setName("add"),Yn=Pe(Qt,"-").setParameterLength(2,1/0).setName("sub"),pt=Pe(Qt,"*").setParameterLength(2,1/0).setName("mul"),xr=Pe(Qt,"/").setParameterLength(2,1/0).setName("div"),wg=Pe(Qt,"%").setParameterLength(2).setName("mod"),Hb=Pe(Qt,"==").setParameterLength(2).setName("equal"),_L=Pe(Qt,"!=").setParameterLength(2).setName("notEqual"),yL=Pe(Qt,"<").setParameterLength(2).setName("lessThan"),vL=Pe(Qt,">").setParameterLength(2).setName("greaterThan"),xL=Pe(Qt,"<=").setParameterLength(2).setName("lessThanEqual"),bL=Pe(Qt,">=").setParameterLength(2).setName("greaterThanEqual"),TL=Pe(Qt,"&&").setParameterLength(2,1/0).setName("and"),SL=Pe(Qt,"||").setParameterLength(2,1/0).setName("or"),ML=Pe(Qt,"!").setParameterLength(1).setName("not"),EL=Pe(Qt,"^^").setParameterLength(2).setName("xor"),wL=Pe(Qt,"&").setParameterLength(2).setName("bitAnd"),AL=Pe(Qt,"~").setParameterLength(2).setName("bitNot"),RL=Pe(Qt,"|").setParameterLength(2).setName("bitOr"),CL=Pe(Qt,"^").setParameterLength(2).setName("bitXor"),NL=Pe(Qt,"<<").setParameterLength(2).setName("shiftLeft"),PL=Pe(Qt,">>").setParameterLength(2).setName("shiftRight"),DL=le(([r])=>(r.addAssign(1),r)),LL=le(([r])=>(r.subAssign(1),r)),IL=le(([r])=>{const e=Ht(r).toConst();return r.addAssign(1),e}),UL=le(([r])=>{const e=Ht(r).toConst();return r.subAssign(1),e});te("add",ci);te("sub",Yn);te("mul",pt);te("div",xr);te("mod",wg);te("equal",Hb);te("notEqual",_L);te("lessThan",yL);te("greaterThan",vL);te("lessThanEqual",xL);te("greaterThanEqual",bL);te("and",TL);te("or",SL);te("not",ML);te("xor",EL);te("bitAnd",wL);te("bitNot",AL);te("bitOr",RL);te("bitXor",CL);te("shiftLeft",NL);te("shiftRight",PL);te("incrementBefore",DL);te("decrementBefore",LL);te("increment",IL);te("decrement",UL);const FL=(r,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),wg(Ht(r),Ht(e)));te("modInt",FL);class H extends Tn{static get type(){return"MathNode"}constructor(e,n,i=null,s=null){if(super(),(e===H.MAX||e===H.MIN)&&arguments.length>3){let o=new H(e,n,i);for(let a=2;a<arguments.length-1;a++)o=new H(e,o,arguments[a]);n=o,i=arguments[arguments.length-1],s=null}this.method=e,this.aNode=n,this.bNode=i,this.cNode=s,this.isMathNode=!0}getInputType(e){const n=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,s=this.cNode?this.cNode.getNodeType(e):null,o=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i),l=e.isMatrix(s)?0:e.getTypeLength(s);return o>a&&o>l?n:a>l?i:l>o?s:n}getNodeType(e){const n=this.method;return n===H.LENGTH||n===H.DISTANCE||n===H.DOT?"float":n===H.CROSS?"vec3":n===H.ALL||n===H.ANY?"bool":n===H.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:n,bNode:i,method:s}=this;let o=null;if(s===H.ONE_MINUS)o=Yn(1,n);else if(s===H.RECIPROCAL)o=xr(1,n);else if(s===H.DIFFERENCE)o=Ii(Yn(n,i));else if(s===H.TRANSFORM_DIRECTION){let a=n,l=i;e.isMatrix(a.getNodeType(e))?l=lt(oe(l),0):a=lt(oe(a),0);const c=pt(a,l).xyz;o=Dc(c)}return o!==null?o:super.setup(e)}generate(e,n){if(e.getNodeProperties(this).outputNode)return super.generate(e,n);let s=this.method;const o=this.getNodeType(e),a=this.getInputType(e),l=this.aNode,c=this.bNode,u=this.cNode,h=e.renderer.coordinateSystem;if(s===H.NEGATE)return e.format("( - "+l.build(e,a)+" )",o,n);{const d=[];return s===H.CROSS?d.push(l.build(e,o),c.build(e,o)):h===Zn&&s===H.STEP?d.push(l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":a),c.build(e,a)):h===Zn&&(s===H.MIN||s===H.MAX)?d.push(l.build(e,a),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":a)):s===H.REFRACT?d.push(l.build(e,a),c.build(e,a),u.build(e,"float")):s===H.MIX?d.push(l.build(e,a),c.build(e,a),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":a)):(h===ws&&s===H.ATAN&&c!==null&&(s="atan2"),e.shaderStage!=="fragment"&&(s===H.DFDX||s===H.DFDY)&&(console.warn(`THREE.TSL: '${s}' is not supported in the ${e.shaderStage} stage.`),s="/*"+s+"*/"),d.push(l.build(e,a)),c!==null&&d.push(c.build(e,a)),u!==null&&d.push(u.build(e,a))),e.format(`${e.getMethod(s,o)}( ${d.join(", ")} )`,o,n)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}H.ALL="all";H.ANY="any";H.RADIANS="radians";H.DEGREES="degrees";H.EXP="exp";H.EXP2="exp2";H.LOG="log";H.LOG2="log2";H.SQRT="sqrt";H.INVERSE_SQRT="inversesqrt";H.FLOOR="floor";H.CEIL="ceil";H.NORMALIZE="normalize";H.FRACT="fract";H.SIN="sin";H.COS="cos";H.TAN="tan";H.ASIN="asin";H.ACOS="acos";H.ATAN="atan";H.ABS="abs";H.SIGN="sign";H.LENGTH="length";H.NEGATE="negate";H.ONE_MINUS="oneMinus";H.DFDX="dFdx";H.DFDY="dFdy";H.ROUND="round";H.RECIPROCAL="reciprocal";H.TRUNC="trunc";H.FWIDTH="fwidth";H.TRANSPOSE="transpose";H.DETERMINANT="determinant";H.INVERSE="inverse";H.EQUALS="equals";H.MIN="min";H.MAX="max";H.STEP="step";H.REFLECT="reflect";H.DISTANCE="distance";H.DIFFERENCE="difference";H.DOT="dot";H.CROSS="cross";H.POW="pow";H.TRANSFORM_DIRECTION="transformDirection";H.MIX="mix";H.CLAMP="clamp";H.REFRACT="refract";H.SMOOTHSTEP="smoothstep";H.FACEFORWARD="faceforward";const OL=ie(1e-6),BL=ie(Math.PI),kL=Pe(H,H.ALL).setParameterLength(1),zL=Pe(H,H.ANY).setParameterLength(1),GL=Pe(H,H.RADIANS).setParameterLength(1),VL=Pe(H,H.DEGREES).setParameterLength(1),Wb=Pe(H,H.EXP).setParameterLength(1),Pc=Pe(H,H.EXP2).setParameterLength(1),$b=Pe(H,H.LOG).setParameterLength(1),Qr=Pe(H,H.LOG2).setParameterLength(1),Ag=Pe(H,H.SQRT).setParameterLength(1),HL=Pe(H,H.INVERSE_SQRT).setParameterLength(1),co=Pe(H,H.FLOOR).setParameterLength(1),Rg=Pe(H,H.CEIL).setParameterLength(1),Dc=Pe(H,H.NORMALIZE).setParameterLength(1),Ns=Pe(H,H.FRACT).setParameterLength(1),Yi=Pe(H,H.SIN).setParameterLength(1),gs=Pe(H,H.COS).setParameterLength(1),WL=Pe(H,H.TAN).setParameterLength(1),$L=Pe(H,H.ASIN).setParameterLength(1),jb=Pe(H,H.ACOS).setParameterLength(1),qb=Pe(H,H.ATAN).setParameterLength(1,2),Ii=Pe(H,H.ABS).setParameterLength(1),Gh=Pe(H,H.SIGN).setParameterLength(1),Jr=Pe(H,H.LENGTH).setParameterLength(1),jL=Pe(H,H.NEGATE).setParameterLength(1),qL=Pe(H,H.ONE_MINUS).setParameterLength(1),Xb=Pe(H,H.DFDX).setParameterLength(1),Yb=Pe(H,H.DFDY).setParameterLength(1),XL=Pe(H,H.ROUND).setParameterLength(1),YL=Pe(H,H.RECIPROCAL).setParameterLength(1),KL=Pe(H,H.TRUNC).setParameterLength(1),ZL=Pe(H,H.FWIDTH).setParameterLength(1),QL=Pe(H,H.TRANSPOSE).setParameterLength(1),JL=Pe(H,H.DETERMINANT).setParameterLength(1),eI=Pe(H,H.INVERSE).setParameterLength(1),tI=(r,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),Hb(r,e)),Ka=Pe(H,H.MIN).setParameterLength(2,1/0),Vn=Pe(H,H.MAX).setParameterLength(2,1/0),Kb=Pe(H,H.STEP).setParameterLength(2),nI=Pe(H,H.REFLECT).setParameterLength(2),iI=Pe(H,H.DISTANCE).setParameterLength(2),rI=Pe(H,H.DIFFERENCE).setParameterLength(2),Cg=Pe(H,H.DOT).setParameterLength(2),Zb=Pe(H,H.CROSS).setParameterLength(2),hd=Pe(H,H.POW).setParameterLength(2),Qb=r=>pt(r,r),sI=r=>pt(r,r,r),oI=r=>pt(r,r,r,r),aI=Pe(H,H.TRANSFORM_DIRECTION).setParameterLength(2),lI=r=>pt(Gh(r),hd(Ii(r),1/3)),Jb=r=>Cg(r,r),qt=Pe(H,H.MIX).setParameterLength(3),ns=(r,e=0,n=1)=>he(new H(H.CLAMP,he(r),he(e),he(n))),eT=r=>ns(r),tT=Pe(H,H.REFRACT).setParameterLength(3),Rs=Pe(H,H.SMOOTHSTEP).setParameterLength(3),cI=Pe(H,H.FACEFORWARD).setParameterLength(3),uI=le(([r])=>{const i=43758.5453,s=Cg(r.xy,be(12.9898,78.233)),o=wg(s,BL);return Ns(Yi(o).mul(i))}),hI=(r,e,n)=>qt(e,n,r),dI=(r,e,n)=>Rs(e,n,r),fI=(r,e)=>Kb(e,r),pI=(r,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),qb(r,e));te("all",kL);te("any",zL);te("equals",tI);te("radians",GL);te("degrees",VL);te("exp",Wb);te("exp2",Pc);te("log",$b);te("log2",Qr);te("sqrt",Ag);te("inverseSqrt",HL);te("floor",co);te("ceil",Rg);te("normalize",Dc);te("fract",Ns);te("sin",Yi);te("cos",gs);te("tan",WL);te("asin",$L);te("acos",jb);te("atan",qb);te("abs",Ii);te("sign",Gh);te("length",Jr);te("lengthSq",Jb);te("negate",jL);te("oneMinus",qL);te("dFdx",Xb);te("dFdy",Yb);te("round",XL);te("reciprocal",YL);te("trunc",KL);te("fwidth",ZL);te("atan2",pI);te("min",Ka);te("max",Vn);te("step",fI);te("reflect",nI);te("distance",iI);te("dot",Cg);te("cross",Zb);te("pow",hd);te("pow2",Qb);te("pow3",sI);te("pow4",oI);te("transformDirection",aI);te("mix",hI);te("clamp",ns);te("refract",tT);te("smoothstep",dI);te("faceForward",cI);te("difference",rI);te("saturate",eT);te("cbrt",lI);te("transpose",QL);te("determinant",JL);te("inverse",eI);te("rand",uI);class mI extends ke{static get type(){return"ConditionalNode"}constructor(e,n,i=null){super(),this.condNode=e,this.ifNode=n,this.elseNode=i}getNodeType(e){const{ifNode:n,elseNode:i}=e.getNodeProperties(this);if(n===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const s=n.getNodeType(e);if(i!==null){const o=i.getNodeType(e);if(e.getTypeLength(o)>e.getTypeLength(s))return o}return s}setup(e){const n=this.condNode.cache(),i=this.ifNode.cache(),s=this.elseNode?this.elseNode.cache():null,o=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=o,s!==null&&(e.getDataFromNode(s).parentNodeBlock=o);const a=e.context.uniformFlow,l=e.getNodeProperties(this);l.condNode=n,l.ifNode=a?i:i.context({nodeBlock:i}),l.elseNode=s?a?s:s.context({nodeBlock:s}):null}generate(e,n){const i=this.getNodeType(e),s=e.getDataFromNode(this);if(s.nodeProperty!==void 0)return s.nodeProperty;const{condNode:o,ifNode:a,elseNode:l}=e.getNodeProperties(this),c=e.currentFunctionNode,u=n!=="void",h=u?Ms(i).build(e):"";s.nodeProperty=h;const d=o.build(e,"bool");if(e.context.uniformFlow&&l!==null){const m=a.build(e,i),y=l.build(e,i),_=e.getTernary(d,m,y);return e.format(_,i,n)}e.addFlowCode(`
${e.tab}if ( ${d} ) {

`).addFlowTab();let p=a.build(e,i);if(p&&(u?p=h+" = "+p+";":(p="return "+p+";",c===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),p="// "+p))),e.removeFlowTab().addFlowCode(e.tab+"	"+p+`

`+e.tab+"}"),l!==null){e.addFlowCode(` else {

`).addFlowTab();let m=l.build(e,i);m&&(u?m=h+" = "+m+";":(m="return "+m+";",c===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),m="// "+m))),e.removeFlowTab().addFlowCode(e.tab+"	"+m+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(h,i,n)}}const Qn=St(mI).setParameterLength(2,3);te("select",Qn);class nT extends ke{static get type(){return"ContextNode"}constructor(e,n={}){super(),this.isContextNode=!0,this.node=e,this.value=n}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}getMemberType(e,n){return this.node.getMemberType(e,n)}analyze(e){const n=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(n)}setup(e){const n=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(n)}generate(e,n){const i=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e,n);return e.setContext(i),s}}const dd=St(nT).setParameterLength(1,2),gI=r=>dd(r,{uniformFlow:!0}),iT=(r,e)=>dd(r,{nodeName:e});function _I(r,e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),iT(r,e)}te("context",dd);te("label",_I);te("uniformFlow",gI);te("setName",iT);class vh extends ke{static get type(){return"VarNode"}constructor(e,n=null,i=!1){super(),this.node=e,this.name=n,this.global=!0,this.isVarNode=!0,this.readOnly=i,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,n){return this.node.getMemberType(e,n)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){return this.intent===!0&&e[0].getNodeProperties(this).assign!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:n,name:i,readOnly:s}=this,{renderer:o}=e,a=o.backend.isWebGPUBackend===!0;let l=!1,c=!1;s&&(l=e.isDeterministic(n),c=a?s:l);const u=e.getVectorType(this.getNodeType(e)),h=n.build(e,u),d=e.getVarFromNode(this,i,u,void 0,c),f=e.getPropertyName(d);let p=f;if(c)if(a)p=l?`const ${f}`:`let ${f}`;else{const m=n.getArrayCount(e);p=`const ${e.getVar(d.type,f,m)}`}return e.addLineFlowCode(`${p} = ${h}`,this),f}}const Ng=St(vh),yI=(r,e=null)=>Ng(r,e).toStack(),vI=(r,e=null)=>Ng(r,e,!0).toStack(),xI=r=>xg()===null?r:Ng(r).setIntent(!0).toStack();te("toVar",yI);te("toConst",vI);te("toVarIntent",xI);class bI extends ke{static get type(){return"SubBuild"}constructor(e,n,i=null){super(i),this.node=e,this.name=n,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const n=this.node.getNodeType(e);return e.removeSubBuild(),n}build(e,...n){e.addSubBuild(this.name);const i=this.node.build(e,...n);return e.removeSubBuild(),i}}const cc=(r,e,n=null)=>he(new bI(he(r),e,n));class TI extends ke{static get type(){return"VaryingNode"}constructor(e,n=null){super(),this.node=e,this.name=n,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,n=null){return this.interpolationType=e,this.interpolationSampling=n,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const n=e.getNodeProperties(this);let i=n.varying;if(i===void 0){const s=this.name,o=this.getNodeType(e),a=this.interpolationType,l=this.interpolationSampling;n.varying=i=e.getVaryingFromNode(this,s,o,a,l),n.node=cc(this.node,"VERTEX")}return i.needsInterpolation||(i.needsInterpolation=e.shaderStage==="fragment"),i}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(Gu.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(Gu.VERTEX,this.node)}generate(e){const n=e.getSubBuildProperty("property",e.currentStack),i=e.getNodeProperties(this),s=this.setupVarying(e);if(i[n]===void 0){const o=this.getNodeType(e),a=e.getPropertyName(s,Gu.VERTEX);e.flowNodeFromShaderStage(Gu.VERTEX,i.node,o,a),i[n]=a}return e.getPropertyName(s)}}const Ps=St(TI).setParameterLength(1,2),SI=r=>Ps(r);te("toVarying",Ps);te("toVertexStage",SI);te("varying",(...r)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),Ps(...r)));te("vertexStage",(...r)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),Ps(...r)));const MI=le(([r])=>{const e=r.mul(.9478672986).add(.0521327014).pow(2.4),n=r.mul(.0773993808),i=r.lessThanEqual(.04045);return qt(e,n,i)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),EI=le(([r])=>{const e=r.pow(.41666).mul(1.055).sub(.055),n=r.mul(12.92),i=r.lessThanEqual(.0031308);return qt(e,n,i)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Pg="WorkingColorSpace",wI="OutputColorSpace";class rT extends Tn{static get type(){return"ColorSpaceNode"}constructor(e,n,i){super("vec4"),this.colorNode=e,this.source=n,this.target=i}resolveColorSpace(e,n){return n===Pg?Ze.workingColorSpace:n===wI?e.context.outputColorSpace||e.renderer.outputColorSpace:n}setup(e){const{colorNode:n}=this,i=this.resolveColorSpace(e,this.source),s=this.resolveColorSpace(e,this.target);let o=n;return Ze.enabled===!1||i===s||!i||!s||(Ze.getTransfer(i)===Ae&&(o=lt(MI(o.rgb),o.a)),Ze.getPrimaries(i)!==Ze.getPrimaries(s)&&(o=lt(Jn(Ze._getMatrix(new at,i,s)).mul(o.rgb),o.a)),Ze.getTransfer(s)===Ae&&(o=lt(EI(o.rgb),o.a))),o}}const AI=(r,e)=>he(new rT(he(r),Pg,e)),Dg=(r,e)=>he(new rT(he(r),e,Pg));te("workingToColorSpace",AI);te("colorSpaceToWorking",Dg);let RI=class extends Kc{static get type(){return"ReferenceElementNode"}constructor(e,n){super(e,n),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const n=super.generate(e),i=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(n,i,s)}};class sT extends ke{static get type(){return"ReferenceBaseNode"}constructor(e,n,i=null,s=null){super(),this.property=e,this.uniformType=n,this.object=i,this.count=s,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=ft.OBJECT}setGroup(e){return this.group=e,this}element(e){return he(new RI(this,he(e)))}setNodeType(e){const n=tt(null,e);this.group!==null&&n.setGroup(this.group),this.node=n}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:n}=this;let i=e[n[0]];for(let s=1;s<n.length;s++)i=i[n[s]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const CI=(r,e,n)=>he(new sT(r,e,n));class NI extends sT{static get type(){return"RendererReferenceNode"}constructor(e,n,i=null){super(e,n,i),this.renderer=i,this.setGroup(Ye)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const PI=(r,e,n=null)=>he(new NI(r,e,n));class DI extends Tn{static get type(){return"ToneMappingNode"}constructor(e,n=II,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=n,this.colorNode=i}customCacheKey(){return Lh(this.toneMapping)}setup(e){const n=this.colorNode||e.context.color,i=this.toneMapping;if(i===ai)return n;let s=null;const o=e.renderer.library.getToneMappingFunction(i);return o!==null?s=lt(o(n.rgb,this.exposureNode),n.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),s=n),s}}const LI=(r,e,n)=>he(new DI(r,he(e),he(n))),II=PI("toneMappingExposure","float");te("toneMapping",(r,e,n)=>LI(e,n,r));class UI extends mg{static get type(){return"BufferAttributeNode"}constructor(e,n=null,i=0,s=0){super(e,n),this.isBufferNode=!0,this.bufferType=n,this.bufferStride=i,this.bufferOffset=s,this.usage=Eh,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let n=e.globalCache.getData(this.value);return n===void 0&&(n={node:this},e.globalCache.setData(this.value,n)),n.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const n=this.getNodeType(e),i=this.value,s=e.getTypeLength(n),o=this.bufferStride||s,a=this.bufferOffset,l=i.isInterleavedBuffer===!0?i:new Qm(i,o),c=new Cc(l,s,a);l.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const n=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,n),s=e.getPropertyName(i);let o=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=s,o=s):o=Ps(this).build(e,n),o}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Lg=(r,e=null,n=0,i=0)=>he(new UI(r,e,n,i)),FI=(r,e=null,n=0,i=0)=>Lg(r,e,n,i).setUsage(ia),hv=(r,e=null,n=0,i=0)=>Lg(r,e,n,i).setInstanced(!0),dv=(r,e=null,n=0,i=0)=>FI(r,e,n,i).setInstanced(!0);te("toAttribute",r=>Lg(r.value));class OI extends ke{static get type(){return"ComputeNode"}constructor(e,n){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=n,this.count=null,this.version=1,this.name="",this.updateBeforeType=ft.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const n=this.computeNode.build(e);if(n){const i=e.getNodeProperties(this);i.outputComputeNode=n.outputNode,n.outputNode=null}return n}generate(e,n){const{shaderStage:i}=e;if(i==="compute"){const s=this.computeNode.build(e,"void");s!==""&&e.addLineFlowCode(s,this)}else{const o=e.getNodeProperties(this).outputComputeNode;if(o)return o.build(e,n)}}}const oT=(r,e=[64])=>{(e.length===0||e.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let n=0;n<e.length;n++){const i=e[n];(typeof i!="number"||i<=0||!Number.isInteger(i))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${n} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return he(new OI(he(r),e))},BI=(r,e,n)=>oT(r,n).setCount(e);te("compute",BI);te("computeKernel",oT);class kI extends ke{static get type(){return"CacheNode"}constructor(e,n=!0){super(),this.node=e,this.parent=n,this.isCacheNode=!0}getNodeType(e){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const s=this.node.getNodeType(e);return e.setCache(n),s}build(e,...n){const i=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const o=this.node.build(e,...n);return e.setCache(i),o}}const xh=(r,e)=>he(new kI(he(r),e));te("cache",xh);class zI extends ke{static get type(){return"BypassNode"}constructor(e,n){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=n}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const n=this.callNode.build(e,"void");return n!==""&&e.addLineFlowCode(n,this),this.outputNode.build(e)}}const GI=St(zI).setParameterLength(2);te("bypass",GI);class aT extends ke{static get type(){return"RemapNode"}constructor(e,n,i,s=ie(0),o=ie(1)){super(),this.node=e,this.inLowNode=n,this.inHighNode=i,this.outLowNode=s,this.outHighNode=o,this.doClamp=!0}setup(){const{node:e,inLowNode:n,inHighNode:i,outLowNode:s,outHighNode:o,doClamp:a}=this;let l=e.sub(n).div(i.sub(n));return a===!0&&(l=l.clamp()),l.mul(o.sub(s)).add(s)}}const VI=St(aT,null,null,{doClamp:!1}).setParameterLength(3,5),HI=St(aT).setParameterLength(3,5);te("remap",VI);te("remapClamp",HI);class bh extends ke{static get type(){return"ExpressionNode"}constructor(e="",n="void"){super(n),this.snippet=e}generate(e,n){const i=this.getNodeType(e),s=this.snippet;if(i==="void")e.addLineFlowCode(s,this);else return e.format(s,i,n)}}const Za=St(bh).setParameterLength(1,2),WI=r=>(r?Qn(r,Za("discard")):Za("discard")).toStack();te("discard",WI);class $I extends Tn{static get type(){return"RenderOutputNode"}constructor(e,n,i){super("vec4"),this.colorNode=e,this.toneMapping=n,this.outputColorSpace=i,this.isRenderOutputNode=!0}setup({context:e}){let n=this.colorNode||e.color;const i=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||ai,s=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||ni;return i!==ai&&(n=n.toneMapping(i)),s!==ni&&s!==Ze.workingColorSpace&&(n=n.workingToColorSpace(s)),n}}const jI=(r,e=null,n=null)=>he(new $I(he(r),e,n));te("renderOutput",jI);class qI extends Tn{static get type(){return"DebugNode"}constructor(e,n=null){super(),this.node=e,this.callback=n}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const n=this.callback,i=this.node.build(e),s="--- TSL debug - "+e.shaderStage+" shader ---",o="-".repeat(s.length);let a="";return a+="// #"+s+`#
`,a+=e.flow.code.replace(/^\t/mg,"")+`
`,a+="/* ... */ "+i+` /* ... */
`,a+="// #"+o+`#
`,n!==null?n(e,a):console.log(a),i}}const XI=(r,e=null)=>he(new qI(he(r),e)).toStack();te("debug",XI);class lT extends ke{static get type(){return"AttributeNode"}constructor(e,n=null){super(n),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let n=this.nodeType;if(n===null){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const s=e.geometry.getAttribute(i);n=e.getTypeFromAttribute(s)}else n="float"}return n}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const n=this.getAttributeName(e),i=this.getNodeType(e);if(e.hasGeometryAttribute(n)===!0){const o=e.geometry.getAttribute(n),a=e.getTypeFromAttribute(o),l=e.getAttribute(n,a);return e.shaderStage==="vertex"?e.format(l.name,a,i):Ps(this).build(e,i)}else return console.warn(`AttributeNode: Vertex attribute "${n}" not found on geometry.`),e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Cs=(r,e=null)=>he(new lT(r,e)),Qc=(r=0)=>Cs("uv"+(r>0?r:""),"vec2");class YI extends ke{static get type(){return"TextureSizeNode"}constructor(e,n=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=n}generate(e,n){const i=this.textureNode.build(e,"property"),s=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${s} )`,this.getNodeType(e),n)}}const ya=St(YI).setParameterLength(1,2);class KI extends Zc{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=ft.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,n=e.images,i=n&&n.length>0?n[0]&&n[0].image||n[0]:e.image;if(i&&i.width!==void 0){const{width:s,height:o}=i;this.value=Math.log2(Math.max(s,o))}}}const ZI=St(KI).setParameterLength(1),cT=new un;class hl extends Zc{static get type(){return"TextureNode"}constructor(e=cT,n=null,i=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=n,this.levelNode=i,this.biasNode=s,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=ft.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(n===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Gt?"uvec4":this.value.type===En?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Qc(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=tt(this.value.matrix)),this._matrixUniform.mul(oe(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?ft.OBJECT:ft.NONE,this}setupUV(e,n){const i=this.value;return e.isFlipY()&&(i.image instanceof ImageBitmap&&i.flipY===!0||i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0||i.isDepthTexture===!0)&&(this.sampler?n=n.flipY():n=n.setY(Ht(ya(this,this.levelNode).y).sub(n.y).sub(1))),n}setup(e){const n=e.getNodeProperties(this);n.referenceNode=this.referenceNode;const i=this.value;if(!i||i.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let s=this.uvNode;(s===null||e.context.forceUVContext===!0)&&e.context.getUV&&(s=e.context.getUV(this,e)),s||(s=this.getDefaultUV()),this.updateMatrix===!0&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let o=this.levelNode;o===null&&e.context.getTextureLevel&&(o=e.context.getTextureLevel(this)),n.uvNode=s,n.levelNode=o,n.biasNode=this.biasNode,n.compareNode=this.compareNode,n.gradNode=this.gradNode,n.depthNode=this.depthNode,n.offsetNode=this.offsetNode}generateUV(e,n){return n.build(e,this.sampler===!0?"vec2":"ivec2")}generateOffset(e,n){return n.build(e,"ivec2")}generateSnippet(e,n,i,s,o,a,l,c,u){const h=this.value;let d;return s?d=e.generateTextureLevel(h,n,i,s,a,u):o?d=e.generateTextureBias(h,n,i,o,a,u):c?d=e.generateTextureGrad(h,n,i,c,a,u):l?d=e.generateTextureCompare(h,n,i,l,a,u):this.sampler===!1?d=e.generateTextureLoad(h,n,i,a,u):d=e.generateTexture(h,n,i,a,u),d}generate(e,n){const i=this.value,s=e.getNodeProperties(this),o=super.generate(e,"property");if(/^sampler/.test(n))return o+"_sampler";if(e.isReference(n))return o;{const a=e.getDataFromNode(this);let l=a.propertyName;if(l===void 0){const{uvNode:h,levelNode:d,biasNode:f,compareNode:p,depthNode:m,gradNode:y,offsetNode:_}=s,g=this.generateUV(e,h),v=d?d.build(e,"float"):null,x=f?f.build(e,"float"):null,T=m?m.build(e,"int"):null,b=p?p.build(e,"float"):null,S=y?[y[0].build(e,"vec2"),y[1].build(e,"vec2")]:null,M=_?this.generateOffset(e,_):null,A=e.getVarFromNode(this);l=e.getPropertyName(A);const E=this.generateSnippet(e,o,g,v,x,T,b,S,M);e.addLineFlowCode(`${l} = ${E}`,this),a.snippet=E,a.propertyName=l}let c=l;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(c=Dg(Za(c,u),i.colorSpace).setup(e).build(e,u)),e.format(c,u,n)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const n=this.clone();return n.uvNode=he(e),n.referenceNode=this.getBase(),he(n)}load(e){return this.sample(e).setSampler(!1)}blur(e){const n=this.clone();n.biasNode=he(e).mul(ZI(n)),n.referenceNode=this.getBase();const i=n.value;return n.generateMipmaps===!1&&(i&&i.generateMipmaps===!1||i.minFilter===Wt||i.magFilter===Wt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),n.biasNode=null),he(n)}level(e){const n=this.clone();return n.levelNode=he(e),n.referenceNode=this.getBase(),he(n)}size(e){return ya(this,e)}bias(e){const n=this.clone();return n.biasNode=he(e),n.referenceNode=this.getBase(),he(n)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(e){const n=this.clone();return n.compareNode=he(e),n.referenceNode=this.getBase(),he(n)}grad(e,n){const i=this.clone();return i.gradNode=[he(e),he(n)],i.referenceNode=this.getBase(),he(i)}depth(e){const n=this.clone();return n.depthNode=he(e),n.referenceNode=this.getBase(),he(n)}offset(e){const n=this.clone();return n.offsetNode=he(e),n.referenceNode=this.getBase(),he(n)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,n=this._matrixUniform;n!==null&&(n.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}const QI=St(hl).setParameterLength(1,4).setName("texture"),Tt=(r=cT,e=null,n=null,i=null)=>{let s;return r&&r.isTextureNode===!0?(s=he(r.clone()),s.referenceNode=r.getBase(),e!==null&&(s.uvNode=he(e)),n!==null&&(s.levelNode=he(n)),i!==null&&(s.biasNode=he(i))):s=QI(r,e,n,i),s},ji=(...r)=>Tt(...r).setSampler(!1);class uT extends Zc{static get type(){return"BufferNode"}constructor(e,n,i=0){super(e,n),this.isBufferNode=!0,this.bufferType=n,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const hT=(r,e,n)=>he(new uT(r,e,n));class JI extends Kc{static get type(){return"UniformArrayElementNode"}constructor(e,n){super(e,n),this.isArrayBufferElementNode=!0}generate(e){const n=super.generate(e),i=this.getNodeType(),s=this.node.getPaddedType();return e.format(n,s,i)}}class eU extends uT{static get type(){return"UniformArrayNode"}constructor(e,n=null){super(null),this.array=e,this.elementType=n===null?Uh(e[0]):n,this.paddedType=this.getPaddedType(),this.updateType=ft.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let n="vec4";return e==="mat2"?n="mat2":/mat/.test(e)===!0?n="mat4":e.charAt(0)==="i"?n="ivec4":e.charAt(0)==="u"&&(n="uvec4"),n}update(){const{array:e,value:n}=this,i=this.elementType;if(i==="float"||i==="int"||i==="uint")for(let s=0;s<e.length;s++){const o=s*4;n[o]=e[s]}else if(i==="color")for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.r,n[o+1]=a.g,n[o+2]=a.b||0}else if(i==="mat2")for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.elements[0],n[o+1]=a.elements[1],n[o+2]=a.elements[2],n[o+3]=a.elements[3]}else if(i==="mat3")for(let s=0;s<e.length;s++){const o=s*16,a=e[s];n[o]=a.elements[0],n[o+1]=a.elements[1],n[o+2]=a.elements[2],n[o+4]=a.elements[3],n[o+5]=a.elements[4],n[o+6]=a.elements[5],n[o+8]=a.elements[6],n[o+9]=a.elements[7],n[o+10]=a.elements[8],n[o+15]=1}else if(i==="mat4")for(let s=0;s<e.length;s++){const o=s*16,a=e[s];for(let l=0;l<a.elements.length;l++)n[o+l]=a.elements[l]}else for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.x,n[o+1]=a.y,n[o+2]=a.z||0,n[o+3]=a.w||0}}setup(e){const n=this.array.length,i=this.elementType;let s=Float32Array;const o=this.paddedType,a=e.getTypeLength(o);return i.charAt(0)==="i"&&(s=Int32Array),i.charAt(0)==="u"&&(s=Uint32Array),this.value=new s(n*a),this.bufferCount=n,this.bufferType=o,super.setup(e)}element(e){return he(new JI(this,he(e)))}}const Ki=(r,e)=>he(new eU(r,e));class tU extends ke{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const Jc=St(tU).setParameterLength(1);let Nl,Pl;class Bt extends ke{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===Bt.DPR?"float":this.scope===Bt.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=ft.NONE;return(this.scope===Bt.SIZE||this.scope===Bt.VIEWPORT||this.scope===Bt.DPR)&&(e=ft.RENDER),this.updateType=e,e}update({renderer:e}){const n=e.getRenderTarget();this.scope===Bt.VIEWPORT?n!==null?Pl.copy(n.viewport):(e.getViewport(Pl),Pl.multiplyScalar(e.getPixelRatio())):this.scope===Bt.DPR?this._output.value=e.getPixelRatio():n!==null?(Nl.width=n.width,Nl.height=n.height):e.getDrawingBufferSize(Nl)}setup(){const e=this.scope;let n=null;return e===Bt.SIZE?n=tt(Nl||(Nl=new ue)):e===Bt.VIEWPORT?n=tt(Pl||(Pl=new Qe)):e===Bt.DPR?n=tt(1):n=be(fd.div(Kp)),this._output=n,n}generate(e){if(this.scope===Bt.COORDINATE){let n=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(Kp).outputNode.build(e);n=`${e.getType("vec2")}( ${n}.x, ${i}.y - ${n}.y )`}return n}return super.generate(e)}}Bt.COORDINATE="coordinate";Bt.VIEWPORT="viewport";Bt.SIZE="size";Bt.UV="uv";Bt.DPR="dpr";const nU=xe(Bt,Bt.DPR),va=xe(Bt,Bt.UV),Kp=xe(Bt,Bt.SIZE),fd=xe(Bt,Bt.COORDINATE),dT=xe(Bt,Bt.VIEWPORT),iU=dT.zw;dT.xy;const Ig=tt(0,"uint").setName("u_cameraIndex").setGroup(Eg("cameraIndex")).toVarying("v_cameraIndex"),no=tt("float").setName("cameraNear").setGroup(Ye).onRenderUpdate(({camera:r})=>r.near),io=tt("float").setName("cameraFar").setGroup(Ye).onRenderUpdate(({camera:r})=>r.far),fT=le(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(const s of r.cameras)n.push(s.projectionMatrix);e=Ki(n).setGroup(Ye).setName("cameraProjectionMatrices").element(r.isMultiViewCamera?Jc("gl_ViewID_OVR"):Ig).toConst("cameraProjectionMatrix")}else e=tt("mat4").setName("cameraProjectionMatrix").setGroup(Ye).onRenderUpdate(({camera:n})=>n.projectionMatrix);return e}).once()(),ss=le(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(const s of r.cameras)n.push(s.matrixWorldInverse);e=Ki(n).setGroup(Ye).setName("cameraViewMatrices").element(r.isMultiViewCamera?Jc("gl_ViewID_OVR"):Ig).toConst("cameraViewMatrix")}else e=tt("mat4").setName("cameraViewMatrix").setGroup(Ye).onRenderUpdate(({camera:n})=>n.matrixWorldInverse);return e}).once()(),rU=le(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(let s=0,o=r.cameras.length;s<o;s++)n.push(new L);e=Ki(n).setGroup(Ye).setName("cameraPositions").onRenderUpdate(({camera:s},o)=>{const a=s.cameras,l=o.array;for(let c=0,u=a.length;c<u;c++)l[c].setFromMatrixPosition(a[c].matrixWorld)}).element(r.isMultiViewCamera?Jc("gl_ViewID_OVR"):Ig).toConst("cameraPosition")}else e=tt(new L).setName("cameraPosition").setGroup(Ye).onRenderUpdate(({camera:n},i)=>i.value.setFromMatrixPosition(n.matrixWorld));return e}).once()(),fv=new Hc;class Lt extends ke{static get type(){return"Object3DNode"}constructor(e,n=null){super(),this.scope=e,this.object3d=n,this.updateType=ft.OBJECT,this.uniformNode=new Zc(null)}getNodeType(){const e=this.scope;if(e===Lt.WORLD_MATRIX)return"mat4";if(e===Lt.POSITION||e===Lt.VIEW_POSITION||e===Lt.DIRECTION||e===Lt.SCALE)return"vec3";if(e===Lt.RADIUS)return"float"}update(e){const n=this.object3d,i=this.uniformNode,s=this.scope;if(s===Lt.WORLD_MATRIX)i.value=n.matrixWorld;else if(s===Lt.POSITION)i.value=i.value||new L,i.value.setFromMatrixPosition(n.matrixWorld);else if(s===Lt.SCALE)i.value=i.value||new L,i.value.setFromMatrixScale(n.matrixWorld);else if(s===Lt.DIRECTION)i.value=i.value||new L,n.getWorldDirection(i.value);else if(s===Lt.VIEW_POSITION){const o=e.camera;i.value=i.value||new L,i.value.setFromMatrixPosition(n.matrixWorld),i.value.applyMatrix4(o.matrixWorldInverse)}else if(s===Lt.RADIUS){const o=e.object.geometry;o.boundingSphere===null&&o.computeBoundingSphere(),fv.copy(o.boundingSphere).applyMatrix4(n.matrixWorld),i.value=fv.radius}}generate(e){const n=this.scope;return n===Lt.WORLD_MATRIX?this.uniformNode.nodeType="mat4":n===Lt.POSITION||n===Lt.VIEW_POSITION||n===Lt.DIRECTION||n===Lt.SCALE?this.uniformNode.nodeType="vec3":n===Lt.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Lt.WORLD_MATRIX="worldMatrix";Lt.POSITION="position";Lt.SCALE="scale";Lt.VIEW_POSITION="viewPosition";Lt.DIRECTION="direction";Lt.RADIUS="radius";const sU=St(Lt,Lt.POSITION).setParameterLength(1);class zi extends Lt{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}zi.DIRECTION;const _o=xe(zi,zi.WORLD_MATRIX);zi.POSITION;zi.SCALE;zi.VIEW_POSITION;zi.RADIUS;const oU=tt(new at).onObjectUpdate(({object:r},e)=>e.value.getNormalMatrix(r.matrixWorld)),pd=le(r=>r.renderer.overrideNodes.modelViewMatrix||aU).once()().toVar("modelViewMatrix"),aU=ss.mul(_o),pv=le(r=>(r.context.isHighPrecisionModelViewMatrix=!0,tt("mat4").onObjectUpdate(({object:e,camera:n})=>e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),mv=le(r=>{const e=r.context.isHighPrecisionModelViewMatrix;return tt("mat3").onObjectUpdate(({object:n,camera:i})=>(e!==!0&&n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld),n.normalMatrix.getNormalMatrix(n.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),md=Cs("position","vec3"),zn=md.toVarying("positionLocal"),gv=md.toVarying("positionPrevious"),Qa=le(r=>_o.mul(zn).xyz.toVarying(r.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),pT=le(()=>zn.transformDirection(_o).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),cn=le(r=>r.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),tn=cn.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class lU extends ke{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{material:n}=e;return n.side===Ut?"false":e.getFrontFacing()}}const cU=xe(lU),mT=ie(cU).mul(2).sub(1),eu=le(([r],{material:e})=>{const n=e.side;return n===Ut?r=r.mul(-1):n===Bn&&(r=r.mul(mT)),r}),gT=Cs("normal","vec3"),br=le(r=>r.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),oe(0,1,0)):gT,"vec3").once()().toVar("normalLocal"),uU=cn.dFdx().cross(cn.dFdy()).normalize().toVar("normalFlat"),Lc=le(r=>{let e;return r.material.flatShading===!0?e=uU:e=_T(br).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),hU=le(r=>{let e=Lc.transformDirection(ss);return r.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),Pt=le(({subBuildFn:r,material:e,context:n})=>{let i;return r==="NORMAL"||r==="VERTEX"?(i=Lc,e.flatShading!==!0&&(i=eu(i))):i=n.setupNormal().context({getUV:null}),i},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),dl=Pt.transformDirection(ss).toVar("normalWorld"),la=le(({subBuildFn:r,context:e})=>{let n;return r==="NORMAL"||r==="VERTEX"?n=Pt:n=e.setupClearcoatNormal().context({getUV:null}),n},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),dU=le(([r,e=_o])=>{const n=Jn(e),i=r.div(oe(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2])));return n.mul(i).xyz}),_T=le(([r],e)=>{const n=e.renderer.overrideNodes.modelNormalViewMatrix;if(n!==null)return n.transformDirection(r);const i=oU.mul(r);return ss.transformDirection(i)});le(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),Pt)).once(["NORMAL","VERTEX"])();le(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),dl)).once(["NORMAL","VERTEX"])();le(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),la)).once(["NORMAL","VERTEX"])();const _v=new li,Pf=new _t,fU=tt(0).onReference(({material:r})=>r).onObjectUpdate(({material:r})=>r.refractionRatio),Df=tt(1).onReference(({material:r})=>r).onObjectUpdate(function({material:r,scene:e}){return r.envMap?r.envMapIntensity:e.environmentIntensity}),yT=tt(new _t).onReference(function(r){return r.material}).onObjectUpdate(function({material:r,scene:e}){const n=e.environment!==null&&r.envMap===null?e.environmentRotation:r.envMapRotation;return n?(_v.copy(n),Pf.makeRotationFromEuler(_v)):Pf.identity(),Pf}),pU=tn.negate().reflect(Pt),mU=tn.negate().refract(Pt,fU),gU=pU.transformDirection(ss).toVar("reflectVector"),_U=mU.transformDirection(ss).toVar("reflectVector"),yU=new Wc;class vU extends hl{static get type(){return"CubeTextureNode"}constructor(e,n=null,i=null,s=null){super(e,n,i,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===_r?gU:e.mapping===yr?_U:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),oe(0,0,0))}setUpdateMatrix(){}setupUV(e,n){const i=this.value;return(e.renderer.coordinateSystem===ws||!i.isRenderTargetTexture)&&(n=oe(n.x.negate(),n.yz)),yT.mul(n)}generateUV(e,n){return n.build(e,"vec3")}}const xU=St(vU).setParameterLength(1,4).setName("cubeTexture"),Ic=(r=yU,e=null,n=null,i=null)=>{let s;return r&&r.isCubeTextureNode===!0?(s=he(r.clone()),s.referenceNode=r,e!==null&&(s.uvNode=he(e)),n!==null&&(s.levelNode=he(n)),i!==null&&(s.biasNode=he(i))):s=xU(r,e,n,i),s};class bU extends Kc{static get type(){return"ReferenceElementNode"}constructor(e,n){super(e,n),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const n=super.generate(e),i=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(n,i,s)}}class Ug extends ke{static get type(){return"ReferenceNode"}constructor(e,n,i=null,s=null){super(),this.property=e,this.uniformType=n,this.object=i,this.count=s,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=ft.OBJECT}element(e){return he(new bU(this,he(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let n=null;this.count!==null?n=hT(null,e,this.count):Array.isArray(this.getValueFromReference())?n=Ki(null,e):e==="texture"?n=Tt(null):e==="cubeTexture"?n=Ic(null):n=tt(null,e),this.group!==null&&n.setGroup(this.group),this.name!==null&&n.setName(this.name),this.node=n}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:n}=this;let i=e[n[0]];for(let s=1;s<n.length;s++)i=i[n[s]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const zt=(r,e,n)=>he(new Ug(r,e,n)),yv=(r,e,n,i)=>he(new Ug(r,e,i,n));class TU extends Ug{static get type(){return"MaterialReferenceNode"}constructor(e,n,i=null){super(e,n,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const _s=(r,e,n=null)=>he(new TU(r,e,n)),vT=Qc(),SU=cn.dFdx(),MU=cn.dFdy(),xT=vT.dFdx(),bT=vT.dFdy(),TT=Pt,ST=MU.cross(TT),MT=TT.cross(SU),Zp=ST.mul(xT.x).add(MT.mul(bT.x)),Qp=ST.mul(xT.y).add(MT.mul(bT.y)),vv=Zp.dot(Zp).max(Qp.dot(Qp)),ET=vv.equal(0).select(0,vv.inverseSqrt()),EU=Zp.mul(ET).toVar("tangentViewFrame"),wU=Qp.mul(ET).toVar("bitangentViewFrame"),wT=le(r=>(r.geometry.hasAttribute("tangent")===!1&&r.geometry.computeTangents(),Cs("tangent","vec4")))(),Fg=wT.xyz.toVar("tangentLocal"),AT=le(({subBuildFn:r,geometry:e,material:n})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=pd.mul(lt(Fg,0)).xyz.toVarying("v_tangentView").normalize():i=EU,n.flatShading!==!0&&(i=eu(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),AU=le(([r,e],{subBuildFn:n,material:i})=>{let s=r.mul(wT.w).xyz;return n==="NORMAL"&&i.flatShading!==!0&&(s=s.toVarying(e)),s}).once(["NORMAL"]),RU=le(({subBuildFn:r,geometry:e,material:n})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=AU(Pt.cross(AT),"v_bitangentView").normalize():i=wU,n.flatShading!==!0&&(i=eu(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),Jl=Jn(AT,RU,Pt).toVar("TBNViewMatrix"),CU=le(()=>{let r=_a.cross(tn);return r=r.cross(_a).normalize(),r=qt(r,Pt,Qs.mul(Wr.oneMinus()).oneMinus().pow2().pow2()).normalize(),r}).once()();class NU extends Tn{static get type(){return"NormalMapNode"}constructor(e,n=null){super("vec3"),this.node=e,this.scaleNode=n,this.normalMapType=ts}setup({material:e}){const{normalMapType:n,scaleNode:i}=this;let s=this.node.mul(2).sub(1);if(i!==null){let a=i;e.flatShading===!0&&(a=eu(a)),s=oe(s.xy.mul(a),s.z)}let o=null;return n===Ex?o=_T(s):n===ts?o=Jl.mul(s).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${n}`),o=Pt),o}}const xv=St(NU).setParameterLength(1,2),PU=le(({textureNode:r,bumpScale:e})=>{const n=s=>r.cache().context({getUV:o=>s(o.uvNode||Qc()),forceUVContext:!0}),i=ie(n(s=>s));return be(ie(n(s=>s.add(s.dFdx()))).sub(i),ie(n(s=>s.add(s.dFdy()))).sub(i)).mul(e)}),DU=le(r=>{const{surf_pos:e,surf_norm:n,dHdxy:i}=r,s=e.dFdx().normalize(),o=e.dFdy().normalize(),a=n,l=o.cross(a),c=a.cross(s),u=s.dot(l).mul(mT),h=u.sign().mul(i.x.mul(l).add(i.y.mul(c)));return u.abs().mul(n).sub(h).normalize()});class LU extends Tn{static get type(){return"BumpMapNode"}constructor(e,n=null){super("vec3"),this.textureNode=e,this.scaleNode=n}setup(){const e=this.scaleNode!==null?this.scaleNode:1,n=PU({textureNode:this.textureNode,bumpScale:e});return DU({surf_pos:cn,surf_norm:Pt,dHdxy:n})}}const IU=St(LU).setParameterLength(1,2),bv=new Map;class ne extends ke{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,n){let i=bv.get(e);return i===void 0&&(i=_s(e,n),bv.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const n=e.context.material,i=this.scope;let s=null;if(i===ne.COLOR){const o=n.color!==void 0?this.getColor(i):oe();n.map&&n.map.isTexture===!0?s=o.mul(this.getTexture("map")):s=o}else if(i===ne.OPACITY){const o=this.getFloat(i);n.alphaMap&&n.alphaMap.isTexture===!0?s=o.mul(this.getTexture("alpha")):s=o}else if(i===ne.SPECULAR_STRENGTH)n.specularMap&&n.specularMap.isTexture===!0?s=this.getTexture("specular").r:s=ie(1);else if(i===ne.SPECULAR_INTENSITY){const o=this.getFloat(i);n.specularIntensityMap&&n.specularIntensityMap.isTexture===!0?s=o.mul(this.getTexture(i).a):s=o}else if(i===ne.SPECULAR_COLOR){const o=this.getColor(i);n.specularColorMap&&n.specularColorMap.isTexture===!0?s=o.mul(this.getTexture(i).rgb):s=o}else if(i===ne.ROUGHNESS){const o=this.getFloat(i);n.roughnessMap&&n.roughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).g):s=o}else if(i===ne.METALNESS){const o=this.getFloat(i);n.metalnessMap&&n.metalnessMap.isTexture===!0?s=o.mul(this.getTexture(i).b):s=o}else if(i===ne.EMISSIVE){const o=this.getFloat("emissiveIntensity"),a=this.getColor(i).mul(o);n.emissiveMap&&n.emissiveMap.isTexture===!0?s=a.mul(this.getTexture(i)):s=a}else if(i===ne.NORMAL)n.normalMap?(s=xv(this.getTexture("normal"),this.getCache("normalScale","vec2")),s.normalMapType=n.normalMapType):n.bumpMap?s=IU(this.getTexture("bump").r,this.getFloat("bumpScale")):s=Pt;else if(i===ne.CLEARCOAT){const o=this.getFloat(i);n.clearcoatMap&&n.clearcoatMap.isTexture===!0?s=o.mul(this.getTexture(i).r):s=o}else if(i===ne.CLEARCOAT_ROUGHNESS){const o=this.getFloat(i);n.clearcoatRoughnessMap&&n.clearcoatRoughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).r):s=o}else if(i===ne.CLEARCOAT_NORMAL)n.clearcoatNormalMap?s=xv(this.getTexture(i),this.getCache(i+"Scale","vec2")):s=Pt;else if(i===ne.SHEEN){const o=this.getColor("sheenColor").mul(this.getFloat("sheen"));n.sheenColorMap&&n.sheenColorMap.isTexture===!0?s=o.mul(this.getTexture("sheenColor").rgb):s=o}else if(i===ne.SHEEN_ROUGHNESS){const o=this.getFloat(i);n.sheenRoughnessMap&&n.sheenRoughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).a):s=o,s=s.clamp(.07,1)}else if(i===ne.ANISOTROPY)if(n.anisotropyMap&&n.anisotropyMap.isTexture===!0){const o=this.getTexture(i);s=Tg(Dl.x,Dl.y,Dl.y.negate(),Dl.x).mul(o.rg.mul(2).sub(be(1)).normalize().mul(o.b))}else s=Dl;else if(i===ne.IRIDESCENCE_THICKNESS){const o=zt("1","float",n.iridescenceThicknessRange);if(n.iridescenceThicknessMap){const a=zt("0","float",n.iridescenceThicknessRange);s=o.sub(a).mul(this.getTexture(i).g).add(a)}else s=o}else if(i===ne.TRANSMISSION){const o=this.getFloat(i);n.transmissionMap?s=o.mul(this.getTexture(i).r):s=o}else if(i===ne.THICKNESS){const o=this.getFloat(i);n.thicknessMap?s=o.mul(this.getTexture(i).g):s=o}else if(i===ne.IOR)s=this.getFloat(i);else if(i===ne.LIGHT_MAP)s=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===ne.AO)s=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(i===ne.LINE_DASH_OFFSET)s=n.dashOffset?this.getFloat(i):ie(0);else{const o=this.getNodeType(e);s=this.getCache(i,o)}return s}}ne.ALPHA_TEST="alphaTest";ne.COLOR="color";ne.OPACITY="opacity";ne.SHININESS="shininess";ne.SPECULAR="specular";ne.SPECULAR_STRENGTH="specularStrength";ne.SPECULAR_INTENSITY="specularIntensity";ne.SPECULAR_COLOR="specularColor";ne.REFLECTIVITY="reflectivity";ne.ROUGHNESS="roughness";ne.METALNESS="metalness";ne.NORMAL="normal";ne.CLEARCOAT="clearcoat";ne.CLEARCOAT_ROUGHNESS="clearcoatRoughness";ne.CLEARCOAT_NORMAL="clearcoatNormal";ne.EMISSIVE="emissive";ne.ROTATION="rotation";ne.SHEEN="sheen";ne.SHEEN_ROUGHNESS="sheenRoughness";ne.ANISOTROPY="anisotropy";ne.IRIDESCENCE="iridescence";ne.IRIDESCENCE_IOR="iridescenceIOR";ne.IRIDESCENCE_THICKNESS="iridescenceThickness";ne.IOR="ior";ne.TRANSMISSION="transmission";ne.THICKNESS="thickness";ne.ATTENUATION_DISTANCE="attenuationDistance";ne.ATTENUATION_COLOR="attenuationColor";ne.LINE_SCALE="scale";ne.LINE_DASH_SIZE="dashSize";ne.LINE_GAP_SIZE="gapSize";ne.LINE_WIDTH="linewidth";ne.LINE_DASH_OFFSET="dashOffset";ne.POINT_SIZE="size";ne.DISPERSION="dispersion";ne.LIGHT_MAP="light";ne.AO="ao";const UU=xe(ne,ne.ALPHA_TEST),FU=xe(ne,ne.COLOR),OU=xe(ne,ne.SHININESS),BU=xe(ne,ne.EMISSIVE),RT=xe(ne,ne.OPACITY),kU=xe(ne,ne.SPECULAR),Tv=xe(ne,ne.SPECULAR_INTENSITY),zU=xe(ne,ne.SPECULAR_COLOR),Th=xe(ne,ne.SPECULAR_STRENGTH),Lf=xe(ne,ne.REFLECTIVITY),GU=xe(ne,ne.ROUGHNESS),VU=xe(ne,ne.METALNESS),HU=xe(ne,ne.NORMAL),WU=xe(ne,ne.CLEARCOAT),$U=xe(ne,ne.CLEARCOAT_ROUGHNESS),jU=xe(ne,ne.CLEARCOAT_NORMAL),qU=xe(ne,ne.ROTATION),XU=xe(ne,ne.SHEEN),YU=xe(ne,ne.SHEEN_ROUGHNESS),KU=xe(ne,ne.ANISOTROPY),ZU=xe(ne,ne.IRIDESCENCE),QU=xe(ne,ne.IRIDESCENCE_IOR),JU=xe(ne,ne.IRIDESCENCE_THICKNESS),eF=xe(ne,ne.TRANSMISSION),tF=xe(ne,ne.THICKNESS),nF=xe(ne,ne.IOR),iF=xe(ne,ne.ATTENUATION_DISTANCE),rF=xe(ne,ne.ATTENUATION_COLOR),sF=xe(ne,ne.LINE_SCALE),oF=xe(ne,ne.LINE_DASH_SIZE),aF=xe(ne,ne.LINE_GAP_SIZE);ne.LINE_WIDTH;const lF=xe(ne,ne.LINE_DASH_OFFSET),cF=xe(ne,ne.POINT_SIZE),uF=xe(ne,ne.DISPERSION),CT=xe(ne,ne.LIGHT_MAP),hF=xe(ne,ne.AO),Dl=tt(new ue).onReference(function(r){return r.material}).onRenderUpdate(function({material:r}){this.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation))}),NT=le(r=>r.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class Xt extends ke{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const n=this.getNodeType(e),i=this.scope;let s;if(i===Xt.VERTEX)s=e.getVertexIndex();else if(i===Xt.INSTANCE)s=e.getInstanceIndex();else if(i===Xt.DRAW)s=e.getDrawIndex();else if(i===Xt.INVOCATION_LOCAL)s=e.getInvocationLocalIndex();else if(i===Xt.INVOCATION_SUBGROUP)s=e.getInvocationSubgroupIndex();else if(i===Xt.SUBGROUP)s=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+i);let o;return e.shaderStage==="vertex"||e.shaderStage==="compute"?o=s:o=Ps(this).build(e,n),o}}Xt.VERTEX="vertex";Xt.INSTANCE="instance";Xt.SUBGROUP="subgroup";Xt.INVOCATION_LOCAL="invocationLocal";Xt.INVOCATION_SUBGROUP="invocationSubgroup";Xt.DRAW="draw";const dF=xe(Xt,Xt.VERTEX),Og=xe(Xt,Xt.INSTANCE);Xt.SUBGROUP;Xt.INVOCATION_SUBGROUP;Xt.INVOCATION_LOCAL;const fF=xe(Xt,Xt.DRAW);class pF extends ke{static get type(){return"InstanceNode"}constructor(e,n,i=null){super("void"),this.count=e,this.instanceMatrix=n,this.instanceColor=i,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=ft.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{instanceMatrix:n,instanceColor:i}=this,{count:s}=n;let{instanceMatrixNode:o,instanceColorNode:a}=this;if(o===null){if(s<=1e3)o=hT(n.array,"mat4",Math.max(s,1)).element(Og);else{const c=new Vw(n.array,16,1);this.buffer=c;const u=n.usage===ia?dv:hv,h=[u(c,"vec4",16,0),u(c,"vec4",16,4),u(c,"vec4",16,8),u(c,"vec4",16,12)];o=ga(...h)}this.instanceMatrixNode=o}if(i&&a===null){const c=new QE(i.array,3),u=i.usage===ia?dv:hv;this.bufferColor=c,a=oe(u(c,"vec3",3,0)),this.instanceColorNode=a}const l=o.mul(zn).xyz;if(zn.assign(l),e.hasGeometryAttribute("normal")){const c=dU(br,o);br.assign(c)}this.instanceColorNode!==null&&Oh("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==ia&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==ia&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}class mF extends pF{static get type(){return"InstancedMeshNode"}constructor(e){const{count:n,instanceMatrix:i,instanceColor:s}=e;super(n,i,s),this.instancedMesh=e}}const gF=St(mF).setParameterLength(1);class _F extends ke{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Og:this.batchingIdNode=fF);const i=le(([m])=>{const y=Ht(ya(ji(this.batchMesh._indirectTexture),0).x),_=Ht(m).mod(y),g=Ht(m).div(y);return ji(this.batchMesh._indirectTexture,zr(_,g)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Ht(this.batchingIdNode)),s=this.batchMesh._matricesTexture,o=Ht(ya(ji(s),0).x),a=ie(i).mul(4).toInt().toVar(),l=a.mod(o),c=a.div(o),u=ga(ji(s,zr(l,c)),ji(s,zr(l.add(1),c)),ji(s,zr(l.add(2),c)),ji(s,zr(l.add(3),c))),h=this.batchMesh._colorsTexture;if(h!==null){const y=le(([_])=>{const g=Ht(ya(ji(h),0).x),v=_,x=v.mod(g),T=v.div(g);return ji(h,zr(x,T)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(i);Oh("vec3","vBatchColor").assign(y)}const d=Jn(u);zn.assign(u.mul(zn));const f=br.div(oe(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),p=d.mul(f).xyz;br.assign(p),e.hasGeometryAttribute("tangent")&&Fg.mulAssign(d)}}const yF=St(_F).setParameterLength(1),Sv=new WeakMap;class vF extends ke{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=ft.OBJECT,this.skinIndexNode=Cs("skinIndex","uvec4"),this.skinWeightNode=Cs("skinWeight","vec4"),this.bindMatrixNode=zt("bindMatrix","mat4"),this.bindMatrixInverseNode=zt("bindMatrixInverse","mat4"),this.boneMatricesNode=yv("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=zn,this.toPositionNode=zn,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,n=this.positionNode){const{skinIndexNode:i,skinWeightNode:s,bindMatrixNode:o,bindMatrixInverseNode:a}=this,l=e.element(i.x),c=e.element(i.y),u=e.element(i.z),h=e.element(i.w),d=o.mul(n),f=ci(l.mul(s.x).mul(d),c.mul(s.y).mul(d),u.mul(s.z).mul(d),h.mul(s.w).mul(d));return a.mul(f).xyz}getSkinnedNormal(e=this.boneMatricesNode,n=br){const{skinIndexNode:i,skinWeightNode:s,bindMatrixNode:o,bindMatrixInverseNode:a}=this,l=e.element(i.x),c=e.element(i.y),u=e.element(i.z),h=e.element(i.w);let d=ci(s.x.mul(l),s.y.mul(c),s.z.mul(u),s.w.mul(h));return d=a.mul(d).mul(o),d.transformDirection(n).xyz}getPreviousSkinnedPosition(e){const n=e.object;return this.previousBoneMatricesNode===null&&(n.skeleton.previousBoneMatrices=new Float32Array(n.skeleton.boneMatrices),this.previousBoneMatricesNode=yv("skeleton.previousBoneMatrices","mat4",n.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,gv)}needsPreviousBoneMatrices(e){const n=e.renderer.getMRT();return n&&n.has("velocity")||Nb(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&gv.assign(this.getPreviousSkinnedPosition(e));const n=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(n),e.hasGeometryAttribute("normal")){const i=this.getSkinnedNormal();br.assign(i),e.hasGeometryAttribute("tangent")&&Fg.assign(i)}return n}generate(e,n){if(n!=="void")return super.generate(e,n)}update(e){const n=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;Sv.get(n)!==e.frameId&&(Sv.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const xF=r=>he(new vF(r));class bF extends ke{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const n=e.getNodeProperties(this);if(n.stackNode!==void 0)return n;const i={};for(let a=0,l=this.params.length-1;a<l;a++){const c=this.params[a],u=c.isNode!==!0&&c.name||this.getVarName(a),h=c.isNode!==!0&&c.type||"int";i[u]=Za(u,h)}const s=e.addStack();n.returnsNode=this.params[this.params.length-1](i,e),n.stackNode=s;const o=this.params[0];return o.isNode!==!0&&typeof o.update=="function"&&(n.updateNode=le(this.params[0].update)(i)),e.removeStack(),n}getNodeType(e){const{returnsNode:n}=this.getProperties(e);return n?n.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const n=this.getProperties(e),i=this.params,s=n.stackNode;for(let l=0,c=i.length-1;l<c;l++){const u=i[l];let h=!1,d=null,f=null,p=null,m=null,y=null,_=null;u.isNode?u.getNodeType(e)==="bool"?(h=!0,m="bool",f=u.build(e,m)):(m="int",p=this.getVarName(l),d="0",f=u.build(e,m),y="<"):(m=u.type||"int",p=u.name||this.getVarName(l),d=u.start,f=u.end,y=u.condition,_=u.update,typeof d=="number"?d=e.generateConst(m,d):d&&d.isNode&&(d=d.build(e,m)),typeof f=="number"?f=e.generateConst(m,f):f&&f.isNode&&(f=f.build(e,m)),d!==void 0&&f===void 0?(d=d+" - 1",f="0",y=">="):f!==void 0&&d===void 0&&(d="0",y="<"),y===void 0&&(Number(d)>Number(f)?y=">=":y="<"));let g;if(h)g=`while ( ${f} )`;else{const v={start:d,end:f},x=v.start,T=v.end;let b;const S=()=>y.includes("<")?"+=":"-=";if(_!=null)switch(typeof _){case"function":b=e.flowStagesNode(n.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":b=p+" "+S()+" "+e.generateConst(m,_);break;case"string":b=p+" "+_;break;default:_.isNode?b=p+" "+S()+" "+_.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),b="break /* invalid update */")}else m==="int"||m==="uint"?_=y.includes("<")?"++":"--":_=S()+" 1.",b=p+" "+_;const M=e.getVar(m,p)+" = "+x,A=p+" "+y+" "+T;g=`for ( ${M}; ${A}; ${b} )`}e.addFlowCode((l===0?`
`:"")+e.tab+g+` {

`).addFlowTab()}const o=s.build(e,"void"),a=n.returnsNode?n.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+o);for(let l=0,c=this.params.length-1;l<c;l++)e.addFlowCode((l===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),a}}const Zi=(...r)=>he(new bF(ma(r,"int"))).toStack(),TF=()=>Za("break").toStack(),If=new WeakMap,_i=new Qe,Mv=le(({bufferMap:r,influence:e,stride:n,width:i,depth:s,offset:o})=>{const a=Ht(dF).mul(n).add(o),l=a.div(i),c=a.sub(l.mul(i));return ji(r,zr(c,l)).depth(s).xyz.mul(e)});function SF(r){const e=r.morphAttributes.position!==void 0,n=r.morphAttributes.normal!==void 0,i=r.morphAttributes.color!==void 0,s=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,o=s!==void 0?s.length:0;let a=If.get(r);if(a===void 0||a.count!==o){let g=function(){y.dispose(),If.delete(r),r.removeEventListener("dispose",g)};a!==void 0&&a.texture.dispose();const l=r.morphAttributes.position||[],c=r.morphAttributes.normal||[],u=r.morphAttributes.color||[];let h=0;e===!0&&(h=1),n===!0&&(h=2),i===!0&&(h=3);let d=r.attributes.position.count*h,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const m=new Float32Array(d*f*4*o),y=new qm(m,d,f,o);y.type=ln,y.needsUpdate=!0;const _=h*4;for(let v=0;v<o;v++){const x=l[v],T=c[v],b=u[v],S=d*f*4*v;for(let M=0;M<x.count;M++){const A=M*_;e===!0&&(_i.fromBufferAttribute(x,M),m[S+A+0]=_i.x,m[S+A+1]=_i.y,m[S+A+2]=_i.z,m[S+A+3]=0),n===!0&&(_i.fromBufferAttribute(T,M),m[S+A+4]=_i.x,m[S+A+5]=_i.y,m[S+A+6]=_i.z,m[S+A+7]=0),i===!0&&(_i.fromBufferAttribute(b,M),m[S+A+8]=_i.x,m[S+A+9]=_i.y,m[S+A+10]=_i.z,m[S+A+11]=b.itemSize===4?_i.w:1)}}a={count:o,texture:y,stride:h,size:new ue(d,f)},If.set(r,a),r.addEventListener("dispose",g)}return a}class MF extends ke{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=tt(1),this.updateType=ft.OBJECT}setup(e){const{geometry:n}=e,i=n.morphAttributes.position!==void 0,s=n.hasAttribute("normal")&&n.morphAttributes.normal!==void 0,o=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,a=o!==void 0?o.length:0,{texture:l,stride:c,size:u}=SF(n);i===!0&&zn.mulAssign(this.morphBaseInfluence),s===!0&&br.mulAssign(this.morphBaseInfluence);const h=Ht(u.width);Zi(a,({i:d})=>{const f=ie(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?f.assign(ji(this.mesh.morphTexture,zr(Ht(d).add(1),Ht(Og))).r):f.assign(zt("morphTargetInfluences","float").element(d).toVar()),on(f.notEqual(0),()=>{i===!0&&zn.addAssign(Mv({bufferMap:l,influence:f,stride:c,width:h,depth:d,offset:Ht(0)})),s===!0&&br.addAssign(Mv({bufferMap:l,influence:f,stride:c,width:h,depth:d,offset:Ht(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((n,i)=>n+i,0)}}const EF=St(MF).setParameterLength(1);class fl extends ke{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class wF extends fl{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class AF extends nT{static get type(){return"LightingContextNode"}constructor(e,n=null,i=null,s=null){super(e),this.lightingModel=n,this.backdropNode=i,this.backdropAlphaNode=s,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:n}=this,i=oe().toVar("directDiffuse"),s=oe().toVar("directSpecular"),o=oe().toVar("indirectDiffuse"),a=oe().toVar("indirectSpecular"),l={directDiffuse:i,directSpecular:s,indirectDiffuse:o,indirectSpecular:a};return{radiance:oe().toVar("radiance"),irradiance:oe().toVar("irradiance"),iblIrradiance:oe().toVar("iblIrradiance"),ambientOcclusion:ie(1).toVar("ambientOcclusion"),reflectedLight:l,backdrop:e,backdropAlpha:n}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const RF=St(AF);class CF extends fl{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}const qo=new ue;class PT extends hl{static get type(){return"ViewportTextureNode"}constructor(e=va,n=null,i=null){let s=null;i===null?(s=new rw,s.minFilter=ii,i=s):s=i,super(i,e,n),this.generateMipmaps=!1,this.defaultFramebuffer=s,this.isOutputTextureNode=!0,this.updateBeforeType=ft.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(e=null){let n,i;if(this.referenceNode?(n=this.referenceNode.defaultFramebuffer,i=this.referenceNode._cacheTextures):(n=this.defaultFramebuffer,i=this._cacheTextures),e===null)return n;if(i.has(e)===!1){const s=n.clone();i.set(e,s)}return i.get(e)}updateReference(e){const n=e.renderer.getRenderTarget();return this.value=this.getTextureForReference(n),this.value}updateBefore(e){const n=e.renderer,i=n.getRenderTarget();i===null?n.getDrawingBufferSize(qo):qo.set(i.width,i.height);const s=this.getTextureForReference(i);(s.image.width!==qo.width||s.image.height!==qo.height)&&(s.image.width=qo.width,s.image.height=qo.height,s.needsUpdate=!0);const o=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,n.copyFramebufferToTexture(s),s.generateMipmaps=o}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const DT=St(PT,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let Wu=null;class NF extends PT{static get type(){return"ViewportDepthTextureNode"}constructor(e=va,n=null){Wu===null&&(Wu=new Bi),super(e,n,Wu)}getTextureForReference(){return Wu}}const PF=St(NF).setParameterLength(0,2);class ri extends ke{static get type(){return"ViewportDepthNode"}constructor(e,n=null){super("float"),this.scope=e,this.valueNode=n,this.isViewportDepthNode=!0}generate(e){const{scope:n}=this;return n===ri.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:n}=this,i=this.valueNode;let s=null;if(n===ri.DEPTH_BASE)i!==null&&(s=UT().assign(i));else if(n===ri.DEPTH)e.isPerspectiveCamera?s=DF(cn.z,no,io):s=uc(cn.z,no,io);else if(n===ri.LINEAR_DEPTH)if(i!==null)if(e.isPerspectiveCamera){const o=LT(i,no,io);s=uc(o,no,io)}else s=i;else s=uc(cn.z,no,io);return s}}ri.DEPTH_BASE="depthBase";ri.DEPTH="depth";ri.LINEAR_DEPTH="linearDepth";const uc=(r,e,n)=>r.add(e).div(e.sub(n)),DF=(r,e,n)=>e.add(r).mul(n).div(n.sub(e).mul(r)),LT=(r,e,n)=>e.mul(n).div(n.sub(e).mul(r).sub(n)),IT=(r,e,n)=>{e=e.max(1e-6).toVar();const i=Qr(r.negate().div(e)),s=Qr(n.div(e));return i.div(s)},UT=St(ri,ri.DEPTH_BASE),FT=xe(ri,ri.DEPTH),LF=St(ri,ri.LINEAR_DEPTH).setParameterLength(0,1);PF();FT.assign=r=>UT(r);class ki extends ke{static get type(){return"ClippingNode"}constructor(e=ki.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const n=e.clippingContext,{intersectionPlanes:i,unionPlanes:s}=n;return this.hardwareClipping=e.material.hardwareClipping,this.scope===ki.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(i,s):this.scope===ki.HARDWARE?this.setupHardwareClipping(s,e):this.setupDefault(i,s)}setupAlphaToCoverage(e,n){return le(()=>{const i=ie().toVar("distanceToPlane"),s=ie().toVar("distanceToGradient"),o=ie(1).toVar("clipOpacity"),a=n.length;if(this.hardwareClipping===!1&&a>0){const c=Ki(n).setGroup(Ye);Zi(a,({i:u})=>{const h=c.element(u);i.assign(cn.dot(h.xyz).negate().add(h.w)),s.assign(i.fwidth().div(2)),o.mulAssign(Rs(s.negate(),s,i))})}const l=e.length;if(l>0){const c=Ki(e).setGroup(Ye),u=ie(1).toVar("intersectionClipOpacity");Zi(l,({i:h})=>{const d=c.element(h);i.assign(cn.dot(d.xyz).negate().add(d.w)),s.assign(i.fwidth().div(2)),u.mulAssign(Rs(s.negate(),s,i).oneMinus())}),o.mulAssign(u.oneMinus())}Et.a.mulAssign(o),Et.a.equal(0).discard()})()}setupDefault(e,n){return le(()=>{const i=n.length;if(this.hardwareClipping===!1&&i>0){const o=Ki(n).setGroup(Ye);Zi(i,({i:a})=>{const l=o.element(a);cn.dot(l.xyz).greaterThan(l.w).discard()})}const s=e.length;if(s>0){const o=Ki(e).setGroup(Ye),a=bg(!0).toVar("clipped");Zi(s,({i:l})=>{const c=o.element(l);a.assign(cn.dot(c.xyz).greaterThan(c.w).and(a))}),a.discard()}})()}setupHardwareClipping(e,n){const i=e.length;return n.enableHardwareClipping(i),le(()=>{const s=Ki(e).setGroup(Ye),o=Jc(n.getClipDistance());Zi(i,({i:a})=>{const l=s.element(a),c=cn.dot(l.xyz).sub(l.w).negate();o.element(a).assign(c)})})()}}ki.ALPHA_TO_COVERAGE="alphaToCoverage";ki.DEFAULT="default";ki.HARDWARE="hardware";const IF=()=>he(new ki),UF=()=>he(new ki(ki.ALPHA_TO_COVERAGE)),FF=()=>he(new ki(ki.HARDWARE)),OF=.05,Ev=le(([r])=>Ns(pt(1e4,Yi(pt(17,r.x).add(pt(.1,r.y)))).mul(ci(.1,Ii(Yi(pt(13,r.y).add(r.x))))))),wv=le(([r])=>Ev(be(Ev(r.xy),r.z))),BF=le(([r])=>{const e=Vn(Jr(Xb(r.xyz)),Jr(Yb(r.xyz))),n=ie(1).div(ie(OF).mul(e)).toVar("pixScale"),i=be(Pc(co(Qr(n))),Pc(Rg(Qr(n)))),s=be(wv(co(i.x.mul(r.xyz))),wv(co(i.y.mul(r.xyz)))),o=Ns(Qr(n)),a=ci(pt(o.oneMinus(),s.x),pt(o,s.y)),l=Ka(o,o.oneMinus()),c=oe(a.mul(a).div(pt(2,l).mul(Yn(1,l))),a.sub(pt(.5,l)).div(Yn(1,l)),Yn(1,Yn(1,a).mul(Yn(1,a)).div(pt(2,l).mul(Yn(1,l))))),u=a.lessThan(l.oneMinus()).select(a.lessThan(l).select(c.x,c.y),c.z);return ns(u,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class kF extends lT{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const n=this.getAttributeName(e),i=e.hasGeometryAttribute(n);let s;return i===!0?s=super.generate(e):s=e.generateConst(this.nodeType,new Qe(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const zF=(r=0)=>he(new kF(r)),GF=le(([r])=>lt(r.rgb.mul(r.a),r.a),{color:"vec4",return:"vec4"});class gn extends Gn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+Cb(this)}build(e){this.setup(e)}setupObserver(e){return new b2(e)}setup(e){e.context.setupNormal=()=>cc(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const n=e.renderer,i=n.getRenderTarget();e.addStack();const s=cc(this.setupVertex(e),"VERTEX"),o=this.vertexNode||s;e.stack.outputNode=o,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let a;const l=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(i!==null?i.depthBuffer===!0&&this.setupDepth(e):n.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const c=this.setupLighting(e);l!==null&&e.stack.add(l);const u=lt(c,Et.a).max(0);a=this.setupOutput(e,u),lc.assign(a);const h=this.outputNode!==null;if(h&&(a=this.outputNode),i!==null){const d=n.getMRT(),f=this.mrtNode;d!==null?(h&&lc.assign(a),a=d,f!==null&&(a=d.merge(f))):f!==null&&(a=f)}}else{let c=this.fragmentNode;c.isOutputStructNode!==!0&&(c=lt(c)),a=this.setupOutput(e,c)}e.stack.outputNode=a,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:n,intersectionPlanes:i}=e.clippingContext;let s=null;if(n.length>0||i.length>0){const o=e.renderer.samples;this.alphaToCoverage&&o>1?s=UF():e.stack.add(IF())}return s}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const n=e.clippingContext.unionPlanes.length;n>0&&n<=8&&e.isAvailable("clipDistance")&&(e.stack.add(FF()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:n,camera:i}=e;let s=this.depthNode;if(s===null){const o=n.getMRT();o&&o.has("depth")?s=o.get("depth"):n.logarithmicDepthBuffer===!0&&(i.isPerspectiveCamera?s=IT(cn.z,no,io):s=uc(cn.z,no,io))}s!==null&&FT.assign(s).toStack()}setupPositionView(){return pd.mul(zn).xyz}setupModelViewProjection(){return fT.mul(cn)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),NT}setupPosition(e){const{object:n,geometry:i}=e;if((i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&EF(n).toStack(),n.isSkinnedMesh===!0&&xF(n).toStack(),this.displacementMap){const s=_s("displacementMap","texture"),o=_s("displacementScale","float"),a=_s("displacementBias","float");zn.addAssign(br.normalize().mul(s.x.mul(o).add(a)))}return n.isBatchedMesh&&yF(n).toStack(),n.isInstancedMesh&&n.instanceMatrix&&n.instanceMatrix.isInstancedBufferAttribute===!0&&gF(n).toStack(),this.positionNode!==null&&zn.assign(cc(this.positionNode,"POSITION","vec3")),zn}setupDiffuseColor({object:e,geometry:n}){this.maskNode!==null&&bg(this.maskNode).not().discard();let i=this.colorNode?lt(this.colorNode):FU;this.vertexColors===!0&&n.hasAttribute("color")&&(i=i.mul(zF())),e.instanceColor&&(i=Oh("vec3","vInstanceColor").mul(i)),e.isBatchedMesh&&e._colorsTexture&&(i=Oh("vec3","vBatchColor").mul(i)),Et.assign(i);const s=this.opacityNode?ie(this.opacityNode):RT;Et.a.assign(Et.a.mul(s));let o=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(o=this.alphaTestNode!==null?ie(this.alphaTestNode):UU,Et.a.lessThanEqual(o).discard()),this.alphaHash===!0&&Et.a.lessThan(BF(zn)).discard(),this.transparent===!1&&this.blending===Si&&this.alphaToCoverage===!1?Et.a.assign(1):o===null&&Et.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return this.lights===!0?oe(0):Et.rgb}setupNormal(){return this.normalNode?oe(this.normalNode):HU}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?_s("envMap","cubeTexture"):_s("envMap","texture")),e}setupLightMap(e){let n=null;return e.material.lightMap&&(n=new CF(CT)),n}setupLights(e){const n=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&n.push(i);const s=this.setupLightMap(e);if(s&&s.isLightingNode&&n.push(s),this.aoNode!==null||e.material.aoMap){const a=this.aoNode!==null?this.aoNode:hF;n.push(new wF(a))}let o=this.lightsNode||e.lightsNode;return n.length>0&&(o=e.renderer.lighting.createNode([...o.getLights(),...n])),o}setupLightingModel(){}setupLighting(e){const{material:n}=e,{backdropNode:i,backdropAlphaNode:s,emissiveNode:o}=this,l=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let c=this.setupOutgoingLight(e);if(l&&l.getScope().hasLights){const u=this.setupLightingModel(e)||null;c=RF(l,u,i,s)}else i!==null&&(c=oe(s!==null?qt(c,i,s):i));return(o&&o.isNode===!0||n.emissive&&n.emissive.isColor===!0)&&(lv.assign(oe(o||BU)),c=c.add(lv)),c}setupFog(e,n){const i=e.fogNode;return i&&(lc.assign(n),n=lt(i.toVar())),n}setupPremultipliedAlpha(e,n){return GF(n)}setupOutput(e,n){return this.fog===!0&&(n=this.setupFog(e,n)),this.premultipliedAlpha===!0&&(n=this.setupPremultipliedAlpha(e,n)),n}setDefaultValues(e){for(const i in e){const s=e[i];this[i]===void 0&&(this[i]=s,s&&s.clone&&(this[i]=s.clone()))}const n=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in n)Object.getOwnPropertyDescriptor(this.constructor.prototype,i)===void 0&&n[i].get!==void 0&&Object.defineProperty(this.constructor.prototype,i,n[i])}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});const i=Gn.prototype.toJSON.call(this,e),s=Ih(this);i.inputNodes={};for(const{property:a,childNode:l}of s)i.inputNodes[a]=l.toJSON(e).uuid;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(n){const a=o(e.textures),l=o(e.images),c=o(e.nodes);a.length>0&&(i.textures=a),l.length>0&&(i.images=l),c.length>0&&(i.nodes=c)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const VF=new id;class HF extends gn{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(VF),this.setValues(e)}}const WF=new Cw;class $F extends gn{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(WF),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?ie(this.offsetNode):lF,n=this.dashScaleNode?ie(this.dashScaleNode):sF,i=this.dashSizeNode?ie(this.dashSizeNode):oF,s=this.gapSizeNode?ie(this.gapSizeNode):aF;Nf.assign(i),cv.assign(s);const o=Ps(Cs("lineDistance").mul(n));(e?o.add(e):o).mod(Nf.add(cv)).greaterThan(Nf).discard()}}const jF=r=>he(r).mul(.5).add(.5),qF=new Ew;class XF extends gn{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(qF),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?ie(this.opacityNode):RT;Et.assign(Dg(lt(jF(Pt),e),Fn))}}const OT=le(([r=pT])=>{const e=r.z.atan(r.x).mul(1/(Math.PI*2)).add(.5),n=r.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return be(e,n)});class BT extends Dx{constructor(e=1,n={}){super(e,n),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,n){const i=n.minFilter,s=n.generateMipmaps;n.generateMipmaps=!0,this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const o=new xo(5,5,5),a=OT(pT),l=new gn;l.colorNode=Tt(n,a,0),l.side=Ut,l.blending=oi;const c=new mn(o,l),u=new nd;u.add(c),n.minFilter===ii&&(n.minFilter=vn);const h=new Px(1,10,this),d=e.getMRT();return e.setMRT(null),h.update(e,u),e.setMRT(d),n.minFilter=i,n.currentGenerateMipmaps=s,c.geometry.dispose(),c.material.dispose(),this}}const hc=new WeakMap;class YF extends Tn{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Ic(null);const n=new Wc;n.isRenderTargetTexture=!0,this._defaultTexture=n,this.updateBeforeType=ft.RENDER}updateBefore(e){const{renderer:n,material:i}=e,s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const o=s.isTextureNode?s.value:i[s.property];if(o&&o.isTexture){const a=o.mapping;if(a===Sa||a===Ma){if(hc.has(o)){const l=hc.get(o);Av(l,o.mapping),this._cubeTexture=l}else{const l=o.image;if(KF(l)){const c=new BT(l.height);c.fromEquirectangularTexture(n,o),Av(c.texture,o.mapping),this._cubeTexture=c.texture,hc.set(o,c.texture),o.addEventListener("dispose",kT)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function KF(r){return r==null?!1:r.height>0}function kT(r){const e=r.target;e.removeEventListener("dispose",kT);const n=hc.get(e);n!==void 0&&(hc.delete(e),n.dispose())}function Av(r,e){e===Sa?r.mapping=_r:e===Ma&&(r.mapping=yr)}const zT=St(YF).setParameterLength(1);class Bg extends fl{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=zT(this.envNode)}}class ZF extends fl{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const n=ie(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(n)}}class gd{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class GT extends gd{constructor(){super()}indirect({context:e}){const n=e.ambientOcclusion,i=e.reflectedLight,s=e.irradianceLightMap;i.indirectDiffuse.assign(lt(0)),s?i.indirectDiffuse.addAssign(s):i.indirectDiffuse.addAssign(lt(1,1,1,0)),i.indirectDiffuse.mulAssign(n),i.indirectDiffuse.mulAssign(Et.rgb)}finish(e){const{material:n,context:i}=e,s=i.outgoingLight,o=e.context.environment;if(o)switch(n.combine){case zc:s.rgb.assign(qt(s.rgb,s.rgb.mul(o.rgb),Th.mul(Lf)));break;case _x:s.rgb.assign(qt(s.rgb,o.rgb,Th.mul(Lf)));break;case yx:s.rgb.addAssign(o.rgb.mul(Th.mul(Lf)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine);break}}}const QF=new dr;class JF extends gn{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(QF),this.setValues(e)}setupNormal(){return eu(Lc)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Bg(n):null}setupLightMap(e){let n=null;return e.material.lightMap&&(n=new ZF(CT)),n}setupOutgoingLight(){return Et.rgb}setupLightingModel(){return new GT}}const Uc=le(({f0:r,f90:e,dotVH:n})=>{const i=n.mul(-5.55473).sub(6.98316).mul(n).exp2();return r.mul(i.oneMinus()).add(e.mul(i))}),Ja=le(r=>r.diffuseColor.mul(1/Math.PI)),eO=()=>ie(.25),tO=le(({dotNH:r})=>Xp.mul(ie(.5)).add(1).mul(ie(1/Math.PI)).mul(r.pow(Xp))),nO=le(({lightDirection:r})=>{const e=r.add(tn).normalize(),n=Pt.dot(e).clamp(),i=tn.dot(e).clamp(),s=Uc({f0:vi,f90:1,dotVH:i}),o=eO(),a=tO({dotNH:n});return s.mul(o).mul(a)});class VT extends GT{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:n,reflectedLight:i}){const o=Pt.dot(e).clamp().mul(n);i.directDiffuse.addAssign(o.mul(Ja({diffuseColor:Et.rgb}))),this.specular===!0&&i.directSpecular.addAssign(o.mul(nO({lightDirection:e})).mul(Th))}indirect(e){const{ambientOcclusion:n,irradiance:i,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(i.mul(Ja({diffuseColor:Et}))),s.indirectDiffuse.mulAssign(n)}}const iO=new Bx;class rO extends gn{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(iO),this.setValues(e)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Bg(n):null}setupLightingModel(){return new VT(!1)}}const sO=new Sw;class oO extends gn{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(sO),this.setValues(e)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Bg(n):null}setupLightingModel(){return new VT}setupVariants(){const e=(this.shininessNode?ie(this.shininessNode):OU).max(1e-4);Xp.assign(e);const n=this.specularNode||kU;vi.assign(n)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const aO=le(r=>{if(r.geometry.hasAttribute("normal")===!1)return ie(0);const e=Lc.dFdx().abs().max(Lc.dFdy().abs());return e.x.max(e.y).max(e.z)}),HT=le(r=>{const{roughness:e}=r,n=aO();let i=e.max(.0525);return i=i.add(n),i=i.min(1),i}),lO=le(({alpha:r,dotNL:e,dotNV:n})=>{const i=r.pow2(),s=e.mul(i.add(i.oneMinus().mul(n.pow2())).sqrt()),o=n.mul(i.add(i.oneMinus().mul(e.pow2())).sqrt());return xr(.5,s.add(o).max(OL))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),cO=le(({alphaT:r,alphaB:e,dotTV:n,dotBV:i,dotTL:s,dotBL:o,dotNV:a,dotNL:l})=>{const c=l.mul(oe(r.mul(n),e.mul(i),a).length()),u=a.mul(oe(r.mul(s),e.mul(o),l).length());return xr(.5,c.add(u)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),uO=le(({alpha:r,dotNH:e})=>{const n=r.pow2(),i=e.pow2().mul(n.oneMinus()).oneMinus();return n.div(i.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),hO=ie(1/Math.PI),dO=le(({alphaT:r,alphaB:e,dotNH:n,dotTH:i,dotBH:s})=>{const o=r.mul(e),a=oe(e.mul(i),r.mul(s),o.mul(n)),l=a.dot(a),c=o.div(l);return hO.mul(o.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Rv=le(({lightDirection:r,f0:e,f90:n,roughness:i,f:s,normalView:o=Pt,USE_IRIDESCENCE:a,USE_ANISOTROPY:l})=>{const c=i.pow2(),u=r.add(tn).normalize(),h=o.dot(r).clamp(),d=o.dot(tn).clamp(),f=o.dot(u).clamp(),p=tn.dot(u).clamp();let m=Uc({f0:e,f90:n,dotVH:p}),y,_;if(av(a)&&(m=Mg.mix(m,s)),av(l)){const g=_h.dot(r),v=_h.dot(tn),x=_h.dot(u),T=_a.dot(r),b=_a.dot(tn),S=_a.dot(u);y=cO({alphaT:qp,alphaB:c,dotTV:v,dotBV:b,dotTL:g,dotBL:T,dotNV:d,dotNL:h}),_=dO({alphaT:qp,alphaB:c,dotNH:f,dotTH:x,dotBH:S})}else y=lO({alpha:c,dotNL:h,dotNV:d}),_=uO({alpha:c,dotNH:f});return m.mul(y).mul(_)}),WT=le(({roughness:r,dotNV:e})=>{const n=lt(-1,-.0275,-.572,.022),i=lt(1,.0425,1.04,-.04),s=r.mul(n).add(i),o=s.x.mul(s.x).min(e.mul(-9.28).exp2()).mul(s.x).add(s.y);return be(-1.04,1.04).mul(o).add(s.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),$T=le(r=>{const{dotNV:e,specularColor:n,specularF90:i,roughness:s}=r,o=WT({dotNV:e,roughness:s});return n.mul(o.x).add(i.mul(o.y))}),fO=le(({f:r,f90:e,dotVH:n})=>{const i=n.oneMinus().saturate(),s=i.mul(i),o=i.mul(s,s).clamp(0,.9999);return r.sub(oe(e).mul(o)).div(o.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),pO=le(({roughness:r,dotNH:e})=>{const n=r.pow2(),i=ie(1).div(n),o=e.pow2().oneMinus().max(.0078125);return ie(2).add(i).mul(o.pow(i.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),mO=le(({dotNV:r,dotNL:e})=>ie(1).div(ie(4).mul(e.add(r).sub(e.mul(r))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),gO=le(({lightDirection:r})=>{const e=r.add(tn).normalize(),n=Pt.dot(r).clamp(),i=Pt.dot(tn).clamp(),s=Pt.dot(e).clamp(),o=pO({roughness:Sg,dotNH:s}),a=mO({dotNV:i,dotNL:n});return aa.mul(o).mul(a)}),_O=le(({N:r,V:e,roughness:n})=>{const o=.0078125,a=r.dot(e).saturate(),l=be(n,a.oneMinus().sqrt());return l.assign(l.mul(.984375).add(o)),l}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),yO=le(({f:r})=>{const e=r.length();return Vn(e.mul(e).add(r.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),$u=le(({v1:r,v2:e})=>{const n=r.dot(e),i=n.abs().toVar(),s=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),o=i.add(4.1616724).mul(i).add(3.417594).toVar(),a=s.div(o),l=n.greaterThan(0).select(a,Vn(n.mul(n).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return r.cross(e).mul(l)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Cv=le(({N:r,V:e,P:n,mInv:i,p0:s,p1:o,p2:a,p3:l})=>{const c=o.sub(s).toVar(),u=l.sub(s).toVar(),h=c.cross(u),d=oe().toVar();return on(h.dot(n.sub(s)).greaterThanEqual(0),()=>{const f=e.sub(r.mul(e.dot(r))).normalize(),p=r.cross(f).negate(),m=i.mul(Jn(f,p,r).transpose()).toVar(),y=m.mul(s.sub(n)).normalize().toVar(),_=m.mul(o.sub(n)).normalize().toVar(),g=m.mul(a.sub(n)).normalize().toVar(),v=m.mul(l.sub(n)).normalize().toVar(),x=oe(0).toVar();x.addAssign($u({v1:y,v2:_})),x.addAssign($u({v1:_,v2:g})),x.addAssign($u({v1:g,v2:v})),x.addAssign($u({v1:v,v2:y})),d.assign(oe(yO({f:x})))}),d}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),_d=1/6,jT=r=>pt(_d,pt(r,pt(r,r.negate().add(3)).sub(3)).add(1)),Jp=r=>pt(_d,pt(r,pt(r,pt(3,r).sub(6))).add(4)),qT=r=>pt(_d,pt(r,pt(r,pt(-3,r).add(3)).add(3)).add(1)),em=r=>pt(_d,hd(r,3)),Nv=r=>jT(r).add(Jp(r)),Pv=r=>qT(r).add(em(r)),Dv=r=>ci(-1,Jp(r).div(jT(r).add(Jp(r)))),Lv=r=>ci(1,em(r).div(qT(r).add(em(r)))),Iv=(r,e,n)=>{const i=r.uvNode,s=pt(i,e.zw).add(.5),o=co(s),a=Ns(s),l=Nv(a.x),c=Pv(a.x),u=Dv(a.x),h=Lv(a.x),d=Dv(a.y),f=Lv(a.y),p=be(o.x.add(u),o.y.add(d)).sub(.5).mul(e.xy),m=be(o.x.add(h),o.y.add(d)).sub(.5).mul(e.xy),y=be(o.x.add(u),o.y.add(f)).sub(.5).mul(e.xy),_=be(o.x.add(h),o.y.add(f)).sub(.5).mul(e.xy),g=Nv(a.y).mul(ci(l.mul(r.sample(p).level(n)),c.mul(r.sample(m).level(n)))),v=Pv(a.y).mul(ci(l.mul(r.sample(y).level(n)),c.mul(r.sample(_).level(n))));return g.add(v)},vO=le(([r,e])=>{const n=be(r.size(Ht(e))),i=be(r.size(Ht(e.add(1)))),s=xr(1,n),o=xr(1,i),a=Iv(r,lt(s,n),co(e)),l=Iv(r,lt(o,i),Rg(e));return Ns(e).mix(a,l)}),Uv=le(([r,e,n,i,s])=>{const o=oe(tT(e.negate(),Dc(r),xr(1,i))),a=oe(Jr(s[0].xyz),Jr(s[1].xyz),Jr(s[2].xyz));return Dc(o).mul(n.mul(a))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),xO=le(([r,e])=>r.mul(ns(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),bO=DT(),TO=DT(),Fv=le(([r,e,n],{material:i})=>{const o=(i.side===Ut?bO:TO).sample(r),a=Qr(Kp.x).mul(xO(e,n));return vO(o,a)}),Ov=le(([r,e,n])=>(on(n.notEqual(0),()=>{const i=$b(e).negate().div(n);return Wb(i.negate().mul(r))}),oe(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),SO=le(([r,e,n,i,s,o,a,l,c,u,h,d,f,p,m])=>{let y,_;if(m){y=lt().toVar(),_=oe().toVar();const b=h.sub(1).mul(m.mul(.025)),S=oe(h.sub(b),h,h.add(b));Zi({start:0,end:3},({i:M})=>{const A=S.element(M),E=Uv(r,e,d,A,l),w=a.add(E),N=u.mul(c.mul(lt(w,1))),D=be(N.xy.div(N.w)).toVar();D.addAssign(1),D.divAssign(2),D.assign(be(D.x,D.y.oneMinus()));const F=Fv(D,n,A);y.element(M).assign(F.element(M)),y.a.addAssign(F.a),_.element(M).assign(i.element(M).mul(Ov(Jr(E),f,p).element(M)))}),y.a.divAssign(3)}else{const b=Uv(r,e,d,h,l),S=a.add(b),M=u.mul(c.mul(lt(S,1))),A=be(M.xy.div(M.w)).toVar();A.addAssign(1),A.divAssign(2),A.assign(be(A.x,A.y.oneMinus())),y=Fv(A,n,h),_=i.mul(Ov(Jr(b),f,p))}const g=_.rgb.mul(y.rgb),v=r.dot(e).clamp(),x=oe($T({dotNV:v,specularColor:s,specularF90:o,roughness:n})),T=_.r.add(_.g,_.b).div(3);return lt(x.oneMinus().mul(g),y.a.oneMinus().mul(T).oneMinus())}),MO=Jn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),EO=r=>{const e=r.sqrt();return oe(1).add(e).div(oe(1).sub(e))},Bv=(r,e)=>r.sub(e).div(r.add(e)).pow2(),wO=(r,e)=>{const n=r.mul(2*Math.PI*1e-9),i=oe(54856e-17,44201e-17,52481e-17),s=oe(1681e3,1795300,2208400),o=oe(43278e5,93046e5,66121e5),a=ie(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(n.mul(2239900).add(e.x).cos()).mul(n.pow2().mul(-45282e5).exp());let l=i.mul(o.mul(2*Math.PI).sqrt()).mul(s.mul(n).add(e).cos()).mul(n.pow2().negate().mul(o).exp());return l=oe(l.x.add(a),l.y,l.z).div(10685e-11),MO.mul(l)},AO=le(({outsideIOR:r,eta2:e,cosTheta1:n,thinFilmThickness:i,baseF0:s})=>{const o=qt(r,e,Rs(0,.03,i)),l=r.div(o).pow2().mul(n.pow2().oneMinus()).oneMinus();on(l.lessThan(0),()=>oe(1));const c=l.sqrt(),u=Bv(o,r),h=Uc({f0:u,f90:1,dotVH:n}),d=h.oneMinus(),f=o.lessThan(r).select(Math.PI,0),p=ie(Math.PI).sub(f),m=EO(s.clamp(0,.9999)),y=Bv(m,o.toVec3()),_=Uc({f0:y,f90:1,dotVH:c}),g=oe(m.x.lessThan(o).select(Math.PI,0),m.y.lessThan(o).select(Math.PI,0),m.z.lessThan(o).select(Math.PI,0)),v=o.mul(i,c,2),x=oe(p).add(g),T=h.mul(_).clamp(1e-5,.9999),b=T.sqrt(),S=d.pow2().mul(_).div(oe(1).sub(T)),A=h.add(S).toVar(),E=S.sub(d).toVar();return Zi({start:1,end:2,condition:"<=",name:"m"},({m:w})=>{E.mulAssign(b);const N=wO(ie(w).mul(v),ie(w).mul(x)).mul(2);A.addAssign(E.mul(N))}),A.max(oe(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),RO=le(({normal:r,viewDir:e,roughness:n})=>{const i=r.dot(e).saturate(),s=n.pow2(),o=Qn(n.lessThan(.25),ie(-339.2).mul(s).add(ie(161.4).mul(n)).sub(25.9),ie(-8.48).mul(s).add(ie(14.3).mul(n)).sub(9.95)),a=Qn(n.lessThan(.25),ie(44).mul(s).sub(ie(23.7).mul(n)).add(3.26),ie(1.97).mul(s).sub(ie(3.27).mul(n)).add(.72));return Qn(n.lessThan(.25),0,ie(.1).mul(n).sub(.025)).add(o.mul(i).add(a).exp()).mul(1/Math.PI).saturate()}),Uf=oe(.04),Ff=ie(1);class XT extends gd{constructor(e=!1,n=!1,i=!1,s=!1,o=!1,a=!1){super(),this.clearcoat=e,this.sheen=n,this.iridescence=i,this.anisotropy=s,this.transmission=o,this.dispersion=a,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=oe().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=oe().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=oe().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=oe().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=oe().toVar("sheenSpecularIndirect")),this.iridescence===!0){const n=Pt.dot(tn).clamp();this.iridescenceFresnel=AO({outsideIOR:ie(1),eta2:Ub,cosTheta1:n,thinFilmThickness:Fb,baseF0:vi}),this.iridescenceF0=fO({f:this.iridescenceFresnel,f90:1,dotVH:n})}if(this.transmission===!0){const n=Qa,i=rU.sub(Qa).normalize(),s=dl,o=e.context;o.backdrop=SO(s,i,Wr,Et,vi,zh,n,_o,ss,fT,yh,Ob,kb,Bb,this.dispersion?zb:null),o.backdropAlpha=Yp,Et.a.mulAssign(qt(1,o.backdrop.a,Yp))}super.start(e)}computeMultiscattering(e,n,i){const s=Pt.dot(tn).clamp(),o=WT({roughness:Wr,dotNV:s}),l=(this.iridescenceF0?Mg.mix(vi,this.iridescenceF0):vi).mul(o.x).add(i.mul(o.y)),u=o.x.add(o.y).oneMinus(),h=vi.add(vi.oneMinus().mul(.047619)),d=l.mul(h).div(u.mul(h).oneMinus());e.addAssign(l),n.addAssign(d.mul(u))}direct({lightDirection:e,lightColor:n,reflectedLight:i}){const o=Pt.dot(e).clamp().mul(n);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(o.mul(gO({lightDirection:e}))),this.clearcoat===!0){const l=la.dot(e).clamp().mul(n);this.clearcoatSpecularDirect.addAssign(l.mul(Rv({lightDirection:e,f0:Uf,f90:Ff,roughness:kh,normalView:la})))}i.directDiffuse.addAssign(o.mul(Ja({diffuseColor:Et.rgb}))),i.directSpecular.addAssign(o.mul(Rv({lightDirection:e,f0:vi,f90:1,roughness:Wr,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:n,halfWidth:i,halfHeight:s,reflectedLight:o,ltc_1:a,ltc_2:l}){const c=n.add(i).sub(s),u=n.sub(i).sub(s),h=n.sub(i).add(s),d=n.add(i).add(s),f=Pt,p=tn,m=cn.toVar(),y=_O({N:f,V:p,roughness:Wr}),_=a.sample(y).toVar(),g=l.sample(y).toVar(),v=Jn(oe(_.x,0,_.y),oe(0,1,0),oe(_.z,0,_.w)).toVar(),x=vi.mul(g.x).add(vi.oneMinus().mul(g.y)).toVar();o.directSpecular.addAssign(e.mul(x).mul(Cv({N:f,V:p,P:m,mInv:v,p0:c,p1:u,p2:h,p3:d}))),o.directDiffuse.addAssign(e.mul(Et).mul(Cv({N:f,V:p,P:m,mInv:Jn(1,0,0,0,1,0,0,0,1),p0:c,p1:u,p2:h,p3:d})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(Ja({diffuseColor:Et})))}indirectSpecular(e){const{radiance:n,iblIrradiance:i,reflectedLight:s}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(i.mul(aa,RO({normal:Pt,viewDir:tn,roughness:Sg}))),this.clearcoat===!0){const h=la.dot(tn).clamp(),d=$T({dotNV:h,specularColor:Uf,specularF90:Ff,roughness:kh});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(d))}const o=oe().toVar("singleScattering"),a=oe().toVar("multiScattering"),l=i.mul(1/Math.PI);this.computeMultiscattering(o,a,zh);const c=o.add(a),u=Et.mul(c.r.max(c.g).max(c.b).oneMinus());s.indirectSpecular.addAssign(n.mul(o)),s.indirectSpecular.addAssign(a.mul(l)),s.indirectDiffuse.addAssign(u.mul(l))}ambientOcclusion(e){const{ambientOcclusion:n,reflectedLight:i}=e.context,o=Pt.dot(tn).clamp().add(n),a=Wr.mul(-16).oneMinus().negate().exp2(),l=n.sub(o.pow(a).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(n),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(n),i.indirectDiffuse.mulAssign(n),i.indirectSpecular.mulAssign(l)}finish({context:e}){const{outgoingLight:n}=e;if(this.clearcoat===!0){const i=la.dot(tn).clamp(),s=Uc({dotVH:i,f0:Uf,f90:Ff}),o=n.mul(jp.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(jp));n.assign(o)}if(this.sheen===!0){const i=aa.r.max(aa.g).max(aa.b).mul(.157).oneMinus(),s=n.mul(i).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);n.assign(s)}}}const kv=ie(1),tm=ie(-2),ju=ie(.8),Of=ie(-1),qu=ie(.4),Bf=ie(2),Xu=ie(.305),kf=ie(3),zv=ie(.21),CO=ie(4),Gv=ie(4),NO=ie(16),PO=le(([r])=>{const e=oe(Ii(r)).toVar(),n=ie(-1).toVar();return on(e.x.greaterThan(e.z),()=>{on(e.x.greaterThan(e.y),()=>{n.assign(Qn(r.x.greaterThan(0),0,3))}).Else(()=>{n.assign(Qn(r.y.greaterThan(0),1,4))})}).Else(()=>{on(e.z.greaterThan(e.y),()=>{n.assign(Qn(r.z.greaterThan(0),2,5))}).Else(()=>{n.assign(Qn(r.y.greaterThan(0),1,4))})}),n}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),DO=le(([r,e])=>{const n=be().toVar();return on(e.equal(0),()=>{n.assign(be(r.z,r.y).div(Ii(r.x)))}).ElseIf(e.equal(1),()=>{n.assign(be(r.x.negate(),r.z.negate()).div(Ii(r.y)))}).ElseIf(e.equal(2),()=>{n.assign(be(r.x.negate(),r.y).div(Ii(r.z)))}).ElseIf(e.equal(3),()=>{n.assign(be(r.z.negate(),r.y).div(Ii(r.x)))}).ElseIf(e.equal(4),()=>{n.assign(be(r.x.negate(),r.z).div(Ii(r.y)))}).Else(()=>{n.assign(be(r.x,r.y).div(Ii(r.z)))}),pt(.5,n.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),LO=le(([r])=>{const e=ie(0).toVar();return on(r.greaterThanEqual(ju),()=>{e.assign(kv.sub(r).mul(Of.sub(tm)).div(kv.sub(ju)).add(tm))}).ElseIf(r.greaterThanEqual(qu),()=>{e.assign(ju.sub(r).mul(Bf.sub(Of)).div(ju.sub(qu)).add(Of))}).ElseIf(r.greaterThanEqual(Xu),()=>{e.assign(qu.sub(r).mul(kf.sub(Bf)).div(qu.sub(Xu)).add(Bf))}).ElseIf(r.greaterThanEqual(zv),()=>{e.assign(Xu.sub(r).mul(CO.sub(kf)).div(Xu.sub(zv)).add(kf))}).Else(()=>{e.assign(ie(-2).mul(Qr(pt(1.16,r))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),IO=le(([r,e])=>{const n=r.toVar();n.assign(pt(2,n).sub(1));const i=oe(n,1).toVar();return on(e.equal(0),()=>{i.assign(i.zyx)}).ElseIf(e.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),UO=le(([r,e,n,i,s,o])=>{const a=ie(n),l=oe(e),c=ns(LO(a),tm,o),u=Ns(c),h=co(c),d=oe(nm(r,l,h,i,s,o)).toVar();return on(u.notEqual(0),()=>{const f=oe(nm(r,l,h.add(1),i,s,o)).toVar();d.assign(qt(d,f,u))}),d}),nm=le(([r,e,n,i,s,o])=>{const a=ie(n).toVar(),l=oe(e),c=ie(PO(l)).toVar(),u=ie(Vn(Gv.sub(a),0)).toVar();a.assign(Vn(a,Gv));const h=ie(Pc(a)).toVar(),d=be(DO(l,c).mul(h.sub(2)).add(1)).toVar();return on(c.greaterThan(2),()=>{d.y.addAssign(h),c.subAssign(3)}),d.x.addAssign(c.mul(h)),d.x.addAssign(u.mul(pt(3,NO))),d.y.addAssign(pt(4,Pc(o).sub(h))),d.x.mulAssign(i),d.y.mulAssign(s),r.sample(d).grad(be(),be())}),zf=le(({envMap:r,mipInt:e,outputDirection:n,theta:i,axis:s,CUBEUV_TEXEL_WIDTH:o,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:l})=>{const c=gs(i),u=n.mul(c).add(s.cross(n).mul(Yi(i))).add(s.mul(s.dot(n).mul(c.oneMinus())));return nm(r,u,e,o,a,l)}),FO=le(({n:r,latitudinal:e,poleAxis:n,outputDirection:i,weights:s,samples:o,dTheta:a,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d})=>{const f=oe(Qn(e,n,Zb(n,i))).toVar();on(f.equal(oe(0)),()=>{f.assign(oe(i.z,0,i.x.negate()))}),f.assign(Dc(f));const p=oe().toVar();return p.addAssign(s.element(0).mul(zf({theta:0,axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d}))),Zi({start:Ht(1),end:r},({i:m})=>{on(m.greaterThanEqual(o),()=>{TF()});const y=ie(a.mul(ie(m))).toVar();p.addAssign(s.element(m).mul(zf({theta:y.mul(-1),axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d}))),p.addAssign(s.element(m).mul(zf({theta:y,axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d})))}),lt(p,1)}),ca=4,Vv=[.125,.215,.35,.446,.526,.582],ro=20,Gf=new Yc(-1,1,1,-1,0,1),OO=new wn(90,1),Hv=new Ge;let Vf=null,Hf=0,Wf=0;const Js=(1+Math.sqrt(5))/2,Xo=1/Js,Wv=[new L(-Js,Xo,0),new L(Js,Xo,0),new L(-Xo,0,Js),new L(Xo,0,Js),new L(0,Js,-Xo),new L(0,Js,Xo),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],BO=new L,YT=new WeakMap,kO=[3,1,5,0,4,2],$f=IO(Qc(),Cs("faceIndex")).normalize(),kg=oe($f.x,$f.y,$f.z);class zO{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,n=0,i=.1,s=100,o={}){const{size:a=256,position:l=BO,renderTarget:c=null}=o;if(this._setSize(a),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const h=c||this._allocateTarget();return o.renderTarget=h,this.fromSceneAsync(e,n,i,s,o),h}Vf=this._renderer.getRenderTarget(),Hf=this._renderer.getActiveCubeFace(),Wf=this._renderer.getActiveMipmapLevel();const u=c||this._allocateTarget();return u.depthBuffer=!0,this._init(u),this._sceneToCubeUV(e,i,s,u,l),n>0&&this._blur(u,0,0,n),this._applyPMREM(u),this._cleanup(u),u}async fromSceneAsync(e,n=0,i=.1,s=100,o={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,n,i,s,o)}fromEquirectangular(e,n=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const i=n||this._allocateTarget();return this.fromEquirectangularAsync(e,i),i}return this._fromTexture(e,n)}async fromEquirectangularAsync(e,n=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,n)}fromCubemap(e,n=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const i=n||this._allocateTarget();return this.fromCubemapAsync(e,n),i}return this._fromTexture(e,n)}async fromCubemapAsync(e,n=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,n)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=jv(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=qv(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===_r||e.mapping===yr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Vf,Hf,Wf),e.scissorTest=!1,Yu(e,0,0,e.width,e.height)}_fromTexture(e,n){this._setSizeFromTexture(e),Vf=this._renderer.getRenderTarget(),Hf=this._renderer.getActiveCubeFace(),Wf=this._renderer.getActiveMipmapLevel();const i=n||this._allocateTarget();return this._init(i),this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize;return $v(e,n)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=$v(e.width,e.height);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=GO(n)),this._blurMaterial=VO(n,e.width,e.height)}}async _compileMaterial(e){const n=new mn(this._lodPlanes[0],e);await this._renderer.compile(n,Gf)}_sceneToCubeUV(e,n,i,s,o){const a=OO;a.near=n,a.far=i;const l=[1,1,1,1,-1,1],c=[1,-1,1,-1,1,-1],u=this._renderer,h=u.autoClear;u.getClearColor(Hv),u.autoClear=!1;let d=this._backgroundBox;if(d===null){const m=new dr({name:"PMREM.Background",side:Ut,depthWrite:!1,depthTest:!1});d=new mn(new xo,m)}let f=!1;const p=e.background;p?p.isColor&&(d.material.color.copy(p),e.background=null,f=!0):(d.material.color.copy(Hv),f=!0),u.setRenderTarget(s),u.clear(),f&&u.render(d,a);for(let m=0;m<6;m++){const y=m%3;y===0?(a.up.set(0,l[m],0),a.position.set(o.x,o.y,o.z),a.lookAt(o.x+c[m],o.y,o.z)):y===1?(a.up.set(0,0,l[m]),a.position.set(o.x,o.y,o.z),a.lookAt(o.x,o.y+c[m],o.z)):(a.up.set(0,l[m],0),a.position.set(o.x,o.y,o.z),a.lookAt(o.x,o.y,o.z+c[m]));const _=this._cubeSize;Yu(s,y*_,m>2?_:0,_,_),u.render(e,a)}u.autoClear=h,e.background=p}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===_r||e.mapping===yr;s?this._cubemapMaterial===null&&(this._cubemapMaterial=jv(e)):this._equirectMaterial===null&&(this._equirectMaterial=qv(e));const o=s?this._cubemapMaterial:this._equirectMaterial;o.fragmentNode.value=e;const a=this._lodMeshes[0];a.material=o;const l=this._cubeSize;Yu(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(a,Gf)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let o=1;o<s;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),l=Wv[(s-o-1)%Wv.length];this._blur(e,o-1,o,a,l)}n.autoClear=i}_blur(e,n,i,s,o){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,s,"latitudinal",o),this._halfBlur(a,e,i,i,s,"longitudinal",o)}_halfBlur(e,n,i,s,o,a,l){const c=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=this._lodMeshes[s];d.material=u;const f=YT.get(u),p=this._sizeLods[i]-1,m=isFinite(o)?Math.PI/(2*p):2*Math.PI/(2*ro-1),y=o/m,_=isFinite(o)?1+Math.floor(h*y):ro;_>ro&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${ro}`);const g=[];let v=0;for(let M=0;M<ro;++M){const A=M/y,E=Math.exp(-A*A/2);g.push(E),M===0?v+=E:M<_&&(v+=2*E)}for(let M=0;M<g.length;M++)g[M]=g[M]/v;e.texture.frame=(e.texture.frame||0)+1,f.envMap.value=e.texture,f.samples.value=_,f.weights.array=g,f.latitudinal.value=a==="latitudinal"?1:0,l&&(f.poleAxis.value=l);const{_lodMax:x}=this;f.dTheta.value=m,f.mipInt.value=x-i;const T=this._sizeLods[s],b=3*T*(s>x-ca?s-x+ca:0),S=4*(this._cubeSize-T);Yu(n,b,S,3*T,2*T),c.setRenderTarget(n),c.render(d,Gf)}}function GO(r){const e=[],n=[],i=[],s=[];let o=r;const a=r-ca+1+Vv.length;for(let l=0;l<a;l++){const c=Math.pow(2,o);n.push(c);let u=1/c;l>r-ca?u=Vv[l-r+ca-1]:l===0&&(u=0),i.push(u);const h=1/(c-2),d=-h,f=1+h,p=[d,d,f,d,f,f,d,d,f,f,d,f],m=6,y=6,_=3,g=2,v=1,x=new Float32Array(_*y*m),T=new Float32Array(g*y*m),b=new Float32Array(v*y*m);for(let M=0;M<m;M++){const A=M%3*2/3-1,E=M>2?0:-1,w=[A,E,0,A+2/3,E,0,A+2/3,E+1,0,A,E,0,A+2/3,E+1,0,A,E+1,0],N=kO[M];x.set(w,_*y*N),T.set(p,g*y*N);const D=[N,N,N,N,N,N];b.set(D,v*y*N)}const S=new Hn;S.setAttribute("position",new Nn(x,_)),S.setAttribute("uv",new Nn(T,g)),S.setAttribute("faceIndex",new Nn(b,v)),e.push(S),s.push(new mn(S,null)),o>ca&&o--}return{lodPlanes:e,sizeLods:n,sigmas:i,lodMeshes:s}}function $v(r,e){const n={magFilter:vn,minFilter:vn,generateMipmaps:!1,type:An,format:sn,colorSpace:po},i=new yo(r,e,n);return i.texture.mapping=uo,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function Yu(r,e,n,i,s){r.viewport.set(e,n,i,s),r.scissor.set(e,n,i,s)}function zg(r){const e=new gn;return e.depthTest=!1,e.depthWrite=!1,e.blending=oi,e.name=`PMREM_${r}`,e}function VO(r,e,n){const i=Ki(new Array(ro).fill(0)),s=tt(new L(0,1,0)),o=tt(0),a=ie(ro),l=tt(0),c=tt(1),u=Tt(null),h=tt(0),d=ie(1/e),f=ie(1/n),p=ie(r),m={n:a,latitudinal:l,weights:i,poleAxis:s,outputDirection:kg,dTheta:o,samples:c,envMap:u,mipInt:h,CUBEUV_TEXEL_WIDTH:d,CUBEUV_TEXEL_HEIGHT:f,CUBEUV_MAX_MIP:p},y=zg("blur");return y.fragmentNode=FO({...m,latitudinal:l.equal(1)}),YT.set(y,m),y}function jv(r){const e=zg("cubemap");return e.fragmentNode=Ic(r,kg),e}function qv(r){const e=zg("equirect");return e.fragmentNode=Tt(r,OT(kg),0),e}const Xv=new WeakMap;function HO(r){const e=Math.log2(r)-2,n=1/r;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function WO(r,e,n){const i=$O(e);let s=i.get(r);if((s!==void 0?s.pmremVersion:-1)!==r.pmremVersion){const a=r.image;if(r.isCubeTexture)if(qO(a))s=n.fromCubemap(r,s);else return null;else if(XO(a))s=n.fromEquirectangular(r,s);else return null;s.pmremVersion=r.pmremVersion,i.set(r,s)}return s.texture}function $O(r){let e=Xv.get(r);return e===void 0&&(e=new WeakMap,Xv.set(r,e)),e}class jO extends Tn{static get type(){return"PMREMNode"}constructor(e,n=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=n,this.levelNode=i,this._generator=null;const s=new un;s.isRenderTargetTexture=!0,this._texture=Tt(s),this._width=tt(0),this._height=tt(0),this._maxMip=tt(0),this.updateBeforeType=ft.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const n=HO(e.image.height);this._texture.value=e,this._width.value=n.texelWidth,this._height.value=n.texelHeight,this._maxMip.value=n.maxMip}updateBefore(e){let n=this._pmrem;const i=n?n.pmremVersion:-1,s=this._value;i!==s.pmremVersion&&(s.isPMREMTexture===!0?n=s:n=WO(s,e.renderer,this._generator),n!==null&&(this._pmrem=n,this.updateFromTexture(n)))}setup(e){this._generator===null&&(this._generator=new zO(e.renderer)),this.updateBefore(e);let n=this.uvNode;n===null&&e.context.getUV&&(n=e.context.getUV(this)),n=yT.mul(oe(n.x,n.y.negate(),n.z));let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),UO(this._texture,n,i,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function qO(r){if(r==null)return!1;let e=0;const n=6;for(let i=0;i<n;i++)r[i]!==void 0&&e++;return e===n}function XO(r){return r==null?!1:r.height>0}const KT=St(jO).setParameterLength(1,3),Yv=new WeakMap;class YO extends fl{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:n}=e;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const d=i.isTextureNode?i.value:n[i.property];let f=Yv.get(d);f===void 0&&(f=KT(d),Yv.set(d,f)),i=f}const o=n.useAnisotropy===!0||n.anisotropy>0?CU:Pt,a=i.context(Kv(Wr,o)).mul(Df),l=i.context(KO(dl)).mul(Math.PI).mul(Df),c=xh(a),u=xh(l);e.context.radiance.addAssign(c),e.context.iblIrradiance.addAssign(u);const h=e.context.lightingModel.clearcoatRadiance;if(h){const d=i.context(Kv(kh,la)).mul(Df),f=xh(d);h.addAssign(f)}}}const Kv=(r,e)=>{let n=null;return{getUV:()=>(n===null&&(n=tn.negate().reflect(e),n=r.mul(r).mix(n,e).normalize(),n=n.transformDirection(ss)),n),getTextureLevel:()=>r}},KO=r=>({getUV:()=>r,getTextureLevel:()=>ie(1)}),ZO=new Ox;class ZT extends gn{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(ZO),this.setValues(e)}setupEnvironment(e){let n=super.setupEnvironment(e);return n===null&&e.environmentNode&&(n=e.environmentNode),n?new YO(n):null}setupLightingModel(){return new XT}setupSpecular(){const e=qt(oe(.04),Et.rgb,Bh);vi.assign(e),zh.assign(1)}setupVariants(){const e=this.metalnessNode?ie(this.metalnessNode):VU;Bh.assign(e);let n=this.roughnessNode?ie(this.roughnessNode):GU;n=HT({roughness:n}),Wr.assign(n),this.setupSpecular(),Et.assign(lt(Et.rgb.mul(e.oneMinus()),Et.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const QO=new Tw;class JO extends ZT{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(QO),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?ie(this.iorNode):nF;yh.assign(e),vi.assign(qt(Ka(Qb(yh.sub(1).div(yh.add(1))).mul(zU),oe(1)).mul(Tv),Et.rgb,Bh)),zh.assign(qt(Tv,1,Bh))}setupLightingModel(){return new XT(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const n=this.clearcoatNode?ie(this.clearcoatNode):WU,i=this.clearcoatRoughnessNode?ie(this.clearcoatRoughnessNode):$U;jp.assign(n),kh.assign(HT({roughness:i}))}if(this.useSheen){const n=this.sheenNode?oe(this.sheenNode):XU,i=this.sheenRoughnessNode?ie(this.sheenRoughnessNode):YU;aa.assign(n),Sg.assign(i)}if(this.useIridescence){const n=this.iridescenceNode?ie(this.iridescenceNode):ZU,i=this.iridescenceIORNode?ie(this.iridescenceIORNode):QU,s=this.iridescenceThicknessNode?ie(this.iridescenceThicknessNode):JU;Mg.assign(n),Ub.assign(i),Fb.assign(s)}if(this.useAnisotropy){const n=(this.anisotropyNode?be(this.anisotropyNode):KU).toVar();Qs.assign(n.length()),on(Qs.equal(0),()=>{n.assign(be(1,0))}).Else(()=>{n.divAssign(be(Qs)),Qs.assign(Qs.saturate())}),qp.assign(Qs.pow2().mix(Wr.pow2(),1)),_h.assign(Jl[0].mul(n.x).add(Jl[1].mul(n.y))),_a.assign(Jl[1].mul(n.x).sub(Jl[0].mul(n.y)))}if(this.useTransmission){const n=this.transmissionNode?ie(this.transmissionNode):eF,i=this.thicknessNode?ie(this.thicknessNode):tF,s=this.attenuationDistanceNode?ie(this.attenuationDistanceNode):iF,o=this.attenuationColorNode?oe(this.attenuationColorNode):rF;if(Yp.assign(n),Ob.assign(i),Bb.assign(s),kb.assign(o),this.useDispersion){const a=this.dispersionNode?ie(this.dispersionNode):uF;zb.assign(a)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?oe(this.clearcoatNormalNode):jU}setup(e){e.context.setupClearcoatNormal=()=>cc(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const eB=le(({normal:r,lightDirection:e,builder:n})=>{const i=r.dot(e),s=be(i.mul(.5).add(.5),0);if(n.material.gradientMap){const o=_s("gradientMap","texture").context({getUV:()=>s});return oe(o.r)}else{const o=s.fwidth().mul(.5);return qt(oe(.7),oe(1),Rs(ie(.7).sub(o.x),ie(.7).add(o.x),s.x))}});class tB extends gd{direct({lightDirection:e,lightColor:n,reflectedLight:i},s){const o=eB({normal:gT,lightDirection:e,builder:s}).mul(n);i.directDiffuse.addAssign(o.mul(Ja({diffuseColor:Et.rgb})))}indirect(e){const{ambientOcclusion:n,irradiance:i,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(i.mul(Ja({diffuseColor:Et}))),s.indirectDiffuse.mulAssign(n)}}const nB=new Mw;class iB extends gn{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(nB),this.setValues(e)}setupLightingModel(){return new tB}}const rB=le(()=>{const r=oe(tn.z,0,tn.x.negate()).normalize(),e=tn.cross(r);return be(r.dot(Pt),e.dot(Pt)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),sB=new Rw;class oB extends gn{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(sB),this.setValues(e)}setupVariants(e){const n=rB;let i;e.material.matcap?i=_s("matcap","texture").context({getUV:()=>n}):i=oe(qt(.2,.8,n.y)),Et.rgb.mulAssign(i.rgb)}}class aB extends Tn{static get type(){return"RotateNode"}constructor(e,n){super(),this.positionNode=e,this.rotationNode=n}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:n,positionNode:i}=this;if(this.getNodeType(e)==="vec2"){const o=n.cos(),a=n.sin();return Tg(o,a,a.negate(),o).mul(i)}else{const o=n,a=ga(lt(1,0,0,0),lt(0,gs(o.x),Yi(o.x).negate(),0),lt(0,Yi(o.x),gs(o.x),0),lt(0,0,0,1)),l=ga(lt(gs(o.y),0,Yi(o.y),0),lt(0,1,0,0),lt(Yi(o.y).negate(),0,gs(o.y),0),lt(0,0,0,1)),c=ga(lt(gs(o.z),Yi(o.z).negate(),0,0),lt(Yi(o.z),gs(o.z),0,0),lt(0,0,1,0),lt(0,0,0,1));return a.mul(l).mul(c).mul(lt(i,1)).xyz}}}const QT=St(aB).setParameterLength(2),lB=new Jm;class JT extends gn{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(lB),this.setValues(e)}setupPositionView(e){const{object:n,camera:i}=e,{positionNode:s,rotationNode:o,scaleNode:a,sizeAttenuation:l}=this,c=pd.mul(oe(s||0));let u=be(_o[0].xyz.length(),_o[1].xyz.length());a!==null&&(u=u.mul(be(a))),i.isPerspectiveCamera&&l===!1&&(u=u.mul(c.z.negate()));let h=md.xy;if(n.center&&n.center.isVector2===!0){const p=CI("center","vec2",n);h=h.sub(p.sub(.5))}h=h.mul(u);const d=ie(o||qU),f=QT(h,d);return lt(c.xy.add(f),c.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const cB=new iw,uB=new ue;class hB extends JT{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(cB),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return pd.mul(oe(e||zn)).xyz}setupVertexSprite(e){const{material:n,camera:i}=e,{rotationNode:s,scaleNode:o,sizeNode:a,sizeAttenuation:l}=this;let c=super.setupVertex(e);if(n.isNodeMaterial!==!0)return c;let u=a!==null?be(a):cF;u=u.mul(nU),i.isPerspectiveCamera&&l===!0&&(u=u.mul(dB.div(cn.z.negate()))),o&&o.isNode&&(u=u.mul(be(o)));let h=md.xy;if(s&&s.isNode){const d=ie(s);h=QT(h,d)}return h=h.mul(u),h=h.div(iU.div(2)),h=h.mul(c.w),c=c.add(lt(h,0,0)),c}setupVertex(e){return e.object.isPoints?super.setupVertex(e):this.setupVertexSprite(e)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const dB=tt(1).onFrameUpdate(function({renderer:r}){const e=r.getSize(uB);this.value=.5*e.y});class fB extends gd{constructor(){super(),this.shadowNode=ie(1).toVar("shadowMask")}direct({lightNode:e}){e.shadowNode!==null&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){Et.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(Et.rgb)}}const pB=new bw;class mB extends gn{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(pB),this.setValues(e)}setupLightingModel(){return new fB}}Ms("vec3");Ms("vec3");Ms("vec3");class gB{constructor(e,n){this.nodes=e,this.info=n,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(n,i)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(n,i)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class tr{constructor(){this.weakMap=new WeakMap}get(e){let n=this.weakMap;for(let i=0;i<e.length-1;i++)if(n=n.get(e[i]),n===void 0)return;return n.get(e[e.length-1])}set(e,n){let i=this.weakMap;for(let s=0;s<e.length-1;s++){const o=e[s];i.has(o)===!1&&i.set(o,new WeakMap),i=i.get(o)}return i.set(e[e.length-1],n),this}delete(e){let n=this.weakMap;for(let i=0;i<e.length-1;i++)if(n=n.get(e[i]),n===void 0)return!1;return n.delete(e[e.length-1])}}let _B=0;function yB(r){const e=Object.keys(r);let n=Object.getPrototypeOf(r);for(;n;){const i=Object.getOwnPropertyDescriptors(n);for(const s in i)if(i[s]!==void 0){const o=i[s];o&&typeof o.get=="function"&&e.push(s)}n=Object.getPrototypeOf(n)}return e}class vB{constructor(e,n,i,s,o,a,l,c,u,h){this.id=_B++,this._nodes=e,this._geometries=n,this.renderer=i,this.object=s,this.material=o,this.scene=a,this.camera=l,this.lightsNode=c,this.context=u,this.geometry=s.geometry,this.version=o.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=h,this.clippingContextCacheKey=h!==null?h.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const n of this.getBindings())if(n.name===e)return n}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,n=this.geometry,i=[],s=new Set,o={};for(const a of e){let l;if(a.node&&a.node.attribute?l=a.node.attribute:(l=n.getAttribute(a.name),o[a.name]=l.version),l===void 0)continue;i.push(l);const c=l.isInterleavedBufferAttribute?l.data:l;s.add(c)}return this.attributes=i,this.attributesId=o,this.vertexBuffers=Array.from(s.values()),i}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:n,geometry:i,group:s,drawRange:o}=this,a=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),l=this.getIndex(),c=l!==null;let u=1;if(i.isInstancedBufferGeometry===!0?u=i.instanceCount:e.count!==void 0&&(u=Math.max(0,e.count)),u===0)return null;if(a.instanceCount=u,e.isBatchedMesh===!0)return a;let h=1;n.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(h=2);let d=o.start*h,f=(o.start+o.count)*h;s!==null&&(d=Math.max(d,s.start*h),f=Math.min(f,(s.start+s.count)*h));const p=i.attributes.position;let m=1/0;c?m=l.count:p!=null&&(m=p.count),d=Math.max(d,0),f=Math.min(f,m);const y=f-d;return y<0||y===1/0?null:(a.vertexCount=y,a.firstVertex=d,a)}getGeometryCacheKey(){const{geometry:e}=this;let n="";for(const i of Object.keys(e.attributes).sort()){const s=e.attributes[i];n+=i+",",s.data&&(n+=s.data.stride+","),s.offset&&(n+=s.offset+","),s.itemSize&&(n+=s.itemSize+","),s.normalized&&(n+="n,")}for(const i of Object.keys(e.morphAttributes).sort()){const s=e.morphAttributes[i];n+="morph-"+i+",";for(let o=0,a=s.length;o<a;o++){const l=s[o];n+=l.id+","}}return e.index&&(n+="index,"),n}getMaterialCacheKey(){const{object:e,material:n,renderer:i}=this;let s=n.customProgramCacheKey();for(const o of yB(n)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(o))continue;const a=n[o];let l;if(a!==null){const c=typeof a;c==="number"?l=a!==0?"1":"0":c==="object"?(l="{",a.isTexture&&(l+=a.mapping,i.backend.isWebGPUBackend===!0&&(l+=a.magFilter,l+=a.minFilter,l+=a.wrapS,l+=a.wrapT,l+=a.wrapR)),l+="}"):l=String(a)}else l=String(a);s+=l+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(s+=e._colorsTexture.uuid+",")),(e.isInstancedMesh||e.count>1)&&(s+=e.uuid+","),s+=e.receiveShadow+",",T2(s)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const n in e){const i=this.geometry.getAttribute(n);if(i===void 0||e[n]!==i.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Lh(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Lh(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const Ws=[];class xB{constructor(e,n,i,s,o,a){this.renderer=e,this.nodes=n,this.geometries=i,this.pipelines=s,this.bindings=o,this.info=a,this.chainMaps={}}get(e,n,i,s,o,a,l,c){const u=this.getChainMap(c);Ws[0]=e,Ws[1]=n,Ws[2]=a,Ws[3]=o;let h=u.get(Ws);return h===void 0?(h=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,n,i,s,o,a,l,c),u.set(Ws,h)):(h.updateClipping(l),h.needsGeometryUpdate&&h.setGeometry(e.geometry),(h.version!==n.version||h.needsUpdate)&&(h.initialCacheKey!==h.getCacheKey()?(h.dispose(),h=this.get(e,n,i,s,o,a,l,c)):h.version=n.version)),Ws.length=0,h}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new tr)}dispose(){this.chainMaps={}}createRenderObject(e,n,i,s,o,a,l,c,u,h,d){const f=this.getChainMap(d),p=new vB(e,n,i,s,o,a,l,c,u,h);return p.onDispose=()=>{this.pipelines.delete(p),this.bindings.delete(p),this.nodes.delete(p),f.delete(p.getChainArray())},p}}class Ds{constructor(){this.data=new WeakMap}get(e){let n=this.data.get(e);return n===void 0&&(n={},this.data.set(e,n)),n}delete(e){let n=null;return this.data.has(e)&&(n=this.data.get(e),this.data.delete(e)),n}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Oi={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},ys=16,bB=211,TB=212;class SB extends Ds{constructor(e){super(),this.backend=e}delete(e){const n=super.delete(e);return n!==null&&this.backend.destroyAttribute(e),n}update(e,n){const i=this.get(e);if(i.version===void 0)n===Oi.VERTEX?this.backend.createAttribute(e):n===Oi.INDEX?this.backend.createIndexAttribute(e):n===Oi.STORAGE?this.backend.createStorageAttribute(e):n===Oi.INDIRECT&&this.backend.createIndirectStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const s=this._getBufferAttribute(e);(i.version<s.version||s.usage===ia)&&(this.backend.updateAttribute(e),i.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function eS(r){return r.index!==null?r.index.version:r.attributes.position.version}function Zv(r){const e=[],n=r.index,i=r.attributes.position;if(n!==null){const o=n.array;for(let a=0,l=o.length;a<l;a+=3){const c=o[a+0],u=o[a+1],h=o[a+2];e.push(c,u,u,h,h,c)}}else{const o=i.array;for(let a=0,l=o.length/3-1;a<l;a+=3){const c=a+0,u=a+1,h=a+2;e.push(c,u,u,h,h,c)}}const s=new($m(e)?Km:Ym)(e,1);return s.version=eS(r),s}class MB extends Ds{constructor(e,n){super(),this.attributes=e,this.info=n,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const n=e.geometry;return super.has(n)&&this.get(n).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const n=e.geometry,i=this.get(n);i.initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const o=n.index,a=e.getAttributes();o!==null&&this.attributes.delete(o);for(const c of a)this.attributes.delete(c);const l=this.wireframes.get(n);l!==void 0&&this.attributes.delete(l),n.removeEventListener("dispose",s)};n.addEventListener("dispose",s)}updateAttributes(e){const n=e.getAttributes();for(const o of n)o.isStorageBufferAttribute||o.isStorageInstancedBufferAttribute?this.updateAttribute(o,Oi.STORAGE):this.updateAttribute(o,Oi.VERTEX);const i=this.getIndex(e);i!==null&&this.updateAttribute(i,Oi.INDEX);const s=e.geometry.indirect;s!==null&&this.updateAttribute(s,Oi.INDIRECT)}updateAttribute(e,n){const i=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,n),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,n),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,n),this.attributeCall.set(e,i))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:n,material:i}=e;let s=n.index;if(i.wireframe===!0){const o=this.wireframes;let a=o.get(n);a===void 0?(a=Zv(n),o.set(n,a)):a.version!==eS(n)&&(this.attributes.delete(a),a=Zv(n),o.set(n,a)),s=a}return s}}class EB{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,n,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(n/3):e.isPoints?this.render.points+=i*n:e.isLineSegments?this.render.lines+=i*(n/2):e.isLine?this.render.lines+=i*(n-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class tS{constructor(e){this.cacheKey=e,this.usedTimes=0}}class wB extends tS{constructor(e,n,i){super(e),this.vertexProgram=n,this.fragmentProgram=i}}class AB extends tS{constructor(e,n){super(e),this.computeProgram=n,this.isComputePipeline=!0}}let RB=0;class jf{constructor(e,n,i,s=null,o=null){this.id=RB++,this.code=e,this.stage=n,this.name=i,this.transforms=s,this.attributes=o,this.usedTimes=0}}class CB extends Ds{constructor(e,n){super(),this.backend=e,this.nodes=n,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,n){const{backend:i}=this,s=this.get(e);if(this._needsComputeUpdate(e)){const o=s.pipeline;o&&(o.usedTimes--,o.computeProgram.usedTimes--);const a=this.nodes.getForCompute(e);let l=this.programs.compute.get(a.computeShader);l===void 0&&(o&&o.computeProgram.usedTimes===0&&this._releaseProgram(o.computeProgram),l=new jf(a.computeShader,"compute",e.name,a.transforms,a.nodeAttributes),this.programs.compute.set(a.computeShader,l),i.createProgram(l));const c=this._getComputeCacheKey(e,l);let u=this.caches.get(c);u===void 0&&(o&&o.usedTimes===0&&this._releasePipeline(o),u=this._getComputePipeline(e,l,c,n)),u.usedTimes++,l.usedTimes++,s.version=e.version,s.pipeline=u}return s.pipeline}getForRender(e,n=null){const{backend:i}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const o=s.pipeline;o&&(o.usedTimes--,o.vertexProgram.usedTimes--,o.fragmentProgram.usedTimes--);const a=e.getNodeBuilderState(),l=e.material?e.material.name:"";let c=this.programs.vertex.get(a.vertexShader);c===void 0&&(o&&o.vertexProgram.usedTimes===0&&this._releaseProgram(o.vertexProgram),c=new jf(a.vertexShader,"vertex",l),this.programs.vertex.set(a.vertexShader,c),i.createProgram(c));let u=this.programs.fragment.get(a.fragmentShader);u===void 0&&(o&&o.fragmentProgram.usedTimes===0&&this._releaseProgram(o.fragmentProgram),u=new jf(a.fragmentShader,"fragment",l),this.programs.fragment.set(a.fragmentShader,u),i.createProgram(u));const h=this._getRenderCacheKey(e,c,u);let d=this.caches.get(h);d===void 0?(o&&o.usedTimes===0&&this._releasePipeline(o),d=this._getRenderPipeline(e,c,u,h,n)):e.pipeline=d,d.usedTimes++,c.usedTimes++,u.usedTimes++,s.pipeline=d}return s.pipeline}delete(e){const n=this.get(e).pipeline;return n&&(n.usedTimes--,n.usedTimes===0&&this._releasePipeline(n),n.isComputePipeline?(n.computeProgram.usedTimes--,n.computeProgram.usedTimes===0&&this._releaseProgram(n.computeProgram)):(n.fragmentProgram.usedTimes--,n.vertexProgram.usedTimes--,n.vertexProgram.usedTimes===0&&this._releaseProgram(n.vertexProgram),n.fragmentProgram.usedTimes===0&&this._releaseProgram(n.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,n,i,s){i=i||this._getComputeCacheKey(e,n);let o=this.caches.get(i);return o===void 0&&(o=new AB(i,n),this.caches.set(i,o),this.backend.createComputePipeline(o,s)),o}_getRenderPipeline(e,n,i,s,o){s=s||this._getRenderCacheKey(e,n,i);let a=this.caches.get(s);return a===void 0&&(a=new wB(s,n,i),this.caches.set(s,a),e.pipeline=a,this.backend.createRenderPipeline(e,o)),a}_getComputeCacheKey(e,n){return e.id+","+n.id}_getRenderCacheKey(e,n,i){return n.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const n=e.code,i=e.stage;this.programs[i].delete(n)}_needsComputeUpdate(e){const n=this.get(e);return n.pipeline===void 0||n.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class NB extends Ds{constructor(e,n,i,s,o,a){super(),this.backend=e,this.textures=i,this.pipelines=o,this.attributes=s,this.nodes=n,this.info=a,this.pipelines.bindings=this}getForRender(e){const n=e.getBindings();for(const i of n){const s=this.get(i);s.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,n,0),s.bindGroup=i)}return n}getForCompute(e){const n=this.nodes.getForCompute(e).bindings;for(const i of n){const s=this.get(i);s.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,n,0),s.bindGroup=i)}return n}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const n of e)this._update(n,e)}_init(e){for(const n of e.bindings)if(n.isSampledTexture)this.textures.updateTexture(n.texture);else if(n.isStorageBuffer){const i=n.attribute,s=i.isIndirectStorageBufferAttribute?Oi.INDIRECT:Oi.STORAGE;this.attributes.update(i,s)}}_update(e,n){const{backend:i}=this;let s=!1,o=!0,a=0,l=0;for(const c of e.bindings)if(!(c.isNodeUniformsGroup&&this.nodes.updateGroup(c)===!1)){if(c.isStorageBuffer){const u=c.attribute,h=u.isIndirectStorageBufferAttribute?Oi.INDIRECT:Oi.STORAGE;this.attributes.update(u,h)}if(c.isUniformBuffer)c.update()&&i.updateBinding(c);else if(c.isSampledTexture){const u=c.update(),h=c.texture,d=this.textures.get(h);if(u&&(this.textures.updateTexture(h),c.generation!==d.generation&&(c.generation=d.generation,s=!0,o=!1)),i.get(h).externalTexture!==void 0||d.isDefaultTexture?o=!1:(a=a*10+h.id,l+=h.version),h.isStorageTexture===!0){const p=this.get(h);c.store===!0?p.needsMipmap=!0:this.textures.needsMipmaps(h)&&p.needsMipmap===!0&&(this.backend.generateMipmaps(h),p.needsMipmap=!1)}}else c.isSampler&&c.update()}s===!0&&this.backend.updateBindings(e,n,o?a:0,l)}}function PB(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?r.z-e.z:r.id-e.id}function Qv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Jv(r){return(r.transmission>0||r.transmissionNode)&&r.side===Bn&&r.forceSinglePass===!1}class DB{constructor(e,n,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(n,i),this.lightsArray=[],this.scene=n,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,n,i,s,o,a,l){let c=this.renderItems[this.renderItemsIndex];return c===void 0?(c={id:e.id,object:e,geometry:n,material:i,groupOrder:s,renderOrder:e.renderOrder,z:o,group:a,clippingContext:l},this.renderItems[this.renderItemsIndex]=c):(c.id=e.id,c.object=e,c.geometry=n,c.material=i,c.groupOrder=s,c.renderOrder=e.renderOrder,c.z=o,c.group=a,c.clippingContext=l),this.renderItemsIndex++,c}push(e,n,i,s,o,a,l){const c=this.getNextRenderItem(e,n,i,s,o,a,l);e.occlusionTest===!0&&this.occlusionQueryCount++,i.transparent===!0||i.transmission>0?(Jv(i)&&this.transparentDoublePass.push(c),this.transparent.push(c)):this.opaque.push(c)}unshift(e,n,i,s,o,a,l){const c=this.getNextRenderItem(e,n,i,s,o,a,l);i.transparent===!0||i.transmission>0?(Jv(i)&&this.transparentDoublePass.unshift(c),this.transparent.unshift(c)):this.opaque.unshift(c)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,n){this.opaque.length>1&&this.opaque.sort(e||PB),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(n||Qv),this.transparent.length>1&&this.transparent.sort(n||Qv)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,n=this.renderItems.length;e<n;e++){const i=this.renderItems[e];if(i.id===null)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.groupOrder=null,i.renderOrder=null,i.z=null,i.group=null,i.clippingContext=null}}}const Ll=[];class LB{constructor(e){this.lighting=e,this.lists=new tr}get(e,n){const i=this.lists;Ll[0]=e,Ll[1]=n;let s=i.get(Ll);return s===void 0&&(s=new DB(this.lighting,e,n),i.set(Ll,s)),Ll.length=0,s}dispose(){this.lists=new tr}}let IB=0;class UB{constructor(){this.id=IB++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Qe,this.scissor=!1,this.scissorValue=new Qe,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return nS(this)}}function nS(r){const{textures:e,activeCubeFace:n,activeMipmapLevel:i}=r,s=[n,i];for(const o of e)s.push(o.id);return fg(s)}const Il=[],FB=new nd,OB=new Zm;class BB{constructor(){this.chainMaps={}}get(e,n,i=null){Il[0]=e,Il[1]=n;let s;if(i===null)s="default";else{const l=i.texture.format;s=`${i.textures.length}:${l}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const o=this._getChainMap(s);let a=o.get(Il);return a===void 0&&(a=new UB,o.set(Il,a)),Il.length=0,i!==null&&(a.sampleCount=i.samples===0?1:i.samples),a}getForClear(e=null){return this.get(FB,OB,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new tr)}dispose(){this.chainMaps={}}}const kB=new L;class zB extends Ds{constructor(e,n,i){super(),this.renderer=e,this.backend=n,this.info=i}updateRenderTarget(e,n=0){const i=this.get(e),s=e.samples===0?1:e.samples,o=i.depthTextureMips||(i.depthTextureMips={}),a=e.textures,l=this.getSize(a[0]),c=l.width>>n,u=l.height>>n;let h=e.depthTexture||o[n];const d=e.depthBuffer===!0||e.stencilBuffer===!0;let f=!1;h===void 0&&d&&(h=new Bi,h.format=e.stencilBuffer?wi:Ei,h.type=e.stencilBuffer?Mi:Gt,h.image.width=c,h.image.height=u,h.image.depth=l.depth,h.isArrayTexture=e.multiview===!0&&l.depth>1,o[n]=h),(i.width!==l.width||l.height!==i.height)&&(f=!0,h&&(h.needsUpdate=!0,h.image.width=c,h.image.height=u,h.image.depth=h.isArrayTexture?h.image.depth:1)),i.width=l.width,i.height=l.height,i.textures=a,i.depthTexture=h||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==s&&(f=!0,h&&(h.needsUpdate=!0),i.sampleCount=s);const p={sampleCount:s};if(e.isXRRenderTarget!==!0){for(let m=0;m<a.length;m++){const y=a[m];f&&(y.needsUpdate=!0),this.updateTexture(y,p)}h&&this.updateTexture(h,p)}if(i.initialized!==!0){i.initialized=!0;const m=()=>{e.removeEventListener("dispose",m);for(let y=0;y<a.length;y++)this._destroyTexture(a[y]);h&&this._destroyTexture(h),this.delete(e),this.backend.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,n={}){const i=this.get(e);if(i.initialized===!0&&i.version===e.version)return;const s=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,o=this.backend;if(s&&i.initialized===!0&&(o.destroySampler(e),o.destroyTexture(e)),e.isFramebufferTexture){const u=this.renderer.getRenderTarget();u?e.type=u.texture.type:e.type=nn}const{width:a,height:l,depth:c}=this.getSize(e);if(n.width=a,n.height=l,n.depth=c,n.needsMipmaps=this.needsMipmaps(e),n.levels=n.needsMipmaps?this.getMipLevels(e,a,l):1,e.isCubeTexture&&e.mipmaps.length>0&&n.levels++,s||e.isStorageTexture===!0||e.isExternalTexture===!0)o.createSampler(e),o.createTexture(e,n),i.generation=e.version;else if(i.initialized!==!0&&o.createSampler(e),e.version>0){const h=e.image;if(h===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(h.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const d=[];for(const f of e.images)d.push(f);n.images=d}else n.image=h;(i.isDefaultTexture===void 0||i.isDefaultTexture===!0)&&(o.createTexture(e,n),i.isDefaultTexture=!1,i.generation=e.version),e.source.dataReady===!0&&o.updateTexture(e,n),n.needsMipmaps&&e.mipmaps.length===0&&o.generateMipmaps(e),e.onUpdate&&e.onUpdate(e)}}else o.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version;if(i.initialized!==!0){i.initialized=!0,i.generation=e.version,this.info.memory.textures++,e.isVideoTexture&&Ze.getTransfer(e.colorSpace)!==Ae&&console.warn("WebGPURenderer: Video textures must use a color space with a sRGB transfer function, e.g. SRGBColorSpace.");const u=()=>{e.removeEventListener("dispose",u),this._destroyTexture(e)};e.addEventListener("dispose",u)}i.version=e.version}getSize(e,n=kB){let i=e.images?e.images[0]:e.image;return i?(i.image!==void 0&&(i=i.image),typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement?(n.width=i.videoWidth||1,n.height=i.videoHeight||1,n.depth=1):i instanceof VideoFrame?(n.width=i.displayWidth||1,n.height=i.displayHeight||1,n.depth=1):(n.width=i.width||1,n.height=i.height||1,n.depth=e.isCubeTexture?6:i.depth||1)):n.width=n.height=n.depth=1,n}getMipLevels(e,n,i){let s;return e.mipmaps.length>0?s=e.mipmaps.length:e.isCompressedTexture===!0?s=1:s=Math.floor(Math.log2(Math.max(n,i)))+1,s}needsMipmaps(e){return e.generateMipmaps===!0||e.mipmaps.length>0}_destroyTexture(e){this.has(e)===!0&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class Gg extends Ge{constructor(e,n,i,s=1){super(e,n,i),this.a=s}set(e,n,i,s=1){return this.a=s,super.set(e,n,i)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class GB extends Nt{static get type(){return"ParameterNode"}constructor(e,n=null){super(e,n),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class VB extends ke{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.hasOutput?this.outputNode.getNodeType(e):"void"}getMemberType(e,n){return this.hasOutput?this.outputNode.getMemberType(e,n):"void"}add(e){return e.isNode!==!0?(console.error("THREE.TSL: Invalid node added to stack."),this):(this.nodes.push(e),this)}If(e,n){const i=new Ql(n);return this._currentCond=Qn(e,i),this.add(this._currentCond)}ElseIf(e,n){const i=new Ql(n),s=Qn(e,i);return this._currentCond.elseNode=s,this._currentCond=s,this}Else(e){return this._currentCond.elseNode=new Ql(e),this}Switch(e){return this._expressionNode=he(e),this}Case(...e){const n=[];if(e.length>=2)for(let l=0;l<e.length-1;l++)n.push(this._expressionNode.equal(he(e[l])));else console.error("THREE.TSL: Invalid parameter length. Case() requires at least two parameters.");const i=e[e.length-1],s=new Ql(i);let o=n[0];for(let l=1;l<n.length;l++)o=o.or(n[l]);const a=Qn(o,s);return this._currentCond===null?(this._currentCond=a,this.add(this._currentCond)):(this._currentCond.elseNode=a,this._currentCond=a,this)}Default(e){return this.Else(e),this}setup(e){const n=e.getNodeProperties(this);let i=0;for(const s of this.getChildren())s.isVarNode&&s.intent===!0&&e.getNodeProperties(s).assign!==!0||(n["node"+i++]=s);return n.outputNode||null}get hasOutput(){return this.outputNode&&this.outputNode.isNode}build(e,...n){const i=e.currentStack,s=xg();Fh(this),e.currentStack=this;const o=e.buildStage;for(const l of this.nodes)if(!(l.isVarNode&&l.intent===!0&&e.getNodeProperties(l).assign!==!0)){if(o==="setup")l.build(e);else if(o==="analyze")l.build(e,this);else if(o==="generate"){const c=e.getDataFromNode(l,"any").stages,u=c&&c[e.shaderStage];if(l.isVarNode&&u&&u.length===1&&u[0]&&u[0].isStackNode)continue;l.build(e,"void")}}let a;return this.hasOutput?a=this.outputNode.build(e,...n):a=super.build(e,...n),Fh(s),e.currentStack=i,a}}const qf=St(VB).setParameterLength(0,1);new Xi;new L;new L;new L;new _t;new L(0,0,-1);new Qe;new L;new L;new Qe;new ue;const HB=new yo;va.flipX();HB.depthTexture=new Bi(1,1);const Xf=new Yc(-1,1,1,-1,0,1);class WB extends Hn{constructor(e=!1){super();const n=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new dn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new dn(n,2))}}const $B=new WB;class Vg extends mn{constructor(e=null){super($B,e),this.camera=Xf,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Xf)}render(e){e.render(this,Xf)}}class Fc extends ke{static get type(){return"EventNode"}constructor(e,n){super("void"),this.eventType=e,this.callback=n,e===Fc.OBJECT?this.updateType=ft.OBJECT:e===Fc.MATERIAL&&(this.updateType=ft.RENDER)}update(e){this.callback(e)}}Fc.OBJECT="object";Fc.MATERIAL="material";const Ul=new li,Yf=new _t;class si extends ke{static get type(){return"SceneNode"}constructor(e=si.BACKGROUND_BLURRINESS,n=null){super(),this.scope=e,this.scene=n}setup(e){const n=this.scope,i=this.scene!==null?this.scene:e.scene;let s;return n===si.BACKGROUND_BLURRINESS?s=zt("backgroundBlurriness","float",i):n===si.BACKGROUND_INTENSITY?s=zt("backgroundIntensity","float",i):n===si.BACKGROUND_ROTATION?s=tt("mat4").setName("backgroundRotation").setGroup(Ye).onRenderUpdate(()=>{const o=i.background;return o!==null&&o.isTexture&&o.mapping!==Um?(Ul.copy(i.backgroundRotation),Ul.x*=-1,Ul.y*=-1,Ul.z*=-1,Yf.makeRotationFromEuler(Ul)):Yf.identity(),Yf}):console.error("THREE.SceneNode: Unknown scope:",n),s}}si.BACKGROUND_BLURRINESS="backgroundBlurriness";si.BACKGROUND_INTENSITY="backgroundIntensity";si.BACKGROUND_ROTATION="backgroundRotation";const jB=xe(si,si.BACKGROUND_BLURRINESS),e0=xe(si,si.BACKGROUND_INTENSITY),qB=xe(si,si.BACKGROUND_ROTATION),XB=le(({texture:r,uv:e})=>{const i=oe().toVar();return on(e.x.lessThan(1e-4),()=>{i.assign(oe(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{i.assign(oe(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{i.assign(oe(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{i.assign(oe(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{i.assign(oe(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{i.assign(oe(0,0,-1))}).Else(()=>{const o=r.sample(e.add(oe(-.01,0,0))).r.sub(r.sample(e.add(oe(.01,0,0))).r),a=r.sample(e.add(oe(0,-.01,0))).r.sub(r.sample(e.add(oe(0,.01,0))).r),l=r.sample(e.add(oe(0,0,-.01))).r.sub(r.sample(e.add(oe(0,0,.01))).r);i.assign(oe(o,a,l))}),i.normalize()});class YB extends hl{static get type(){return"Texture3DNode"}constructor(e,n=null,i=null){super(e,n,i),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return oe(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,n){const i=this.value;return e.isFlipY()&&(i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0)&&(this.sampler?n=n.flipY():n=n.setY(Ht(ya(this,this.levelNode).y).sub(n.y).sub(1))),n}generateUV(e,n){return n.build(e,"vec3")}generateOffset(e,n){return n.build(e,"ivec3")}normal(e){return XB({texture:this,uv:e})}}const KB=St(YB).setParameterLength(1,3),Ku=new ue;class ZB extends hl{static get type(){return"PassTextureNode"}constructor(e,n){super(n),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class t0 extends ZB{static get type(){return"PassMultipleTextureNode"}constructor(e,n,i=!1){super(e,null),this.textureName=n,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class yd extends Tn{static get type(){return"PassNode"}constructor(e,n,i,s={}){super("vec4"),this.scope=e,this.scene=n,this.camera=i,this.options=s,this._pixelRatio=1,this._width=1,this._height=1;const o=new Bi;o.isRenderTargetTexture=!0,o.name="depth";const a=new yo(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:An,...s});a.texture.name="output",a.depthTexture=o,this.renderTarget=a,this._textures={output:a.texture,depth:o},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=tt(0),this._cameraFar=tt(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=ft.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let n=this._textures[e];return n===void 0&&(n=this.renderTarget.texture.clone(),n.name=e,this._textures[e]=n,this.renderTarget.textures.push(n)),n}getPreviousTexture(e){let n=this._previousTextures[e];return n===void 0&&(n=this.getTexture(e).clone(),this._previousTextures[e]=n),n}toggleTexture(e){const n=this._previousTextures[e];if(n!==void 0){const i=this._textures[e],s=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[s]=n,this._textures[e]=n,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let n=this._textureNodes[e];return n===void 0&&(n=he(new t0(this,e)),n.updateTexture(),this._textureNodes[e]=n),n}getPreviousTextureNode(e="output"){let n=this._previousTextureNodes[e];return n===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),n=he(new t0(this,e,!0)),n.updateTexture(),this._previousTextureNodes[e]=n),n}getViewZNode(e="depth"){let n=this._viewZNodes[e];if(n===void 0){const i=this._cameraNear,s=this._cameraFar;this._viewZNodes[e]=n=LT(this.getTextureNode(e),i,s)}return n}getLinearDepthNode(e="depth"){let n=this._linearDepthNodes[e];if(n===void 0){const i=this._cameraNear,s=this._cameraFar,o=this.getViewZNode(e);this._linearDepthNodes[e]=n=uc(o,i,s)}return n}async compileAsync(e){const n=e.getRenderTarget(),i=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(n),e.setMRT(i)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===yd.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:n}=e,{scene:i}=this;let s,o;const a=n.getOutputRenderTarget();a&&a.isXRRenderTarget===!0?(o=1,s=n.xr.getCamera(),n.xr.updateCamera(s),Ku.set(a.width,a.height)):(s=this.camera,o=n.getPixelRatio(),n.getSize(Ku)),this._pixelRatio=o,this.setSize(Ku.width,Ku.height);const l=n.getRenderTarget(),c=n.getMRT(),u=s.layers.mask;this._cameraNear.value=s.near,this._cameraFar.value=s.far,this._layers!==null&&(s.layers.mask=this._layers.mask);for(const h in this._previousTextures)this.toggleTexture(h);n.setRenderTarget(this.renderTarget),n.setMRT(this._mrt),n.render(i,s),n.setRenderTarget(l),n.setMRT(c),s.layers.mask=u}setSize(e,n){this._width=e,this._height=n;const i=this._width*this._pixelRatio*this._resolution,s=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(i,s),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,n,i,s){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new Qe),e.isVector4?this._scissor.copy(e):this._scissor.set(e,n,i,s),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,n,i,s){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new Qe),e.isVector4?this._viewport.copy(e):this._viewport.set(e,n,i,s),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}yd.COLOR="color";yd.DEPTH="depth";const QB=le(([r,e])=>r.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),JB=le(([r,e])=>(r=r.mul(e),r.div(r.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),e3=le(([r,e])=>{r=r.mul(e),r=r.sub(.004).max(0);const n=r.mul(r.mul(6.2).add(.5)),i=r.mul(r.mul(6.2).add(1.7)).add(.06);return n.div(i).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),t3=le(([r])=>{const e=r.mul(r.add(.0245786)).sub(90537e-9),n=r.mul(r.add(.432951).mul(.983729)).add(.238081);return e.div(n)}),n3=le(([r,e])=>{const n=Jn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=Jn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return r=r.mul(e).div(.6),r=n.mul(r),r=t3(r),r=i.mul(r),r.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),i3=Jn(oe(1.6605,-.1246,-.0182),oe(-.5876,1.1329,-.1006),oe(-.0728,-.0083,1.1187)),r3=Jn(oe(.6274,.0691,.0164),oe(.3293,.9195,.088),oe(.0433,.0113,.8956)),s3=le(([r])=>{const e=oe(r).toVar(),n=oe(e.mul(e)).toVar(),i=oe(n.mul(n)).toVar();return ie(15.5).mul(i.mul(n)).sub(pt(40.14,i.mul(e))).add(pt(31.96,i).sub(pt(6.868,n.mul(e))).add(pt(.4298,n).add(pt(.1191,e).sub(.00232))))}),o3=le(([r,e])=>{const n=oe(r).toVar(),i=Jn(oe(.856627153315983,.137318972929847,.11189821299995),oe(.0951212405381588,.761241990602591,.0767994186031903),oe(.0482516061458583,.101439036467562,.811302368396859)),s=Jn(oe(1.1271005818144368,-.1413297634984383,-.14132976349843826),oe(-.11060664309660323,1.157823702216272,-.11060664309660294),oe(-.016493938717834573,-.016493938717834257,1.2519364065950405)),o=ie(-12.47393),a=ie(4.026069);return n.mulAssign(e),n.assign(r3.mul(n)),n.assign(i.mul(n)),n.assign(Vn(n,1e-10)),n.assign(Qr(n)),n.assign(n.sub(o).div(a.sub(o))),n.assign(ns(n,0,1)),n.assign(s3(n)),n.assign(s.mul(n)),n.assign(hd(Vn(oe(0),n),oe(2.2))),n.assign(i3.mul(n)),n.assign(ns(n,0,1)),n}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),a3=le(([r,e])=>{const n=ie(.76),i=ie(.15);r=r.mul(e);const s=Ka(r.r,Ka(r.g,r.b)),o=Qn(s.lessThan(.08),s.sub(pt(6.25,s.mul(s))),.04);r.subAssign(o);const a=Vn(r.r,Vn(r.g,r.b));on(a.lessThan(n),()=>r);const l=Yn(1,n),c=Yn(1,l.mul(l).div(a.add(l.sub(n))));r.mulAssign(c.div(a));const u=Yn(1,xr(1,i.mul(a.sub(c)).add(1)));return qt(r,oe(c),u)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class qn extends ke{static get type(){return"CodeNode"}constructor(e="",n=[],i=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=n,this.language=i}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const n=this.getIncludes(e);for(const s of n)s.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class l3 extends qn{static get type(){return"FunctionNode"}constructor(e="",n=[],i=""){super(e,n,i)}getNodeType(e){return this.getNodeFunction(e).type}getMemberType(e,n){const i=this.getNodeType(e);return e.getStructTypeNode(i).getMemberType(e,n)}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const n=e.getDataFromNode(this);let i=n.nodeFunction;return i===void 0&&(i=e.parser.parseFunction(this.code),n.nodeFunction=i),i}generate(e,n){super.generate(e);const i=this.getNodeFunction(e),s=i.name,o=i.type,a=e.getCodeFromNode(this,o);s!==""&&(a.name=s);const l=e.getPropertyName(a),c=this.getNodeFunction(e).getCode(l);return a.code=c+`
`,n==="property"?l:e.format(`${l}()`,o,n)}}function iS(r){let e;const n=r.context.getViewZ;return n!==void 0&&(e=n(this)),(e||cn.z).negate()}const c3=le(([r,e],n)=>{const i=iS(n);return Rs(r,e,i)}),u3=le(([r],e)=>{const n=iS(e);return r.mul(r,n,n).negate().exp().oneMinus()}),n0=le(([r,e])=>lt(e.toFloat().mix(lc.rgb,r.toVec3()),lc.a));class h3 extends ke{constructor(e){super(),this.scope=e}generate(e){const{scope:n}=this,{renderer:i}=e;i.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${n}Barrier 
`):e.addLineFlowCode(`${n}Barrier()`,this)}}St(h3);class Mr extends ke{static get type(){return"AtomicFunctionNode"}constructor(e,n,i){super("uint"),this.method=e,this.pointerNode=n,this.valueNode=i,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const n=e.getNodeProperties(this),i=n.parents,s=this.method,o=this.getNodeType(e),a=this.getInputType(e),l=this.pointerNode,c=this.valueNode,u=[];u.push(`&${l.build(e,a)}`),c!==null&&u.push(c.build(e,a));const h=`${e.getMethod(s,o)}( ${u.join(", ")} )`;if(i?i.length===1&&i[0].isStackNode===!0:!1)e.addLineFlowCode(h,this);else return n.constNode===void 0&&(n.constNode=Za(h,o).toConst()),n.constNode.build(e)}}Mr.ATOMIC_LOAD="atomicLoad";Mr.ATOMIC_STORE="atomicStore";Mr.ATOMIC_ADD="atomicAdd";Mr.ATOMIC_SUB="atomicSub";Mr.ATOMIC_MAX="atomicMax";Mr.ATOMIC_MIN="atomicMin";Mr.ATOMIC_AND="atomicAnd";Mr.ATOMIC_OR="atomicOr";Mr.ATOMIC_XOR="atomicXor";St(Mr);class xt extends Tn{static get type(){return"SubgroupFunctionNode"}constructor(e,n=null,i=null){super(),this.method=e,this.aNode=n,this.bNode=i}getInputType(e){const n=this.aNode?this.aNode.getNodeType(e):null,i=this.bNode?this.bNode.getNodeType(e):null,s=e.isMatrix(n)?0:e.getTypeLength(n),o=e.isMatrix(i)?0:e.getTypeLength(i);return s>o?n:i}getNodeType(e){const n=this.method;return n===xt.SUBGROUP_ELECT?"bool":n===xt.SUBGROUP_BALLOT?"uvec4":this.getInputType(e)}generate(e,n){const i=this.method,s=this.getNodeType(e),o=this.getInputType(e),a=this.aNode,l=this.bNode,c=[];if(i===xt.SUBGROUP_BROADCAST||i===xt.SUBGROUP_SHUFFLE||i===xt.QUAD_BROADCAST){const h=l.getNodeType(e);c.push(a.build(e,s),l.build(e,h==="float"?"int":s))}else i===xt.SUBGROUP_SHUFFLE_XOR||i===xt.SUBGROUP_SHUFFLE_DOWN||i===xt.SUBGROUP_SHUFFLE_UP?c.push(a.build(e,s),l.build(e,"uint")):(a!==null&&c.push(a.build(e,o)),l!==null&&c.push(l.build(e,o)));const u=c.length===0?"()":`( ${c.join(", ")} )`;return e.format(`${e.getMethod(i,s)}${u}`,s,n)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}xt.SUBGROUP_ELECT="subgroupElect";xt.SUBGROUP_BALLOT="subgroupBallot";xt.SUBGROUP_ADD="subgroupAdd";xt.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd";xt.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd";xt.SUBGROUP_MUL="subgroupMul";xt.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul";xt.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul";xt.SUBGROUP_AND="subgroupAnd";xt.SUBGROUP_OR="subgroupOr";xt.SUBGROUP_XOR="subgroupXor";xt.SUBGROUP_MIN="subgroupMin";xt.SUBGROUP_MAX="subgroupMax";xt.SUBGROUP_ALL="subgroupAll";xt.SUBGROUP_ANY="subgroupAny";xt.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst";xt.QUAD_SWAP_X="quadSwapX";xt.QUAD_SWAP_Y="quadSwapY";xt.QUAD_SWAP_DIAGONAL="quadSwapDiagonal";xt.SUBGROUP_BROADCAST="subgroupBroadcast";xt.SUBGROUP_SHUFFLE="subgroupShuffle";xt.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor";xt.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp";xt.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown";xt.QUAD_BROADCAST="quadBroadcast";let Zu;function vd(r){Zu=Zu||new WeakMap;let e=Zu.get(r);return e===void 0&&Zu.set(r,e={}),e}function Hg(r){const e=vd(r);return e.shadowMatrix||(e.shadowMatrix=tt("mat4").setGroup(Ye).onRenderUpdate(n=>((r.castShadow!==!0||n.renderer.shadowMap.enabled===!1)&&r.shadow.updateMatrices(r),r.shadow.matrix)))}function d3(r,e=Qa){const n=Hg(r).mul(e);return n.xyz.div(n.w)}function rS(r){const e=vd(r);return e.position||(e.position=tt(new L).setGroup(Ye).onRenderUpdate((n,i)=>i.value.setFromMatrixPosition(r.matrixWorld)))}function f3(r){const e=vd(r);return e.targetPosition||(e.targetPosition=tt(new L).setGroup(Ye).onRenderUpdate((n,i)=>i.value.setFromMatrixPosition(r.target.matrixWorld)))}function sS(r){const e=vd(r);return e.viewPosition||(e.viewPosition=tt(new L).setGroup(Ye).onRenderUpdate(({camera:n},i)=>{i.value=i.value||new L,i.value.setFromMatrixPosition(r.matrixWorld),i.value.applyMatrix4(n.matrixWorldInverse)}))}const oS=r=>ss.transformDirection(rS(r).sub(f3(r))),p3=r=>r.sort((e,n)=>e.id-n.id),m3=(r,e)=>{for(const n of e)if(n.isAnalyticLightNode&&n.light.id===r)return n;return null},Kf=new WeakMap,Fl=[];class aS extends ke{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Ms("vec3","totalDiffuse"),this.totalSpecularNode=Ms("vec3","totalSpecular"),this.outgoingLightNode=Ms("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let i=0;i<e.length;i++){const s=e[i];if(Fl.push(s.id),Fl.push(s.castShadow?1:0),s.isSpotLight===!0){const o=s.map!==null?s.map.id:-1,a=s.colorNode?s.colorNode.getCacheKey():-1;Fl.push(o,a)}}const n=fg(Fl);return Fl.length=0,n}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const n=[];for(const i of this._lightNodes)n.push(i.getHash());this._lightNodesHash="lights-"+n.join(",")}return this._lightNodesHash}analyze(e){const n=e.getNodeProperties(this);for(const i of n.nodes)i.build(e);n.outputNode.build(e)}setupLightsNode(e){const n=[],i=this._lightNodes,s=p3(this._lights),o=e.renderer.library;for(const a of s)if(a.isNode)n.push(he(a));else{let l=null;if(i!==null&&(l=m3(a.id,i)),l===null){const c=o.getLightNodeClass(a.constructor);if(c===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${a.constructor.name}`);continue}let u=null;Kf.has(a)?u=Kf.get(a):(u=he(new c(a)),Kf.set(a,u)),n.push(u)}}this._lightNodes=n}setupDirectLight(e,n,i){const{lightingModel:s,reflectedLight:o}=e.context;s.direct({...i,lightNode:n,reflectedLight:o},e)}setupDirectRectAreaLight(e,n,i){const{lightingModel:s,reflectedLight:o}=e.context;s.directRectArea({...i,lightNode:n,reflectedLight:o},e)}setupLights(e,n){for(const i of n)i.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const n=e.lightsNode;e.lightsNode=this;let i=this.outgoingLightNode;const s=e.context,o=s.lightingModel,a=e.getNodeProperties(this);if(o){const{totalDiffuseNode:l,totalSpecularNode:c}=this;s.outgoingLight=i;const u=e.addStack();a.nodes=u.nodes,o.start(e);const{backdrop:h,backdropAlpha:d}=s,{directDiffuse:f,directSpecular:p,indirectDiffuse:m,indirectSpecular:y}=s.reflectedLight;let _=f.add(m);h!==null&&(d!==null?_=oe(d.mix(_,h)):_=oe(h),s.material.transparent=!0),l.assign(_),c.assign(p.add(y)),i.assign(l.add(c)),o.finish(e),i=i.bypass(e.removeStack())}else a.nodes=[];return e.lightsNode=n,i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class g3 extends ke{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=ft.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:n}){lS.assign(n.receivedShadowPositionNode||e.shadowPositionWorld||Qa)}}const lS=Ms("vec3","shadowPositionWorld");function _3(r,e={}){return e.toneMapping=r.toneMapping,e.toneMappingExposure=r.toneMappingExposure,e.outputColorSpace=r.outputColorSpace,e.renderTarget=r.getRenderTarget(),e.activeCubeFace=r.getActiveCubeFace(),e.activeMipmapLevel=r.getActiveMipmapLevel(),e.renderObjectFunction=r.getRenderObjectFunction(),e.pixelRatio=r.getPixelRatio(),e.mrt=r.getMRT(),e.clearColor=r.getClearColor(e.clearColor||new Ge),e.clearAlpha=r.getClearAlpha(),e.autoClear=r.autoClear,e.scissorTest=r.getScissorTest(),e}function y3(r,e){return e=_3(r,e),r.setMRT(null),r.setRenderObjectFunction(null),r.setClearColor(0,1),r.autoClear=!0,e}function v3(r,e){r.toneMapping=e.toneMapping,r.toneMappingExposure=e.toneMappingExposure,r.outputColorSpace=e.outputColorSpace,r.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),r.setRenderObjectFunction(e.renderObjectFunction),r.setPixelRatio(e.pixelRatio),r.setMRT(e.mrt),r.setClearColor(e.clearColor,e.clearAlpha),r.autoClear=e.autoClear,r.setScissorTest(e.scissorTest)}function x3(r,e={}){return e.background=r.background,e.backgroundNode=r.backgroundNode,e.overrideMaterial=r.overrideMaterial,e}function b3(r,e){return e=x3(r,e),r.background=null,r.backgroundNode=null,r.overrideMaterial=null,e}function T3(r,e){r.background=e.background,r.backgroundNode=e.backgroundNode,r.overrideMaterial=e.overrideMaterial}function S3(r,e,n){return n=y3(r,n),n=b3(e,n),n}function M3(r,e,n){v3(r,n),T3(e,n)}const i0=new WeakMap,E3=le(({depthTexture:r,shadowCoord:e,depthLayer:n})=>{let i=Tt(r,e.xy).setName("t_basic");return r.isArrayTexture&&(i=i.depth(n)),i.compare(e.z)}),w3=le(({depthTexture:r,shadowCoord:e,shadow:n,depthLayer:i})=>{const s=(_,g)=>{let v=Tt(r,_);return r.isArrayTexture&&(v=v.depth(i)),v.compare(g)},o=zt("mapSize","vec2",n).setGroup(Ye),a=zt("radius","float",n).setGroup(Ye),l=be(1).div(o),c=l.x.negate().mul(a),u=l.y.negate().mul(a),h=l.x.mul(a),d=l.y.mul(a),f=c.div(2),p=u.div(2),m=h.div(2),y=d.div(2);return ci(s(e.xy.add(be(c,u)),e.z),s(e.xy.add(be(0,u)),e.z),s(e.xy.add(be(h,u)),e.z),s(e.xy.add(be(f,p)),e.z),s(e.xy.add(be(0,p)),e.z),s(e.xy.add(be(m,p)),e.z),s(e.xy.add(be(c,0)),e.z),s(e.xy.add(be(f,0)),e.z),s(e.xy,e.z),s(e.xy.add(be(m,0)),e.z),s(e.xy.add(be(h,0)),e.z),s(e.xy.add(be(f,y)),e.z),s(e.xy.add(be(0,y)),e.z),s(e.xy.add(be(m,y)),e.z),s(e.xy.add(be(c,d)),e.z),s(e.xy.add(be(0,d)),e.z),s(e.xy.add(be(h,d)),e.z)).mul(1/17)}),A3=le(({depthTexture:r,shadowCoord:e,shadow:n,depthLayer:i})=>{const s=(d,f)=>{let p=Tt(r,d);return r.isArrayTexture&&(p=p.depth(i)),p.compare(f)},o=zt("mapSize","vec2",n).setGroup(Ye),a=be(1).div(o),l=a.x,c=a.y,u=e.xy,h=Ns(u.mul(o).add(.5));return u.subAssign(h.mul(a)),ci(s(u,e.z),s(u.add(be(l,0)),e.z),s(u.add(be(0,c)),e.z),s(u.add(a),e.z),qt(s(u.add(be(l.negate(),0)),e.z),s(u.add(be(l.mul(2),0)),e.z),h.x),qt(s(u.add(be(l.negate(),c)),e.z),s(u.add(be(l.mul(2),c)),e.z),h.x),qt(s(u.add(be(0,c.negate())),e.z),s(u.add(be(0,c.mul(2))),e.z),h.y),qt(s(u.add(be(l,c.negate())),e.z),s(u.add(be(l,c.mul(2))),e.z),h.y),qt(qt(s(u.add(be(l.negate(),c.negate())),e.z),s(u.add(be(l.mul(2),c.negate())),e.z),h.x),qt(s(u.add(be(l.negate(),c.mul(2))),e.z),s(u.add(be(l.mul(2),c.mul(2))),e.z),h.x),h.y)).mul(1/9)}),R3=le(({depthTexture:r,shadowCoord:e,depthLayer:n})=>{const i=ie(1).toVar();let s=Tt(r).sample(e.xy);r.isArrayTexture&&(s=s.depth(n)),s=s.rg;const o=Kb(e.z,s.x);return on(o.notEqual(ie(1)),()=>{const a=e.z.sub(s.x),l=Vn(0,s.y.mul(s.y));let c=l.div(l.add(a.mul(a)));c=ns(Yn(c,.3).div(.95-.3)),i.assign(ns(Vn(o,c)))}),i}),C3=le(([r,e,n])=>{let i=Qa.sub(r).length();return i=i.sub(e).div(n.sub(e)),i=i.saturate(),i}),N3=r=>{const e=r.shadow.camera,n=zt("near","float",e).setGroup(Ye),i=zt("far","float",e).setGroup(Ye),s=sU(r);return C3(s,n,i)},P3=r=>{let e=i0.get(r);if(e===void 0){const n=r.isPointLight?N3(r):null;e=new gn,e.colorNode=lt(0,0,0,1),e.depthNode=n,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,i0.set(r,e)}return e},r0=new tr,Yo=[],D3=(r,e,n,i)=>{Yo[0]=r,Yo[1]=e;let s=r0.get(Yo);return(s===void 0||s.shadowType!==n||s.useVelocity!==i)&&(s=(o,a,l,c,u,h,...d)=>{(o.castShadow===!0||o.receiveShadow&&n===xi)&&(i&&(Nb(o).useVelocity=!0),o.onBeforeShadow(r,o,l,e.camera,c,a.overrideMaterial,h),r.renderObject(o,a,l,c,u,h,...d),o.onAfterShadow(r,o,l,e.camera,c,a.overrideMaterial,h))},s.shadowType=n,s.useVelocity=i,r0.set(Yo,s)),Yo[0]=null,Yo[1]=null,s},L3=le(({samples:r,radius:e,size:n,shadowPass:i,depthLayer:s})=>{const o=ie(0).toVar("meanVertical"),a=ie(0).toVar("squareMeanVertical"),l=r.lessThanEqual(ie(1)).select(ie(0),ie(2).div(r.sub(1))),c=r.lessThanEqual(ie(1)).select(ie(0),ie(-1));Zi({start:Ht(0),end:Ht(r),type:"int",condition:"<"},({i:h})=>{const d=c.add(ie(h).mul(l));let f=i.sample(ci(fd.xy,be(0,d).mul(e)).div(n));i.value.isArrayTexture&&(f=f.depth(s)),f=f.x,o.addAssign(f),a.addAssign(f.mul(f))}),o.divAssign(r),a.divAssign(r);const u=Ag(a.sub(o.mul(o)));return be(o,u)}),I3=le(({samples:r,radius:e,size:n,shadowPass:i,depthLayer:s})=>{const o=ie(0).toVar("meanHorizontal"),a=ie(0).toVar("squareMeanHorizontal"),l=r.lessThanEqual(ie(1)).select(ie(0),ie(2).div(r.sub(1))),c=r.lessThanEqual(ie(1)).select(ie(0),ie(-1));Zi({start:Ht(0),end:Ht(r),type:"int",condition:"<"},({i:h})=>{const d=c.add(ie(h).mul(l));let f=i.sample(ci(fd.xy,be(d,0).mul(e)).div(n));i.value.isArrayTexture&&(f=f.depth(s)),o.addAssign(f.x),a.addAssign(ci(f.y.mul(f.y),f.x.mul(f.x)))}),o.divAssign(r),a.divAssign(r);const u=Ag(a.sub(o.mul(o)));return be(o,u)}),U3=[E3,w3,A3,R3];let Zf;const Qu=new Vg;class cS extends g3{static get type(){return"ShadowNode"}constructor(e,n=null){super(e),this.shadow=n||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:n,depthTexture:i,shadowCoord:s,shadow:o,depthLayer:a}){const l=s.x.greaterThanEqual(0).and(s.x.lessThanEqual(1)).and(s.y.greaterThanEqual(0)).and(s.y.lessThanEqual(1)).and(s.z.lessThanEqual(1)),c=n({depthTexture:i,shadowCoord:s,shadow:o,depthLayer:a});return l.select(c,ie(1))}setupShadowCoord(e,n){const{shadow:i}=this,{renderer:s}=e,o=zt("bias","float",i).setGroup(Ye);let a=n,l;if(i.camera.isOrthographicCamera||s.logarithmicDepthBuffer!==!0)a=a.xyz.div(a.w),l=a.z,s.coordinateSystem===ws&&(l=l.mul(2).sub(1));else{const c=a.w;a=a.xy.div(c);const u=zt("near","float",i.camera).setGroup(Ye),h=zt("far","float",i.camera).setGroup(Ye);l=IT(c.negate(),u,h)}return a=oe(a.x,a.y.oneMinus(),l.add(o)),a}getShadowFilterFn(e){return U3[e]}setupRenderTarget(e,n){const i=new Bi(e.mapSize.width,e.mapSize.height);i.name="ShadowDepthTexture",i.compareFunction=Jh;const s=n.createRenderTarget(e.mapSize.width,e.mapSize.height);return s.texture.name="ShadowMap",s.texture.type=e.mapType,s.depthTexture=i,{shadowMap:s,depthTexture:i}}setupShadow(e){const{renderer:n}=e,{light:i,shadow:s}=this,o=n.shadowMap.type,{depthTexture:a,shadowMap:l}=this.setupRenderTarget(s,e);if(s.camera.updateProjectionMatrix(),o===xi&&s.isPointLightShadow!==!0){a.compareFunction=null,l.depth>1?(l._vsmShadowMapVertical||(l._vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:qr,type:An,depth:l.depth,depthBuffer:!1}),l._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=l._vsmShadowMapVertical,l._vsmShadowMapHorizontal||(l._vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:qr,type:An,depth:l.depth,depthBuffer:!1}),l._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=l._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:qr,type:An,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:qr,type:An,depthBuffer:!1}));let g=Tt(a);a.isArrayTexture&&(g=g.depth(this.depthLayer));let v=Tt(this.vsmShadowMapVertical.texture);a.isArrayTexture&&(v=v.depth(this.depthLayer));const x=zt("blurSamples","float",s).setGroup(Ye),T=zt("radius","float",s).setGroup(Ye),b=zt("mapSize","vec2",s).setGroup(Ye);let S=this.vsmMaterialVertical||(this.vsmMaterialVertical=new gn);S.fragmentNode=L3({samples:x,radius:T,size:b,shadowPass:g,depthLayer:this.depthLayer}).context(e.getSharedContext()),S.name="VSMVertical",S=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new gn),S.fragmentNode=I3({samples:x,radius:T,size:b,shadowPass:v,depthLayer:this.depthLayer}).context(e.getSharedContext()),S.name="VSMHorizontal"}const c=zt("intensity","float",s).setGroup(Ye),u=zt("normalBias","float",s).setGroup(Ye),h=Hg(i).mul(lS.add(dl.mul(u))),d=this.setupShadowCoord(e,h),f=s.filterNode||this.getShadowFilterFn(n.shadowMap.type)||null;if(f===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const p=o===xi&&s.isPointLightShadow!==!0?this.vsmShadowMapHorizontal.texture:a,m=this.setupShadowFilter(e,{filterFn:f,shadowTexture:l.texture,depthTexture:p,shadowCoord:d,shadow:s,depthLayer:this.depthLayer});let y=Tt(l.texture,d);a.isArrayTexture&&(y=y.depth(this.depthLayer));const _=qt(1,m.rgb.mix(y,1),c.mul(y.a)).toVar();return this.shadowMap=l,this.shadow.map=l,_}setup(e){if(e.renderer.shadowMap.enabled!==!1)return le(()=>{let n=this._node;return this.setupShadowPosition(e),n===null&&(this._node=n=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(n=e.material.receivedShadowNode(n)),n})()}renderShadow(e){const{shadow:n,shadowMap:i,light:s}=this,{renderer:o,scene:a}=e;n.updateMatrices(s),i.setSize(n.mapSize.width,n.mapSize.height,i.depth),o.render(a,n.camera)}updateShadow(e){const{shadowMap:n,light:i,shadow:s}=this,{renderer:o,scene:a,camera:l}=e,c=o.shadowMap.type,u=n.depthTexture.version;this._depthVersionCached=u;const h=s.camera.layers.mask;(s.camera.layers.mask&4294967294)===0&&(s.camera.layers.mask=l.layers.mask);const d=o.getRenderObjectFunction(),f=o.getMRT(),p=f?f.has("velocity"):!1;Zf=S3(o,a,Zf),a.overrideMaterial=P3(i),o.setRenderObjectFunction(D3(o,s,c,p)),o.setClearColor(0,0),o.setRenderTarget(n),this.renderShadow(e),o.setRenderObjectFunction(d),c===xi&&s.isPointLightShadow!==!0&&this.vsmPass(o),s.camera.layers.mask=h,M3(o,a,Zf)}vsmPass(e){const{shadow:n}=this,i=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(n.mapSize.width,n.mapSize.height,i),this.vsmShadowMapHorizontal.setSize(n.mapSize.width,n.mapSize.height,i),e.setRenderTarget(this.vsmShadowMapVertical),Qu.material=this.vsmMaterialVertical,Qu.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Qu.material=this.vsmMaterialHorizontal,Qu.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:n}=this;let i=n.needsUpdate||n.autoUpdate;i&&(this._cameraFrameId[e.camera]===e.frameId&&(i=!1),this._cameraFrameId[e.camera]=e.frameId),i&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(n.needsUpdate=!1))}}const F3=(r,e)=>he(new cS(r,e)),O3=new Ge,ur=le(([r,e])=>{const n=r.toVar(),i=Ii(n),s=xr(1,Vn(i.x,Vn(i.y,i.z)));i.mulAssign(s),n.mulAssign(s.mul(e.mul(2).oneMinus()));const o=be(n.xy).toVar(),l=e.mul(1.5).oneMinus();return on(i.z.greaterThanEqual(l),()=>{on(n.z.greaterThan(0),()=>{o.x.assign(Yn(4,n.x))})}).ElseIf(i.x.greaterThanEqual(l),()=>{const c=Gh(n.x);o.x.assign(n.z.mul(c).add(c.mul(2)))}).ElseIf(i.y.greaterThanEqual(l),()=>{const c=Gh(n.y);o.x.assign(n.x.add(c.mul(2)).add(2)),o.y.assign(n.z.mul(c).sub(2))}),be(.125,.25).mul(o).add(be(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),B3=le(({depthTexture:r,bd3D:e,dp:n,texelSize:i})=>Tt(r,ur(e,i.y)).compare(n)),k3=le(({depthTexture:r,bd3D:e,dp:n,texelSize:i,shadow:s})=>{const o=zt("radius","float",s).setGroup(Ye),a=be(-1,1).mul(o).mul(i.y);return Tt(r,ur(e.add(a.xyy),i.y)).compare(n).add(Tt(r,ur(e.add(a.yyy),i.y)).compare(n)).add(Tt(r,ur(e.add(a.xyx),i.y)).compare(n)).add(Tt(r,ur(e.add(a.yyx),i.y)).compare(n)).add(Tt(r,ur(e,i.y)).compare(n)).add(Tt(r,ur(e.add(a.xxy),i.y)).compare(n)).add(Tt(r,ur(e.add(a.yxy),i.y)).compare(n)).add(Tt(r,ur(e.add(a.xxx),i.y)).compare(n)).add(Tt(r,ur(e.add(a.yxx),i.y)).compare(n)).mul(1/9)}),z3=le(({filterFn:r,depthTexture:e,shadowCoord:n,shadow:i})=>{const s=n.xyz.toVar(),o=s.length(),a=tt("float").setGroup(Ye).onRenderUpdate(()=>i.camera.near),l=tt("float").setGroup(Ye).onRenderUpdate(()=>i.camera.far),c=zt("bias","float",i).setGroup(Ye),u=tt(i.mapSize).setGroup(Ye),h=ie(1).toVar();return on(o.sub(l).lessThanEqual(0).and(o.sub(a).greaterThanEqual(0)),()=>{const d=o.sub(a).div(l.sub(a)).toVar();d.addAssign(c);const f=s.normalize(),p=be(1).div(u.mul(be(4,2)));h.assign(r({depthTexture:e,bd3D:f,dp:d,texelSize:p,shadow:i}))}),h}),s0=new Qe,Ko=new ue,Ol=new ue;class G3 extends cS{static get type(){return"PointShadowNode"}constructor(e,n=null){super(e,n)}getShadowFilterFn(e){return e===VM?B3:k3}setupShadowCoord(e,n){return n}setupShadowFilter(e,{filterFn:n,shadowTexture:i,depthTexture:s,shadowCoord:o,shadow:a}){return z3({filterFn:n,shadowTexture:i,depthTexture:s,shadowCoord:o,shadow:a})}renderShadow(e){const{shadow:n,shadowMap:i,light:s}=this,{renderer:o,scene:a}=e,l=n.getFrameExtents();Ol.copy(n.mapSize),Ol.multiply(l),i.setSize(Ol.width,Ol.height),Ko.copy(n.mapSize);const c=o.autoClear,u=o.getClearColor(O3),h=o.getClearAlpha();o.autoClear=!1,o.setClearColor(n.clearColor,n.clearAlpha),o.clear();const d=n.getViewportCount();for(let f=0;f<d;f++){const p=n.getViewport(f),m=Ko.x*p.x,y=Ol.y-Ko.y-Ko.y*p.y;s0.set(m,y,Ko.x*p.z,Ko.y*p.w),i.viewport.copy(s0),n.updateMatrices(s,f),o.render(a,n.camera)}o.autoClear=c,o.setClearColor(u,h)}}const V3=(r,e)=>he(new G3(r,e));class To extends fl{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new Ge,this.colorNode=e&&e.colorNode||tt(this.color).setGroup(Ye),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=ft.FRAME}getHash(){return this.light.uuid}getLightVector(e){return sS(this.light).sub(e.context.positionView||cn)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return F3(this.light)}setupShadow(e){const{renderer:n}=e;if(n.shadowMap.enabled===!1)return;let i=this.shadowColorNode;if(i===null){const s=this.light.shadow.shadowNode;let o;s!==void 0?o=he(s):o=this.setupShadowNode(),this.shadowNode=o,this.shadowColorNode=i=this.colorNode.mul(o),this.baseColorNode=this.colorNode}this.colorNode=i}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const n=this.setupDirect(e),i=this.setupDirectRectArea(e);n&&e.lightsNode.setupDirectLight(e,this,n),i&&e.lightsNode.setupDirectRectAreaLight(e,this,i)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const uS=le(({lightDistance:r,cutoffDistance:e,decayExponent:n})=>{const i=r.pow(n).max(.01).reciprocal();return e.greaterThan(0).select(i.mul(r.div(e).pow4().oneMinus().clamp().pow2()),i)}),H3=({color:r,lightVector:e,cutoffDistance:n,decayExponent:i})=>{const s=e.normalize(),o=e.length(),a=uS({lightDistance:o,cutoffDistance:n,decayExponent:i}),l=r.mul(a);return{lightDirection:s,lightColor:l}};class W3 extends To{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=tt(0).setGroup(Ye),this.decayExponentNode=tt(2).setGroup(Ye)}update(e){const{light:n}=this;super.update(e),this.cutoffDistanceNode.value=n.distance,this.decayExponentNode.value=n.decay}setupShadowNode(){return V3(this.light)}setupDirect(e){return H3({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}le(([r=Qc()],{renderer:e,material:n})=>{const i=Jb(r.mul(2).sub(1));let s;if(n.alphaToCoverage&&e.samples>1){const o=ie(i.fwidth()).toVar();s=Rs(o.oneMinus(),o.add(1),i).oneMinus()}else s=Qn(i.greaterThan(1),0,1);return s});const $3=le(([r,e])=>{const n=r.x,i=r.y,s=r.z;let o=e.element(0).mul(.886227);return o=o.add(e.element(1).mul(2*.511664).mul(i)),o=o.add(e.element(2).mul(2*.511664).mul(s)),o=o.add(e.element(3).mul(2*.511664).mul(n)),o=o.add(e.element(4).mul(2*.429043).mul(n).mul(i)),o=o.add(e.element(5).mul(2*.429043).mul(i).mul(s)),o=o.add(e.element(6).mul(s.mul(s).mul(.743125).sub(.247708))),o=o.add(e.element(7).mul(2*.429043).mul(n).mul(s)),o=o.add(e.element(8).mul(.429043).mul(pt(n,n).sub(pt(i,i)))),o}),Wi=new Gg;class j3 extends Ds{constructor(e,n){super(),this.renderer=e,this.nodes=n}update(e,n,i){const s=this.renderer,o=this.nodes.getBackgroundNode(e)||e.background;let a=!1;if(o===null)s._clearColor.getRGB(Wi),Wi.a=s._clearColor.a;else if(o.isColor===!0)o.getRGB(Wi),Wi.a=1,a=!0;else if(o.isNode===!0){const c=this.get(e),u=o;Wi.copy(s._clearColor);let h=c.backgroundMesh;if(h===void 0){let y=function(){o.removeEventListener("dispose",y),h.material.dispose(),h.geometry.dispose()};const f=dd(lt(u).mul(e0),{getUV:()=>qB.mul(hU),getTextureLevel:()=>jB});let p=NT;p=p.setZ(p.w);const m=new gn;m.name="Background.material",m.side=Ut,m.depthTest=!1,m.depthWrite=!1,m.allowOverride=!1,m.fog=!1,m.lights=!1,m.vertexNode=p,m.colorNode=f,c.backgroundMeshNode=f,c.backgroundMesh=h=new mn(new Xc(1,32,32),m),h.frustumCulled=!1,h.name="Background.mesh",h.onBeforeRender=function(_,g,v){this.matrixWorld.copyPosition(v.matrixWorld)},o.addEventListener("dispose",y)}const d=u.getCacheKey();c.backgroundCacheKey!==d&&(c.backgroundMeshNode.node=lt(u).mul(e0),c.backgroundMeshNode.needsUpdate=!0,h.material.needsUpdate=!0,c.backgroundCacheKey=d),n.unshift(h,h.geometry,h.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",o);const l=s.xr.getEnvironmentBlendMode();if(l==="additive"?Wi.set(0,0,0,1):l==="alpha-blend"&&Wi.set(0,0,0,0),s.autoClear===!0||a===!0){const c=i.clearColorValue;c.r=Wi.r,c.g=Wi.g,c.b=Wi.b,c.a=Wi.a,(s.backend.isWebGLBackend===!0||s.alpha===!0)&&(c.r*=c.a,c.g*=c.a,c.b*=c.a),i.depthClearValue=s._clearDepth,i.stencilClearValue=s._clearStencil,i.clearColor=s.autoClearColor===!0,i.clearDepth=s.autoClearDepth===!0,i.clearStencil=s.autoClearStencil===!0}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let q3=0;class im{constructor(e="",n=[],i=0,s=[]){this.name=e,this.bindings=n,this.index=i,this.bindingsReference=s,this.id=q3++}}class X3{constructor(e,n,i,s,o,a,l,c,u,h=[]){this.vertexShader=e,this.fragmentShader=n,this.computeShader=i,this.transforms=h,this.nodeAttributes=s,this.bindings=o,this.updateNodes=a,this.updateBeforeNodes=l,this.updateAfterNodes=c,this.observer=u,this.usedTimes=0}createBindings(){const e=[];for(const n of this.bindings)if(n.bindings[0].groupNode.shared!==!0){const s=new im(n.name,[],n.index,n.bindingsReference);e.push(s);for(const o of n.bindings)s.bindings.push(o.clone())}else e.push(n);return e}}class o0{constructor(e,n,i=null){this.isNodeAttribute=!0,this.name=e,this.type=n,this.node=i}}class Y3{constructor(e,n,i){this.isNodeUniform=!0,this.name=e,this.type=n,this.node=i}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class hS{constructor(e,n,i=!1,s=null){this.isNodeVar=!0,this.name=e,this.type=n,this.readOnly=i,this.count=s}}class K3 extends hS{constructor(e,n,i=null,s=null){super(e,n),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=i,this.interpolationSampling=s}}class Z3{constructor(e,n,i=""){this.name=e,this.type=n,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Q3=0;class Qf{constructor(e=null){this.id=Q3++,this.nodesData=new WeakMap,this.parent=e}getData(e){let n=this.nodesData.get(e);return n===void 0&&this.parent!==null&&(n=this.parent.getData(e)),n}setData(e,n){this.nodesData.set(e,n)}}class J3{constructor(e,n){this.name=e,this.members=n,this.output=!1}}class Ls{constructor(e,n){this.name=e,this.value=n,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class ek extends Ls{constructor(e,n=0){super(e,n),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class tk extends Ls{constructor(e,n=new ue){super(e,n),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class nk extends Ls{constructor(e,n=new L){super(e,n),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class ik extends Ls{constructor(e,n=new Qe){super(e,n),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class rk extends Ls{constructor(e,n=new Ge){super(e,n),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class sk extends Ls{constructor(e,n=new rd){super(e,n),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class ok extends Ls{constructor(e,n=new at){super(e,n),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class ak extends Ls{constructor(e,n=new _t){super(e,n),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class lk extends ek{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class ck extends tk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class uk extends nk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class hk extends ik{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class dk extends rk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class fk extends sk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class pk extends ok{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class mk extends ak{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const a0=new WeakMap,gk=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Ju=r=>/e/g.test(r)?String(r).replace(/\+/g,""):(r=Number(r),r+(r%1?"":".0"));class dS{constructor(e,n,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=n,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.types={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=qf(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Qf,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=a0.get(this.renderer);return e===void 0&&(e=new tr,a0.set(this.renderer,e)),e}createRenderTarget(e,n,i){return new yo(e,n,i)}createCubeRenderTarget(e,n){return new BT(e,n)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,n){const i=this.getBindGroupsCache(),s=[];let o=!0;for(const l of n)s.push(l),o=o&&l.groupNode.shared!==!0;let a;return o?(a=i.get(s),a===void 0&&(a=new im(e,s,this.bindingsIndexes[e].group,s),i.set(s,a))):a=new im(e,s,this.bindingsIndexes[e].group,s),a}getBindGroupArray(e,n){const i=this.bindings[n];let s=i[e];return s===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=s=[]),s}getBindings(){let e=this.bindGroups;if(e===null){const n={},i=this.bindings;for(const s of nv)for(const o in i[s]){const a=i[s][o];(n[o]||(n[o]=[])).push(...a)}e=[];for(const s in n){const o=n[s],a=this._getBindGroup(s,o);e.push(a)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((n,i)=>n.bindings[0].groupNode.order-i.bindings[0].groupNode.order);for(let n=0;n<e.length;n++){const i=e[n];this.bindingsIndexes[i.name].group=n,i.index=n}}setHashNode(e,n){this.hashNodes[n]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==ft.NONE&&this.updateNodes.push(e);for(const e of this.sequentialNodes){const n=e.getUpdateBeforeType(),i=e.getUpdateAfterType();n!==ft.NONE&&this.updateBeforeNodes.push(e),i!==ft.NONE&&this.updateAfterNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===vn||e.magFilter===da||e.magFilter===jr||e.magFilter===ii||e.minFilter===vn||e.minFilter===da||e.minFilter===jr||e.minFilter===ii}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getTernary(){return null}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,n){return this.flowNodes[e].push(n),n}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,n=!0){const i=this.getDataFromNode(e);return i.cache===void 0&&(i.cache=new Qf(n?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const n=this.getDataFromNode(e);return n.usageCount=n.usageCount===void 0?1:n.usageCount+1,n.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,n){return this.getType(e)+"[ "+n+" ]"}generateArray(e,n,i=null){let s=this.generateArrayDeclaration(e,n)+"( ";for(let o=0;o<n;o++){const a=i?i[o]:null;a!==null?s+=a.build(this,e):s+=this.generateConst(e),o<n-1&&(s+=", ")}return s+=" )",s}generateStruct(e,n,i=null){const s=[];for(const o of n){const{name:a,type:l}=o;i&&i[a]&&i[a].isNode?s.push(i[a].build(this,l)):s.push(this.generateConst(l))}return e+"( "+s.join(", ")+" )"}generateConst(e,n=null){if(n===null&&(e==="float"||e==="int"||e==="uint"?n=0:e==="bool"?n=!1:e==="color"?n=new Ge:e==="vec2"?n=new ue:e==="vec3"?n=new L:e==="vec4"&&(n=new Qe)),e==="float")return Ju(n);if(e==="int")return`${Math.round(n)}`;if(e==="uint")return n>=0?`${Math.round(n)}u`:"0u";if(e==="bool")return n?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Ju(n.r)}, ${Ju(n.g)}, ${Ju(n.b)} )`;const i=this.getTypeLength(e),s=this.getComponentType(e),o=a=>this.generateConst(s,a);if(i===2)return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)} )`;if(i===3)return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)}, ${o(n.z)} )`;if(i===4&&e!=="mat2")return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)}, ${o(n.z)}, ${o(n.w)} )`;if(i>=4&&n&&(n.isMatrix2||n.isMatrix3||n.isMatrix4))return`${this.getType(e)}( ${n.elements.map(o).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,n){const i=this.attributes;for(const o of i)if(o.name===e)return o;const s=new o0(e,n);return this.registerDeclaration(s),i.push(s),s}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const n=e.type;if(e.isDataTexture){if(n===En)return"int";if(n===Gt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const n=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return n===null?null:n[1]==="b"?"bool":n[1]==="i"?"int":n[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,n="float"){if(e===1)return n;let i=M2(e);const s=n==="float"?"":n[0];return/mat2/.test(n)===!0&&(i=i.replace("vec","mat")),s+i}getTypeFromArray(e){return gk.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array,s=e.itemSize,o=e.normalized;let a;return!(e instanceof Rx)&&o!==!0&&(a=this.getTypeFromArray(i)),this.getTypeFromLength(s,a)}getTypeLength(e){const n=this.getVectorType(e),i=/vec([2-4])/.exec(n);return i!==null?Number(i[1]):n==="float"||n==="bool"||n==="int"||n==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,n){return this.getTypeFromLength(this.getTypeLength(e),n)}getIntegerType(e){const n=this.getComponentType(e);return n==="int"||n==="uint"?e:this.changeComponentType(e,"int")}addStack(){this.stack=qf(this.stack);const e=xg();return this.stacks.push(e),Fh(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Fh(this.stacks.pop()),e}getDataFromNode(e,n=this.shaderStage,i=null){i=i===null?e.isGlobal(this)?this.globalCache:this.cache:i;let s=i.getData(e);s===void 0&&(s={},i.setData(e,s)),s[n]===void 0&&(s[n]={});let o=s[n];const a=s.any?s.any.subBuilds:null,l=this.getClosestSubBuild(a);return l&&(o.subBuildsCache===void 0&&(o.subBuildsCache={}),o=o.subBuildsCache[l]||(o.subBuildsCache[l]={}),o.subBuilds=a),o}getNodeProperties(e,n="any"){const i=this.getDataFromNode(e,n);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,n){const i=this.getDataFromNode(e);let s=i.bufferAttribute;if(s===void 0){const o=this.uniforms.index++;s=new o0("nodeAttribute"+o,n,e),this.bufferAttributes.push(s),i.bufferAttribute=s}return s}getStructTypeNode(e,n=this.shaderStage){return this.types[n][e]||null}getStructTypeFromNode(e,n,i=null,s=this.shaderStage){const o=this.getDataFromNode(e,s,this.globalCache);let a=o.structType;if(a===void 0){const l=this.structs.index++;i===null&&(i="StructType"+l),a=new J3(i,n),this.structs[s].push(a),this.types[s][i]=e,o.structType=a}return a}getOutputStructTypeFromNode(e,n){const i=this.getStructTypeFromNode(e,n,"OutputType","fragment");return i.output=!0,i}getUniformFromNode(e,n,i=this.shaderStage,s=null){const o=this.getDataFromNode(e,i,this.globalCache);let a=o.uniform;if(a===void 0){const l=this.uniforms.index++;a=new Y3(s||"nodeUniform"+l,n,e),this.uniforms[i].push(a),this.registerDeclaration(a),o.uniform=a}return a}getVarFromNode(e,n=null,i=e.getNodeType(this),s=this.shaderStage,o=!1){const a=this.getDataFromNode(e,s),l=this.getSubBuildProperty("variable",a.subBuilds);let c=a[l];if(c===void 0){const u=o?"_const":"_var",h=this.vars[s]||(this.vars[s]=[]),d=this.vars[u]||(this.vars[u]=0);n===null&&(n=(o?"nodeConst":"nodeVar")+d,this.vars[u]++),l!=="variable"&&(n=this.getSubBuildProperty(n,a.subBuilds));const f=e.getArrayCount(this);c=new hS(n,i,o,f),o||h.push(c),this.registerDeclaration(c),a[l]=c}return c}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const n of e.values)if(!this.isDeterministic(n))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,n=null,i=e.getNodeType(this),s=null,o=null){const a=this.getDataFromNode(e,"any"),l=this.getSubBuildProperty("varying",a.subBuilds);let c=a[l];if(c===void 0){const u=this.varyings,h=u.length;n===null&&(n="nodeVarying"+h),l!=="varying"&&(n=this.getSubBuildProperty(n,a.subBuilds)),c=new K3(n,i,s,o),u.push(c),this.registerDeclaration(c),a[l]=c}return c}registerDeclaration(e){const n=this.shaderStage,i=this.declarations[n]||(this.declarations[n]={}),s=this.getPropertyName(e);let o=1,a=s;for(;i[a]!==void 0;)a=s+"_"+o++;o>1&&(e.name=a,console.warn(`THREE.TSL: Declaration name '${s}' of '${e.type}' already in use. Renamed to '${a}'.`)),i[a]=e}getCodeFromNode(e,n,i=this.shaderStage){const s=this.getDataFromNode(e);let o=s.code;if(o===void 0){const a=this.codes[i]||(this.codes[i]=[]),l=a.length;o=new Z3("nodeCode"+l,n),a.push(o),s.code=o}return o}addFlowCodeHierarchy(e,n){const{flowCodes:i,flowCodeBlock:s}=this.getDataFromNode(e);let o=!0,a=n;for(;a;){if(s.get(a)===!0){o=!1;break}a=this.getDataFromNode(a).parentNodeBlock}if(o)for(const l of i)this.addLineFlowCode(l)}addLineFlowCodeBlock(e,n,i){const s=this.getDataFromNode(e),o=s.flowCodes||(s.flowCodes=[]),a=s.flowCodeBlock||(s.flowCodeBlock=new WeakMap);o.push(n),a.set(i,!0)}addLineFlowCode(e,n=null){return e===""?this:(n!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(n,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const n=e.getNodeType(this),i=this.flowChildNode(e,n);return this.flowsData.set(e,i),i}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const n=new l3,i=this.currentFunctionNode;return this.currentFunctionNode=n,n.code=this.buildFunctionCode(e),this.currentFunctionNode=i,n}flowShaderNode(e){const n=e.layout,i={[Symbol.iterator](){let a=0;const l=Object.values(this);return{next:()=>({value:l[a],done:a++>=l.length})}}};for(const a of n.inputs)i[a.name]=new GB(a.type,a.name);e.layout=null;const s=e.call(i),o=this.flowStagesNode(s,n.type);return e.layout=n,o}flowBuildStage(e,n,i=null){const s=this.getBuildStage();this.setBuildStage(n);const o=e.build(this,i);return this.setBuildStage(s),o}flowStagesNode(e,n=null){const i=this.flow,s=this.vars,o=this.declarations,a=this.cache,l=this.buildStage,c=this.stack,u={code:""};this.flow=u,this.vars={},this.declarations={},this.cache=new Qf,this.stack=qf();for(const h of tv)this.setBuildStage(h),u.result=e.build(this,n);return u.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=s,this.declarations=o,this.cache=a,this.stack=c,this.setBuildStage(l),u}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,n=null){const i=this.flow,s={code:""};return this.flow=s,s.result=e.build(this,n),this.flow=i,s}flowNodeFromShaderStage(e,n,i=null,s=null){const o=this.tab,a=this.cache,l=this.shaderStage,c=this.context;this.setShaderStage(e);const u={...this.context};delete u.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=u;let h=null;if(this.buildStage==="generate"){const d=this.flowChildNode(n,i);s!==null&&(d.code+=`${this.tab+s} = ${d.result};
`),this.flowCode[e]=this.flowCode[e]+d.code,h=d}else h=n.build(this);return this.setShaderStage(l),this.cache=a,this.tab=o,this.context=c,h}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,n,i=null){return`${i!==null?this.generateArrayDeclaration(e,i):this.getType(e)} ${n}`}getVars(e){let n="";const i=this.vars[e];if(i!==void 0)for(const s of i)n+=`${this.getVar(s.type,s.name)}; `;return n}getUniforms(){console.warn("Abstract function.")}getCodes(e){const n=this.codes[e];let i="";if(n!==void 0)for(const s of n)i+=s.code+`
`;return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let n;if(e&&e.isNode?e.isShaderCallNodeInternal?n=e.shaderNode.subBuilds:e.isStackNode?n=[e.subBuild]:n=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?n=[...e]:n=e,!n)return null;const i=this.subBuildLayers;for(let s=n.length-1;s>=0;s--){const o=n[s];if(i.includes(o))return o}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",n=null){let i;n!==null?i=this.getClosestSubBuild(n):i=this.subBuildFn;let s;return i?s=e?i+"_"+e:i:s=e,s}build(){const{object:e,material:n,renderer:i}=this;if(n!==null){let s=i.library.fromMaterial(n);s===null&&(console.error(`NodeMaterial: Material "${n.type}" is not compatible.`),s=new gn),s.build(this)}else this.addFlow("compute",e);for(const s of tv){this.setBuildStage(s),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const o of nv){this.setShaderStage(o);const a=this.flowNodes[o];for(const l of a)s==="generate"?this.flowNode(l):l.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,n){if(n==="float"||n==="int"||n==="uint")return new lk(e);if(n==="vec2"||n==="ivec2"||n==="uvec2")return new ck(e);if(n==="vec3"||n==="ivec3"||n==="uvec3")return new uk(e);if(n==="vec4"||n==="ivec4"||n==="uvec4")return new hk(e);if(n==="color")return new dk(e);if(n==="mat2")return new fk(e);if(n==="mat3")return new pk(e);if(n==="mat4")return new mk(e);throw new Error(`Uniform "${n}" not declared.`)}format(e,n,i){if(n=this.getVectorType(n),i=this.getVectorType(i),n===i||i===null||this.isReference(i))return e;const s=this.getTypeLength(n),o=this.getTypeLength(i);return s===16&&o===9?`${this.getType(i)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:s===9&&o===4?`${this.getType(i)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:s>4||o>4||o===0?e:s===o?`${this.getType(i)}( ${e} )`:s>o?(e=i==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,o)}`,this.format(e,this.getTypeFromLength(o,this.getComponentType(n)),i)):o===4&&s>1?`${this.getType(i)}( ${this.format(e,n,"vec3")}, 1.0 )`:s===2?`${this.getType(i)}( ${this.format(e,n,"vec2")}, 0.0 )`:(s===1&&o>1&&n!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${il} - Node System
`}}class l0{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,n){let i=e.get(n);return i===void 0&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(n,i)),i}updateBeforeNode(e){const n=e.getUpdateBeforeType(),i=e.updateReference(this);if(n===ft.FRAME){const{frameMap:s}=this._getMaps(this.updateBeforeMap,i);s.get(i)!==this.frameId&&e.updateBefore(this)!==!1&&s.set(i,this.frameId)}else if(n===ft.RENDER){const{renderMap:s}=this._getMaps(this.updateBeforeMap,i);s.get(i)!==this.renderId&&e.updateBefore(this)!==!1&&s.set(i,this.renderId)}else n===ft.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const n=e.getUpdateAfterType(),i=e.updateReference(this);if(n===ft.FRAME){const{frameMap:s}=this._getMaps(this.updateAfterMap,i);s.get(i)!==this.frameId&&e.updateAfter(this)!==!1&&s.set(i,this.frameId)}else if(n===ft.RENDER){const{renderMap:s}=this._getMaps(this.updateAfterMap,i);s.get(i)!==this.renderId&&e.updateAfter(this)!==!1&&s.set(i,this.renderId)}else n===ft.OBJECT&&e.updateAfter(this)}updateNode(e){const n=e.getUpdateType(),i=e.updateReference(this);if(n===ft.FRAME){const{frameMap:s}=this._getMaps(this.updateMap,i);s.get(i)!==this.frameId&&e.update(this)!==!1&&s.set(i,this.frameId)}else if(n===ft.RENDER){const{renderMap:s}=this._getMaps(this.updateMap,i);s.get(i)!==this.renderId&&e.update(this)!==!1&&s.set(i,this.renderId)}else n===ft.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Wg{constructor(e,n,i=null,s="",o=!1){this.type=e,this.name=n,this.count=i,this.qualifier=s,this.isConst=o}}Wg.isNodeFunctionInput=!0;class _k extends To{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:oS(this.light),lightColor:e}}}const Jf=new _t,eh=new _t;let Bl=null;class yk extends To{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=tt(new L).setGroup(Ye),this.halfWidth=tt(new L).setGroup(Ye),this.updateType=ft.RENDER}update(e){super.update(e);const{light:n}=this,i=e.camera.matrixWorldInverse;eh.identity(),Jf.copy(n.matrixWorld),Jf.premultiply(i),eh.extractRotation(Jf),this.halfWidth.value.set(n.width*.5,0,0),this.halfHeight.value.set(0,n.height*.5,0),this.halfWidth.value.applyMatrix4(eh),this.halfHeight.value.applyMatrix4(eh)}setupDirectRectArea(e){let n,i;e.isAvailable("float32Filterable")?(n=Tt(Bl.LTC_FLOAT_1),i=Tt(Bl.LTC_FLOAT_2)):(n=Tt(Bl.LTC_HALF_1),i=Tt(Bl.LTC_HALF_2));const{colorNode:s,light:o}=this,a=sS(o);return{lightColor:s,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:n,ltc_2:i}}static setLTC(e){Bl=e}}class $g extends To{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=tt(0).setGroup(Ye),this.penumbraCosNode=tt(0).setGroup(Ye),this.cutoffDistanceNode=tt(0).setGroup(Ye),this.decayExponentNode=tt(0).setGroup(Ye),this.colorNode=tt(this.color).setGroup(Ye)}update(e){super.update(e);const{light:n}=this;this.coneCosNode.value=Math.cos(n.angle),this.penumbraCosNode.value=Math.cos(n.angle*(1-n.penumbra)),this.cutoffDistanceNode.value=n.distance,this.decayExponentNode.value=n.decay}getSpotAttenuation(e,n){const{coneCosNode:i,penumbraCosNode:s}=this;return Rs(i,s,n)}getLightCoord(e){const n=e.getNodeProperties(this);let i=n.projectionUV;return i===void 0&&(i=d3(this.light,e.context.positionWorld),n.projectionUV=i),i}setupDirect(e){const{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:o}=this,a=this.getLightVector(e),l=a.normalize(),c=l.dot(oS(o)),u=this.getSpotAttenuation(e,c),h=a.length(),d=uS({lightDistance:h,cutoffDistance:i,decayExponent:s});let f=n.mul(u).mul(d),p,m;return o.colorNode?(m=this.getLightCoord(e),p=o.colorNode(m)):o.map&&(m=this.getLightCoord(e),p=Tt(o.map,m.xy).onRenderUpdate(()=>o.map)),p&&(f=m.mul(2).sub(1).abs().lessThan(1).all().select(f.mul(p),f)),{lightColor:f,lightDirection:l}}}class vk extends $g{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,n){const i=this.light.iesMap;let s=null;if(i&&i.isTexture===!0){const o=n.acos().mul(1/Math.PI);s=Tt(i,be(o,0),0).r}else s=super.getSpotAttenuation(n);return s}}const xk=le(([r,e])=>{const n=r.abs().sub(e);return Jr(Vn(n,0)).add(Ka(Vn(n.x,n.y),0))});class bk extends $g{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const n=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(n.angle*(1-n.penumbra)),.99999),n.aspect===null){let i=1;n.map!==null&&(i=n.map.width/n.map.height),n.shadow.aspect=i}else n.shadow.aspect=n.aspect}getSpotAttenuation(e){const n=ie(0),i=this.penumbraCosNode,s=Hg(this.light).mul(e.context.positionWorld||Qa);return on(s.w.greaterThan(0),()=>{const o=s.xyz.div(s.w),a=xk(o.xy.sub(be(.5)),be(.5)),l=xr(-1,Yn(1,jb(i)).sub(1));n.assign(eT(a.mul(-2).mul(l)))}),n}}class Tk extends To{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class Sk extends To{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=rS(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=tt(new Ge).setGroup(Ye)}update(e){const{light:n}=this;super.update(e),this.lightPositionNode.object3d=n,this.groundColorNode.value.copy(n.groundColor).multiplyScalar(n.intensity)}setup(e){const{colorNode:n,groundColorNode:i,lightDirectionNode:s}=this,a=dl.dot(s).mul(.5).add(.5),l=qt(i,n,a);e.context.irradiance.addAssign(l)}}class Mk extends To{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const n=[];for(let i=0;i<9;i++)n.push(new L);this.lightProbe=Ki(n)}update(e){const{light:n}=this;super.update(e);for(let i=0;i<9;i++)this.lightProbe.array[i].copy(n.sh.coefficients[i]).multiplyScalar(n.intensity)}setup(e){const n=$3(dl,this.lightProbe);e.context.irradiance.addAssign(n)}}class fS{parseFunction(){console.warn("Abstract function.")}}class jg{constructor(e,n,i="",s=""){this.type=e,this.inputs=n,this.name=i,this.precision=s}getCode(){console.warn("Abstract function.")}}jg.isNodeFunction=!0;const Ek=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,wk=/[a-z_0-9]+/ig,c0="#pragma main",Ak=r=>{r=r.trim();const e=r.indexOf(c0),n=e!==-1?r.slice(e+c0.length):r,i=n.match(Ek);if(i!==null&&i.length===5){const s=i[4],o=[];let a=null;for(;(a=wk.exec(s))!==null;)o.push(a);const l=[];let c=0;for(;c<o.length;){const m=o[c][0]==="const";m===!0&&c++;let y=o[c][0];y==="in"||y==="out"||y==="inout"?c++:y="";const _=o[c++][0];let g=Number.parseInt(o[c][0]);Number.isNaN(g)===!1?c++:g=null;const v=o[c++][0];l.push(new Wg(_,v,g,y,m))}const u=n.substring(i[0].length),h=i[3]!==void 0?i[3]:"",d=i[2],f=i[1]!==void 0?i[1]:"",p=e!==-1?r.slice(0,e):"";return{type:d,inputs:l,name:h,precision:f,inputsCode:s,blockCode:u,headerCode:p}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class Rk extends jg{constructor(e){const{type:n,inputs:i,name:s,precision:o,inputsCode:a,blockCode:l,headerCode:c}=Ak(e);super(n,i,s,o),this.inputsCode=a,this.blockCode=l,this.headerCode=c}getCode(e=this.name){let n;const i=this.blockCode;if(i!==""){const{type:s,inputsCode:o,headerCode:a,precision:l}=this;let c=`${s} ${e} ( ${o.trim()} )`;l!==""&&(c=`${l} ${c}`),n=a+c+i}else n="";return n}}class Ck extends fS{parseFunction(e){return new Rk(e)}}const u0=new WeakMap,lr=[],$s=[];class Nk extends Ds{constructor(e,n){super(),this.renderer=e,this.backend=n,this.nodeFrame=new l0,this.nodeBuilderCache=new Map,this.callHashCache=new tr,this.groupsData=new tr,this.cacheLib={}}updateGroup(e){const n=e.groupNode,i=n.name;if(i===Vb.name)return!0;if(i===Ye.name){const o=this.get(e),a=this.nodeFrame.renderId;return o.renderId!==a?(o.renderId=a,!0):!1}if(i===uL.name){const o=this.get(e),a=this.nodeFrame.frameId;return o.frameId!==a?(o.frameId=a,!0):!1}lr[0]=n,lr[1]=e;let s=this.groupsData.get(lr);return s===void 0&&this.groupsData.set(lr,s={}),lr.length=0,s.version!==n.version?(s.version=n.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const n=this.get(e);let i=n.nodeBuilderState;if(i===void 0){const{nodeBuilderCache:s}=this,o=this.getForRenderCacheKey(e);if(i=s.get(o),i===void 0){const a=this.backend.createNodeBuilder(e.object,this.renderer);a.scene=e.scene,a.material=e.material,a.camera=e.camera,a.context.material=e.material,a.lightsNode=e.lightsNode,a.environmentNode=this.getEnvironmentNode(e.scene),a.fogNode=this.getFogNode(e.scene),a.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&a.enableMultiview(),a.build(),i=this._createNodeBuilderState(a),s.set(o,i)}i.usedTimes++,n.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const n=this.get(e).nodeBuilderState;n.usedTimes--,n.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const n=this.get(e);let i=n.nodeBuilderState;if(i===void 0){const s=this.backend.createNodeBuilder(e,this.renderer);s.build(),i=this._createNodeBuilderState(s),n.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new X3(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let n=null;if(e.environmentNode&&e.environmentNode.isNode)n=e.environmentNode;else{const i=this.get(e);i.environmentNode&&(n=i.environmentNode)}return n}getBackgroundNode(e){this.updateBackground(e);let n=null;if(e.backgroundNode&&e.backgroundNode.isNode)n=e.backgroundNode;else{const i=this.get(e);i.backgroundNode&&(n=i.backgroundNode)}return n}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,n){lr[0]=e,lr[1]=n;const i=this.renderer.info.calls,s=this.callHashCache.get(lr)||{};if(s.callId!==i){const o=this.getEnvironmentNode(e),a=this.getFogNode(e);n&&$s.push(n.getCacheKey(!0)),o&&$s.push(o.getCacheKey()),a&&$s.push(a.getCacheKey()),$s.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),$s.push(this.renderer.shadowMap.enabled?1:0),s.callId=i,s.cacheKey=fg($s),this.callHashCache.set(lr,s),$s.length=0}return lr.length=0,s.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const n=this.get(e),i=e.background;if(i){const s=e.backgroundBlurriness===0&&n.backgroundBlurriness>0||e.backgroundBlurriness>0&&n.backgroundBlurriness===0;if(n.background!==i||s){const o=this.getCacheNode("background",i,()=>{if(i.isCubeTexture===!0||i.mapping===Sa||i.mapping===Ma||i.mapping===uo){if(e.backgroundBlurriness>0||i.mapping===uo)return KT(i);{let a;return i.isCubeTexture===!0?a=Ic(i):a=Tt(i),zT(a)}}else{if(i.isTexture===!0)return Tt(i,va.flipY()).setUpdateMatrix(!0);i.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",i)}},s);n.backgroundNode=o,n.background=i,n.backgroundBlurriness=e.backgroundBlurriness}}else n.backgroundNode&&(delete n.backgroundNode,delete n.background)}getCacheNode(e,n,i,s=!1){const o=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let a=o.get(n);return(a===void 0||s)&&(a=i(),o.set(n,a)),a}updateFog(e){const n=this.get(e),i=e.fog;if(i){if(n.fog!==i){const s=this.getCacheNode("fog",i,()=>{if(i.isFogExp2){const o=zt("color","color",i).setGroup(Ye),a=zt("density","float",i).setGroup(Ye);return n0(o,u3(a))}else if(i.isFog){const o=zt("color","color",i).setGroup(Ye),a=zt("near","float",i).setGroup(Ye),l=zt("far","float",i).setGroup(Ye);return n0(o,c3(a,l))}else console.error("THREE.Renderer: Unsupported fog configuration.",i)});n.fogNode=s,n.fog=i}}else delete n.fogNode,delete n.fog}updateEnvironment(e){const n=this.get(e),i=e.environment;if(i){if(n.environment!==i){const s=this.getCacheNode("environment",i,()=>{if(i.isCubeTexture===!0)return Ic(i);if(i.isTexture===!0)return Tt(i);console.error("Nodes: Unsupported environment configuration.",i)});n.environmentNode=s,n.environment=i}}else n.environmentNode&&(delete n.environmentNode,delete n.environment)}getNodeFrame(e=this.renderer,n=null,i=null,s=null,o=null){const a=this.nodeFrame;return a.renderer=e,a.scene=n,a.object=i,a.camera=s,a.material=o,a}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return u0.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const n=this.renderer,i=this.getOutputCacheKey(),s=e.isArrayTexture?KB(e,oe(va,Jc("gl_ViewID_OVR"))).renderOutput(n.toneMapping,n.currentColorSpace):Tt(e,va).renderOutput(n.toneMapping,n.currentColorSpace);return u0.set(e,i),s}updateBefore(e){const n=e.getNodeBuilderState();for(const i of n.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const n=e.getNodeBuilderState();for(const i of n.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const n=this.getNodeFrame(),i=this.getForCompute(e);for(const s of i.updateNodes)n.updateNode(s)}updateForRender(e){const n=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const s of i.updateNodes)n.updateNode(s)}needsRefresh(e){const n=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,n)}dispose(){super.dispose(),this.nodeFrame=new l0,this.nodeBuilderCache=new Map,this.cacheLib={}}}const ep=new Xi;class Vh{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new at,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,n,i){const s=e.length;for(let o=0;o<s;o++){ep.copy(e[o]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const a=n[i+o],l=ep.normal;a.x=-l.x,a.y=-l.y,a.z=-l.z,a.w=ep.constant}}updateGlobal(e,n){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=n.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,n){let i=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==n.clipIntersection&&(this.clipIntersection=n.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const s=n.clippingPlanes,o=s.length;let a,l;if(this.clipIntersection?(a=this.intersectionPlanes,l=e.intersectionPlanes.length):(a=this.unionPlanes,l=e.unionPlanes.length),a.length!==l+o){a.length=l+o;for(let c=0;c<o;c++)a[l+c]=new Qe;i=!0}this.projectPlanes(s,a,l),i&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let n=this.clippingGroupContexts.get(e);return n===void 0&&(n=new Vh(this),this.clippingGroupContexts.set(e,n)),n.update(this,e),n}get unionClippingCount(){return this.unionPlanes.length}}class Pk{constructor(e,n){this.bundleGroup=e,this.camera=n}}const kl=[];class Dk{constructor(){this.bundles=new tr}get(e,n){const i=this.bundles;kl[0]=e,kl[1]=n;let s=i.get(kl);return s===void 0&&(s=new Pk(e,n),i.set(kl,s)),kl.length=0,s}dispose(){this.bundles=new tr}}class pS{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let n=null;const i=this.getMaterialNodeClass(e.type);if(i!==null){n=new i;for(const s in e)n[s]=e[s]}return n}addToneMapping(e,n){this.addType(e,n,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,n){this.addType(e,n,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,n){this.addClass(e,n,this.lightNodes)}addType(e,n,i){if(i.has(n)){console.warn(`Redefinition of node ${n}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof n=="function"||typeof n=="object")throw new Error(`Base class ${n} is not a class.`);i.set(n,e)}addClass(e,n,i){if(i.has(n)){console.warn(`Redefinition of node ${n.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof n!="function")throw new Error(`Base class ${n.name} is not a class.`);i.set(n,e)}}const Lk=new aS,zl=[];class Ik extends tr{constructor(){super()}createNode(e=[]){return new aS().setLights(e)}getNode(e,n){if(e.isQuadMesh)return Lk;zl[0]=e,zl[1]=n;let i=this.get(zl);return i===void 0&&(i=this.createNode(),this.set(zl,i)),zl.length=0,i}}class ec extends yo{constructor(e=1,n=1,i={}){super(e,n,i),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const h0=new L,d0=new L;class Uk extends is{constructor(e,n=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new wn,this._cameraL.viewport=new Qe,this._cameraR=new wn,this._cameraR.viewport=new Qe,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Gx,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._sessionUsesLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=Gk.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new ue,this._onSessionEvent=Bk.bind(this),this._onSessionEnd=kk.bind(this),this._onInputSourcesChange=zk.bind(this),this._onAnimationFrame=Vk.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._supportsLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=n,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getBinding(){return this._glBinding===null&&this._supportsGlBinding&&(this._glBinding=new XRWebGLBinding(this._session,this._gl)),this._glBinding}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,n,i,s,o,a,l,c={}){const u=new qc(e,n),h=new ec(o,a,{format:sn,type:nn,depthTexture:new Bi(o,a,c.stencil?Mi:Gt,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?wi:Ei),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});h._autoAllocateDepthBuffer=!0;const d=new dr({color:16777215,side:Ti});d.map=h.texture,d.map.offset.y=1,d.map.repeat.y=-1;const f=new mn(u,d);f.position.copy(i),f.quaternion.copy(s);const p={type:"quad",width:e,height:n,translation:i,quaternion:s,pixelwidth:o,pixelheight:a,plane:f,material:d,rendercall:l,renderTarget:h};if(this._layers.push(p),this._session!==null){p.plane.material=new dr({color:16777215,side:Ti}),p.plane.material.blending=ha,p.plane.material.blendEquation=kn,p.plane.material.blendSrc=Br,p.plane.material.blendDst=Br,p.xrlayer=this._createXRLayer(p);const m=this._session.renderState.layers;m.unshift(p.xrlayer),this._session.updateRenderState({layers:m})}else h.isXRRenderTarget=!1;return f}createCylinderLayer(e,n,i,s,o,a,l,c,u={}){const h=new jc(e,e,e*n/i,64,64,!0,Math.PI-n/2,n),d=new ec(a,l,{format:sn,type:nn,depthTexture:new Bi(a,l,u.stencil?Mi:Gt,void 0,void 0,void 0,void 0,void 0,void 0,u.stencil?wi:Ei),stencilBuffer:u.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});d._autoAllocateDepthBuffer=!0;const f=new dr({color:16777215,side:Ut});f.map=d.texture,f.map.offset.y=1,f.map.repeat.y=-1;const p=new mn(h,f);p.position.copy(s),p.quaternion.copy(o);const m={type:"cylinder",radius:e,centralAngle:n,aspectratio:i,translation:s,quaternion:o,pixelwidth:a,pixelheight:l,plane:p,material:f,rendercall:c,renderTarget:d};if(this._layers.push(m),this._session!==null){m.plane.material=new dr({color:16777215,side:Ut}),m.plane.material.blending=ha,m.plane.material.blendEquation=kn,m.plane.material.blendSrc=Br,m.plane.material.blendDst=Br,m.xrlayer=this._createXRLayer(m);const y=this._session.renderState.layers;y.unshift(m.xrlayer),this._session.updateRenderState({layers:y})}else d.isXRRenderTarget=!1;return p}renderLayers(){const e=new L,n=new er,i=this._renderer,s=this.isPresenting,o=i.getOutputRenderTarget(),a=i._frameBufferTarget;this.isPresenting=!1;const l=new ue;i.getSize(l);const c=i._quad;for(const u of this._layers)if(u.renderTarget.isXRRenderTarget=this._session!==null,u.renderTarget._hasExternalTextures=u.renderTarget.isXRRenderTarget,u.renderTarget.isXRRenderTarget&&this._sessionUsesLayers){u.xrlayer.transform=new XRRigidTransform(u.plane.getWorldPosition(e),u.plane.getWorldQuaternion(n));const h=this._glBinding.getSubImage(u.xrlayer,this._xrFrame);i.backend.setXRRenderTargetTextures(u.renderTarget,h.colorTexture,void 0),i._setXRLayerSize(u.renderTarget.width,u.renderTarget.height),i.setOutputRenderTarget(u.renderTarget),i.setRenderTarget(null),i._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:d,quad:f}=this._frameBufferTargets.get(u.renderTarget)||{frameBufferTarget:null,quad:null};d?(i._frameBufferTarget=d,i._quad=f):(i._quad=new Vg(new gn),this._frameBufferTargets.set(u.renderTarget,{frameBufferTarget:i._getFrameBufferTarget(),quad:i._quad})),u.rendercall(),i._frameBufferTarget=null}else i.setRenderTarget(u.renderTarget),u.rendercall();i.setRenderTarget(null),i.setOutputRenderTarget(o),i._frameBufferTarget=a,i._setXRLayerSize(l.x,l.y),i._quad=c,this.isPresenting=s}getSession(){return this._session}async setSession(e){const n=this._renderer,i=n.backend;this._gl=n.getContext();const s=this._gl,o=s.getContextAttributes();if(this._session=e,e!==null){if(i.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await i.makeXRCompatible(),this._currentPixelRatio=n.getPixelRatio(),n.getSize(this._currentSize),this._currentAnimationContext=n._animation.getContext(),this._currentAnimationLoop=n._animation.getAnimationLoop(),n._animation.stop(),this._supportsLayers===!0){let a=null,l=null,c=null;n.depth&&(c=n.stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24,a=n.stencil?wi:Ei,l=n.stencil?Mi:Gt);const u={colorFormat:s.RGBA8,depthFormat:c,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&n.hasFeature("OVR_multiview2")&&(u.textureType="texture-array",this._useMultiview=!0),this._glBinding=this.getBinding();const h=this._glBinding.createProjectionLayer(u),d=[h];this._glProjLayer=h,n.setPixelRatio(1),n._setXRLayerSize(h.textureWidth,h.textureHeight);const f=this._useMultiview?2:1,p=new Bi(h.textureWidth,h.textureHeight,l,void 0,void 0,void 0,void 0,void 0,void 0,a,f);if(this._xrRenderTarget=new ec(h.textureWidth,h.textureHeight,{format:sn,type:nn,colorSpace:n.outputColorSpace,depthTexture:p,stencilBuffer:n.stencil,samples:o.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._sessionUsesLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._sessionUsesLayers)for(const m of this._layers)m.plane.material=new dr({color:16777215,side:m.type==="cylinder"?Ut:Ti}),m.plane.material.blending=ha,m.plane.material.blendEquation=kn,m.plane.material.blendSrc=Br,m.plane.material.blendDst=Br,m.xrlayer=this._createXRLayer(m),d.unshift(m.xrlayer);e.updateRenderState({layers:d})}else{const a={antialias:n.samples>0,alpha:!0,depth:n.depth,stencil:n.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},l=new XRWebGLLayer(e,s,a);this._glBaseLayer=l,e.updateRenderState({baseLayer:l}),n.setPixelRatio(1),n._setXRLayerSize(l.framebufferWidth,l.framebufferHeight),this._xrRenderTarget=new ec(l.framebufferWidth,l.framebufferHeight,{format:sn,type:nn,colorSpace:n.outputColorSpace,stencilBuffer:n.stencil,resolveDepthBuffer:l.ignoreDepthValues===!1,resolveStencilBuffer:l.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),n._animation.setAnimationLoop(this._onAnimationFrame),n._animation.setContext(e),n._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const n=this._session;if(n===null)return;const i=e.near,s=e.far,o=this._cameraXR,a=this._cameraL,l=this._cameraR;o.near=l.near=a.near=i,o.far=l.far=a.far=s,o.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==o.near||this._currentDepthFar!==o.far)&&(n.updateRenderState({depthNear:o.near,depthFar:o.far}),this._currentDepthNear=o.near,this._currentDepthFar=o.far),o.layers.mask=e.layers.mask|6,a.layers.mask=o.layers.mask&3,l.layers.mask=o.layers.mask&5;const c=e.parent,u=o.cameras;f0(o,c);for(let h=0;h<u.length;h++)f0(u[h],c);u.length===2?Fk(o,a,l):o.projectionMatrix.copy(a.projectionMatrix),Ok(e,o,c)}_getController(e){let n=this._controllers[e];return n===void 0&&(n=new ph,this._controllers[e]=n),n}}function Fk(r,e,n){h0.setFromMatrixPosition(e.matrixWorld),d0.setFromMatrixPosition(n.matrixWorld);const i=h0.distanceTo(d0),s=e.projectionMatrix.elements,o=n.projectionMatrix.elements,a=s[14]/(s[10]-1),l=s[14]/(s[10]+1),c=(s[9]+1)/s[5],u=(s[9]-1)/s[5],h=(s[8]-1)/s[0],d=(o[8]+1)/o[0],f=a*h,p=a*d,m=i/(-h+d),y=m*-h;if(e.matrixWorld.decompose(r.position,r.quaternion,r.scale),r.translateX(y),r.translateZ(m),r.matrixWorld.compose(r.position,r.quaternion,r.scale),r.matrixWorldInverse.copy(r.matrixWorld).invert(),s[10]===-1)r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const _=a+m,g=l+m,v=f-y,x=p+(i-y),T=c*l/g*_,b=u*l/g*_;r.projectionMatrix.makePerspective(v,x,T,b,_,g),r.projectionMatrixInverse.copy(r.projectionMatrix).invert()}}function f0(r,e){e===null?r.matrixWorld.copy(r.matrix):r.matrixWorld.multiplyMatrices(e.matrixWorld,r.matrix),r.matrixWorldInverse.copy(r.matrixWorld).invert()}function Ok(r,e,n){n===null?r.matrix.copy(e.matrixWorld):(r.matrix.copy(n.matrixWorld),r.matrix.invert(),r.matrix.multiply(e.matrixWorld)),r.matrix.decompose(r.position,r.quaternion,r.scale),r.updateMatrixWorld(!0),r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse),r.isPerspectiveCamera&&(r.fov=mo*2*Math.atan(1/r.projectionMatrix.elements[5]),r.zoom=1)}function Bk(r){const e=this._controllerInputSources.indexOf(r.inputSource);if(e===-1)return;const n=this._controllers[e];if(n!==void 0){const i=this.getReferenceSpace();n.update(r.inputSource,r.frame,i),n.dispatchEvent({type:r.type,data:r.inputSource})}}function kk(){const r=this._session,e=this._renderer;r.removeEventListener("select",this._onSessionEvent),r.removeEventListener("selectstart",this._onSessionEvent),r.removeEventListener("selectend",this._onSessionEvent),r.removeEventListener("squeeze",this._onSessionEvent),r.removeEventListener("squeezestart",this._onSessionEvent),r.removeEventListener("squeezeend",this._onSessionEvent),r.removeEventListener("end",this._onSessionEnd),r.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let n=0;n<this._controllers.length;n++){const i=this._controllerInputSources[n];i!==null&&(this._controllerInputSources[n]=null,this._controllers[n].disconnect(i))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._sessionUsesLayers===!0)for(const n of this._layers)n.renderTarget=new ec(n.pixelwidth,n.pixelheight,{format:sn,type:nn,depthTexture:new Bi(n.pixelwidth,n.pixelheight,n.stencilBuffer?Mi:Gt,void 0,void 0,void 0,void 0,void 0,void 0,n.stencilBuffer?wi:Ei),stencilBuffer:n.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),n.renderTarget.isXRRenderTarget=!1,n.plane.material=n.material,n.material.map=n.renderTarget.texture,n.material.map.offset.y=1,n.material.map.repeat.y=-1,delete n.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function zk(r){const e=this._controllers,n=this._controllerInputSources;for(let i=0;i<r.removed.length;i++){const s=r.removed[i],o=n.indexOf(s);o>=0&&(n[o]=null,e[o].disconnect(s))}for(let i=0;i<r.added.length;i++){const s=r.added[i];let o=n.indexOf(s);if(o===-1){for(let l=0;l<e.length;l++)if(l>=n.length){n.push(s),o=l;break}else if(n[l]===null){n[l]=s,o=l;break}if(o===-1)break}const a=e[o];a&&a.connect(s)}}function Gk(r){return r.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(r.translation,r.quaternion),width:r.width/2,height:r.height/2,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(r.translation,r.quaternion),radius:r.radius,centralAngle:r.centralAngle,aspectRatio:r.aspectRatio,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1})}function Vk(r,e){if(e===void 0)return;const n=this._cameraXR,i=this._renderer,s=i.backend,o=this._glBaseLayer,a=this.getReferenceSpace(),l=e.getViewerPose(a);if(this._xrFrame=e,l!==null){const c=l.views;this._glBaseLayer!==null&&s.setXRTarget(o.framebuffer);let u=!1;c.length!==n.cameras.length&&(n.cameras.length=0,u=!0);for(let h=0;h<c.length;h++){const d=c[h];let f;if(this._supportsLayers===!0){const m=this._glBinding.getViewSubImage(this._glProjLayer,d);f=m.viewport,h===0&&s.setXRRenderTargetTextures(this._xrRenderTarget,m.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:m.depthStencilTexture)}else f=o.getViewport(d);let p=this._cameras[h];p===void 0&&(p=new wn,p.layers.enable(h),p.viewport=new Qe,this._cameras[h]=p),p.matrix.fromArray(d.transform.matrix),p.matrix.decompose(p.position,p.quaternion,p.scale),p.projectionMatrix.fromArray(d.projectionMatrix),p.projectionMatrixInverse.copy(p.projectionMatrix).invert(),p.viewport.set(f.x,f.y,f.width,f.height),h===0&&(n.matrix.copy(p.matrix),n.matrix.decompose(n.position,n.quaternion,n.scale)),u===!0&&n.cameras.push(p)}i.setOutputRenderTarget(this._xrRenderTarget)}for(let c=0;c<this._controllers.length;c++){const u=this._controllerInputSources[c],h=this._controllers[c];u!==null&&h!==void 0&&h.update(u,e,a)}this._currentAnimationLoop&&this._currentAnimationLoop(r,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const p0=new nd,Zo=new ue,tp=new Qe,np=new $c,ip=new eg,th=new _t,Lr=new Qe;class Hk{constructor(e,n={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:s=!0,depth:o=!0,stencil:a=!1,antialias:l=!1,samples:c=0,getFallback:u=null,colorBufferType:h=An,multiview:d=!1}=n;this.domElement=e.getDomElement(),this.backend=e,this.samples=c||l===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=s,this.logarithmicDepthBuffer=i,this.outputColorSpace=Fn,this.toneMapping=ai,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=o,this.stencil=a,this.info=new EB,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new pS,this.lighting=new Ik,this._getFallback=u,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Qe(0,0,this._width,this._height),this._scissor=new Qe(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Vg(new gn),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const f=this.alpha===!0?0:1;this._clearColor=new Gg(0,0,0,f),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=h,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Mm},this.xr=new Uk(this,d),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(p,m,y)=>{await this.compileAsync(p,m);const _=this._renderLists.get(p,m),g=this._renderContexts.get(p,m,this._renderTarget),v=p.overrideMaterial||y.material,x=this._objects.get(y,v,p,m,_.lightsNode,g,g.clippingContext),{fragmentShader:T,vertexShader:b}=x.getNodeBuilderState();return{fragmentShader:T,vertexShader:b}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,n)=>{let i=this.backend;try{await i.init(this)}catch(s){if(this._getFallback!==null)try{this.backend=i=this._getFallback(s),await i.init(this)}catch(o){n(o);return}else{n(s);return}}this._nodes=new Nk(this,i),this._animation=new gB(this._nodes,this.info),this._attributes=new SB(i),this._background=new j3(this,this._nodes),this._geometries=new MB(this._attributes,this.info),this._textures=new zB(this,i,this.info),this._pipelines=new CB(i,this._nodes),this._bindings=new NB(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new xB(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new LB(this.lighting),this._bundles=new Dk,this._renderContexts=new BB,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,n,i=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const s=this._nodes.nodeFrame,o=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=this._compilationPromises,u=e.isScene===!0?e:p0;i===null&&(i=e);const h=this._renderTarget,d=this._renderContexts.get(i,n,h),f=this._activeMipmapLevel,p=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=p,s.renderId++,s.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new Vh),d.clippingContext.updateGlobal(u,n),u.onBeforeRender(this,e,n,h);const m=this._renderLists.get(e,n);if(m.begin(),this._projectObject(e,n,0,m,d.clippingContext),i!==e&&i.traverseVisible(function(x){x.isLight&&x.layers.test(n.layers)&&m.pushLight(x)}),m.finish(),h!==null){this._textures.updateRenderTarget(h,f);const x=this._textures.get(h);d.textures=x.textures,d.depthTexture=x.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(u,m,d);const y=m.opaque,_=m.transparent,g=m.transparentDoublePass,v=m.lightsNode;this.opaque===!0&&y.length>0&&this._renderObjects(y,n,u,v),this.transparent===!0&&_.length>0&&this._renderTransparents(_,g,n,u,v),s.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=l,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(p)}async renderAsync(e,n){this._initialized===!1&&await this.init(),this._renderScene(e,n)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=pv,this.overrideNodes.modelNormalViewMatrix=mv):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===pv&&this.overrideNodes.modelNormalViewMatrix===mv}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let n=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(n+=`
Reason: ${e.reason}`),console.error(n),this._isDeviceLost=!0}_renderBundle(e,n,i){const{bundleGroup:s,camera:o,renderList:a}=e,l=this._currentRenderContext,c=this._bundles.get(s,o),u=this.backend.get(c);u.renderContexts===void 0&&(u.renderContexts=new Set);const h=s.version!==u.version,d=u.renderContexts.has(l)===!1||h;if(u.renderContexts.add(l),d){this.backend.beginBundle(l),(u.renderObjects===void 0||h)&&(u.renderObjects=[]),this._currentRenderBundle=c;const{transparentDoublePass:f,transparent:p,opaque:m}=a;this.opaque===!0&&m.length>0&&this._renderObjects(m,o,n,i),this.transparent===!0&&p.length>0&&this._renderTransparents(p,f,o,n,i),this._currentRenderBundle=null,this.backend.finishBundle(l,c),u.version=s.version}else{const{renderObjects:f}=u;for(let p=0,m=f.length;p<m;p++){const y=f[p];this._nodes.needsRefresh(y)&&(this._nodes.updateBefore(y),this._nodes.updateForRender(y),this._bindings.updateForRender(y),this._nodes.updateAfter(y))}}this.backend.addBundle(l,c)}render(e,n){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,n);this._renderScene(e,n)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:n}=this,i=e!==ai,s=n!==Ze.workingColorSpace;if(i===!1&&s===!1)return null;const{width:o,height:a}=this.getDrawingBufferSize(Zo),{depth:l,stencil:c}=this;let u=this._frameBufferTarget;u===null&&(u=new yo(o,a,{depthBuffer:l,stencilBuffer:c,type:this._colorBufferType,format:sn,colorSpace:Ze.workingColorSpace,generateMipmaps:!1,minFilter:vn,magFilter:vn,samples:this.samples}),u.isPostProcessingRenderTarget=!0,this._frameBufferTarget=u);const h=this.getOutputRenderTarget();return u.depthBuffer=l,u.stencilBuffer=c,h!==null?u.setSize(h.width,h.height,h.depth):u.setSize(o,a,1),u.viewport.copy(this._viewport),u.scissor.copy(this._scissor),u.viewport.multiplyScalar(this._pixelRatio),u.scissor.multiplyScalar(this._pixelRatio),u.scissorTest=this._scissorTest,u.multiview=h!==null?h.multiview:!1,u.resolveDepthBuffer=h!==null?h.resolveDepthBuffer:!0,u._autoAllocateDepthBuffer=h!==null?h._autoAllocateDepthBuffer:!1,u}_renderScene(e,n,i=!0){if(this._isDeviceLost===!0)return;const s=i?this._getFrameBufferTarget():null,o=this._nodes.nodeFrame,a=o.renderId,l=this._currentRenderContext,c=this._currentRenderObjectFunction,u=e.isScene===!0?e:p0,h=this._renderTarget||this._outputRenderTarget,d=this._activeCubeFace,f=this._activeMipmapLevel;let p;s!==null?(p=s,this.setRenderTarget(p)):p=h;const m=this._renderContexts.get(e,n,p);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,o.renderId=this.info.calls;const y=this.coordinateSystem,_=this.xr;if(n.coordinateSystem!==y&&_.isPresenting===!1&&(n.coordinateSystem=y,n.updateProjectionMatrix(),n.isArrayCamera))for(const F of n.cameras)F.coordinateSystem=y,F.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),n.parent===null&&n.matrixWorldAutoUpdate===!0&&n.updateMatrixWorld(),_.enabled===!0&&_.isPresenting===!0&&(_.cameraAutoUpdate===!0&&_.updateCamera(n),n=_.getCamera());let g=this._viewport,v=this._scissor,x=this._pixelRatio;p!==null&&(g=p.viewport,v=p.scissor,x=1),this.getDrawingBufferSize(Zo),tp.set(0,0,Zo.width,Zo.height);const T=g.minDepth===void 0?0:g.minDepth,b=g.maxDepth===void 0?1:g.maxDepth;m.viewportValue.copy(g).multiplyScalar(x).floor(),m.viewportValue.width>>=f,m.viewportValue.height>>=f,m.viewportValue.minDepth=T,m.viewportValue.maxDepth=b,m.viewport=m.viewportValue.equals(tp)===!1,m.scissorValue.copy(v).multiplyScalar(x).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(tp)===!1,m.scissorValue.width>>=f,m.scissorValue.height>>=f,m.clippingContext||(m.clippingContext=new Vh),m.clippingContext.updateGlobal(u,n),u.onBeforeRender(this,e,n,p);const S=n.isArrayCamera?ip:np;n.isArrayCamera||(th.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),S.setFromProjectionMatrix(th,n.coordinateSystem,n.reversedDepth));const M=this._renderLists.get(e,n);if(M.begin(),this._projectObject(e,n,0,M,m.clippingContext),M.finish(),this.sortObjects===!0&&M.sort(this._opaqueSort,this._transparentSort),p!==null){this._textures.updateRenderTarget(p,f);const F=this._textures.get(p);m.textures=F.textures,m.depthTexture=F.depthTexture,m.width=F.width,m.height=F.height,m.renderTarget=p,m.depth=p.depthBuffer,m.stencil=p.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=Zo.width,m.height=Zo.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=f,m.height>>=f,m.activeCubeFace=d,m.activeMipmapLevel=f,m.occlusionQueryCount=M.occlusionQueryCount,m.scissorValue.max(Lr.set(0,0,0,0)),m.scissorValue.x+m.scissorValue.width>m.width&&(m.scissorValue.width=Math.max(m.width-m.scissorValue.x,0)),m.scissorValue.y+m.scissorValue.height>m.height&&(m.scissorValue.height=Math.max(m.height-m.scissorValue.y,0)),this._background.update(u,M,m),m.camera=n,this.backend.beginRender(m);const{bundles:A,lightsNode:E,transparentDoublePass:w,transparent:N,opaque:D}=M;return A.length>0&&this._renderBundles(A,u,E),this.opaque===!0&&D.length>0&&this._renderObjects(D,n,u,E),this.transparent===!0&&N.length>0&&this._renderTransparents(N,w,n,u,E),this.backend.finishRender(m),o.renderId=a,this._currentRenderContext=l,this._currentRenderObjectFunction=c,s!==null&&(this.setRenderTarget(h,d,f),this._renderOutput(p)),u.onAfterRender(this,e,n,p),m}_setXRLayerSize(e,n){this._width=e,this._height=n,this.setViewport(0,0,e,n)}_renderOutput(e){const n=this._quad;this._nodes.hasOutputChange(e.texture)&&(n.material.fragmentNode=this._nodes.getOutputNode(e.texture),n.material.needsUpdate=!0);const i=this.autoClear,s=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(n,n.camera,!1),this.autoClear=i,this.xr.enabled=s}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,n,i){this.xr&&this.xr.isPresenting||(this._width=e,this._height=n,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(n*i),this.setViewport(0,0,e,n),this._initialized&&this.backend.updateSize())}setSize(e,n,i=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=n,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(n*this._pixelRatio),i===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=n+"px"),this.setViewport(0,0,e,n),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const n=this._scissor;return e.x=n.x,e.y=n.y,e.width=n.width,e.height=n.height,e}setScissor(e,n,i,s){const o=this._scissor;e.isVector4?o.copy(e):o.set(e,n,i,s)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,n,i,s,o=0,a=1){const l=this._viewport;e.isVector4?l.copy(e):l.set(e,n,i,s),l.minDepth=o,l.maxDepth=a}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,n=1){this._clearColor.set(e),this._clearColor.a=n}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const n=this._currentRenderContext;return n&&this.backend.isOccluded(n,e)}clear(e=!0,n=!0,i=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,n,i);const s=this._renderTarget||this._getFrameBufferTarget();let o=null;if(s!==null){this._textures.updateRenderTarget(s);const a=this._textures.get(s);o=this._renderContexts.getForClear(s),o.textures=a.textures,o.depthTexture=a.depthTexture,o.width=a.width,o.height=a.height,o.renderTarget=s,o.depth=s.depthBuffer,o.stencil=s.stencilBuffer,o.clearColorValue=this.backend.getClearColor(),o.activeCubeFace=this.getActiveCubeFace(),o.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,n,i,o),s!==null&&this._renderTarget===null&&this._renderOutput(s)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,n=!0,i=!0){this._initialized===!1&&await this.init(),this.clear(e,n,i)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:ai}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:Ze.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this._initialized===!0&&(this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,n=0,i=0){this._renderTarget=e,this._activeCubeFace=n,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,n=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const i=this._nodes.nodeFrame,s=i.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,i.renderId=this.info.calls;const o=this.backend,a=this._pipelines,l=this._bindings,c=this._nodes,u=Array.isArray(e)?e:[e];if(u[0]===void 0||u[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");o.beginCompute(e);for(const h of u){if(a.has(h)===!1){const p=()=>{h.removeEventListener("dispose",p),a.delete(h),l.delete(h),c.delete(h)};h.addEventListener("dispose",p);const m=h.onInitFunction;m!==null&&m.call(h,{renderer:this})}c.updateForCompute(h),l.updateForCompute(h);const d=l.getForCompute(h),f=a.getForCompute(h,d);o.compute(e,h,d,f,n)}o.finishCompute(e),i.renderId=s}async computeAsync(e,n=null){this._initialized===!1&&await this.init(),this.compute(e,n)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,n=null){if(n!==null)if(n.isVector2)n=Lr.set(n.x,n.y,e.image.width,e.image.height).floor();else if(n.isVector4)n=Lr.copy(n).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else n=Lr.set(0,0,e.image.width,e.image.height);let i=this._currentRenderContext,s;i!==null?s=i.renderTarget:(s=this._renderTarget||this._getFrameBufferTarget(),s!==null&&(this._textures.updateRenderTarget(s),i=this._textures.get(s))),this._textures.updateTexture(e,{renderTarget:s}),this.backend.copyFramebufferToTexture(e,i,n)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){this._textures.updateTexture(e),this._textures.updateTexture(n),this.backend.copyTextureToTexture(e,n,i,s,o,a)}async readRenderTargetPixelsAsync(e,n,i,s,o,a=0,l=0){return this.backend.copyTextureToBuffer(e.textures[a],n,i,s,o,l)}_projectObject(e,n,i,s,o){if(e.visible===!1)return;if(e.layers.test(n.layers)){if(e.isGroup)i=e.renderOrder,e.isClippingGroup&&e.enabled&&(o=o.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(n);else if(e.isLight)s.pushLight(e);else if(e.isSprite){const c=n.isArrayCamera?ip:np;if(!e.frustumCulled||c.intersectsSprite(e,n)){this.sortObjects===!0&&Lr.setFromMatrixPosition(e.matrixWorld).applyMatrix4(th);const{geometry:u,material:h}=e;h.visible&&s.push(e,u,h,i,Lr.z,null,o)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const c=n.isArrayCamera?ip:np;if(!e.frustumCulled||c.intersectsObject(e,n)){const{geometry:u,material:h}=e;if(this.sortObjects===!0&&(u.boundingSphere===null&&u.computeBoundingSphere(),Lr.copy(u.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(th)),Array.isArray(h)){const d=u.groups;for(let f=0,p=d.length;f<p;f++){const m=d[f],y=h[m.materialIndex];y&&y.visible&&s.push(e,u,y,i,Lr.z,m,o)}}else h.visible&&s.push(e,u,h,i,Lr.z,null,o)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const c=s;s=this._renderLists.get(e,n),s.begin(),c.pushBundle({bundleGroup:e,camera:n,renderList:s}),s.finish()}const l=e.children;for(let c=0,u=l.length;c<u;c++)this._projectObject(l[c],n,i,s,o)}_renderBundles(e,n,i){for(const s of e)this._renderBundle(s,n,i)}_renderTransparents(e,n,i,s,o){if(n.length>0){for(const{material:a}of n)a.side=Ut;this._renderObjects(n,i,s,o,"backSide");for(const{material:a}of n)a.side=Ti;this._renderObjects(e,i,s,o);for(const{material:a}of n)a.side=Bn}else this._renderObjects(e,i,s,o)}_renderObjects(e,n,i,s,o=null){for(let a=0,l=e.length;a<l;a++){const{object:c,geometry:u,material:h,group:d,clippingContext:f}=e[a];this._currentRenderObjectFunction(c,i,n,u,h,d,s,f,o)}}renderObject(e,n,i,s,o,a,l,c=null,u=null){let h,d,f;if(e.onBeforeRender(this,n,i,s,o,a),o.allowOverride===!0&&n.overrideMaterial!==null){const p=n.overrideMaterial;o.positionNode&&o.positionNode.isNode&&(h=p.positionNode,p.positionNode=o.positionNode),p.alphaTest=o.alphaTest,p.alphaMap=o.alphaMap,p.transparent=o.transparent||o.transmission>0,p.isShadowPassMaterial&&(p.side=o.shadowSide===null?o.side:o.shadowSide,o.depthNode&&o.depthNode.isNode&&(f=p.depthNode,p.depthNode=o.depthNode),o.castShadowNode&&o.castShadowNode.isNode&&(d=p.colorNode,p.colorNode=o.castShadowNode),o.castShadowPositionNode&&o.castShadowPositionNode.isNode&&(h=p.positionNode,p.positionNode=o.castShadowPositionNode)),o=p}o.transparent===!0&&o.side===Bn&&o.forceSinglePass===!1?(o.side=Ut,this._handleObjectFunction(e,o,n,i,l,a,c,"backSide"),o.side=Ti,this._handleObjectFunction(e,o,n,i,l,a,c,u),o.side=Bn):this._handleObjectFunction(e,o,n,i,l,a,c,u),h!==void 0&&(n.overrideMaterial.positionNode=h),f!==void 0&&(n.overrideMaterial.depthNode=f),d!==void 0&&(n.overrideMaterial.colorNode=d),e.onAfterRender(this,n,i,s,o,a)}_renderObjectDirect(e,n,i,s,o,a,l,c){const u=this._objects.get(e,n,i,s,o,this._currentRenderContext,l,c);u.drawRange=e.geometry.drawRange,u.group=a;const h=this._nodes.needsRefresh(u);h&&(this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u)),this._pipelines.updateForRender(u),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(u),u.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(u,this.info),h&&this._nodes.updateAfter(u)}_createObjectPipeline(e,n,i,s,o,a,l,c){const u=this._objects.get(e,n,i,s,o,this._currentRenderContext,l,c);u.drawRange=e.geometry.drawRange,u.group=a,this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u),this._pipelines.getForRender(u,this._compilationPromises),this._nodes.updateAfter(u)}get compile(){return this.compileAsync}}class mS{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Wk(r){return r+(ys-r%ys)%ys}class gS extends mS{constructor(e,n=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=n}get byteLength(){return Wk(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class _S extends gS{constructor(e,n=null){super(e,n),this.isUniformBuffer=!0}}let $k=0;class yS extends _S{constructor(e,n){super("UniformBuffer_"+$k++,e?e.value:null),this.nodeUniform=e,this.groupNode=n}get buffer(){return this.nodeUniform.value}}class jk extends _S{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const n=this.uniforms.indexOf(e);return n!==-1&&this.uniforms.splice(n,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const n=this.byteLength;e=new Float32Array(new ArrayBuffer(n)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let n=0;for(let i=0,s=this.uniforms.length;i<s;i++){const o=this.uniforms[i],a=o.boundary,l=o.itemSize*e,c=n%ys,u=c%a,h=c+u;n+=u,h!==0&&ys-h<l&&(n+=ys-h),o.offset=n/e,n+=l}return Math.ceil(n/ys)*ys}update(){let e=!1;for(const n of this.uniforms)this.updateByType(n)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o]!==s){const l=this._getBufferForType(a);l[o]=i[o]=s,n=!0}return n}updateVector2(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,n=!0}return n}updateVector3(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y||i[o+2]!==s.z){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,l[o+2]=i[o+2]=s.z,n=!0}return n}updateVector4(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y||i[o+2]!==s.z||i[o+4]!==s.w){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,l[o+2]=i[o+2]=s.z,l[o+3]=i[o+3]=s.w,n=!0}return n}updateColor(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset;if(i[o+0]!==s.r||i[o+1]!==s.g||i[o+2]!==s.b){const a=this.buffer;a[o+0]=i[o+0]=s.r,a[o+1]=i[o+1]=s.g,a[o+2]=i[o+2]=s.b,n=!0}return n}updateMatrix3(e){let n=!1;const i=this.values,s=e.getValue().elements,o=e.offset;if(i[o+0]!==s[0]||i[o+1]!==s[1]||i[o+2]!==s[2]||i[o+4]!==s[3]||i[o+5]!==s[4]||i[o+6]!==s[5]||i[o+8]!==s[6]||i[o+9]!==s[7]||i[o+10]!==s[8]){const a=this.buffer;a[o+0]=i[o+0]=s[0],a[o+1]=i[o+1]=s[1],a[o+2]=i[o+2]=s[2],a[o+4]=i[o+4]=s[3],a[o+5]=i[o+5]=s[4],a[o+6]=i[o+6]=s[5],a[o+8]=i[o+8]=s[6],a[o+9]=i[o+9]=s[7],a[o+10]=i[o+10]=s[8],n=!0}return n}updateMatrix4(e){let n=!1;const i=this.values,s=e.getValue().elements,o=e.offset;return Xk(i,s,o)===!1&&(this.buffer.set(s,o),qk(i,s,o),n=!0),n}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function qk(r,e,n){for(let i=0,s=e.length;i<s;i++)r[n+i]=e[i]}function Xk(r,e,n){for(let i=0,s=e.length;i<s;i++)if(r[n+i]!==e[i])return!1;return!0}let Yk=0;class vS extends jk{constructor(e,n){super(e),this.id=Yk++,this.groupNode=n,this.isNodeUniformsGroup=!0}}class xS extends mS{constructor(e,n){super(e),this.texture=n,this.version=n?n.version:0,this.generation=null,this.isSampler=!0}set texture(e){if(this._texture===e)return;const n=()=>{this._texture=null,this.generation=null,this.version=0};this._texture&&this._texture.removeEventListener("dispose",n),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",n)}get texture(){return this._texture}update(){const{texture:e,version:n}=this;return n!==e.version?(this.version=e.version,!0):!1}clone(){const e=super.clone();return e._texture=null,e.texture=this.texture,e}}let Kk=0;class Zk extends xS{constructor(e,n){super(e,n),this.id=Kk++,this.store=!1,this.isSampledTexture=!0}}class xd extends Zk{constructor(e,n,i,s=null){super(e,n?n.value:null),this.textureNode=n,this.groupNode=i,this.access=s}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class bS extends xd{constructor(e,n,i,s=null){super(e,n,i,s),this.isSampledCubeTexture=!0}}class rm extends xd{constructor(e,n,i,s=null){super(e,n,i,s),this.isSampledTexture3D=!0}}const m0={textureDimensions:"textureSize",equals:"equal",bitcast_float_int:"floatBitsToInt",bitcast_int_float:"intBitsToFloat",bitcast_uint_float:"uintBitsToFloat",bitcast_float_uint:"floatBitsToUint"},Qk={low:"lowp",medium:"mediump",high:"highp"},g0={swizzleAssign:!0,storageBuffer:!1},_0={perspective:"smooth",linear:"noperspective"},y0={centroid:"centroid"},v0=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class Jk extends dS{constructor(e,n){super(e,n,new Ck),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==ni}getMethod(e){return m0[e]||e}getBitcastMethod(e,n){return m0[`bitcast_${n}_${e}`]}getTernary(e,n,i){return`${e} ? ${n} : ${i}`}getOutputStructName(){return""}buildFunctionCode(e){const n=e.layout,i=this.flowShaderNode(e),s=[];for(const a of n.inputs)s.push(this.getType(a.type)+" "+a.name);return`${this.getType(n.type)} ${n.name}( ${s.join(", ")} ) {

	${i.vars}

${i.code}
	return ${i.result};

}`}setupPBO(e){const n=e.value;if(n.pbo===void 0){const i=n.array,s=n.count*n.itemSize,{itemSize:o}=n,a=n.array.constructor.name.toLowerCase().includes("int");let l=a?rl:Vc;o===2?l=a?sl:qr:o===3?l=a?YM:Gc:o===4&&(l=a?ol:sn);const c={Float32Array:ln,Uint8Array:nn,Uint16Array:Qi,Uint32Array:Gt,Int8Array:ao,Int16Array:lo,Int32Array:En,Uint8ClampedArray:nn},u=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/o))));let h=Math.ceil(s/o/u);u*h*o<s&&h++;const d=u*h*o,f=new i.constructor(d);f.set(i,0),n.array=f;const p=new ZE(n.array,u,h,l,c[n.array.constructor.name]||ln);p.needsUpdate=!0,p.isPBOTexture=!0;const m=new hl(p,null,null);m.setPrecision("high"),n.pboNode=m,n.pbo=m.value,this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,n=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?n.charAt(0)+"_"+e.name:super.getPropertyName(e,n)}generatePBO(e){const{node:n,indexNode:i}=e,s=n.value;if(this.renderer.backend.has(s)){const h=this.renderer.backend.get(s);h.pbo=s.pbo}const o=this.getUniformFromNode(s.pboNode,"texture",this.shaderStage,this.context.nodeName),a=this.getPropertyName(o);this.increaseUsage(i);const l=i.build(this,"uint"),c=this.getDataFromNode(e);let u=c.propertyName;if(u===void 0){const h=this.getVarFromNode(e);u=this.getPropertyName(h);const d=this.getDataFromNode(n);let f=d.propertySizeName;f===void 0&&(f=u+"Size",this.getVarFromNode(n,f,"uint"),this.addLineFlowCode(`${f} = uint( textureSize( ${a}, 0 ).x )`,e),d.propertySizeName=f);const{itemSize:p}=s,m="."+ul.join("").slice(0,p),y=`ivec2(${l} % ${f}, ${l} / ${f})`,_=this.generateTextureLoad(null,a,y,null,null,"0");let g="vec4";s.pbo.type===Gt?g="uvec4":s.pbo.type===En&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${_})${m}`,e),c.propertyName=u}return u}generateTextureLoad(e,n,i,s,o,a="0"){let l;return s?o?l=`texelFetchOffset( ${n}, ivec3( ${i}, ${s} ), ${a}, ${o} )`:l=`texelFetch( ${n}, ivec3( ${i}, ${s} ), ${a} )`:o?l=`texelFetchOffset( ${n}, ${i}, ${a}, ${o} )`:l=`texelFetch( ${n}, ${i}, ${a} )`,e!==null&&e.isDepthTexture&&(l+=".x"),l}generateTexture(e,n,i,s,o){return s&&(i=`vec3( ${i}, ${s} )`),e.isDepthTexture?o?`textureOffset( ${n}, ${i}, ${o} ).x`:`texture( ${n}, ${i} ).x`:o?`textureOffset( ${n}, ${i}, ${o} )`:`texture( ${n}, ${i} )`}generateTextureLevel(e,n,i,s,o){return o?`textureLodOffset( ${n}, ${i}, ${s}, ${o} )`:`textureLod( ${n}, ${i}, ${s} )`}generateTextureBias(e,n,i,s,o){return o?`textureOffset( ${n}, ${i}, ${o}, ${s} )`:`texture( ${n}, ${i}, ${s} )`}generateTextureGrad(e,n,i,s,o){return o?`textureGradOffset( ${n}, ${i}, ${s[0]}, ${s[1]}, ${o} )`:`textureGrad( ${n}, ${i}, ${s[0]}, ${s[1]} )`}generateTextureCompare(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return o?a?`textureOffset( ${n}, vec4( ${i}, ${o}, ${s} ), ${a} )`:`texture( ${n}, vec4( ${i}, ${o}, ${s} ) )`:a?`textureOffset( ${n}, vec3( ${i}, ${s} ), ${a} )`:`texture( ${n}, vec3( ${i}, ${s} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${l} shader.`)}getVars(e){const n=[],i=this.vars[e];if(i!==void 0)for(const s of i)n.push(`${this.getVar(s.type,s.name,s.count)};`);return n.join(`
	`)}getUniforms(e){const n=this.uniforms[e],i=[],s={};for(const a of n){let l=null,c=!1;if(a.type==="texture"||a.type==="texture3D"){const h=a.node.value;let d="";(h.isDataTexture===!0||h.isData3DTexture===!0)&&(h.type===Gt?d="u":h.type===En&&(d="i")),a.type==="texture3D"&&h.isArrayTexture===!1?l=`${d}sampler3D ${a.name};`:h.compareFunction?h.isArrayTexture===!0?l=`sampler2DArrayShadow ${a.name};`:l=`sampler2DShadow ${a.name};`:h.isArrayTexture===!0||h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0?l=`${d}sampler2DArray ${a.name};`:l=`${d}sampler2D ${a.name};`}else if(a.type==="cubeTexture")l=`samplerCube ${a.name};`;else if(a.type==="buffer"){const h=a.node,d=this.getType(h.bufferType),f=h.bufferCount,p=f>0?f:"";l=`${h.name} {
	${d} ${a.name}[${p}];
};
`}else l=`${this.getVectorType(a.type)} ${this.getPropertyName(a,e)};`,c=!0;const u=a.node.precision;if(u!==null&&(l=Qk[u]+" "+l),c){l="	"+l;const h=a.groupNode.name;(s[h]||(s[h]=[])).push(l)}else l="uniform "+l,i.push(l)}let o="";for(const a in s){const l=s[a];o+=this._getGLSLUniformStruct(e+"_"+a,l.join(`
`))+`
`}return o+=i.join(`
`),o}getTypeFromAttribute(e){let n=super.getTypeFromAttribute(e);if(/^[iu]/.test(n)&&e.gpuType!==En){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const s=i.array;s instanceof Uint32Array||s instanceof Int32Array||(n=n.slice(1))}return n}getAttributes(e){let n="";if(e==="vertex"||e==="compute"){const i=this.getAttributesArray();let s=0;for(const o of i)n+=`layout( location = ${s++} ) in ${o.type} ${o.name};
`}return n}getStructMembers(e){const n=[];for(const i of e.members)n.push(`	${i.type} ${i.name};`);return n.join(`
`)}getStructs(e){const n=[],i=this.structs[e],s=[];for(const o of i)if(o.output)for(const a of o.members)s.push(`layout( location = ${a.index} ) out ${a.type} ${a.name};`);else{let a="struct "+o.name+` {
`;a+=this.getStructMembers(o),a+=`
};
`,n.push(a)}return s.length===0&&s.push("layout( location = 0 ) out vec4 fragColor;"),`
`+s.join(`
`)+`

`+n.join(`
`)}getVaryings(e){let n="";const i=this.varyings;if(e==="vertex"||e==="compute")for(const s of i){e==="compute"&&(s.needsInterpolation=!0);const o=this.getType(s.type);if(s.needsInterpolation)if(s.interpolationType){const a=_0[s.interpolationType]||s.interpolationType,l=y0[s.interpolationSampling]||"";n+=`${a} ${l} out ${o} ${s.name};
`}else{const a=o.includes("int")||o.includes("uv")||o.includes("iv")?"flat ":"";n+=`${a}out ${o} ${s.name};
`}else n+=`${o} ${s.name};
`}else if(e==="fragment"){for(const s of i)if(s.needsInterpolation){const o=this.getType(s.type);if(s.interpolationType){const a=_0[s.interpolationType]||s.interpolationType,l=y0[s.interpolationSampling]||"";n+=`${a} ${l} in ${o} ${s.name};
`}else{const a=o.includes("int")||o.includes("uv")||o.includes("iv")?"flat ":"";n+=`${a}in ${o} ${s.name};
`}}}for(const s of this.builtins[e])n+=`${s};
`;return n}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((i,s)=>i*s,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,n,i=this.shaderStage){const s=this.extensions[i]||(this.extensions[i]=new Map);s.has(e)===!1&&s.set(e,{name:e,behavior:n})}getExtensions(e){const n=[];if(e==="vertex"){const s=this.renderer.backend.extensions;this.object.isBatchedMesh&&s.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(i!==void 0)for(const{name:s,behavior:o}of i.values())n.push(`#extension ${s} : ${o}`);return n.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let n=g0[e];if(n===void 0){let i;switch(n=!1,e){case"float32Filterable":i="OES_texture_float_linear";break;case"clipDistance":i="WEBGL_clip_cull_distance";break}if(i!==void 0){const s=this.renderer.backend.extensions;s.has(i)&&(s.get(i),n=!0)}g0[e]=n}return n}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,n){this.transforms.push({varyingName:e,attributeNode:n})}getTransforms(){const e=this.transforms;let n="";for(let i=0;i<e.length;i++){const s=e[i],o=this.getPropertyName(s.attributeNode);o&&(n+=`${s.varyingName} = ${o};
	`)}return n}_getGLSLUniformStruct(e,n){return`
layout( std140 ) uniform ${e} {
${n}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${v0}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${v0}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const n in e){let i=`// code

`;i+=this.flowCode[n];const s=this.flowNodes[n],o=s[s.length-1];for(const l of s){const c=this.getFlowData(l),u=l.name;u&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${u}
	`),i+=`${c.code}
	`,l===o&&n!=="compute"&&(i+=`// result
	`,n==="vertex"?(i+="gl_Position = ",i+=`${c.result};`):n==="fragment"&&(l.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${c.result};`)))}const a=e[n];a.extensions=this.getExtensions(n),a.uniforms=this.getUniforms(n),a.attributes=this.getAttributes(n),a.varyings=this.getVaryings(n),a.vars=this.getVars(n),a.structs=this.getStructs(n),a.codes=this.getCodes(n),a.transforms=this.getTransforms(n),a.flow=i}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,n,i,s=null){const o=super.getUniformFromNode(e,n,i,s),a=this.getDataFromNode(e,i,this.globalCache);let l=a.uniformGPU;if(l===void 0){const c=e.groupNode,u=c.name,h=this.getBindGroupArray(u,i);if(n==="texture")l=new xd(o.name,o.node,c),h.push(l);else if(n==="cubeTexture")l=new bS(o.name,o.node,c),h.push(l);else if(n==="texture3D")l=new rm(o.name,o.node,c),h.push(l);else if(n==="buffer"){e.name=`NodeBuffer_${e.id}`,o.name=`buffer${e.id}`;const d=new yS(e,c);d.name=e.name,h.push(d),l=d}else{const d=this.uniformGroups[i]||(this.uniformGroups[i]={});let f=d[u];f===void 0&&(f=new vS(i+"_"+u,c),d[u]=f,h.push(f)),l=this.getNodeUniform(o,n),f.addUniform(l)}a.uniformGPU=l}return o}}let rp=null,Qo=null;class TS{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}getTimestampUID(e){const n=this.get(e);let i=e.isComputeNode===!0?"c":"r";return i+=":"+n.frameCalls+":"+e.id,i}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Ai("WebGPURenderer: Timestamp tracking is disabled.");return}const n=this.timestampQueryPool[e];if(!n){Ai(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const i=await n.resolveQueriesAsync();return this.renderer.info[e].timestamp=i,i}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return rp=rp||new ue,this.renderer.getDrawingBufferSize(rp)}setScissorTest(){}getClearColor(){const e=this.renderer;return Qo=Qo||new Gg,e.getClearColor(Qo),Qo.getRGB(Qo),Qo}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:wx(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${il} webgpu`),this.domElement=e),e}set(e,n){this.data.set(e,n)}get(e){let n=this.data.get(e);return n===void 0&&(n={},this.data.set(e,n)),n}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let ez=0;class tz{constructor(e,n){this.buffers=[e.bufferGPU,n],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class nz{constructor(e){this.backend=e}createAttribute(e,n){const i=this.backend,{gl:s}=i,o=e.array,a=e.usage||s.STATIC_DRAW,l=e.isInterleavedBufferAttribute?e.data:e,c=i.get(l);let u=c.bufferGPU;u===void 0&&(u=this._createBuffer(s,n,o,a),c.bufferGPU=u,c.bufferType=n,c.version=l.version);let h;if(o instanceof Float32Array)h=s.FLOAT;else if(typeof Float16Array<"u"&&o instanceof Float16Array)h=s.HALF_FLOAT;else if(o instanceof Uint16Array)e.isFloat16BufferAttribute?h=s.HALF_FLOAT:h=s.UNSIGNED_SHORT;else if(o instanceof Int16Array)h=s.SHORT;else if(o instanceof Uint32Array)h=s.UNSIGNED_INT;else if(o instanceof Int32Array)h=s.INT;else if(o instanceof Int8Array)h=s.BYTE;else if(o instanceof Uint8Array)h=s.UNSIGNED_BYTE;else if(o instanceof Uint8ClampedArray)h=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+o);let d={bufferGPU:u,bufferType:n,type:h,byteLength:o.byteLength,bytesPerElement:o.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:h===s.INT||h===s.UNSIGNED_INT||e.gpuType===En,id:ez++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const f=this._createBuffer(s,n,o,a);d=new tz(d,f)}i.set(e,d)}updateAttribute(e){const n=this.backend,{gl:i}=n,s=e.array,o=e.isInterleavedBufferAttribute?e.data:e,a=n.get(o),l=a.bufferType,c=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(l,a.bufferGPU),c.length===0)i.bufferSubData(l,0,s);else{for(let u=0,h=c.length;u<h;u++){const d=c[u];i.bufferSubData(l,d.start*s.BYTES_PER_ELEMENT,s,d.start,d.count)}o.clearUpdateRanges()}i.bindBuffer(l,null),a.version=o.version}destroyAttribute(e){const n=this.backend,{gl:i}=n;e.isInterleavedBufferAttribute&&n.delete(e.data);const s=n.get(e);i.deleteBuffer(s.bufferGPU),n.delete(e)}async getArrayBufferAsync(e){const n=this.backend,{gl:i}=n,s=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:o}=n.get(s),a=e.array,l=a.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,o);const c=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,c),i.bufferData(i.COPY_WRITE_BUFFER,l,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,l),await n.utils._clientWaitAsync();const u=new e.array.constructor(a.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,c),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,u),i.deleteBuffer(c),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,n,i,s){const o=e.createBuffer();return e.bindBuffer(n,o),e.bufferData(n,i,s),e.bindBuffer(n,null),o}}let sp,Gl;class iz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;sp={[kn]:e.FUNC_ADD,[Em]:e.FUNC_SUBTRACT,[wm]:e.FUNC_REVERSE_SUBTRACT},Gl={[Br]:e.ZERO,[Am]:e.ONE,[Rm]:e.SRC_COLOR,[mc]:e.SRC_ALPHA,[Im]:e.SRC_ALPHA_SATURATE,[Dm]:e.DST_COLOR,[Nm]:e.DST_ALPHA,[Cm]:e.ONE_MINUS_SRC_COLOR,[gc]:e.ONE_MINUS_SRC_ALPHA,[Lm]:e.ONE_MINUS_DST_COLOR,[Pm]:e.ONE_MINUS_DST_ALPHA};const n=e.getParameter(e.SCISSOR_BOX),i=e.getParameter(e.VIEWPORT);this.currentScissor=new Qe().fromArray(n),this.currentViewport=new Qe().fromArray(i),this._tempVec4=new Qe}enable(e){const{enabled:n}=this;n[e]!==!0&&(this.gl.enable(e),n[e]=!0)}disable(e){const{enabled:n}=this;n[e]!==!1&&(this.gl.disable(e),n[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:n}=this;e?n.frontFace(n.CW):n.frontFace(n.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:n}=this;e!==fx?(this.enable(n.CULL_FACE),e!==this.currentCullFace&&(e===Cp?n.cullFace(n.BACK):e===px?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):this.disable(n.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:n,gl:i}=this;e!==n&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,n,i,s,o,a,l,c){const{gl:u}=this;if(e===oi){this.currentBlendingEnabled===!0&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e!==ha){if(e!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==kn||this.currentBlendEquationAlpha!==kn)&&(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=kn,this.currentBlendEquationAlpha=kn),c)switch(e){case Si:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case xa:u.blendFunc(u.ONE,u.ONE);break;case ba:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Ta:u.blendFuncSeparate(u.DST_COLOR,u.ONE_MINUS_SRC_ALPHA,u.ZERO,u.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Si:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case xa:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE,u.ONE,u.ONE);break;case ba:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ta:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=c}return}o=o||n,a=a||i,l=l||s,(n!==this.currentBlendEquation||o!==this.currentBlendEquationAlpha)&&(u.blendEquationSeparate(sp[n],sp[o]),this.currentBlendEquation=n,this.currentBlendEquationAlpha=o),(i!==this.currentBlendSrc||s!==this.currentBlendDst||a!==this.currentBlendSrcAlpha||l!==this.currentBlendDstAlpha)&&(u.blendFuncSeparate(Gl[i],Gl[s],Gl[a],Gl[l]),this.currentBlendSrc=i,this.currentBlendDst=s,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=l),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:n}=this;e?this.enable(n.DEPTH_TEST):this.disable(n.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:n}=this;switch(e){case _c:n.depthFunc(n.NEVER);break;case yc:n.depthFunc(n.ALWAYS);break;case vc:n.depthFunc(n.LESS);break;case Es:n.depthFunc(n.LEQUAL);break;case xc:n.depthFunc(n.EQUAL);break;case bc:n.depthFunc(n.GEQUAL);break;case Tc:n.depthFunc(n.GREATER);break;case Sc:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}this.currentDepthFunc=e}}scissor(e,n,i,s){const o=this._tempVec4.set(e,n,i,s);if(this.currentScissor.equals(o)===!1){const{gl:a}=this;a.scissor(o.x,o.y,o.z,o.w),this.currentScissor.copy(o)}}viewport(e,n,i,s){const o=this._tempVec4.set(e,n,i,s);if(this.currentViewport.equals(o)===!1){const{gl:a}=this;a.viewport(o.x,o.y,o.z,o.w),this.currentViewport.copy(o)}}setScissorTest(e){const n=this.gl;e?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)}setStencilTest(e){const{gl:n}=this;e?this.enable(n.STENCIL_TEST):this.disable(n.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,n,i){(this.currentStencilFunc!==e||this.currentStencilRef!==n||this.currentStencilFuncMask!==i)&&(this.gl.stencilFunc(e,n,i),this.currentStencilFunc=e,this.currentStencilRef=n,this.currentStencilFuncMask=i)}setStencilOp(e,n,i){(this.currentStencilFail!==e||this.currentStencilZFail!==n||this.currentStencilZPass!==i)&&(this.gl.stencilOp(e,n,i),this.currentStencilFail=e,this.currentStencilZFail=n,this.currentStencilZPass=i)}setMaterial(e,n,i){const{gl:s}=this;e.side===Bn?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let o=e.side===Ut;n&&(o=!o),this.setFlipSided(o),e.blending===Si&&e.transparent===!1?this.setBlending(oi):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const a=e.stencilWrite;if(this.setStencilTest(a),a&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE),i>0&&this.currentClippingPlanes!==i)for(let c=0;c<8;c++)c<i?this.enable(12288+c):this.disable(12288+c)}setPolygonOffset(e,n,i){const{gl:s}=this;e?(this.enable(s.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==n||this.currentPolygonOffsetUnits!==i)&&(s.polygonOffset(n,i),this.currentPolygonOffsetFactor=n,this.currentPolygonOffsetUnits=i)):this.disable(s.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,n=null){const i=this.gl;return this.currentVAO!==e||this.currentIndex!==n?(i.bindVertexArray(e),n!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,n),this.currentVAO=e,this.currentIndex=n,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,n){const{gl:i,currentBoundFramebuffers:s}=this;return s[e]!==n?(i.bindFramebuffer(e,n),s[e]=n,e===i.DRAW_FRAMEBUFFER&&(s[i.FRAMEBUFFER]=n),e===i.FRAMEBUFFER&&(s[i.DRAW_FRAMEBUFFER]=n),!0):!1}drawBuffers(e,n){const{gl:i}=this;let s=[],o=!1;if(e.textures!==null){s=this.currentDrawbuffers.get(n),s===void 0&&(s=[],this.currentDrawbuffers.set(n,s));const a=e.textures;if(s.length!==a.length||s[0]!==i.COLOR_ATTACHMENT0){for(let l=0,c=a.length;l<c;l++)s[l]=i.COLOR_ATTACHMENT0+l;s.length=a.length,o=!0}}else s[0]!==i.BACK&&(s[0]=i.BACK,o=!0);o&&i.drawBuffers(s)}activeTexture(e){const{gl:n,currentTextureSlot:i,maxTextures:s}=this;e===void 0&&(e=n.TEXTURE0+s-1),i!==e&&(n.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,n,i){const{gl:s,currentTextureSlot:o,currentBoundTextures:a,maxTextures:l}=this;i===void 0&&(o===null?i=s.TEXTURE0+l-1:i=o);let c=a[i];c===void 0&&(c={type:void 0,texture:void 0},a[i]=c),(c.type!==e||c.texture!==n)&&(o!==i&&(s.activeTexture(i),this.currentTextureSlot=i),s.bindTexture(e,n),c.type=e,c.texture=n)}bindBufferBase(e,n,i){const{gl:s}=this,o=`${e}-${n}`;return this.currentBoundBufferBases[o]!==i?(s.bindBufferBase(e,n,i),this.currentBoundBufferBases[o]=i,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:n,currentBoundTextures:i}=this,s=i[n];s!==void 0&&s.type!==void 0&&(e.bindTexture(s.type,null),s.type=void 0,s.texture=void 0)}}class rz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,n=ni){const{gl:i,extensions:s}=this;let o;const a=Ze.getTransfer(n);if(e===nn)return i.UNSIGNED_BYTE;if(e===Yh)return i.UNSIGNED_SHORT_4_4_4_4;if(e===Kh)return i.UNSIGNED_SHORT_5_5_5_1;if(e===Zh)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===Qh)return i.UNSIGNED_INT_10F_11F_11F_REV;if(e===ao)return i.BYTE;if(e===lo)return i.SHORT;if(e===Qi)return i.UNSIGNED_SHORT;if(e===En)return i.INT;if(e===Gt)return i.UNSIGNED_INT;if(e===ln)return i.FLOAT;if(e===An)return i.HALF_FLOAT;if(e===Om)return i.ALPHA;if(e===Gc)return i.RGB;if(e===sn)return i.RGBA;if(e===Ei)return i.DEPTH_COMPONENT;if(e===wi)return i.DEPTH_STENCIL;if(e===Vc)return i.RED;if(e===rl)return i.RED_INTEGER;if(e===qr)return i.RG;if(e===sl)return i.RG_INTEGER;if(e===ol)return i.RGBA_INTEGER;if(e===vs||e===xs||e===bs||e===Ts)if(a===Ae)if(o=s.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(e===vs)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===xs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===bs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Ts)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=s.get("WEBGL_compressed_texture_s3tc"),o!==null){if(e===vs)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===xs)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===bs)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Ts)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Mc||e===Ec||e===wc||e===Ac)if(o=s.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(e===Mc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ec)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===wc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Ac)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Ea||e===wa||e===Aa)if(o=s.get("WEBGL_compressed_texture_etc"),o!==null){if(e===Ea||e===wa)return a===Ae?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(e===Aa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Ra||e===Ca||e===Na||e===Pa||e===Da||e===La||e===Ia||e===Ua||e===Fa||e===Oa||e===Ba||e===ka||e===za||e===Ga)if(o=s.get("WEBGL_compressed_texture_astc"),o!==null){if(e===Ra)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ca)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Na)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Pa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Da)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===La)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ia)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Ua)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Fa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Oa)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Ba)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ka)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===za)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Ga)return a===Ae?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Va)if(o=s.get("EXT_texture_compression_bptc"),o!==null){if(e===Va)return a===Ae?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===Ha||e===Wa||e===$a||e===ja)if(o=s.get("EXT_texture_compression_rgtc"),o!==null){if(e===Ha)return o.COMPRESSED_RED_RGTC1_EXT;if(e===Wa)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===$a)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===ja)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===Mi?i.UNSIGNED_INT_24_8:i[e]!==void 0?i[e]:null}_clientWaitAsync(){const{gl:e}=this,n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((i,s)=>{function o(){const a=e.clientWaitSync(n,e.SYNC_FLUSH_COMMANDS_BIT,0);if(a===e.WAIT_FAILED){e.deleteSync(n),s();return}if(a===e.TIMEOUT_EXPIRED){requestAnimationFrame(o);return}e.deleteSync(n),i()}o()})}}let x0=!1,nh,op,b0;class sz{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},x0===!1&&(this._init(),x0=!0)}_init(){const e=this.gl;nh={[ho]:e.REPEAT,[fr]:e.CLAMP_TO_EDGE,[fo]:e.MIRRORED_REPEAT},op={[Wt]:e.NEAREST,[Fm]:e.NEAREST_MIPMAP_NEAREST,[jr]:e.NEAREST_MIPMAP_LINEAR,[vn]:e.LINEAR,[da]:e.LINEAR_MIPMAP_NEAREST,[ii]:e.LINEAR_MIPMAP_LINEAR},b0={[Bm]:e.NEVER,[Hm]:e.ALWAYS,[Jh]:e.LESS,[ed]:e.LEQUAL,[km]:e.EQUAL,[Vm]:e.GEQUAL,[zm]:e.GREATER,[Gm]:e.NOTEQUAL}}getGLTextureType(e){const{gl:n}=this;let i;return e.isCubeTexture===!0?i=n.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?i=n.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?i=n.TEXTURE_3D:i=n.TEXTURE_2D,i}getInternalFormat(e,n,i,s,o=!1){const{gl:a,extensions:l}=this;if(e!==null){if(a[e]!==void 0)return a[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let c=n;if(n===a.RED&&(i===a.FLOAT&&(c=a.R32F),i===a.HALF_FLOAT&&(c=a.R16F),i===a.UNSIGNED_BYTE&&(c=a.R8),i===a.UNSIGNED_SHORT&&(c=a.R16),i===a.UNSIGNED_INT&&(c=a.R32UI),i===a.BYTE&&(c=a.R8I),i===a.SHORT&&(c=a.R16I),i===a.INT&&(c=a.R32I)),n===a.RED_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.R8UI),i===a.UNSIGNED_SHORT&&(c=a.R16UI),i===a.UNSIGNED_INT&&(c=a.R32UI),i===a.BYTE&&(c=a.R8I),i===a.SHORT&&(c=a.R16I),i===a.INT&&(c=a.R32I)),n===a.RG&&(i===a.FLOAT&&(c=a.RG32F),i===a.HALF_FLOAT&&(c=a.RG16F),i===a.UNSIGNED_BYTE&&(c=a.RG8),i===a.UNSIGNED_SHORT&&(c=a.RG16),i===a.UNSIGNED_INT&&(c=a.RG32UI),i===a.BYTE&&(c=a.RG8I),i===a.SHORT&&(c=a.RG16I),i===a.INT&&(c=a.RG32I)),n===a.RG_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RG8UI),i===a.UNSIGNED_SHORT&&(c=a.RG16UI),i===a.UNSIGNED_INT&&(c=a.RG32UI),i===a.BYTE&&(c=a.RG8I),i===a.SHORT&&(c=a.RG16I),i===a.INT&&(c=a.RG32I)),n===a.RGB){const u=o?qa:Ze.getTransfer(s);i===a.FLOAT&&(c=a.RGB32F),i===a.HALF_FLOAT&&(c=a.RGB16F),i===a.UNSIGNED_BYTE&&(c=a.RGB8),i===a.UNSIGNED_SHORT&&(c=a.RGB16),i===a.UNSIGNED_INT&&(c=a.RGB32UI),i===a.BYTE&&(c=a.RGB8I),i===a.SHORT&&(c=a.RGB16I),i===a.INT&&(c=a.RGB32I),i===a.UNSIGNED_BYTE&&(c=u===Ae?a.SRGB8:a.RGB8),i===a.UNSIGNED_SHORT_5_6_5&&(c=a.RGB565),i===a.UNSIGNED_SHORT_5_5_5_1&&(c=a.RGB5_A1),i===a.UNSIGNED_SHORT_4_4_4_4&&(c=a.RGB4),i===a.UNSIGNED_INT_5_9_9_9_REV&&(c=a.RGB9_E5),i===a.UNSIGNED_INT_10F_11F_11F_REV&&(c=a.R11F_G11F_B10F)}if(n===a.RGB_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RGB8UI),i===a.UNSIGNED_SHORT&&(c=a.RGB16UI),i===a.UNSIGNED_INT&&(c=a.RGB32UI),i===a.BYTE&&(c=a.RGB8I),i===a.SHORT&&(c=a.RGB16I),i===a.INT&&(c=a.RGB32I)),n===a.RGBA){const u=o?qa:Ze.getTransfer(s);i===a.FLOAT&&(c=a.RGBA32F),i===a.HALF_FLOAT&&(c=a.RGBA16F),i===a.UNSIGNED_BYTE&&(c=a.RGBA8),i===a.UNSIGNED_SHORT&&(c=a.RGBA16),i===a.UNSIGNED_INT&&(c=a.RGBA32UI),i===a.BYTE&&(c=a.RGBA8I),i===a.SHORT&&(c=a.RGBA16I),i===a.INT&&(c=a.RGBA32I),i===a.UNSIGNED_BYTE&&(c=u===Ae?a.SRGB8_ALPHA8:a.RGBA8),i===a.UNSIGNED_SHORT_4_4_4_4&&(c=a.RGBA4),i===a.UNSIGNED_SHORT_5_5_5_1&&(c=a.RGB5_A1)}return n===a.RGBA_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RGBA8UI),i===a.UNSIGNED_SHORT&&(c=a.RGBA16UI),i===a.UNSIGNED_INT&&(c=a.RGBA32UI),i===a.BYTE&&(c=a.RGBA8I),i===a.SHORT&&(c=a.RGBA16I),i===a.INT&&(c=a.RGBA32I)),n===a.DEPTH_COMPONENT&&(i===a.UNSIGNED_SHORT&&(c=a.DEPTH_COMPONENT16),i===a.UNSIGNED_INT&&(c=a.DEPTH_COMPONENT24),i===a.FLOAT&&(c=a.DEPTH_COMPONENT32F)),n===a.DEPTH_STENCIL&&i===a.UNSIGNED_INT_24_8&&(c=a.DEPTH24_STENCIL8),(c===a.R16F||c===a.R32F||c===a.RG16F||c===a.RG32F||c===a.RGBA16F||c===a.RGBA32F)&&l.get("EXT_color_buffer_float"),c}setTextureParameters(e,n){const{gl:i,extensions:s,backend:o}=this,a=Ze.getPrimaries(Ze.workingColorSpace),l=n.colorSpace===ni?null:Ze.getPrimaries(n.colorSpace),c=n.colorSpace===ni||a===l?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,n.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,n.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,c),i.texParameteri(e,i.TEXTURE_WRAP_S,nh[n.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,nh[n.wrapT]),(e===i.TEXTURE_3D||e===i.TEXTURE_2D_ARRAY)&&(n.isArrayTexture||i.texParameteri(e,i.TEXTURE_WRAP_R,nh[n.wrapR])),i.texParameteri(e,i.TEXTURE_MAG_FILTER,op[n.magFilter]);const u=n.mipmaps!==void 0&&n.mipmaps.length>0,h=n.minFilter===vn&&u?ii:n.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,op[h]),n.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,b0[n.compareFunction])),s.has("EXT_texture_filter_anisotropic")===!0){if(n.magFilter===Wt||n.minFilter!==jr&&n.minFilter!==ii||n.type===ln&&s.has("OES_texture_float_linear")===!1)return;if(n.anisotropy>1){const d=s.get("EXT_texture_filter_anisotropic");i.texParameterf(e,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(n.anisotropy,o.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:n,backend:i,defaultTextures:s}=this,o=this.getGLTextureType(e);let a=s[o];a===void 0&&(a=n.createTexture(),i.state.bindTexture(o,a),n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST),s[o]=a),i.set(e,{textureGPU:a,glTextureType:o,isDefault:!0})}createTexture(e,n){const{gl:i,backend:s}=this,{levels:o,width:a,height:l,depth:c}=n,u=s.utils.convert(e.format,e.colorSpace),h=s.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,h,e.colorSpace,e.isVideoTexture),f=i.createTexture(),p=this.getGLTextureType(e);s.state.bindTexture(p,f),this.setTextureParameters(p,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,o,d,a,l,c):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,o,d,a,l,c):e.isVideoTexture||i.texStorage2D(p,o,d,a,l),s.set(e,{textureGPU:f,glTextureType:p,glFormat:u,glType:h,glInternalFormat:d})}copyBufferToTexture(e,n){const{gl:i,backend:s}=this,{textureGPU:o,glTextureType:a,glFormat:l,glType:c}=s.get(n),{width:u,height:h}=n.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),s.state.bindTexture(a,o),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(a,0,0,0,u,h,l,c,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),s.state.unbindTexture()}updateTexture(e,n){const{gl:i}=this,{width:s,height:o}=n,{textureGPU:a,glTextureType:l,glFormat:c,glType:u,glInternalFormat:h}=this.backend.get(e);if(!(e.isRenderTargetTexture||a===void 0))if(this.backend.state.bindTexture(l,a),this.setTextureParameters(l,e),e.isCompressedTexture){const d=e.mipmaps,f=n.image;for(let p=0;p<d.length;p++){const m=d[p];e.isCompressedArrayTexture?e.format!==i.RGBA?c!==null?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,u,m.data):c!==null?i.compressedTexSubImage2D(i.TEXTURE_2D,p,0,0,m.width,m.height,c,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=n.images,f=e.mipmaps;for(let p=0;p<6;p++){const m=ih(d[p]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,0,0,s,o,c,u,m);for(let y=0;y<f.length;y++){const _=f[y],g=ih(_.images[p]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,y+1,0,0,g.width,g.height,c,u,g)}}}else if(e.isDataArrayTexture||e.isArrayTexture){const d=n.image;if(e.layerUpdates.size>0){const f=Ip(d.width,d.height,e.format,e.type);for(const p of e.layerUpdates){const m=d.data.subarray(p*f/d.data.BYTES_PER_ELEMENT,(p+1)*f/d.data.BYTES_PER_ELEMENT);i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,p,d.width,d.height,1,c,u,m)}e.clearLayerUpdates()}else i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,c,u,d.data)}else if(e.isData3DTexture){const d=n.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,c,u,d.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(l,0,h,c,u,n.image);else{const d=e.mipmaps;if(d.length>0)for(let f=0,p=d.length;f<p;f++){const m=d[f],y=ih(m);i.texSubImage2D(l,f,0,0,m.width,m.height,c,u,y)}else{const f=ih(n.image);i.texSubImage2D(l,0,0,0,s,o,c,u,f)}}}generateMipmaps(e){const{gl:n,backend:i}=this,{textureGPU:s,glTextureType:o}=i.get(e);i.state.bindTexture(o,s),n.generateMipmap(o)}deallocateRenderBuffers(e){const{gl:n,backend:i}=this;if(e){const s=i.get(e);if(s.renderBufferStorageSetup=void 0,s.framebuffers){for(const o in s.framebuffers)n.deleteFramebuffer(s.framebuffers[o]);delete s.framebuffers}if(s.depthRenderbuffer&&(n.deleteRenderbuffer(s.depthRenderbuffer),delete s.depthRenderbuffer),s.stencilRenderbuffer&&(n.deleteRenderbuffer(s.stencilRenderbuffer),delete s.stencilRenderbuffer),s.msaaFrameBuffer&&(n.deleteFramebuffer(s.msaaFrameBuffer),delete s.msaaFrameBuffer),s.msaaRenderbuffers){for(let o=0;o<s.msaaRenderbuffers.length;o++)n.deleteRenderbuffer(s.msaaRenderbuffers[o]);delete s.msaaRenderbuffers}}}destroyTexture(e){const{gl:n,backend:i}=this,{textureGPU:s,renderTarget:o}=i.get(e);this.deallocateRenderBuffers(o),n.deleteTexture(s),i.delete(e)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){const{gl:l,backend:c}=this,{state:u}=this.backend,{textureGPU:h,glTextureType:d,glType:f,glFormat:p}=c.get(n);u.bindTexture(d,h);let m,y,_,g,v,x,T,b,S;const M=e.isCompressedTexture?e.mipmaps[a]:e.image;if(i!==null)m=i.max.x-i.min.x,y=i.max.y-i.min.y,_=i.isBox3?i.max.z-i.min.z:1,g=i.min.x,v=i.min.y,x=i.isBox3?i.min.z:0;else{const k=Math.pow(2,-o);m=Math.floor(M.width*k),y=Math.floor(M.height*k),e.isDataArrayTexture||e.isArrayTexture?_=M.depth:e.isData3DTexture?_=Math.floor(M.depth*k):_=1,g=0,v=0,x=0}s!==null?(T=s.x,b=s.y,S=s.z):(T=0,b=0,S=0),l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,n.flipY),l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),l.pixelStorei(l.UNPACK_ALIGNMENT,n.unpackAlignment);const A=l.getParameter(l.UNPACK_ROW_LENGTH),E=l.getParameter(l.UNPACK_IMAGE_HEIGHT),w=l.getParameter(l.UNPACK_SKIP_PIXELS),N=l.getParameter(l.UNPACK_SKIP_ROWS),D=l.getParameter(l.UNPACK_SKIP_IMAGES);l.pixelStorei(l.UNPACK_ROW_LENGTH,M.width),l.pixelStorei(l.UNPACK_IMAGE_HEIGHT,M.height),l.pixelStorei(l.UNPACK_SKIP_PIXELS,g),l.pixelStorei(l.UNPACK_SKIP_ROWS,v),l.pixelStorei(l.UNPACK_SKIP_IMAGES,x);const F=n.isDataArrayTexture||n.isData3DTexture||n.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const k=c.get(e),Y=c.get(n),$=c.get(k.renderTarget),V=c.get(Y.renderTarget),B=$.framebuffers[k.cacheKey],J=V.framebuffers[Y.cacheKey];u.bindFramebuffer(l.READ_FRAMEBUFFER,B),u.bindFramebuffer(l.DRAW_FRAMEBUFFER,J);let X=l.COLOR_BUFFER_BIT;e.isDepthTexture&&(X=l.DEPTH_BUFFER_BIT),l.blitFramebuffer(g,v,m,y,T,b,m,y,X,l.NEAREST),u.bindFramebuffer(l.READ_FRAMEBUFFER,null),u.bindFramebuffer(l.DRAW_FRAMEBUFFER,null)}else F?e.isDataTexture||e.isData3DTexture?l.texSubImage3D(d,a,T,b,S,m,y,_,p,f,M.data):n.isCompressedArrayTexture?l.compressedTexSubImage3D(d,a,T,b,S,m,y,_,p,M.data):l.texSubImage3D(d,a,T,b,S,m,y,_,p,f,M):e.isDataTexture?l.texSubImage2D(d,a,T,b,m,y,p,f,M.data):e.isCompressedTexture?l.compressedTexSubImage2D(d,a,T,b,M.width,M.height,p,M.data):l.texSubImage2D(d,a,T,b,m,y,p,f,M);l.pixelStorei(l.UNPACK_ROW_LENGTH,A),l.pixelStorei(l.UNPACK_IMAGE_HEIGHT,E),l.pixelStorei(l.UNPACK_SKIP_PIXELS,w),l.pixelStorei(l.UNPACK_SKIP_ROWS,N),l.pixelStorei(l.UNPACK_SKIP_IMAGES,D),a===0&&n.generateMipmaps&&l.generateMipmap(d),u.unbindTexture()}copyFramebufferToTexture(e,n,i){const{gl:s}=this,{state:o}=this.backend,{textureGPU:a}=this.backend.get(e),{x:l,y:c,z:u,w:h}=i,d=e.isDepthTexture===!0||n.renderTarget&&n.renderTarget.samples>0,f=n.renderTarget?n.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const p=l!==0||c!==0;let m,y;if(e.isDepthTexture===!0?(m=s.DEPTH_BUFFER_BIT,y=s.DEPTH_ATTACHMENT,n.stencil&&(m|=s.STENCIL_BUFFER_BIT)):(m=s.COLOR_BUFFER_BIT,y=s.COLOR_ATTACHMENT0),p){const _=this.backend.get(n.renderTarget),g=_.framebuffers[n.getCacheKey()],v=_.msaaFrameBuffer;o.bindFramebuffer(s.DRAW_FRAMEBUFFER,g),o.bindFramebuffer(s.READ_FRAMEBUFFER,v);const x=f-c-h;s.blitFramebuffer(l,x,l+u,x+h,l,x,l+u,x+h,m,s.NEAREST),o.bindFramebuffer(s.READ_FRAMEBUFFER,g),o.bindTexture(s.TEXTURE_2D,a),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,l,x,u,h),o.unbindTexture()}else{const _=s.createFramebuffer();o.bindFramebuffer(s.DRAW_FRAMEBUFFER,_),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,y,s.TEXTURE_2D,a,0),s.blitFramebuffer(0,0,u,h,0,0,u,h,m,s.NEAREST),s.deleteFramebuffer(_)}}else o.bindTexture(s.TEXTURE_2D,a),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,l,f-h-c,u,h),o.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(n)}setupRenderBufferStorage(e,n,i,s=!1){const{gl:o}=this,a=n.renderTarget,{depthTexture:l,depthBuffer:c,stencilBuffer:u,width:h,height:d}=a;if(o.bindRenderbuffer(o.RENDERBUFFER,e),c&&!u){let f=o.DEPTH_COMPONENT24;s===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(o.RENDERBUFFER,a.samples,f,h,d):i>0?(l&&l.isDepthTexture&&l.type===o.FLOAT&&(f=o.DEPTH_COMPONENT32F),o.renderbufferStorageMultisample(o.RENDERBUFFER,i,f,h,d)):o.renderbufferStorage(o.RENDERBUFFER,f,h,d),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.RENDERBUFFER,e)}else c&&u&&(i>0?o.renderbufferStorageMultisample(o.RENDERBUFFER,i,o.DEPTH24_STENCIL8,h,d):o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_STENCIL,h,d),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,e));o.bindRenderbuffer(o.RENDERBUFFER,null)}async copyTextureToBuffer(e,n,i,s,o,a){const{backend:l,gl:c}=this,{textureGPU:u,glFormat:h,glType:d}=this.backend.get(e),f=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,f);const p=e.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+a:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,p,u,0);const m=this._getTypedArrayType(d),y=this._getBytesPerTexel(d,h),g=s*o*y,v=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,v),c.bufferData(c.PIXEL_PACK_BUFFER,g,c.STREAM_READ),c.readPixels(n,i,s,o,h,d,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await l.utils._clientWaitAsync();const x=new m(g/m.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,v),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,x),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(f),x}_getTypedArrayType(e){const{gl:n}=this;if(e===n.UNSIGNED_BYTE)return Uint8Array;if(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT)return Uint16Array;if(e===n.UNSIGNED_INT)return Uint32Array;if(e===n.HALF_FLOAT)return Uint16Array;if(e===n.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,n){const{gl:i}=this;let s=0;if(e===i.UNSIGNED_BYTE&&(s=1),(e===i.UNSIGNED_SHORT_4_4_4_4||e===i.UNSIGNED_SHORT_5_5_5_1||e===i.UNSIGNED_SHORT_5_6_5||e===i.UNSIGNED_SHORT||e===i.HALF_FLOAT)&&(s=2),(e===i.UNSIGNED_INT||e===i.FLOAT)&&(s=4),n===i.RGBA)return s*4;if(n===i.RGB)return s*3;if(n===i.ALPHA)return s}}function ih(r){return r.isDataTexture?r.image.data:typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas?r:r.data}class oz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let n=this.extensions[e];return n===void 0&&(n=this.gl.getExtension(e),this.extensions[e]=n),n}has(e){return this.availableExtensions.includes(e)}}class az{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,n=this.backend.extensions;if(n.has("EXT_texture_filter_anisotropic")===!0){const i=n.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const T0={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class lz{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,n){const{gl:i,mode:s,object:o,type:a,info:l,index:c}=this;c!==0?i.drawElements(s,n,a,e):i.drawArrays(s,e,n),l.update(o,n,1)}renderInstances(e,n,i){const{gl:s,mode:o,type:a,index:l,object:c,info:u}=this;i!==0&&(l!==0?s.drawElementsInstanced(o,n,a,e,i):s.drawArraysInstanced(o,e,n,i),u.update(c,n,i))}renderMultiDraw(e,n,i){const{extensions:s,mode:o,object:a,info:l}=this;if(i===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let u=0;u<i;u++)this.render(e[u],n[u]);else{this.index!==0?c.multiDrawElementsWEBGL(o,n,0,this.type,e,0,i):c.multiDrawArraysWEBGL(o,e,0,n,0,i);let u=0;for(let h=0;h<i;h++)u+=n[h];l.update(a,u,1)}}renderMultiDrawInstances(e,n,i,s){const{extensions:o,mode:a,object:l,info:c}=this;if(i===0)return;const u=o.get("WEBGL_multi_draw");if(u===null)for(let h=0;h<i;h++)this.renderInstances(e[h],n[h],s[h]);else{this.index!==0?u.multiDrawElementsInstancedWEBGL(a,n,0,this.type,e,0,s,0,i):u.multiDrawArraysInstancedWEBGL(a,e,0,n,0,s,0,i);let h=0;for(let d=0;d<i;d++)h+=n[d]*s[d];c.update(l,h,1)}}}class SS{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class cz extends SS{constructor(e,n,i=2048){if(super(i),this.gl=e,this.type=n,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let s=0;s<this.maxQueries;s++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Ai(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const n=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(n,"inactive"),this.queryOffsets.set(e,n),n}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const n=this.queryOffsets.get(e);if(n==null||this.activeQuery!==null)return;const i=this.queries[n];if(i)try{this.queryStates.get(n)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,i),this.activeQuery=n,this.queryStates.set(n,"started"))}catch(s){console.error("Error in beginQuery:",s),this.activeQuery=null,this.queryStates.set(n,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const n=this.queryOffsets.get(e);if(n!=null&&this.activeQuery===n)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(n,"ended"),this.activeQuery=null}catch(i){console.error("Error in endQuery:",i),this.queryStates.set(n,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[s,o]of this.queryStates)if(o==="ended"){const a=this.queries[s];e.push(this.resolveQuery(a))}if(e.length===0)return this.lastValue;const i=(await Promise.all(e)).reduce((s,o)=>s+o,0);return this.lastValue=i,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,i}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(n=>{if(this.isDisposed){n(this.lastValue);return}let i,s=!1;const o=()=>{i&&(clearTimeout(i),i=null)},a=c=>{s||(s=!0,o(),n(c))},l=()=>{if(this.isDisposed){a(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){a(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){i=setTimeout(l,1);return}const h=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);n(Number(h)/1e6)}catch(c){console.error("Error checking query:",c),n(this.lastValue)}};l()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class S0 extends TS{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const n=this.parameters,i={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},s=n.context!==void 0?n.context:e.domElement.getContext("webgl2",i);function o(a){a.preventDefault();const l={api:"WebGL",message:a.statusMessage||"Unknown reason",reason:null,originalEvent:a};e.onDeviceLost(l)}this._onContextLost=o,e.domElement.addEventListener("webglcontextlost",o,!1),this.gl=s,this.extensions=new oz(this),this.capabilities=new az(this),this.attributeUtils=new nz(this),this.textureUtils=new sz(this),this.bufferRenderer=new lz(this),this.state=new iz(this),this.utils=new rz(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Zn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,n,i=null){const s=this.gl;if(this.set(e.texture,{textureGPU:n,glInternalFormat:s.RGBA8}),i!==null){const o=e.stencilBuffer?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:i,glInternalFormat:o}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e,n){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new cz(this.gl,e,2048));const i=this.timestampQueryPool[e];i.allocateQueriesForContext(n)!==null&&i.beginQuery(n)}prepareTimestampBuffer(e,n){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e].endQuery(n)}getContext(){return this.gl}beginRender(e){const{state:n}=this,i=this.get(e);if(i.frameCalls=this.renderer.info.render.frameCalls,e.viewport)this.updateViewport(e);else{const{width:o,height:a}=this.getDrawingBufferSize();n.viewport(0,0,o,a)}if(e.scissor){const{x:o,y:a,width:l,height:c}=e.scissorValue;n.scissor(o,e.height-c-a,l,c)}this.initTimestampQuery(ra.RENDER,this.getTimestampUID(e)),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const s=e.occlusionQueryCount;s>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(s),i.occlusionQueryObjects=new Array(s),i.occlusionQueryIndex=0)}finishRender(e){const{gl:n,state:i}=this,s=this.get(e),o=s.previousContext;i.resetVertexState();const a=e.occlusionQueryCount;a>0&&(a>s.occlusionQueryIndex&&n.endQuery(n.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const l=e.textures;if(l!==null)for(let c=0;c<l.length;c++){const u=l[c];u.generateMipmaps&&this.generateMipmaps(u)}if(this._currentContext=o,this._resolveRenderTarget(e),o!==null)if(this._setFramebuffer(o),o.viewport)this.updateViewport(o);else{const{width:c,height:u}=this.getDrawingBufferSize();i.viewport(0,0,c,u)}this.prepareTimestampBuffer(ra.RENDER,this.getTimestampUID(e))}resolveOccludedAsync(e){const n=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:s}=n;if(i&&s){const o=new WeakSet,{gl:a}=this;n.currentOcclusionQueryObjects=null,n.currentOcclusionQueries=null;const l=()=>{let c=0;for(let u=0;u<i.length;u++){const h=i[u];h!==null&&a.getQueryParameter(h,a.QUERY_RESULT_AVAILABLE)&&(a.getQueryParameter(h,a.QUERY_RESULT)===0&&o.add(s[u]),i[u]=null,a.deleteQuery(h),c++)}c<i.length?requestAnimationFrame(l):n.occluded=o};l()}}isOccluded(e,n){const i=this.get(e);return i.occluded&&i.occluded.has(n)}updateViewport(e){const{state:n}=this,{x:i,y:s,width:o,height:a}=e.viewportValue;n.viewport(i,e.height-a-s,o,a)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,n,i,s=null,o=!0,a=!0){const{gl:l,renderer:c}=this;s===null&&(s={textures:null,clearColorValue:this.getClearColor()});let u=0;if(e&&(u|=l.COLOR_BUFFER_BIT),n&&(u|=l.DEPTH_BUFFER_BIT),i&&(u|=l.STENCIL_BUFFER_BIT),u!==0){let h;s.clearColorValue?h=s.clearColorValue:h=this.getClearColor();const d=c.getClearDepth(),f=c.getClearStencil();if(n&&this.state.setDepthMask(!0),s.textures===null)l.clearColor(h.r,h.g,h.b,h.a),l.clear(u);else{if(o&&this._setFramebuffer(s),e)for(let p=0;p<s.textures.length;p++)p===0?l.clearBufferfv(l.COLOR,p,[h.r,h.g,h.b,h.a]):l.clearBufferfv(l.COLOR,p,[0,0,0,1]);n&&i?l.clearBufferfi(l.DEPTH_STENCIL,0,d,f):n?l.clearBufferfv(l.DEPTH,0,[d]):i&&l.clearBufferiv(l.STENCIL,0,[f]),o&&a&&this._resolveRenderTarget(s)}}}beginCompute(e){const{state:n,gl:i}=this,s=this.get(e);s.frameCalls=this.renderer.info.compute.frameCalls,n.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(ra.COMPUTE,this.getTimestampUID(e))}compute(e,n,i,s,o=null){const{state:a,gl:l}=this;this.discard===!1&&(l.enable(l.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:c,transformBuffers:u,attributes:h}=this.get(s),d=this._getVaoKey(h),f=this.vaoCache[d];f===void 0?this.vaoCache[d]=this._createVao(h):a.setVertexState(f),a.useProgram(c),this._bindUniforms(i);const p=this._getTransformFeedback(u);l.bindTransformFeedback(l.TRANSFORM_FEEDBACK,p),l.beginTransformFeedback(l.POINTS),o=o!==null?o:n.count,Array.isArray(o)&&(Ai("WebGLBackend.compute(): The count parameter must be a single number, not an array."),o=o[0]),h[0].isStorageInstancedBufferAttribute?l.drawArraysInstanced(l.POINTS,0,1,o):l.drawArrays(l.POINTS,0,o),l.endTransformFeedback(),l.bindTransformFeedback(l.TRANSFORM_FEEDBACK,null);for(let m=0;m<u.length;m++){const y=u[m];y.pbo&&this.has(y.pbo)&&this.textureUtils.copyBufferToTexture(y.transformBuffer,y.pbo),y.switchBuffers()}}finishCompute(e){const n=this.gl;this.discard=!1,n.disable(n.RASTERIZER_DISCARD),this.prepareTimestampBuffer(ra.COMPUTE,this.getTimestampUID(e)),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:n,pipeline:i,material:s,context:o,hardwareClippingPlanes:a}=e,{programGPU:l}=this.get(i),{gl:c,state:u}=this,h=this.get(o),d=e.getDrawParameters();if(d===null)return;this._bindUniforms(e.getBindings());const f=n.isMesh&&n.matrixWorld.determinant()<0;u.setMaterial(s,f,a),u.useProgram(l);const p=e.getAttributes(),m=this.get(p);let y=m.vaoGPU;if(y===void 0){const A=this._getVaoKey(p);y=this.vaoCache[A],y===void 0&&(y=this._createVao(p),this.vaoCache[A]=y,m.vaoGPU=y)}const _=e.getIndex(),g=_!==null?this.get(_).bufferGPU:null;u.setVertexState(y,g);const v=h.lastOcclusionObject;if(v!==n&&v!==void 0){if(v!==null&&v.occlusionTest===!0&&(c.endQuery(c.ANY_SAMPLES_PASSED),h.occlusionQueryIndex++),n.occlusionTest===!0){const A=c.createQuery();c.beginQuery(c.ANY_SAMPLES_PASSED,A),h.occlusionQueries[h.occlusionQueryIndex]=A,h.occlusionQueryObjects[h.occlusionQueryIndex]=n}h.lastOcclusionObject=n}const x=this.bufferRenderer;n.isPoints?x.mode=c.POINTS:n.isLineSegments?x.mode=c.LINES:n.isLine?x.mode=c.LINE_STRIP:n.isLineLoop?x.mode=c.LINE_LOOP:s.wireframe===!0?(u.setLineWidth(s.wireframeLinewidth*this.renderer.getPixelRatio()),x.mode=c.LINES):x.mode=c.TRIANGLES;const{vertexCount:T,instanceCount:b}=d;let{firstVertex:S}=d;if(x.object=n,_!==null){S*=_.array.BYTES_PER_ELEMENT;const A=this.get(_);x.index=_.count,x.type=A.type}else x.index=0;const M=()=>{n.isBatchedMesh?n._multiDrawInstances!==null?(Ai("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),x.renderMultiDrawInstances(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount,n._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?x.renderMultiDraw(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount):Ai("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):b>1?x.renderInstances(S,T,b):x.render(S,T)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const A=this.get(e.camera),E=e.camera.cameras,w=e.getBindingGroup("cameraIndex").bindings[0];if(A.indexesGPU===void 0||A.indexesGPU.length!==E.length){const $=new Uint32Array([0,0,0,0]),V=[];for(let B=0,J=E.length;B<J;B++){const X=c.createBuffer();$[0]=B,c.bindBuffer(c.UNIFORM_BUFFER,X),c.bufferData(c.UNIFORM_BUFFER,$,c.STATIC_DRAW),V.push(X)}A.indexesGPU=V}const N=this.get(w),D=this.renderer.getPixelRatio(),F=this._currentContext.renderTarget,k=this._isRenderCameraDepthArray(this._currentContext),Y=this._currentContext.activeCubeFace;if(k){const $=this.get(F.depthTexture);if($.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){$.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:V}=F;for(let B=0,J=E.length;B<J;B++)this.renderer._activeCubeFace=B,this._currentContext.activeCubeFace=B,this._setFramebuffer(this._currentContext),this.clear(!1,!0,V,this._currentContext,!1,!1);this.renderer._activeCubeFace=Y,this._currentContext.activeCubeFace=Y}}for(let $=0,V=E.length;$<V;$++){const B=E[$];if(n.layers.test(B.layers)){k&&(this.renderer._activeCubeFace=$,this._currentContext.activeCubeFace=$,this._setFramebuffer(this._currentContext));const J=B.viewport;if(J!==void 0){const X=J.x*D,re=J.y*D,fe=J.width*D,De=J.height*D;u.viewport(Math.floor(X),Math.floor(e.context.height-De-re),Math.floor(fe),Math.floor(De))}u.bindBufferBase(c.UNIFORM_BUFFER,N.index,A.indexesGPU[$]),M()}this._currentContext.activeCubeFace=Y,this.renderer._activeCubeFace=Y}}else M()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,n){this.textureUtils.createTexture(e,n)}updateTexture(e,n){this.textureUtils.updateTexture(e,n)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,n,i,s,o,a){return this.textureUtils.copyTextureToBuffer(e,n,i,s,o,a)}createSampler(){}destroySampler(){}createNodeBuilder(e,n){return new Jk(e,n)}createProgram(e){const n=this.gl,{stage:i,code:s}=e,o=i==="fragment"?n.createShader(n.FRAGMENT_SHADER):n.createShader(n.VERTEX_SHADER);n.shaderSource(o,s),n.compileShader(o),this.set(e,{shaderGPU:o})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,n){const i=this.gl,s=e.pipeline,{fragmentProgram:o,vertexProgram:a}=s,l=i.createProgram(),c=this.get(o).shaderGPU,u=this.get(a).shaderGPU;if(i.attachShader(l,c),i.attachShader(l,u),i.linkProgram(l),this.set(s,{programGPU:l,fragmentShader:c,vertexShader:u}),n!==null&&this.parallel){const h=new Promise(d=>{const f=this.parallel,p=()=>{i.getProgramParameter(l,f.COMPLETION_STATUS_KHR)?(this._completeCompile(e,s),d()):requestAnimationFrame(p)};p()});n.push(h);return}this._completeCompile(e,s)}_handleSource(e,n){const i=e.split(`
`),s=[],o=Math.max(n-6,0),a=Math.min(n+6,i.length);for(let l=o;l<a;l++){const c=l+1;s.push(`${c===n?">":" "} ${c}: ${i[l]}`)}return s.join(`
`)}_getShaderErrors(e,n,i){const s=e.getShaderParameter(n,e.COMPILE_STATUS),a=(e.getShaderInfoLog(n)||"").trim();if(s&&a==="")return"";const l=/ERROR: 0:(\d+)/.exec(a);if(l){const c=parseInt(l[1]);return i.toUpperCase()+`

`+a+`

`+this._handleSource(e.getShaderSource(n),c)}else return a}_logProgramError(e,n,i){if(this.renderer.debug.checkShaderErrors){const s=this.gl,a=(s.getProgramInfoLog(e)||"").trim();if(s.getProgramParameter(e,s.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(s,e,i,n);else{const l=this._getShaderErrors(s,i,"vertex"),c=this._getShaderErrors(s,n,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(e,s.VALIDATE_STATUS)+`

Program Info Log: `+a+`
`+l+`
`+c)}else a!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",a)}}_completeCompile(e,n){const{state:i,gl:s}=this,o=this.get(n),{programGPU:a,fragmentShader:l,vertexShader:c}=o;s.getProgramParameter(a,s.LINK_STATUS)===!1&&this._logProgramError(a,l,c),i.useProgram(a);const u=e.getBindings();this._setupBindings(u,a),this.set(n,{programGPU:a})}createComputePipeline(e,n){const{state:i,gl:s}=this,o={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(o);const{computeProgram:a}=e,l=s.createProgram(),c=this.get(o).shaderGPU,u=this.get(a).shaderGPU,h=a.transforms,d=[],f=[];for(let _=0;_<h.length;_++){const g=h[_];d.push(g.varyingName),f.push(g.attributeNode)}s.attachShader(l,c),s.attachShader(l,u),s.transformFeedbackVaryings(l,d,s.SEPARATE_ATTRIBS),s.linkProgram(l),s.getProgramParameter(l,s.LINK_STATUS)===!1&&this._logProgramError(l,c,u),i.useProgram(l),this._setupBindings(n,l);const p=a.attributes,m=[],y=[];for(let _=0;_<p.length;_++){const g=p[_].node.attribute;m.push(g),this.has(g)||this.attributeUtils.createAttribute(g,s.ARRAY_BUFFER)}for(let _=0;_<f.length;_++){const g=f[_].attribute;this.has(g)||this.attributeUtils.createAttribute(g,s.ARRAY_BUFFER);const v=this.get(g);y.push(v)}this.set(e,{programGPU:l,transformBuffers:y,attributes:m})}createBindings(e,n){if(this._knownBindings.has(n)===!1){this._knownBindings.add(n);let i=0,s=0;for(const o of n){this.set(o,{textures:s,uniformBuffers:i});for(const a of o.bindings)a.isUniformBuffer&&i++,a.isSampledTexture&&s++}}this.updateBindings(e,n)}updateBindings(e){const{gl:n}=this,i=this.get(e);let s=i.uniformBuffers,o=i.textures;for(const a of e.bindings){const l=this.get(a);if(a.isUniformsGroup||a.isUniformBuffer){const c=a.buffer;let{bufferGPU:u}=this.get(c);u===void 0?(u=n.createBuffer(),n.bindBuffer(n.UNIFORM_BUFFER,u),n.bufferData(n.UNIFORM_BUFFER,c,n.DYNAMIC_DRAW),this.set(c,{bufferGPU:u})):(n.bindBuffer(n.UNIFORM_BUFFER,u),n.bufferSubData(n.UNIFORM_BUFFER,0,c)),l.index=s++,l.bufferGPU=u,this.set(a,l)}else if(a.isSampledTexture){const{textureGPU:c,glTextureType:u}=this.get(a.texture);l.index=o++,l.textureGPU=c,l.glTextureType=u,this.set(a,l)}}}updateBinding(e){const n=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,o=e.buffer;n.bindBuffer(n.UNIFORM_BUFFER,s),n.bufferData(n.UNIFORM_BUFFER,o,n.DYNAMIC_DRAW)}}createIndexAttribute(e){const n=this.gl;this.attributeUtils.createAttribute(e,n.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const n=this.gl;this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const n=this.gl;this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const n=Object.keys(T0).filter(s=>T0[s]===e),i=this.extensions;for(let s=0;s<n.length;s++)if(i.has(n[s]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){this.textureUtils.copyTextureToTexture(e,n,i,s,o,a)}copyFramebufferToTexture(e,n,i){this.textureUtils.copyFramebufferToTexture(e,n,i)}_setFramebuffer(e){const{gl:n,state:i}=this;let s=null;if(e.textures!==null){const o=e.renderTarget,a=this.get(o),{samples:l,depthBuffer:c,stencilBuffer:u}=o,h=o.isWebGLCubeRenderTarget===!0,d=o.isRenderTarget3D===!0,f=o.depth>1,p=o.isXRRenderTarget===!0,m=p===!0&&o._hasExternalTextures===!0;let y=a.msaaFrameBuffer,_=a.depthRenderbuffer;const g=this.extensions.get("WEBGL_multisampled_render_to_texture"),v=this.extensions.get("OVR_multiview2"),x=this._useMultisampledExtension(o),T=nS(e);let b;if(h?(a.cubeFramebuffers||(a.cubeFramebuffers={}),b=a.cubeFramebuffers[T]):p&&m===!1?b=this._xrFramebuffer:(a.framebuffers||(a.framebuffers={}),b=a.framebuffers[T]),b===void 0){b=n.createFramebuffer(),i.bindFramebuffer(n.FRAMEBUFFER,b);const S=e.textures,M=[];if(h){a.cubeFramebuffers[T]=b;const{textureGPU:E}=this.get(S[0]),w=this.renderer._activeCubeFace,N=this.renderer._activeMipmapLevel;n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+w,E,N)}else{a.framebuffers[T]=b;for(let E=0;E<S.length;E++){const w=S[E],N=this.get(w);N.renderTarget=e.renderTarget,N.cacheKey=T;const D=n.COLOR_ATTACHMENT0+E;if(o.multiview)v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,D,N.textureGPU,0,l,0,2);else if(d||f){const F=this.renderer._activeCubeFace,k=this.renderer._activeMipmapLevel;n.framebufferTextureLayer(n.FRAMEBUFFER,D,N.textureGPU,k,F)}else if(x)g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,D,n.TEXTURE_2D,N.textureGPU,0,l);else{const F=this.renderer._activeMipmapLevel;n.framebufferTexture2D(n.FRAMEBUFFER,D,n.TEXTURE_2D,N.textureGPU,F)}}}const A=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;if(o._autoAllocateDepthBuffer===!0){const E=n.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(E,e,0,x),a.xrDepthRenderbuffer=E,M.push(u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT),n.bindRenderbuffer(n.RENDERBUFFER,E),n.framebufferRenderbuffer(n.FRAMEBUFFER,A,n.RENDERBUFFER,E)}else if(e.depthTexture!==null){M.push(u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT);const E=this.get(e.depthTexture);if(E.renderTarget=e.renderTarget,E.cacheKey=T,o.multiview)v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,A,E.textureGPU,0,l,0,2);else if(m&&x)g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0,l);else if(e.depthTexture.isArrayTexture){const w=this.renderer._activeCubeFace;n.framebufferTextureLayer(n.FRAMEBUFFER,A,E.textureGPU,0,w)}else n.framebufferTexture2D(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0)}a.depthInvalidationArray=M}else{if(this._isRenderCameraDepthArray(e)){i.bindFramebuffer(n.FRAMEBUFFER,b);const M=this.renderer._activeCubeFace,A=this.get(e.depthTexture),E=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.framebufferTextureLayer(n.FRAMEBUFFER,E,A.textureGPU,0,M)}if((p||x||o.multiview)&&o._isOpaqueFramebuffer!==!0){i.bindFramebuffer(n.FRAMEBUFFER,b);const M=this.get(e.textures[0]);o.multiview?v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,M.textureGPU,0,l,0,2):x?g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,M.textureGPU,0,l):n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,M.textureGPU,0);const A=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;if(o._autoAllocateDepthBuffer===!0){const E=a.xrDepthRenderbuffer;n.bindRenderbuffer(n.RENDERBUFFER,E),n.framebufferRenderbuffer(n.FRAMEBUFFER,A,n.RENDERBUFFER,E)}else{const E=this.get(e.depthTexture);o.multiview?v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,A,E.textureGPU,0,l,0,2):x?g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0,l):n.framebufferTexture2D(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0)}}}if(l>0&&x===!1&&!o.multiview){if(y===void 0){const S=[];y=n.createFramebuffer(),i.bindFramebuffer(n.FRAMEBUFFER,y);const M=[],A=e.textures;for(let E=0;E<A.length;E++){M[E]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,M[E]),S.push(n.COLOR_ATTACHMENT0+E);const w=e.textures[E],N=this.get(w);n.renderbufferStorageMultisample(n.RENDERBUFFER,l,N.glInternalFormat,e.width,e.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+E,n.RENDERBUFFER,M[E])}if(n.bindRenderbuffer(n.RENDERBUFFER,null),a.msaaFrameBuffer=y,a.msaaRenderbuffers=M,c&&_===void 0){_=n.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(_,e,l),a.depthRenderbuffer=_;const E=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;S.push(E)}a.invalidationArray=S}s=a.msaaFrameBuffer}else s=b;i.drawBuffers(e,b)}i.bindFramebuffer(n.FRAMEBUFFER,s)}_getVaoKey(e){let n="";for(let i=0;i<e.length;i++){const s=this.get(e[i]);n+=":"+s.id}return n}_createVao(e){const{gl:n}=this,i=n.createVertexArray();n.bindVertexArray(i);for(let s=0;s<e.length;s++){const o=e[s],a=this.get(o);n.bindBuffer(n.ARRAY_BUFFER,a.bufferGPU),n.enableVertexAttribArray(s);let l,c;o.isInterleavedBufferAttribute===!0?(l=o.data.stride*a.bytesPerElement,c=o.offset*a.bytesPerElement):(l=0,c=0),a.isInteger?n.vertexAttribIPointer(s,o.itemSize,a.type,l,c):n.vertexAttribPointer(s,o.itemSize,a.type,o.normalized,l,c),o.isInstancedBufferAttribute&&!o.isInterleavedBufferAttribute?n.vertexAttribDivisor(s,o.meshPerAttribute):o.isInterleavedBufferAttribute&&o.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(s,o.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),i}_getTransformFeedback(e){let n="";for(let o=0;o<e.length;o++)n+=":"+e[o].id;let i=this.transformFeedbackCache[n];if(i!==void 0)return i;const{gl:s}=this;i=s.createTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,i);for(let o=0;o<e.length;o++){const a=e[o];s.bindBufferBase(s.TRANSFORM_FEEDBACK_BUFFER,o,a.transformBuffer)}return s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[n]=i,i}_setupBindings(e,n){const i=this.gl;for(const s of e)for(const o of s.bindings){const l=this.get(o).index;if(o.isUniformsGroup||o.isUniformBuffer){const c=i.getUniformBlockIndex(n,o.name);i.uniformBlockBinding(n,c,l)}else if(o.isSampledTexture){const c=i.getUniformLocation(n,o.name);i.uniform1i(c,l)}}}_bindUniforms(e){const{gl:n,state:i}=this;for(const s of e)for(const o of s.bindings){const a=this.get(o),l=a.index;o.isUniformsGroup||o.isUniformBuffer?i.bindBufferBase(n.UNIFORM_BUFFER,l,a.bufferGPU):o.isSampledTexture&&i.bindTexture(a.glTextureType,a.textureGPU,n.TEXTURE0+l)}}_resolveRenderTarget(e){const{gl:n,state:i}=this,s=e.renderTarget;if(e.textures!==null&&s){const o=this.get(s);if(s.samples>0&&this._useMultisampledExtension(s)===!1){const a=o.framebuffers[e.getCacheKey()];let l=n.COLOR_BUFFER_BIT;s.resolveDepthBuffer&&(s.depthBuffer&&(l|=n.DEPTH_BUFFER_BIT),s.stencilBuffer&&s.resolveStencilBuffer&&(l|=n.STENCIL_BUFFER_BIT));const c=o.msaaFrameBuffer,u=o.msaaRenderbuffers,h=e.textures,d=h.length>1;if(i.bindFramebuffer(n.READ_FRAMEBUFFER,c),i.bindFramebuffer(n.DRAW_FRAMEBUFFER,a),d)for(let f=0;f<h.length;f++)n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.RENDERBUFFER,null),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.TEXTURE_2D,null,0);for(let f=0;f<h.length;f++){if(d){const{textureGPU:p}=this.get(h[f]);n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,u[f]),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,p,0)}if(e.scissor){const{x:p,y:m,width:y,height:_}=e.scissorValue,g=e.height-_-m;n.blitFramebuffer(p,g,p+y,g+_,p,g,p+y,g+_,l,n.NEAREST)}else n.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,l,n.NEAREST)}if(d)for(let f=0;f<h.length;f++){const{textureGPU:p}=this.get(h[f]);n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.RENDERBUFFER,u[f]),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.TEXTURE_2D,p,0)}this._supportsInvalidateFramebuffer===!0&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,o.invalidationArray)}else if(s.resolveDepthBuffer===!1&&o.framebuffers){const a=o.framebuffers[e.getCacheKey()];i.bindFramebuffer(n.DRAW_FRAMEBUFFER,a),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,o.depthInvalidationArray)}}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const ua={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Rn={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Xn={Store:"store"},wt={Load:"load",Clear:"clear"},M0={CCW:"ccw",CW:"cw"},E0={None:"none",Back:"back"},el={Uint16:"uint16",Uint32:"uint32"},O={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rg11b10ufloat",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-unorm-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},ap={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},so={Linear:"linear",Nearest:"nearest"},yt={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},js={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},w0={None:0,All:15},ds={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},lp={Storage:"storage",ReadOnlyStorage:"read-only-storage"},cp={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},A0={NonFiltering:"non-filtering",Comparison:"comparison"},qs={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},R0={TwoD:"2d",ThreeD:"3d"},pn={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},uz={All:"all"},rh={Vertex:"vertex",Instance:"instance"},sm={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class hz extends xS{constructor(e,n,i){super(e,n?n.value:null),this.textureNode=n,this.groupNode=i}update(){this.texture=this.textureNode.value}}class dz extends gS{constructor(e,n){super(e,n?n.array:null),this.attribute=n,this.isStorageBuffer=!0}}let fz=0;class pz extends dz{constructor(e,n){super("StorageBuffer_"+fz++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:pr.READ_WRITE,this.groupNode=n}get buffer(){return this.nodeUniform.value}}class mz extends Ds{constructor(e){super(),this.device=e;const n=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:so.Linear}),this.flipYSampler=e.createSampler({minFilter:so.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:n}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:i}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:s})}getTransferPipeline(e){let n=this.transferPipelines[e];return n===void 0&&(n=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ua.TriangleStrip,stripIndexFormat:el.Uint32},layout:"auto"}),this.transferPipelines[e]=n),n}getFlipYPipeline(e){let n=this.flipYPipelines[e];return n===void 0&&(n=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ua.TriangleStrip,stripIndexFormat:el.Uint32},layout:"auto"}),this.flipYPipelines[e]=n),n}flipY(e,n,i=0){const s=n.format,{width:o,height:a}=n.size,l=this.getTransferPipeline(s),c=this.getFlipYPipeline(s),u=this.device.createTexture({size:{width:o,height:a,depthOrArrayLayers:1},format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:pn.TwoD,baseArrayLayer:i}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:pn.TwoD,baseArrayLayer:0}),f=this.device.createCommandEncoder({}),p=(m,y,_)=>{const g=m.getBindGroupLayout(0),v=this.device.createBindGroup({layout:g,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:y}]}),x=f.beginRenderPass({colorAttachments:[{view:_,loadOp:wt.Clear,storeOp:Xn.Store,clearValue:[0,0,0,0]}]});x.setPipeline(m),x.setBindGroup(0,v),x.draw(4,1,0,0),x.end()};p(l,h,d),p(c,d,h),this.device.queue.submit([f.finish()]),u.destroy()}generateMipmaps(e,n,i=0){const s=this.get(e);s.useCount===void 0&&(s.useCount=0,s.layers=[]);const o=s.layers[i]||this._mipmapCreateBundles(e,n,i),a=this.device.createCommandEncoder({});this._mipmapRunBundles(a,o),this.device.queue.submit([a.finish()]),s.useCount!==0&&(s.layers[i]=o),s.useCount++}_mipmapCreateBundles(e,n,i){const s=this.getTransferPipeline(n.format),o=s.getBindGroupLayout(0);let a=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:pn.TwoD,baseArrayLayer:i});const l=[];for(let c=1;c<n.mipLevelCount;c++){const u=this.device.createBindGroup({layout:o,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:a}]}),h=e.createView({baseMipLevel:c,mipLevelCount:1,dimension:pn.TwoD,baseArrayLayer:i}),d={colorAttachments:[{view:h,loadOp:wt.Clear,storeOp:Xn.Store,clearValue:[0,0,0,0]}]},f=this.device.createRenderBundleEncoder({colorFormats:[n.format]});f.setPipeline(s),f.setBindGroup(0,u),f.draw(4,1,0,0),l.push({renderBundles:[f.finish()],passDescriptor:d}),a=h}return l}_mipmapRunBundles(e,n){const i=n.length;for(let s=0;s<i;s++){const o=n[s],a=e.beginRenderPass(o.passDescriptor);a.executeBundles(o.renderBundles),a.end()}}}const gz={[Bm]:"never",[Jh]:"less",[km]:"equal",[ed]:"less-equal",[zm]:"greater",[Vm]:"greater-equal",[Hm]:"always",[Gm]:"not-equal"},_z=[0,1,3,2,4,5];class yz{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Bi,this.depthTexture.name="depthBuffer"}createSampler(e){const n=this.backend,i=n.device,s=n.get(e),o={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};o.magFilter===so.Linear&&o.minFilter===so.Linear&&o.mipmapFilter===so.Linear&&(o.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(o.compare=gz[e.compareFunction]),s.sampler=i.createSampler(o)}createDefaultTexture(e){let n;const i=om(e);e.isCubeTexture?n=this._getDefaultCubeTextureGPU(i):n=this._getDefaultTextureGPU(i),this.backend.get(e).texture=n}createTexture(e,n={}){const i=this.backend,s=i.get(e);if(s.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");if(e.isExternalTexture){s.texture=e.sourceTexture,s.initialized=!0;return}n.needsMipmaps===void 0&&(n.needsMipmaps=!1),n.levels===void 0&&(n.levels=1),n.depth===void 0&&(n.depth=1);const{width:o,height:a,depth:l,levels:c}=n;e.isFramebufferTexture&&(n.renderTarget?n.format=this.backend.utils.getCurrentColorFormat(n.renderTarget):n.format=this.backend.utils.getPreferredCanvasFormat());const u=this._getDimension(e),h=e.internalFormat||n.format||om(e,i.device);s.format=h;const{samples:d,primarySamples:f,isMSAA:p}=i.utils.getTextureSampleData(e);let m=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(m|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&h!==O.RGB9E5UFloat&&(m|=GPUTextureUsage.RENDER_ATTACHMENT);const y={label:e.name,size:{width:o,height:a,depthOrArrayLayers:l},mipLevelCount:c,sampleCount:f,dimension:u,format:h,usage:m};if(h===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(y.textureBindingViewDimension=pn.Cube),s.texture=i.device.createTexture(y),p){const _=Object.assign({},y);_.label=_.label+"-msaa",_.sampleCount=d,_.mipLevelCount=1,s.msaaTexture=i.device.createTexture(_)}s.initialized=!0,s.textureDescriptorGPU=y}destroyTexture(e){const n=this.backend,i=n.get(e);i.texture!==void 0&&i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),n.delete(e)}destroySampler(e){const i=this.backend.get(e);delete i.sampler}generateMipmaps(e){const n=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let s=0;s<i;s++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,s)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:n,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:n,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,n=!1){const i=this.backend,{width:s,height:o}=i.getDrawingBufferSize(),a=this.depthTexture,l=i.get(a).texture;let c,u;if(n?(c=wi,u=Mi):e&&(c=Ei,u=Gt),l!==void 0){if(a.image.width===s&&a.image.height===o&&a.format===c&&a.type===u)return l;this.destroyTexture(a)}return a.name="depthBuffer",a.format=c,a.type=u,a.image.width=s,a.image.height=o,this.createTexture(a,{width:s,height:o}),i.get(a).texture}updateTexture(e,n){const i=this.backend.get(e),s=e.mipmaps,{textureDescriptorGPU:o}=i;if(!(e.isRenderTargetTexture||o===void 0)){if(e.isDataTexture)if(s.length>0)for(let a=0,l=s.length;a<l;a++){const c=s[a];this._copyBufferToTexture(c,i.texture,o,0,e.flipY,0,a)}else this._copyBufferToTexture(n.image,i.texture,o,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let a=0;a<n.image.depth;a++)this._copyBufferToTexture(n.image,i.texture,o,a,e.flipY,a);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,i.texture,o);else if(e.isCubeTexture)this._copyCubeMapToTexture(e,i.texture,o);else if(s.length>0)for(let a=0,l=s.length;a<l;a++){const c=s[a];this._copyImageToTexture(c,i.texture,o,0,e.flipY,e.premultiplyAlpha,a)}else this._copyImageToTexture(n.image,i.texture,o,0,e.flipY,e.premultiplyAlpha);i.version=e.version}}async copyTextureToBuffer(e,n,i,s,o,a){const l=this.backend.device,c=this.backend.get(e),u=c.texture,h=c.textureDescriptorGPU.format,d=this._getBytesPerTexel(h);let f=s*d;f=Math.ceil(f/256)*256;const p=l.createBuffer({size:(o-1)*f+s*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=l.createCommandEncoder();m.copyTextureToBuffer({texture:u,origin:{x:n,y:i,z:a}},{buffer:p,bytesPerRow:f},{width:s,height:o});const y=this._getTypedArrayType(h);l.queue.submit([m.finish()]),await p.mapAsync(GPUMapMode.READ);const _=p.getMappedRange();return new y(_)}_getDefaultTextureGPU(e){let n=this.defaultTexture[e];if(n===void 0){const i=new un;i.minFilter=Wt,i.magFilter=Wt,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=n=i}return this.backend.get(n).texture}_getDefaultCubeTextureGPU(e){let n=this.defaultTexture[e];if(n===void 0){const i=new Wc;i.minFilter=Wt,i.magFilter=Wt,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=n=i}return this.backend.get(n).texture}_copyCubeMapToTexture(e,n,i){const s=e.images,o=e.mipmaps;for(let a=0;a<6;a++){const l=s[a],c=e.flipY===!0?_z[a]:a;l.isDataTexture?this._copyBufferToTexture(l.image,n,i,c,e.flipY):this._copyImageToTexture(l,n,i,c,e.flipY,e.premultiplyAlpha);for(let u=0;u<o.length;u++){const d=o[u].images[a];d.isDataTexture?this._copyBufferToTexture(d.image,n,i,c,e.flipY,0,u+1):this._copyImageToTexture(d,n,i,c,e.flipY,e.premultiplyAlpha,u+1)}}}_copyImageToTexture(e,n,i,s,o,a,l=0){const c=this.backend.device,u=l>0?e.width:i.size.width,h=l>0?e.height:i.size.height;c.queue.copyExternalImageToTexture({source:e,flipY:o},{texture:n,mipLevel:l,origin:{x:0,y:0,z:s},premultipliedAlpha:a},{width:u,height:h,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new mz(this.backend.device)),e}_generateMipmaps(e,n,i=0){this._getPassUtils().generateMipmaps(e,n,i)}_flipY(e,n,i=0){this._getPassUtils().flipY(e,n,i)}_copyBufferToTexture(e,n,i,s,o,a=0,l=0){const c=this.backend.device,u=e.data,h=this._getBytesPerTexel(i.format),d=e.width*h;c.queue.writeTexture({texture:n,mipLevel:l,origin:{x:0,y:0,z:s}},u,{offset:e.width*e.height*h*a,bytesPerRow:d},{width:e.width,height:e.height,depthOrArrayLayers:1}),o===!0&&this._flipY(n,i,s)}_copyCompressedBufferToTexture(e,n,i){const s=this.backend.device,o=this._getBlockData(i.format),a=i.size.depthOrArrayLayers>1;for(let l=0;l<e.length;l++){const c=e[l],u=c.width,h=c.height,d=a?i.size.depthOrArrayLayers:1,f=Math.ceil(u/o.width)*o.byteLength,p=f*Math.ceil(h/o.height);for(let m=0;m<d;m++)s.queue.writeTexture({texture:n,mipLevel:l,origin:{x:0,y:0,z:m}},c.data,{offset:m*p,bytesPerRow:f,rowsPerImage:Math.ceil(h/o.height)},{width:Math.ceil(u/o.width)*o.width,height:Math.ceil(h/o.height)*o.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===O.BC1RGBAUnorm||e===O.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.BC2RGBAUnorm||e===O.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.BC3RGBAUnorm||e===O.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.BC4RUnorm||e===O.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===O.BC5RGUnorm||e===O.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===O.BC6HRGBUFloat||e===O.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===O.BC7RGBAUnorm||e===O.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.ETC2RGB8Unorm||e===O.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.ETC2RGB8A1Unorm||e===O.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.ETC2RGBA8Unorm||e===O.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===O.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===O.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===O.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===O.ASTC4x4Unorm||e===O.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.ASTC5x4Unorm||e===O.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===O.ASTC5x5Unorm||e===O.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===O.ASTC6x5Unorm||e===O.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===O.ASTC6x6Unorm||e===O.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===O.ASTC8x5Unorm||e===O.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===O.ASTC8x6Unorm||e===O.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===O.ASTC8x8Unorm||e===O.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===O.ASTC10x5Unorm||e===O.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===O.ASTC10x6Unorm||e===O.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===O.ASTC10x8Unorm||e===O.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===O.ASTC10x10Unorm||e===O.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===O.ASTC12x10Unorm||e===O.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===O.ASTC12x12Unorm||e===O.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let n=ap.ClampToEdge;return e===ho?n=ap.Repeat:e===fo&&(n=ap.MirrorRepeat),n}_convertFilterMode(e){let n=so.Linear;return(e===Wt||e===Fm||e===jr)&&(n=so.Nearest),n}_getBytesPerTexel(e){if(e===O.R8Unorm||e===O.R8Snorm||e===O.R8Uint||e===O.R8Sint)return 1;if(e===O.R16Uint||e===O.R16Sint||e===O.R16Float||e===O.RG8Unorm||e===O.RG8Snorm||e===O.RG8Uint||e===O.RG8Sint)return 2;if(e===O.R32Uint||e===O.R32Sint||e===O.R32Float||e===O.RG16Uint||e===O.RG16Sint||e===O.RG16Float||e===O.RGBA8Unorm||e===O.RGBA8UnormSRGB||e===O.RGBA8Snorm||e===O.RGBA8Uint||e===O.RGBA8Sint||e===O.BGRA8Unorm||e===O.BGRA8UnormSRGB||e===O.RGB9E5UFloat||e===O.RGB10A2Unorm||e===O.RG11B10UFloat||e===O.Depth32Float||e===O.Depth24Plus||e===O.Depth24PlusStencil8||e===O.Depth32FloatStencil8)return 4;if(e===O.RG32Uint||e===O.RG32Sint||e===O.RG32Float||e===O.RGBA16Uint||e===O.RGBA16Sint||e===O.RGBA16Float)return 8;if(e===O.RGBA32Uint||e===O.RGBA32Sint||e===O.RGBA32Float)return 16}_getTypedArrayType(e){if(e===O.R8Uint)return Uint8Array;if(e===O.R8Sint)return Int8Array;if(e===O.R8Unorm)return Uint8Array;if(e===O.R8Snorm)return Int8Array;if(e===O.RG8Uint)return Uint8Array;if(e===O.RG8Sint)return Int8Array;if(e===O.RG8Unorm)return Uint8Array;if(e===O.RG8Snorm)return Int8Array;if(e===O.RGBA8Uint)return Uint8Array;if(e===O.RGBA8Sint)return Int8Array;if(e===O.RGBA8Unorm||e===O.RGBA8UnormSRGB)return Uint8Array;if(e===O.RGBA8Snorm)return Int8Array;if(e===O.R16Uint)return Uint16Array;if(e===O.R16Sint)return Int16Array;if(e===O.RG16Uint)return Uint16Array;if(e===O.RG16Sint)return Int16Array;if(e===O.RGBA16Uint)return Uint16Array;if(e===O.RGBA16Sint)return Int16Array;if(e===O.R16Float||e===O.RG16Float||e===O.RGBA16Float)return Uint16Array;if(e===O.R32Uint)return Uint32Array;if(e===O.R32Sint)return Int32Array;if(e===O.R32Float)return Float32Array;if(e===O.RG32Uint)return Uint32Array;if(e===O.RG32Sint)return Int32Array;if(e===O.RG32Float)return Float32Array;if(e===O.RGBA32Uint)return Uint32Array;if(e===O.RGBA32Sint)return Int32Array;if(e===O.RGBA32Float)return Float32Array;if(e===O.BGRA8Unorm||e===O.BGRA8UnormSRGB)return Uint8Array;if(e===O.RGB10A2Unorm||e===O.RGB9E5UFloat||e===O.RG11B10UFloat)return Uint32Array;if(e===O.Depth32Float)return Float32Array;if(e===O.Depth24Plus||e===O.Depth24PlusStencil8)return Uint32Array;if(e===O.Depth32FloatStencil8)return Float32Array}_getDimension(e){let n;return e.is3DTexture||e.isData3DTexture?n=R0.ThreeD:n=R0.TwoD,n}}function om(r,e=null){const n=r.format,i=r.type,s=r.colorSpace,o=Ze.getTransfer(s);let a;if(r.isCompressedTexture===!0||r.isCompressedArrayTexture===!0)switch(n){case vs:case xs:a=o===Ae?O.BC1RGBAUnormSRGB:O.BC1RGBAUnorm;break;case bs:a=o===Ae?O.BC2RGBAUnormSRGB:O.BC2RGBAUnorm;break;case Ts:a=o===Ae?O.BC3RGBAUnormSRGB:O.BC3RGBAUnorm;break;case Ha:a=O.BC4RUnorm;break;case Wa:a=O.BC4RSnorm;break;case $a:a=O.BC5RGUnorm;break;case ja:a=O.BC5RGSnorm;break;case Va:a=o===Ae?O.BC7RGBAUnormSRGB:O.BC7RGBAUnorm;break;case wa:case Ea:a=o===Ae?O.ETC2RGB8UnormSRGB:O.ETC2RGB8Unorm;break;case Aa:a=o===Ae?O.ETC2RGBA8UnormSRGB:O.ETC2RGBA8Unorm;break;case Ra:a=o===Ae?O.ASTC4x4UnormSRGB:O.ASTC4x4Unorm;break;case Ca:a=o===Ae?O.ASTC5x4UnormSRGB:O.ASTC5x4Unorm;break;case Na:a=o===Ae?O.ASTC5x5UnormSRGB:O.ASTC5x5Unorm;break;case Pa:a=o===Ae?O.ASTC6x5UnormSRGB:O.ASTC6x5Unorm;break;case Da:a=o===Ae?O.ASTC6x6UnormSRGB:O.ASTC6x6Unorm;break;case La:a=o===Ae?O.ASTC8x5UnormSRGB:O.ASTC8x5Unorm;break;case Ia:a=o===Ae?O.ASTC8x6UnormSRGB:O.ASTC8x6Unorm;break;case Ua:a=o===Ae?O.ASTC8x8UnormSRGB:O.ASTC8x8Unorm;break;case Fa:a=o===Ae?O.ASTC10x5UnormSRGB:O.ASTC10x5Unorm;break;case Oa:a=o===Ae?O.ASTC10x6UnormSRGB:O.ASTC10x6Unorm;break;case Ba:a=o===Ae?O.ASTC10x8UnormSRGB:O.ASTC10x8Unorm;break;case ka:a=o===Ae?O.ASTC10x10UnormSRGB:O.ASTC10x10Unorm;break;case za:a=o===Ae?O.ASTC12x10UnormSRGB:O.ASTC12x10Unorm;break;case Ga:a=o===Ae?O.ASTC12x12UnormSRGB:O.ASTC12x12Unorm;break;case sn:a=o===Ae?O.RGBA8UnormSRGB:O.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}else switch(n){case sn:switch(i){case ao:a=O.RGBA8Snorm;break;case lo:a=O.RGBA16Sint;break;case Qi:a=O.RGBA16Uint;break;case Gt:a=O.RGBA32Uint;break;case En:a=O.RGBA32Sint;break;case nn:a=o===Ae?O.RGBA8UnormSRGB:O.RGBA8Unorm;break;case An:a=O.RGBA16Float;break;case ln:a=O.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case Gc:switch(i){case Zh:a=O.RGB9E5UFloat;break;case Qh:a=O.RG11B10UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case Vc:switch(i){case ao:a=O.R8Snorm;break;case lo:a=O.R16Sint;break;case Qi:a=O.R16Uint;break;case Gt:a=O.R32Uint;break;case En:a=O.R32Sint;break;case nn:a=O.R8Unorm;break;case An:a=O.R16Float;break;case ln:a=O.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case qr:switch(i){case ao:a=O.RG8Snorm;break;case lo:a=O.RG16Sint;break;case Qi:a=O.RG16Uint;break;case Gt:a=O.RG32Uint;break;case En:a=O.RG32Sint;break;case nn:a=O.RG8Unorm;break;case An:a=O.RG16Float;break;case ln:a=O.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case Ei:switch(i){case Qi:a=O.Depth16Unorm;break;case Gt:a=O.Depth24Plus;break;case ln:a=O.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case wi:switch(i){case Mi:a=O.Depth24PlusStencil8;break;case ln:e&&e.features.has(sm.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),a=O.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case rl:switch(i){case En:a=O.R32Sint;break;case Gt:a=O.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case sl:switch(i){case En:a=O.RG32Sint;break;case Gt:a=O.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case ol:switch(i){case En:a=O.RGBA32Sint;break;case Gt:a=O.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}return a}const vz=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,xz=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,C0={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},bz=r=>{r=r.trim();const e=r.match(vz);if(e!==null&&e.length===4){const n=e[2],i=[];let s=null;for(;(s=xz.exec(n))!==null;)i.push({name:s[1],type:s[2]});const o=[];for(let h=0;h<i.length;h++){const{name:d,type:f}=i[h];let p=f;p.startsWith("ptr")?p="pointer":(p.startsWith("texture")&&(p=f.split("<")[0]),p=C0[p]),o.push(new Wg(p,d))}const a=r.substring(e[0].length),l=e[3]||"void",c=e[1]!==void 0?e[1]:"";return{type:C0[l]||l,inputs:o,name:c,inputsCode:n,blockCode:a,outputType:l}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class Tz extends jg{constructor(e){const{type:n,inputs:i,name:s,inputsCode:o,blockCode:a,outputType:l}=bz(e);super(n,i,s),this.inputsCode=o,this.blockCode=a,this.outputType=l}getCode(e=this.name){const n=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${n}`+this.blockCode}}class Sz extends fS{parseFunction(e){return new Tz(e)}}const Jo=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},Mz={[pr.READ_ONLY]:"read",[pr.WRITE_ONLY]:"write",[pr.READ_WRITE]:"read_write"},N0={[ho]:"repeat",[fr]:"clamp",[fo]:"mirror"},sh={vertex:Jo?Jo.VERTEX:1,fragment:Jo?Jo.FRAGMENT:2,compute:Jo?Jo.COMPUTE:4},P0={instance:!0,swizzleAssign:!1,storageBuffer:!0},Ez={"^^":"tsl_xor"},wz={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},D0={},Vl={tsl_xor:new qn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new qn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new qn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new qn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new qn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new qn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new qn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new qn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new qn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new qn("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new qn("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new qn("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new qn(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},Az={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};let MS="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(MS+=`diagnostic( off, derivative_uniformity );
`);class Rz extends dS{constructor(e,n){super(e,n,new Sz),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,n,i,s,o,a=this.shaderStage){return a==="fragment"?s?o?`textureSample( ${n}, ${n}_sampler, ${i}, ${s}, ${o} )`:`textureSample( ${n}, ${n}_sampler, ${i}, ${s} )`:o?`textureSample( ${n}, ${n}_sampler, ${i}, ${o} )`:`textureSample( ${n}, ${n}_sampler, ${i} )`:this.generateTextureSampleLevel(e,n,i,"0",s)}generateTextureSampleLevel(e,n,i,s,o,a){return this.isUnfilterable(e)===!1?a?`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,n,i,a,s):this.generateTextureLod(e,n,i,o,a,s)}generateWrapFunction(e){const n=`tsl_coord_${N0[e.wrapS]}S_${N0[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let i=D0[n];if(i===void 0){const s=[],o=e.isData3DTexture?"vec3f":"vec2f";let a=`fn ${n}( coord : ${o} ) -> ${o} {

	return ${o}(
`;const l=(c,u)=>{c===ho?(s.push(Vl.repeatWrapping_float),a+=`		tsl_repeatWrapping_float( coord.${u} )`):c===fr?(s.push(Vl.clampWrapping_float),a+=`		tsl_clampWrapping_float( coord.${u} )`):c===fo?(s.push(Vl.mirrorWrapping_float),a+=`		tsl_mirrorWrapping_float( coord.${u} )`):(a+=`		coord.${u}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${c}" for vertex shader.`))};l(e.wrapS,"x"),a+=`,
`,l(e.wrapT,"y"),e.isData3DTexture&&(a+=`,
`,l(e.wrapR,"z")),a+=`
	);

}
`,D0[n]=i=new qn(a,s)}return i.build(this),n}generateArrayDeclaration(e,n){return`array< ${this.getType(e)}, ${n} >`}generateTextureDimension(e,n,i){const s=this.getDataFromNode(e,this.shaderStage,this.globalCache);s.dimensionsSnippet===void 0&&(s.dimensionsSnippet={});let o=s.dimensionsSnippet[i];if(s.dimensionsSnippet[i]===void 0){let a,l;const{primarySamples:c}=this.renderer.backend.utils.getTextureSampleData(e),u=c>1;e.isData3DTexture?l="vec3<u32>":l="vec2<u32>",u||e.isStorageTexture?a=n:a=`${n}${i?`, u32( ${i} )`:""}`,o=new vh(new bh(`textureDimensions( ${a} )`,l)),s.dimensionsSnippet[i]=o,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(s.arrayLayerCount=new vh(new bh(`textureNumLayers(${n})`,"u32"))),e.isTextureCube&&(s.cubeFaceCount=new vh(new bh("6u","u32")))}return o.build(this)}generateFilteredTexture(e,n,i,s,o="0u"){this._include("biquadraticTexture");const a=this.generateWrapFunction(e),l=this.generateTextureDimension(e,n,o);return s&&(i=`${i} + vec2<f32>(${s}) / ${l}`),`tsl_biquadraticTexture( ${n}, ${a}( ${i} ), ${l}, u32( ${o} ) )`}generateTextureLod(e,n,i,s,o,a="0u"){const l=this.generateWrapFunction(e),c=this.generateTextureDimension(e,n,a),u=e.isData3DTexture?"vec3":"vec2";o&&(i=`${i} + ${u}<f32>(${o}) / ${u}<f32>( ${c} )`);const h=`${u}<u32>( ${l}( ${i} ) * ${u}<f32>( ${c} ) )`;return this.generateTextureLoad(e,n,h,s,null,a)}generateTextureLoad(e,n,i,s,o,a="0u"){let l;return o&&(i=`${i} + ${o}`),s?l=`textureLoad( ${n}, ${i}, ${s}, u32( ${a} ) )`:(l=`textureLoad( ${n}, ${i}, u32( ${a} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(l+=".x")),l}generateTextureStore(e,n,i,s,o){let a;return s?a=`textureStore( ${n}, ${i}, ${s}, ${o} )`:a=`textureStore( ${n}, ${i}, ${o} )`,a}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===ln||this.isSampleCompare(e)===!1&&e.minFilter===Wt&&e.magFilter===Wt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,n,i,s,o,a=this.shaderStage){let l=null;return this.isUnfilterable(e)?l=this.generateTextureLod(e,n,i,s,o,"0",a):l=this._generateTextureSample(e,n,i,s,o,a),l}generateTextureGrad(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return a?`textureSampleGrad( ${n}, ${n}_sampler, ${i},  ${s[0]}, ${s[1]}, ${a} )`:`textureSampleGrad( ${n}, ${n}_sampler, ${i},  ${s[0]}, ${s[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${l} shader.`)}generateTextureCompare(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?a?`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${o}, ${s}, ${a} )`:`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${o}, ${s} )`:a?`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${s} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${l} shader.`)}generateTextureLevel(e,n,i,s,o,a){return this.isUnfilterable(e)===!1?a?`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,n,i,a,s):this.generateTextureLod(e,n,i,o,a,s)}generateTextureBias(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return a?`textureSampleBias( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleBias( ${n}, ${n}_sampler, ${i}, ${s} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${l} shader.`)}getPropertyName(e,n=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(n==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const i=e.name,s=e.type;return s==="texture"||s==="cubeTexture"||s==="storageTexture"||s==="texture3D"?i:s==="buffer"||s==="storageBuffer"||s==="indirectStorageBuffer"?this.isCustomStruct(e)?i:i+".value":e.groupNode.name+"."+i}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const n=Ez[e];return n!==void 0?(this._include(n),n):null}getNodeAccess(e,n){return n!=="compute"?e.isAtomic===!0?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),pr.READ_WRITE):pr.READ_ONLY:e.access}getStorageAccess(e,n){return Mz[this.getNodeAccess(e,n)]}getUniformFromNode(e,n,i,s=null){const o=super.getUniformFromNode(e,n,i,s),a=this.getDataFromNode(e,i,this.globalCache);if(a.uniformGPU===void 0){let l;const c=e.groupNode,u=c.name,h=this.getBindGroupArray(u,i);if(n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"){let d=null;const f=this.getNodeAccess(e,i);if(n==="texture"||n==="storageTexture"?e.value.is3DTexture===!0?d=new rm(o.name,o.node,c,f):d=new xd(o.name,o.node,c,f):n==="cubeTexture"?d=new bS(o.name,o.node,c,f):n==="texture3D"&&(d=new rm(o.name,o.node,c,f)),d.store=e.isStorageTextureNode===!0,d.setVisibility(sh[i]),this.isUnfilterable(e.value)===!1&&d.store===!1){const p=new hz(`${o.name}_sampler`,o.node,c);p.setVisibility(sh[i]),h.push(p,d),l=[p,d]}else h.push(d),l=[d]}else if(n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"){const d=n==="buffer"?yS:pz,f=new d(e,c);f.setVisibility(sh[i]),h.push(f),l=f,o.name=s||"NodeBuffer_"+o.id}else{const d=this.uniformGroups[i]||(this.uniformGroups[i]={});let f=d[u];f===void 0&&(f=new vS(u,c),f.setVisibility(sh[i]),d[u]=f,h.push(f)),l=this.getNodeUniform(o,n),f.addUniform(l)}a.uniformGPU=l}return o}getBuiltin(e,n,i,s=this.shaderStage){const o=this.builtins[s]||(this.builtins[s]=new Map);return o.has(e)===!1&&o.set(e,{name:e,property:n,type:i}),n}hasBuiltin(e,n=this.shaderStage){return this.builtins[n]!==void 0&&this.builtins[n].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const n=e.layout,i=this.flowShaderNode(e),s=[];for(const a of n.inputs)s.push(a.name+" : "+this.getType(a.type));let o=`fn ${n.name}( ${s.join(", ")} ) -> ${this.getType(n.type)} {
${i.vars}
${i.code}
`;return i.result&&(o+=`	return ${i.result};
`),o+=`
}
`,o}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,n=this.shaderStage){(this.directives[n]||(this.directives[n]=new Set)).add(e)}getDirectives(e){const n=[],i=this.directives[e];if(i!==void 0)for(const s of i)n.push(`enable ${s};`);return n.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const n=[],i=this.builtins[e];if(i!==void 0)for(const{name:s,property:o,type:a}of i.values())n.push(`@builtin( ${s} ) ${o} : ${a}`);return n.join(`,
	`)}getScopedArray(e,n,i,s){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:n,bufferType:i,bufferCount:s}),e}getScopedArrays(e){if(e!=="compute")return;const n=[];for(const{name:i,scope:s,bufferType:o,bufferCount:a}of this.scopedArrays.values()){const l=this.getType(o);n.push(`var<${s}> ${i}: array< ${l}, ${a} >;`)}return n.join(`
`)}getAttributes(e){const n=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const i=this.getBuiltins("attribute");i&&n.push(i);const s=this.getAttributesArray();for(let o=0,a=s.length;o<a;o++){const l=s[o],c=l.name,u=this.getType(l.type);n.push(`@location( ${o} ) ${c} : ${u}`)}}return n.join(`,
	`)}getStructMembers(e){const n=[];for(const i of e.members){const s=e.output?"@location( "+i.index+" ) ":"";let o=this.getType(i.type);i.atomic&&(o="atomic< "+o+" >"),n.push(`	${s+i.name} : ${o}`)}return e.output&&n.push(`	${this.getBuiltins("output")}`),n.join(`,
`)}getStructs(e){let n="";const i=this.structs[e];if(i.length>0){const s=[];for(const o of i){let a=`struct ${o.name} {
`;a+=this.getStructMembers(o),a+=`
};`,s.push(a)}n=`
`+s.join(`

`)+`
`}return n}getVar(e,n,i=null){let s=`var ${n} : `;return i!==null?s+=this.generateArrayDeclaration(e,i):s+=this.getType(e),s}getVars(e){const n=[],i=this.vars[e];if(i!==void 0)for(const s of i)n.push(`	${this.getVar(s.type,s.name,s.count)};`);return`
${n.join(`
`)}
`}getVaryings(e){const n=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const o=this.varyings,a=this.vars[e];for(let l=0;l<o.length;l++){const c=o[l];if(c.needsInterpolation){let u=`@location( ${l} )`;if(c.interpolationType){const h=c.interpolationSampling!==null?`, ${c.interpolationSampling} )`:" )";u+=` @interpolate( ${c.interpolationType}${h}`}else/^(int|uint|ivec|uvec)/.test(c.type)&&(u+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);n.push(`${u} ${c.name} : ${this.getType(c.type)}`)}else e==="vertex"&&a.includes(c)===!1&&a.push(c)}}const i=this.getBuiltins(e);i&&n.push(i);const s=n.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+s):s}isCustomStruct(e){const n=e.value,i=e.node,s=(n.isBufferAttribute||n.isInstancedBufferAttribute)&&i.structTypeNode!==null,o=i.value&&i.value.array&&typeof i.value.itemSize=="number"&&i.value.array.length>i.value.itemSize;return s&&!o}getUniforms(e){const n=this.uniforms[e],i=[],s=[],o=[],a={};for(const c of n){const u=c.groupNode.name,h=this.bindingsIndexes[u];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const d=c.node.value;this.isUnfilterable(d)===!1&&c.node.isStorageTextureNode!==!0&&(this.isSampleCompare(d)?i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler_comparison;`):i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler;`));let f,p="";const{primarySamples:m}=this.renderer.backend.utils.getTextureSampleData(d);if(m>1&&(p="_multisampled"),d.isCubeTexture===!0)f="texture_cube<f32>";else if(d.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&d.compareFunction===null?f=`texture${p}_2d<f32>`:f=`texture_depth${p}_2d${d.isArrayTexture===!0?"_array":""}`;else if(c.node.isStorageTextureNode===!0){const y=om(d),_=this.getStorageAccess(c.node,e),g=c.node.value.is3DTexture,v=c.node.value.isArrayTexture;f=`texture_storage_${g?"3d":`2d${v?"_array":""}`}<${y}, ${_}>`}else if(d.isArrayTexture===!0||d.isDataArrayTexture===!0||d.isCompressedArrayTexture===!0)f="texture_2d_array<f32>";else if(d.is3DTexture===!0||d.isData3DTexture===!0)f="texture_3d<f32>";else{const y=this.getComponentTypeFromTexture(d).charAt(0);f=`texture${p}_2d<${y}32>`}i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name} : ${f};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const d=c.node,f=this.getType(d.getNodeType(this)),p=d.bufferCount,m=p>0&&c.type==="buffer"?", "+p:"",y=d.isStorageBufferNode?`storage, ${this.getStorageAccess(d,e)}`:"uniform";if(this.isCustomStruct(c))s.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var<${y}> ${c.name} : ${f};`);else{const g=`	value : array< ${d.isAtomic?`atomic<${f}>`:`${f}`}${m} >`;s.push(this._getWGSLStructBinding(c.name,g,y,h.binding++,h.group))}}else{const d=this.getType(this.getVectorType(c.type)),f=c.groupNode.name;(a[f]||(a[f]={index:h.binding++,id:h.group,snippets:[]})).snippets.push(`	${c.name} : ${d}`)}}for(const c in a){const u=a[c];o.push(this._getWGSLStructBinding(c,u.snippets.join(`,
`),"uniform",u.index,u.id))}let l=i.join(`
`);return l+=s.join(`
`),l+=o.join(`
`),l}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const n in e){this.shaderStage=n;const i=e[n];i.uniforms=this.getUniforms(n),i.attributes=this.getAttributes(n),i.varyings=this.getVaryings(n),i.structs=this.getStructs(n),i.vars=this.getVars(n),i.codes=this.getCodes(n),i.directives=this.getDirectives(n),i.scopedArrays=this.getScopedArrays(n);let s=`// code

`;s+=this.flowCode[n];const o=this.flowNodes[n],a=o[o.length-1],l=a.outputNode,c=l!==void 0&&l.isOutputStructNode===!0;for(const u of o){const h=this.getFlowData(u),d=u.name;if(d&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${d}
`),s+=`${h.code}
	`,u===a&&n!=="compute"){if(s+=`// result

	`,n==="vertex")s+=`varyings.Vertex = ${h.result};`;else if(n==="fragment")if(c)i.returnType=l.getNodeType(this),i.structs+="var<private> output : "+i.returnType+";",s+=`return ${h.result};`;else{let f="	@location(0) color: vec4<f32>";const p=this.getBuiltins("output");p&&(f+=`,
	`+p),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",f),i.structs+=`
var<private> output : OutputStruct;`,s+=`output.color = ${h.result};

	return output;`}}}i.flow=s}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const n=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,n)}}getMethod(e,n=null){let i;return n!==null&&(i=this._getWGSLMethod(e+"_"+n)),i===void 0&&(i=this._getWGSLMethod(e)),i||e}getBitcastMethod(e){return`bitcast<${this.getType(e)}>`}getTernary(e,n,i){return`select( ${i}, ${n}, ${e} )`}getType(e){return wz[e]||e}isAvailable(e){let n=P0[e];return n===void 0&&(e==="float32Filterable"?n=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(n=this.renderer.hasFeature("clip-distances")),P0[e]=n),n}_getWGSLMethod(e){return Vl[e]!==void 0&&this._include(e),Az[e]}_include(e){const n=Vl[e];return n.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(n),n}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${MS}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,n){const[i,s,o]=n;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${i}, ${s}, ${o} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${i} * numWorkgroups.x )
		+ globalId.z * ( ${i} * numWorkgroups.x ) * ( ${s} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,n){return`
struct ${e} {
${n}
};`}_getWGSLStructBinding(e,n,i,s=0,o=0){const a=e+"Struct";return`${this._getWGSLStruct(a,n)}
@binding( ${s} ) @group( ${o} )
var<${i}> ${e} : ${a};`}}class Cz{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let n;return e.depthTexture!==null?n=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?n=O.Depth24PlusStencil8:e.depth&&(n=O.Depth24Plus),n}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let n;if(e.isFramebufferTexture)n=1;else if(e.isDepthTexture&&!e.renderTarget){const o=this.backend.renderer,a=o.getRenderTarget();n=a?a.samples:o.samples}else e.renderTarget&&(n=e.renderTarget.samples);n=n||1;const i=n>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:n,primarySamples:i?1:n,isMSAA:i}}getCurrentColorFormat(e){let n;return e.textures!==null?n=this.getTextureFormatGPU(e.textures[0]):n=this.getPreferredCanvasFormat(),n}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,n){if(e.isPoints)return ua.PointList;if(e.isLineSegments||e.isMesh&&n.wireframe===!0)return ua.LineList;if(e.isLine)return ua.LineStrip;if(e.isMesh)return ua.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===nn)return O.BGRA8Unorm;if(e===An)return O.RGBA16Float;throw new Error("Unsupported outputType")}}const ES=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&ES.set(Float16Array,["float16"]);const Nz=new Map([[Rx,["float16"]]]),Pz=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Dz{constructor(e){this.backend=e}createAttribute(e,n){const i=this._getBufferAttribute(e),s=this.backend,o=s.get(i);let a=o.buffer;if(a===void 0){const l=s.device;let c=i.array;if(e.normalized===!1){if(c.constructor===Int16Array||c.constructor===Int8Array)c=new Int32Array(c);else if((c.constructor===Uint16Array||c.constructor===Uint8Array)&&(c=new Uint32Array(c),n&GPUBufferUsage.INDEX))for(let d=0;d<c.length;d++)c[d]===65535&&(c[d]=4294967295)}if(i.array=c,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&i.itemSize===3){c=new c.constructor(i.count*4);for(let d=0;d<i.count;d++)c.set(i.array.subarray(d*3,d*3+3),d*4);i.itemSize=4,i.array=c,o._force3to4BytesAlignment=!0}const u=c.byteLength,h=u+(4-u%4)%4;a=l.createBuffer({label:i.name,size:h,usage:n,mappedAtCreation:!0}),new c.constructor(a.getMappedRange()).set(c),a.unmap(),o.buffer=a}}updateAttribute(e){const n=this._getBufferAttribute(e),i=this.backend,s=i.device,o=i.get(n),a=i.get(n).buffer;let l=n.array;if(o._force3to4BytesAlignment===!0){l=new l.constructor(n.count*4);for(let h=0;h<n.count;h++)l.set(n.array.subarray(h*3,h*3+3),h*4);n.array=l}const c=this._isTypedArray(l),u=n.updateRanges;if(u.length===0)s.queue.writeBuffer(a,0,l,0);else{const h=c?1:l.BYTES_PER_ELEMENT;for(let d=0,f=u.length;d<f;d++){const p=u[d];let m,y;if(o._force3to4BytesAlignment===!0){const g=Math.floor(p.start/3),v=Math.ceil(p.count/3);m=g*4*h,y=v*4*h}else m=p.start*h,y=p.count*h;const _=m*(c?l.BYTES_PER_ELEMENT:1);s.queue.writeBuffer(a,_,l,m,y)}n.clearUpdateRanges()}}createShaderVertexBuffers(e){const n=e.getAttributes(),i=new Map;for(let s=0;s<n.length;s++){const o=n[s],a=o.array.BYTES_PER_ELEMENT,l=this._getBufferAttribute(o);let c=i.get(l);if(c===void 0){let d,f;o.isInterleavedBufferAttribute===!0?(d=o.data.stride*a,f=o.data.isInstancedInterleavedBuffer?rh.Instance:rh.Vertex):(d=o.itemSize*a,f=o.isInstancedBufferAttribute?rh.Instance:rh.Vertex),o.normalized===!1&&(o.array.constructor===Int16Array||o.array.constructor===Uint16Array)&&(d=4),c={arrayStride:d,attributes:[],stepMode:f},i.set(l,c)}const u=this._getVertexFormat(o),h=o.isInterleavedBufferAttribute===!0?o.offset*a:0;c.attributes.push({shaderLocation:s,offset:h,format:u})}return Array.from(i.values())}destroyAttribute(e){const n=this.backend;n.get(this._getBufferAttribute(e)).buffer.destroy(),n.delete(e)}async getArrayBufferAsync(e){const n=this.backend,i=n.device,o=n.get(this._getBufferAttribute(e)).buffer,a=o.size,l=i.createBuffer({label:`${e.name}_readback`,size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=i.createCommandEncoder({label:`readback_encoder_${e.name}`});c.copyBufferToBuffer(o,0,l,0,a);const u=c.finish();i.queue.submit([u]),await l.mapAsync(GPUMapMode.READ);const h=l.getMappedRange(),d=new e.array.constructor(h.slice(0));return l.unmap(),d.buffer}_getVertexFormat(e){const{itemSize:n,normalized:i}=e,s=e.array.constructor,o=e.constructor;let a;if(n===1)a=Pz.get(s);else{const c=(Nz.get(o)||ES.get(s))[i?1:0];if(c){const u=s.BYTES_PER_ELEMENT*n,d=Math.floor((u+3)/4)*4/s.BYTES_PER_ELEMENT;if(d%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");a=`${c}x${d}`}}return a||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),a}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Lz{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const n=this.backend,i=n.device,s=[];let o=0;for(const a of e.bindings){const l={binding:o++,visibility:a.visibility};if(a.isUniformBuffer||a.isStorageBuffer){const c={};a.isStorageBuffer&&(a.visibility&4&&(a.access===pr.READ_WRITE||a.access===pr.WRITE_ONLY)?c.type=lp.Storage:c.type=lp.ReadOnlyStorage),l.buffer=c}else if(a.isSampledTexture&&a.store){const c={};c.format=this.backend.get(a.texture).texture.format;const u=a.access;u===pr.READ_WRITE?c.access=cp.ReadWrite:u===pr.WRITE_ONLY?c.access=cp.WriteOnly:c.access=cp.ReadOnly,a.texture.isArrayTexture?c.viewDimension=pn.TwoDArray:a.texture.is3DTexture&&(c.viewDimension=pn.ThreeD),l.storageTexture=c}else if(a.isSampledTexture){const c={},{primarySamples:u}=n.utils.getTextureSampleData(a.texture);if(u>1&&(c.multisampled=!0,a.texture.isDepthTexture||(c.sampleType=qs.UnfilterableFloat)),a.texture.isDepthTexture)n.compatibilityMode&&a.texture.compareFunction===null?c.sampleType=qs.UnfilterableFloat:c.sampleType=qs.Depth;else if(a.texture.isDataTexture||a.texture.isDataArrayTexture||a.texture.isData3DTexture){const h=a.texture.type;h===En?c.sampleType=qs.SInt:h===Gt?c.sampleType=qs.UInt:h===ln&&(this.backend.hasFeature("float32-filterable")?c.sampleType=qs.Float:c.sampleType=qs.UnfilterableFloat)}a.isSampledCubeTexture?c.viewDimension=pn.Cube:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?c.viewDimension=pn.TwoDArray:a.isSampledTexture3D&&(c.viewDimension=pn.ThreeD),l.texture=c}else if(a.isSampler){const c={};a.texture.isDepthTexture&&(a.texture.compareFunction!==null?c.type=A0.Comparison:n.compatibilityMode&&(c.type=A0.NonFiltering)),l.sampler=c}else console.error(`WebGPUBindingUtils: Unsupported binding "${a}".`);s.push(l)}return i.createBindGroupLayout({entries:s})}createBindings(e,n,i,s=0){const{backend:o,bindGroupLayoutCache:a}=this,l=o.get(e);let c=a.get(e.bindingsReference);c===void 0&&(c=this.createBindingsLayout(e),a.set(e.bindingsReference,c));let u;i>0&&(l.groups===void 0&&(l.groups=[],l.versions=[]),l.versions[i]===s&&(u=l.groups[i])),u===void 0&&(u=this.createBindGroup(e,c),i>0&&(l.groups[i]=u,l.versions[i]=s)),l.group=u,l.layout=c}updateBinding(e){const n=this.backend,i=n.device,s=e.buffer,o=n.get(e).buffer;i.queue.writeBuffer(o,0,s,0)}createBindGroupIndex(e,n){const s=this.backend.device,o=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,a=e[0],l=s.createBuffer({label:"bindingCameraIndex_"+a,size:16,usage:o});s.queue.writeBuffer(l,0,e,0);const c=[{binding:0,resource:{buffer:l}}];return s.createBindGroup({label:"bindGroupCameraIndex_"+a,layout:n,entries:c})}createBindGroup(e,n){const i=this.backend,s=i.device;let o=0;const a=[];for(const l of e.bindings){if(l.isUniformBuffer){const c=i.get(l);if(c.buffer===void 0){const u=l.byteLength,h=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,d=s.createBuffer({label:"bindingBuffer_"+l.name,size:u,usage:h});c.buffer=d}a.push({binding:o,resource:{buffer:c.buffer}})}else if(l.isStorageBuffer){const c=i.get(l);if(c.buffer===void 0){const u=l.attribute;c.buffer=i.get(u).buffer}a.push({binding:o,resource:{buffer:c.buffer}})}else if(l.isSampledTexture){const c=i.get(l.texture);let u;if(c.externalTexture!==void 0)u=s.importExternalTexture({source:c.externalTexture});else{const h=l.store?1:c.texture.mipLevelCount;let d=`view-${c.texture.width}-${c.texture.height}`;if(c.texture.depthOrArrayLayers>1&&(d+=`-${c.texture.depthOrArrayLayers}`),d+=`-${h}`,u=c[d],u===void 0){const f=uz.All;let p;l.isSampledCubeTexture?p=pn.Cube:l.isSampledTexture3D?p=pn.ThreeD:l.texture.isArrayTexture||l.texture.isDataArrayTexture||l.texture.isCompressedArrayTexture?p=pn.TwoDArray:p=pn.TwoD,u=c[d]=c.texture.createView({aspect:f,dimension:p,mipLevelCount:h})}}a.push({binding:o,resource:u})}else if(l.isSampler){const c=i.get(l.texture);a.push({binding:o,resource:c.sampler})}o++}return s.createBindGroup({label:"bindGroup_"+e.name,layout:n,entries:a})}}class Iz{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,n){this._activePipelines.get(e)!==n&&(e.setPipeline(n),this._activePipelines.set(e,n))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,n){const{object:i,material:s,geometry:o,pipeline:a}=e,{vertexProgram:l,fragmentProgram:c}=a,u=this.backend,h=u.device,d=u.utils,f=u.get(a),p=[];for(const F of e.getBindings()){const k=u.get(F);p.push(k.layout)}const m=u.attributeUtils.createShaderVertexBuffers(e);let y;s.blending!==oi&&(s.blending!==Si||s.transparent!==!1)&&(y=this._getBlending(s));let _={};s.stencilWrite===!0&&(_={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const g=this._getColorWriteMask(s),v=[];if(e.context.textures!==null){const F=e.context.textures;for(let k=0;k<F.length;k++){const Y=d.getTextureFormatGPU(F[k]);v.push({format:Y,blend:y,writeMask:g})}}else{const F=d.getCurrentColorFormat(e.context);v.push({format:F,blend:y,writeMask:g})}const x=u.get(l).module,T=u.get(c).module,b=this._getPrimitiveState(i,o,s),S=this._getDepthCompare(s),M=d.getCurrentDepthStencilFormat(e.context),A=this._getSampleCount(e.context),E={label:`renderPipeline_${s.name||s.type}_${s.id}`,vertex:Object.assign({},x,{buffers:m}),fragment:Object.assign({},T,{targets:v}),primitive:b,multisample:{count:A,alphaToCoverageEnabled:s.alphaToCoverage&&A>1},layout:h.createPipelineLayout({bindGroupLayouts:p})},w={},N=e.context.depth,D=e.context.stencil;if((N===!0||D===!0)&&(N===!0&&(w.format=M,w.depthWriteEnabled=s.depthWrite,w.depthCompare=S),D===!0&&(w.stencilFront=_,w.stencilBack={},w.stencilReadMask=s.stencilFuncMask,w.stencilWriteMask=s.stencilWriteMask),s.polygonOffset===!0&&(w.depthBias=s.polygonOffsetUnits,w.depthBiasSlopeScale=s.polygonOffsetFactor,w.depthBiasClamp=0),E.depthStencil=w),n===null)f.pipeline=h.createRenderPipeline(E);else{const F=new Promise(k=>{h.createRenderPipelineAsync(E).then(Y=>{f.pipeline=Y,k()})});n.push(F)}}createBundleEncoder(e,n="renderBundleEncoder"){const i=this.backend,{utils:s,device:o}=i,a=s.getCurrentDepthStencilFormat(e),l=s.getCurrentColorFormat(e),c=this._getSampleCount(e),u={label:n,colorFormats:[l],depthStencilFormat:a,sampleCount:c};return o.createRenderBundleEncoder(u)}createComputePipeline(e,n){const i=this.backend,s=i.device,o=i.get(e.computeProgram).module,a=i.get(e),l=[];for(const c of n){const u=i.get(c);l.push(u.layout)}a.pipeline=s.createComputePipeline({compute:o,layout:s.createPipelineLayout({bindGroupLayouts:l})})}_getBlending(e){let n,i;const s=e.blending,o=e.blendSrc,a=e.blendDst,l=e.blendEquation;if(s===ha){const c=e.blendSrcAlpha!==null?e.blendSrcAlpha:o,u=e.blendDstAlpha!==null?e.blendDstAlpha:a,h=e.blendEquationAlpha!==null?e.blendEquationAlpha:l;n={srcFactor:this._getBlendFactor(o),dstFactor:this._getBlendFactor(a),operation:this._getBlendOperation(l)},i={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(u),operation:this._getBlendOperation(h)}}else{const c=e.premultipliedAlpha,u=(h,d,f,p)=>{n={srcFactor:h,dstFactor:d,operation:js.Add},i={srcFactor:f,dstFactor:p,operation:js.Add}};if(c)switch(s){case Si:u(yt.One,yt.OneMinusSrcAlpha,yt.One,yt.OneMinusSrcAlpha);break;case xa:u(yt.One,yt.One,yt.One,yt.One);break;case ba:u(yt.Zero,yt.OneMinusSrc,yt.Zero,yt.One);break;case Ta:u(yt.Dst,yt.OneMinusSrcAlpha,yt.Zero,yt.One);break}else switch(s){case Si:u(yt.SrcAlpha,yt.OneMinusSrcAlpha,yt.One,yt.OneMinusSrcAlpha);break;case xa:u(yt.SrcAlpha,yt.One,yt.One,yt.One);break;case ba:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ta:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(n!==void 0&&i!==void 0)return{color:n,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",s)}_getBlendFactor(e){let n;switch(e){case Br:n=yt.Zero;break;case Am:n=yt.One;break;case Rm:n=yt.Src;break;case Cm:n=yt.OneMinusSrc;break;case mc:n=yt.SrcAlpha;break;case gc:n=yt.OneMinusSrcAlpha;break;case Dm:n=yt.Dst;break;case Lm:n=yt.OneMinusDst;break;case Nm:n=yt.DstAlpha;break;case Pm:n=yt.OneMinusDstAlpha;break;case Im:n=yt.SrcAlphaSaturated;break;case bB:n=yt.Constant;break;case TB:n=yt.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return n}_getStencilCompare(e){let n;const i=e.stencilFunc;switch(i){case sE:n=Rn.Never;break;case Dp:n=Rn.Always;break;case oE:n=Rn.Less;break;case lE:n=Rn.LessEqual;break;case aE:n=Rn.Equal;break;case hE:n=Rn.GreaterEqual;break;case cE:n=Rn.Greater;break;case uE:n=Rn.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return n}_getStencilOperation(e){let n;switch(e){case Ks:n=ds.Keep;break;case QM:n=ds.Zero;break;case JM:n=ds.Replace;break;case rE:n=ds.Invert;break;case eE:n=ds.IncrementClamp;break;case tE:n=ds.DecrementClamp;break;case nE:n=ds.IncrementWrap;break;case iE:n=ds.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",n)}return n}_getBlendOperation(e){let n;switch(e){case kn:n=js.Add;break;case Em:n=js.Subtract;break;case wm:n=js.ReverseSubtract;break;case mx:n=js.Min;break;case gx:n=js.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return n}_getPrimitiveState(e,n,i){const s={},o=this.backend.utils;s.topology=o.getPrimitiveTopology(e,i),n.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(s.stripIndexFormat=n.index.array instanceof Uint16Array?el.Uint16:el.Uint32);let a=i.side===Ut;return e.isMesh&&e.matrixWorld.determinant()<0&&(a=!a),s.frontFace=a===!0?M0.CW:M0.CCW,s.cullMode=i.side===Bn?E0.None:E0.Back,s}_getColorWriteMask(e){return e.colorWrite===!0?w0.All:w0.None}_getDepthCompare(e){let n;if(e.depthTest===!1)n=Rn.Always;else{const i=e.depthFunc;switch(i){case _c:n=Rn.Never;break;case yc:n=Rn.Always;break;case vc:n=Rn.Less;break;case Es:n=Rn.LessEqual;break;case xc:n=Rn.Equal;break;case bc:n=Rn.GreaterEqual;break;case Tc:n=Rn.Greater;break;case Sc:n=Rn.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return n}}class Uz extends SS{constructor(e,n,i=2048){super(i),this.device=e,this.type=n,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${n}`});const s=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${n}`,size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${n}`,size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Ai(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const n=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e,n),n}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),n=this.currentQueryIndex,i=n*8;this.currentQueryIndex=0,this.queryOffsets.clear();const s=this.device.createCommandEncoder();s.resolveQuerySet(this.querySet,0,n,this.resolveBuffer,0),s.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,i);const o=s.finish();if(this.device.queue.submit([o]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,i),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const a=new BigUint64Array(this.resultBuffer.getMappedRange(0,i));let l=0;for(const[,c]of e){const u=a[c],h=a[c+1],d=Number(h-u)/1e6;l+=d}return this.resultBuffer.unmap(),this.lastValue=l,l}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class Fz extends TS{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new Cz(this),this.attributeUtils=new Dz(this),this.bindingUtils=new Lz(this),this.pipelineUtils=new Iz(this),this.textureUtils=new yz(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const n=this.parameters;let i;if(n.device===void 0){const l={powerPreference:n.powerPreference,featureLevel:n.compatibilityMode?"compatibility":void 0},c=typeof navigator<"u"?await navigator.gpu.requestAdapter(l):null;if(c===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const u=Object.values(sm),h=[];for(const f of u)c.features.has(f)&&h.push(f);const d={requiredFeatures:h,requiredLimits:n.requiredLimits};i=await c.requestDevice(d)}else i=n.device;i.lost.then(l=>{const c={api:"WebGPU",message:l.message||"Unknown reason",reason:l.reason||null,originalEvent:l};e.onDeviceLost(c)});const s=n.context!==void 0?n.context:e.domElement.getContext("webgpu");this.device=i,this.context=s;const o=n.alpha?"premultiplied":"opaque",a=Ze.getToneMappingMode(this.renderer.outputColorSpace);this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:o,toneMapping:{mode:a}}),this.trackTimestamp=this.trackTimestamp&&this.hasFeature(sm.TimestampQuery),this.updateSize()}get coordinateSystem(){return ws}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const i=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()});const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const n=e.colorAttachments[0];return this.renderer.samples>0?n.resolveTarget=this.context.getCurrentTexture().createView():n.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,n={}){const i=e.renderTarget,s=this.get(i);let o=s.descriptors;(o===void 0||s.width!==i.width||s.height!==i.height||s.samples!==i.samples)&&(o={},s.descriptors=o);const a=e.getCacheKey();let l=o[a];if(l===void 0){const u=e.textures,h=[];let d;const f=this._isRenderCameraDepthArray(e);for(let p=0;p<u.length;p++){const m=this.get(u[p]),y={label:`colorAttachment_${p}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:pn.TwoD};if(i.isRenderTarget3D)d=e.activeCubeFace,y.baseArrayLayer=0,y.dimension=pn.ThreeD,y.depthOrArrayLayers=u[p].image.depth;else if(i.isRenderTarget&&u[p].image.depth>1)if(f===!0){const _=e.camera.cameras;for(let g=0;g<_.length;g++){const v={...y,baseArrayLayer:g,arrayLayerCount:1,dimension:pn.TwoD},x=m.texture.createView(v);h.push({view:x,resolveTarget:void 0,depthSlice:void 0})}}else y.dimension=pn.TwoDArray,y.depthOrArrayLayers=u[p].image.depth;if(f!==!0){const _=m.texture.createView(y);let g,v;m.msaaTexture!==void 0?(g=m.msaaTexture.createView(),v=_):(g=_,v=void 0),h.push({view:g,resolveTarget:v,depthSlice:d})}}if(l={textureViews:h},e.depth){const p=this.get(e.depthTexture),m={};e.depthTexture.isArrayTexture&&(m.dimension=pn.TwoD,m.arrayLayerCount=1,m.baseArrayLayer=e.activeCubeFace),l.depthStencilView=p.texture.createView(m)}o[a]=l,s.width=i.width,s.height=i.height,s.samples=i.samples,s.activeMipmapLevel=e.activeMipmapLevel,s.activeCubeFace=e.activeCubeFace}const c={colorAttachments:[]};for(let u=0;u<l.textureViews.length;u++){const h=l.textureViews[u];let d={r:0,g:0,b:0,a:1};u===0&&n.clearValue&&(d=n.clearValue),c.colorAttachments.push({view:h.view,depthSlice:h.depthSlice,resolveTarget:h.resolveTarget,loadOp:n.loadOp||wt.Load,storeOp:n.storeOp||Xn.Store,clearValue:d})}return l.depthStencilView&&(c.depthStencilAttachment={view:l.depthStencilView}),c}beginRender(e){const n=this.get(e);n.frameCalls=this.renderer.info.render.frameCalls;const i=this.device,s=e.occlusionQueryCount;let o;s>0&&(n.currentOcclusionQuerySet&&n.currentOcclusionQuerySet.destroy(),n.currentOcclusionQueryBuffer&&n.currentOcclusionQueryBuffer.destroy(),n.currentOcclusionQuerySet=n.occlusionQuerySet,n.currentOcclusionQueryBuffer=n.occlusionQueryBuffer,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,o=i.createQuerySet({type:"occlusion",count:s,label:`occlusionQuerySet_${e.id}`}),n.occlusionQuerySet=o,n.occlusionQueryIndex=0,n.occlusionQueryObjects=new Array(s),n.lastOcclusionObject=null);let a;e.textures===null?a=this._getDefaultRenderPassDescriptor():a=this._getRenderPassDescriptor(e,{loadOp:wt.Load}),this.initTimestampQuery(ra.RENDER,this.getTimestampUID(e),a),a.occlusionQuerySet=o;const l=a.depthStencilAttachment;if(e.textures!==null){const u=a.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=wt.Clear):d.loadOp=wt.Load,d.storeOp=Xn.Store}}else{const u=a.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=wt.Clear):u.loadOp=wt.Load,u.storeOp=Xn.Store}e.depth&&(e.clearDepth?(l.depthClearValue=e.clearDepthValue,l.depthLoadOp=wt.Clear):l.depthLoadOp=wt.Load,l.depthStoreOp=Xn.Store),e.stencil&&(e.clearStencil?(l.stencilClearValue=e.clearStencilValue,l.stencilLoadOp=wt.Clear):l.stencilLoadOp=wt.Load,l.stencilStoreOp=Xn.Store);const c=i.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const u=e.camera.cameras;!n.layerDescriptors||n.layerDescriptors.length!==u.length?this._createDepthLayerDescriptors(e,n,a,u):this._updateDepthLayerDescriptors(e,n,u),n.bundleEncoders=[],n.bundleSets=[];for(let h=0;h<u.length;h++){const d=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+h),f={attributes:{},bindingGroups:[],pipeline:null,index:null};n.bundleEncoders.push(d),n.bundleSets.push(f)}n.currentPass=null}else{const u=c.beginRenderPass(a);if(n.currentPass=u,e.viewport&&this.updateViewport(e),e.scissor){const{x:h,y:d,width:f,height:p}=e.scissorValue;u.setScissorRect(h,d,f,p)}}n.descriptor=a,n.encoder=c,n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.renderBundles=[]}_createDepthLayerDescriptors(e,n,i,s){const o=i.depthStencilAttachment;n.layerDescriptors=[];const a=this.get(e.depthTexture);a.viewCache||(a.viewCache=[]);for(let l=0;l<s.length;l++){const c={...i,colorAttachments:[{...i.colorAttachments[0],view:i.colorAttachments[l].view}]};if(i.depthStencilAttachment){const u=l;a.viewCache[u]||(a.viewCache[u]=a.texture.createView({dimension:pn.TwoD,baseArrayLayer:l,arrayLayerCount:1})),c.depthStencilAttachment={view:a.viewCache[u],depthLoadOp:o.depthLoadOp||wt.Clear,depthStoreOp:o.depthStoreOp||Xn.Store,depthClearValue:o.depthClearValue||1},e.stencil&&(c.depthStencilAttachment.stencilLoadOp=o.stencilLoadOp,c.depthStencilAttachment.stencilStoreOp=o.stencilStoreOp,c.depthStencilAttachment.stencilClearValue=o.stencilClearValue)}else c.depthStencilAttachment={...o};n.layerDescriptors.push(c)}}_updateDepthLayerDescriptors(e,n,i){for(let s=0;s<i.length;s++){const o=n.layerDescriptors[s];if(o.depthStencilAttachment){const a=o.depthStencilAttachment;e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=wt.Clear):a.depthLoadOp=wt.Load),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=wt.Clear):a.stencilLoadOp=wt.Load)}}}finishRender(e){const n=this.get(e),i=e.occlusionQueryCount;n.renderBundles.length>0&&n.currentPass.executeBundles(n.renderBundles),i>n.occlusionQueryIndex&&n.currentPass.endOcclusionQuery();const s=n.encoder;if(this._isRenderCameraDepthArray(e)===!0){const o=[];for(let a=0;a<n.bundleEncoders.length;a++){const l=n.bundleEncoders[a];o.push(l.finish())}for(let a=0;a<n.layerDescriptors.length;a++)if(a<o.length){const l=n.layerDescriptors[a],c=s.beginRenderPass(l);if(e.viewport){const{x:u,y:h,width:d,height:f,minDepth:p,maxDepth:m}=e.viewportValue;c.setViewport(u,h,d,f,p,m)}if(e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;c.setScissorRect(u,h,d,f)}c.executeBundles([o[a]]),c.end()}}else n.currentPass&&n.currentPass.end();if(i>0){const o=i*8;let a=this.occludedResolveCache.get(o);a===void 0&&(a=this.device.createBuffer({size:o,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(o,a));const l=this.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});n.encoder.resolveQuerySet(n.occlusionQuerySet,0,i,a,0),n.encoder.copyBufferToBuffer(a,0,l,0,o),n.occlusionQueryBuffer=l,this.resolveOccludedAsync(e)}if(this.device.queue.submit([n.encoder.finish()]),e.textures!==null){const o=e.textures;for(let a=0;a<o.length;a++){const l=o[a];l.generateMipmaps===!0&&this.textureUtils.generateMipmaps(l)}}}isOccluded(e,n){const i=this.get(e);return i.occluded&&i.occluded.has(n)}async resolveOccludedAsync(e){const n=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:s}=n;if(i&&s){const o=new WeakSet;n.currentOcclusionQueryObjects=null,n.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const a=i.getMappedRange(),l=new BigUint64Array(a);for(let c=0;c<s.length;c++)l[c]===BigInt(0)&&o.add(s[c]);i.destroy(),n.occluded=o}}updateViewport(e){const{currentPass:n}=this.get(e),{x:i,y:s,width:o,height:a,minDepth:l,maxDepth:c}=e.viewportValue;n.setViewport(i,s,o,a,l,c)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,n,i,s=null){const o=this.device,a=this.renderer;let l=[],c,u,h,d;if(e){const m=this.getClearColor();u={r:m.r,g:m.g,b:m.b,a:m.a}}if(s===null){h=a.depth,d=a.stencil;const m=this._getDefaultRenderPassDescriptor();if(e){l=m.colorAttachments;const y=l[0];y.clearValue=u,y.loadOp=wt.Clear,y.storeOp=Xn.Store}(h||d)&&(c=m.depthStencilAttachment)}else{h=s.depth,d=s.stencil;const m={loadOp:e?wt.Clear:wt.Load,clearValue:e?u:void 0};h&&(m.depthLoadOp=n?wt.Clear:wt.Load,m.depthClearValue=n?a.getClearDepth():void 0,m.depthStoreOp=Xn.Store),d&&(m.stencilLoadOp=i?wt.Clear:wt.Load,m.stencilClearValue=i?a.getClearStencil():void 0,m.stencilStoreOp=Xn.Store);const y=this._getRenderPassDescriptor(s,m);l=y.colorAttachments,c=y.depthStencilAttachment}h&&c&&(n?(c.depthLoadOp=wt.Clear,c.depthClearValue=a.getClearDepth(),c.depthStoreOp=Xn.Store):(c.depthLoadOp=wt.Load,c.depthStoreOp=Xn.Store)),d&&c&&(i?(c.stencilLoadOp=wt.Clear,c.stencilClearValue=a.getClearStencil(),c.stencilStoreOp=Xn.Store):(c.stencilLoadOp=wt.Load,c.stencilStoreOp=Xn.Store));const f=o.createCommandEncoder({label:"clear"});f.beginRenderPass({colorAttachments:l,depthStencilAttachment:c}).end(),o.queue.submit([f.finish()])}beginCompute(e){const n=this.get(e);n.frameCalls=this.renderer.info.compute.frameCalls;const i={label:"computeGroup_"+e.id};this.initTimestampQuery(ra.COMPUTE,this.getTimestampUID(e),i),n.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),n.passEncoderGPU=n.cmdEncoderGPU.beginComputePass(i)}compute(e,n,i,s,o=null){const a=this.get(n),{passEncoderGPU:l}=this.get(e),c=this.get(s).pipeline;this.pipelineUtils.setPipeline(l,c);for(let h=0,d=i.length;h<d;h++){const f=i[h],p=this.get(f);l.setBindGroup(h,p.group)}let u;if(o===null&&(o=n.count),typeof o=="number"){const h=o;if(a.dispatchSize===void 0||a.count!==h){a.dispatchSize=[0,1,1],a.count=h;const d=n.workgroupSize;let f=d[0];for(let y=1;y<d.length;y++)f*=d[y];const p=Math.ceil(h/f),m=this.device.limits.maxComputeWorkgroupsPerDimension;u=[p,1,1],p>m&&(u[0]=Math.min(p,m),u[1]=Math.ceil(p/m)),a.dispatchSize=u}u=a.dispatchSize}else u=o;l.dispatchWorkgroups(u[0],u[1]||1,u[2]||1)}finishCompute(e){const n=this.get(e);n.passEncoderGPU.end(),this.device.queue.submit([n.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,n){const{object:i,material:s,context:o,pipeline:a}=e,l=e.getBindings(),c=this.get(o),u=this.get(a).pipeline,h=e.getIndex(),d=h!==null,f=e.getDrawParameters();if(f===null)return;const p=(y,_)=>{this.pipelineUtils.setPipeline(y,u),_.pipeline=u;const g=_.bindingGroups;for(let x=0,T=l.length;x<T;x++){const b=l[x],S=this.get(b);g[b.index]!==b.id&&(y.setBindGroup(b.index,S.group),g[b.index]=b.id)}if(d===!0&&_.index!==h){const x=this.get(h).buffer,T=h.array instanceof Uint16Array?el.Uint16:el.Uint32;y.setIndexBuffer(x,T),_.index=h}const v=e.getVertexBuffers();for(let x=0,T=v.length;x<T;x++){const b=v[x];if(_.attributes[x]!==b){const S=this.get(b).buffer;y.setVertexBuffer(x,S),_.attributes[x]=b}}o.stencil===!0&&s.stencilWrite===!0&&c.currentStencilRef!==s.stencilRef&&(y.setStencilReference(s.stencilRef),c.currentStencilRef=s.stencilRef)},m=(y,_)=>{if(p(y,_),i.isBatchedMesh===!0){const g=i._multiDrawStarts,v=i._multiDrawCounts,x=i._multiDrawCount,T=i._multiDrawInstances;T!==null&&Ai("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let b=0;b<x;b++){const S=T?T[b]:1,M=S>1?0:b;d===!0?y.drawIndexed(v[b],S,g[b]/h.array.BYTES_PER_ELEMENT,0,M):y.draw(v[b],S,g[b],M),n.update(i,v[b],S)}}else if(d===!0){const{vertexCount:g,instanceCount:v,firstVertex:x}=f,T=e.getIndirect();if(T!==null){const b=this.get(T).buffer;y.drawIndexedIndirect(b,0)}else y.drawIndexed(g,v,x,0,0);n.update(i,g,v)}else{const{vertexCount:g,instanceCount:v,firstVertex:x}=f,T=e.getIndirect();if(T!==null){const b=this.get(T).buffer;y.drawIndirect(b,0)}else y.draw(g,v,x,0);n.update(i,g,v)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const y=this.get(e.camera),_=e.camera.cameras,g=e.getBindingGroup("cameraIndex");if(y.indexesGPU===void 0||y.indexesGPU.length!==_.length){const x=this.get(g),T=[],b=new Uint32Array([0,0,0,0]);for(let S=0,M=_.length;S<M;S++){b[0]=S;const A=this.bindingUtils.createBindGroupIndex(b,x.layout);T.push(A)}y.indexesGPU=T}const v=this.renderer.getPixelRatio();for(let x=0,T=_.length;x<T;x++){const b=_[x];if(i.layers.test(b.layers)){const S=b.viewport;let M=c.currentPass,A=c.currentSets;if(c.bundleEncoders){const E=c.bundleEncoders[x],w=c.bundleSets[x];M=E,A=w}S&&M.setViewport(Math.floor(S.x*v),Math.floor(S.y*v),Math.floor(S.width*v),Math.floor(S.height*v),o.viewportValue.minDepth,o.viewportValue.maxDepth),g&&y.indexesGPU&&(M.setBindGroup(g.index,y.indexesGPU[x]),A.bindingGroups[g.index]=g.id),m(M,A)}}}else if(c.currentPass){if(c.occlusionQuerySet!==void 0){const y=c.lastOcclusionObject;y!==i&&(y!==null&&y.occlusionTest===!0&&(c.currentPass.endOcclusionQuery(),c.occlusionQueryIndex++),i.occlusionTest===!0&&(c.currentPass.beginOcclusionQuery(c.occlusionQueryIndex),c.occlusionQueryObjects[c.occlusionQueryIndex]=i),c.lastOcclusionObject=i)}m(c.currentPass,c.currentSets)}}needsRenderUpdate(e){const n=this.get(e),{object:i,material:s}=e,o=this.utils,a=o.getSampleCountRenderContext(e.context),l=o.getCurrentColorSpace(e.context),c=o.getCurrentColorFormat(e.context),u=o.getCurrentDepthStencilFormat(e.context),h=o.getPrimitiveTopology(i,s);let d=!1;return(n.material!==s||n.materialVersion!==s.version||n.transparent!==s.transparent||n.blending!==s.blending||n.premultipliedAlpha!==s.premultipliedAlpha||n.blendSrc!==s.blendSrc||n.blendDst!==s.blendDst||n.blendEquation!==s.blendEquation||n.blendSrcAlpha!==s.blendSrcAlpha||n.blendDstAlpha!==s.blendDstAlpha||n.blendEquationAlpha!==s.blendEquationAlpha||n.colorWrite!==s.colorWrite||n.depthWrite!==s.depthWrite||n.depthTest!==s.depthTest||n.depthFunc!==s.depthFunc||n.stencilWrite!==s.stencilWrite||n.stencilFunc!==s.stencilFunc||n.stencilFail!==s.stencilFail||n.stencilZFail!==s.stencilZFail||n.stencilZPass!==s.stencilZPass||n.stencilFuncMask!==s.stencilFuncMask||n.stencilWriteMask!==s.stencilWriteMask||n.side!==s.side||n.alphaToCoverage!==s.alphaToCoverage||n.sampleCount!==a||n.colorSpace!==l||n.colorFormat!==c||n.depthStencilFormat!==u||n.primitiveTopology!==h||n.clippingContextCacheKey!==e.clippingContextCacheKey)&&(n.material=s,n.materialVersion=s.version,n.transparent=s.transparent,n.blending=s.blending,n.premultipliedAlpha=s.premultipliedAlpha,n.blendSrc=s.blendSrc,n.blendDst=s.blendDst,n.blendEquation=s.blendEquation,n.blendSrcAlpha=s.blendSrcAlpha,n.blendDstAlpha=s.blendDstAlpha,n.blendEquationAlpha=s.blendEquationAlpha,n.colorWrite=s.colorWrite,n.depthWrite=s.depthWrite,n.depthTest=s.depthTest,n.depthFunc=s.depthFunc,n.stencilWrite=s.stencilWrite,n.stencilFunc=s.stencilFunc,n.stencilFail=s.stencilFail,n.stencilZFail=s.stencilZFail,n.stencilZPass=s.stencilZPass,n.stencilFuncMask=s.stencilFuncMask,n.stencilWriteMask=s.stencilWriteMask,n.side=s.side,n.alphaToCoverage=s.alphaToCoverage,n.sampleCount=a,n.colorSpace=l,n.colorFormat=c,n.depthStencilFormat=u,n.primitiveTopology=h,n.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:n,material:i}=e,s=this.utils,o=e.context,a=n.isMesh&&n.matrixWorld.determinant()<0;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,a,s.getSampleCountRenderContext(o),s.getCurrentColorSpace(o),s.getCurrentColorFormat(o),s.getCurrentDepthStencilFormat(o),s.getPrimitiveTopology(n,i),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,n){this.textureUtils.createTexture(e,n)}updateTexture(e,n){this.textureUtils.updateTexture(e,n)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,n,i,s,o,a){return this.textureUtils.copyTextureToBuffer(e,n,i,s,o,a)}initTimestampQuery(e,n,i){if(!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new Uz(this.device,e,2048));const s=this.timestampQueryPool[e],o=s.allocateQueriesForContext(n);i.timestampWrites={querySet:s.querySet,beginningOfPassWriteIndex:o,endOfPassWriteIndex:o+1}}createNodeBuilder(e,n){return new Rz(e,n)}createProgram(e){const n=this.get(e);n.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,n){this.pipelineUtils.createRenderPipeline(e,n)}createComputePipeline(e,n){this.pipelineUtils.createComputePipeline(e,n)}beginBundle(e){const n=this.get(e);n._currentPass=n.currentPass,n._currentSets=n.currentSets,n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,n){const i=this.get(e),o=i.currentPass.finish();this.get(n).bundleGPU=o,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,n){this.get(e).renderBundles.push(this.get(n).bundleGPU)}createBindings(e,n,i,s){this.bindingUtils.createBindings(e,n,i,s)}updateBindings(e,n,i,s){this.bindingUtils.createBindings(e,n,i,s)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let n=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(n|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,n)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){let l=0,c=0,u=0,h=0,d=0,f=0,p=e.image.width,m=e.image.height,y=1;i!==null&&(i.isBox3===!0?(h=i.min.x,d=i.min.y,f=i.min.z,p=i.max.x-i.min.x,m=i.max.y-i.min.y,y=i.max.z-i.min.z):(h=i.min.x,d=i.min.y,p=i.max.x-i.min.x,m=i.max.y-i.min.y,y=1)),s!==null&&(l=s.x,c=s.y,u=s.z||0);const _=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+n.id}),g=this.get(e).texture,v=this.get(n).texture;_.copyTextureToTexture({texture:g,mipLevel:o,origin:{x:h,y:d,z:f}},{texture:v,mipLevel:a,origin:{x:l,y:c,z:u}},[p,m,y]),this.device.queue.submit([_.finish()]),a===0&&n.generateMipmaps&&this.textureUtils.generateMipmaps(n)}copyFramebufferToTexture(e,n,i){const s=this.get(n);let o=null;n.renderTarget?e.isDepthTexture?o=this.get(n.depthTexture).texture:o=this.get(n.textures[0]).texture:e.isDepthTexture?o=this.textureUtils.getDepthBuffer(n.depth,n.stencil):o=this.context.getCurrentTexture();const a=this.get(e).texture;if(o.format!==a.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",o.format,a.format);return}let l;if(s.currentPass?(s.currentPass.end(),l=s.encoder):l=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),l.copyTextureToTexture({texture:o,origin:[i.x,i.y,0]},{texture:a},[i.z,i.w]),s.currentPass){const{descriptor:c}=s;for(let u=0;u<c.colorAttachments.length;u++)c.colorAttachments[u].loadOp=wt.Load;if(n.depth&&(c.depthStencilAttachment.depthLoadOp=wt.Load),n.stencil&&(c.depthStencilAttachment.stencilLoadOp=wt.Load),s.currentPass=l.beginRenderPass(c),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.viewport&&this.updateViewport(n),n.scissor){const{x:u,y:h,width:d,height:f}=n.scissorValue;s.currentPass.setScissorRect(u,h,d,f)}}else this.device.queue.submit([l.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class Oz extends ag{constructor(e,n,i,s,o,a){super(e,n,i,s,o,a),this.iesMap=null}copy(e,n){return super.copy(e,n),this.iesMap=e.iesMap,this}}class Bz extends ag{constructor(e,n,i,s,o,a){super(e,n,i,s,o,a),this.aspect=null}copy(e,n){return super.copy(e,n),this.aspect=e.aspect,this}}class kz extends pS{constructor(){super(),this.addMaterial(oO,"MeshPhongMaterial"),this.addMaterial(ZT,"MeshStandardMaterial"),this.addMaterial(JO,"MeshPhysicalMaterial"),this.addMaterial(iB,"MeshToonMaterial"),this.addMaterial(JF,"MeshBasicMaterial"),this.addMaterial(rO,"MeshLambertMaterial"),this.addMaterial(XF,"MeshNormalMaterial"),this.addMaterial(oB,"MeshMatcapMaterial"),this.addMaterial(HF,"LineBasicMaterial"),this.addMaterial($F,"LineDashedMaterial"),this.addMaterial(hB,"PointsMaterial"),this.addMaterial(JT,"SpriteMaterial"),this.addMaterial(mB,"ShadowMaterial"),this.addLight(W3,Ow),this.addLight(_k,kx),this.addLight(yk,kw),this.addLight($g,ag),this.addLight(Tk,zx),this.addLight(Sk,Iw),this.addLight(Mk,Gw),this.addLight(vk,Oz),this.addLight(bk,Bz),this.addToneMapping(QB,vx),this.addToneMapping(JB,xx),this.addToneMapping(e3,bx),this.addToneMapping(n3,Tx),this.addToneMapping(o3,Sx),this.addToneMapping(a3,Mx)}}class zz extends Hk{constructor(e={}){let n;e.forceWebGL?n=S0:(n=Fz,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new S0(e)));const i=new n(e);super(i,e),this.library=new kz,this.isWebGPURenderer=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}const up={type:"change"},qg={type:"start"},Xg={type:"end"},L0=1e-6,At={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},oh=new ue,fs=new ue,Gz=new L,ah=new L,hp=new L,ea=new er,I0=new L,lh=new L,dp=new L,ch=new L;class Vz extends sd{constructor(e,n=null){super(e,n),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Cn.ROTATE,MIDDLE:Cn.DOLLY,RIGHT:Cn.PAN},this.target=new L,this.state=At.NONE,this.keyState=At.NONE,this._lastPosition=new L,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new L,this._movePrev=new ue,this._moveCurr=new ue,this._lastAxis=new L,this._zoomStart=new ue,this._zoomEnd=new ue,this._panStart=new ue,this._panEnd=new ue,this._pointers=[],this._pointerPositions={},this._onPointerMove=Wz.bind(this),this._onPointerDown=Hz.bind(this),this._onPointerUp=$z.bind(this),this._onPointerCancel=jz.bind(this),this._onContextMenu=Jz.bind(this),this._onMouseWheel=Qz.bind(this),this._onKeyDown=Xz.bind(this),this._onKeyUp=qz.bind(this),this._onTouchStart=eG.bind(this),this._onTouchMove=tG.bind(this),this._onTouchEnd=nG.bind(this),this._onMouseDown=Yz.bind(this),this._onMouseMove=Kz.bind(this),this._onMouseUp=Zz.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,n!==null&&(this.connect(n),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),n=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-n.clientLeft,this.screen.top=e.top+window.pageYOffset-n.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>L0&&(this.dispatchEvent(up),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>L0||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(up),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=At.NONE,this.keyState=At.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(up),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(fs.copy(this._panEnd).sub(this._panStart),fs.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,n=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;fs.x*=e,fs.y*=n}fs.multiplyScalar(this._eye.length()*this.panSpeed),ah.copy(this._eye).cross(this.object.up).setLength(fs.x),ah.add(Gz.copy(this.object.up).setLength(fs.y)),this.object.position.add(ah),this.target.add(ah),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(fs.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){ch.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=ch.length();e?(this._eye.copy(this.object.position).sub(this.target),I0.copy(this._eye).normalize(),lh.copy(this.object.up).normalize(),dp.crossVectors(lh,I0).normalize(),lh.setLength(this._moveCurr.y-this._movePrev.y),dp.setLength(this._moveCurr.x-this._movePrev.x),ch.copy(lh.add(dp)),hp.crossVectors(ch,this._eye).normalize(),e*=this.rotateSpeed,ea.setFromAxisAngle(hp,e),this._eye.applyQuaternion(ea),this.object.up.applyQuaternion(ea),this._lastAxis.copy(hp),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),ea.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(ea),this.object.up.applyQuaternion(ea)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===At.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=wh.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=wh.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,n){return oh.set((e-this.screen.left)/this.screen.width,(n-this.screen.top)/this.screen.height),oh}_getMouseOnCircle(e,n){return oh.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-n))/this.screen.width),oh}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let n=0;n<this._pointers.length;n++)if(this._pointers[n].pointerId==e.pointerId){this._pointers.splice(n,1);return}}_trackPointer(e){let n=this._pointerPositions[e.pointerId];n===void 0&&(n=new ue,this._pointerPositions[e.pointerId]=n),n.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const n=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[n.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function Hz(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r))}function Wz(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function $z(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchEnd(r):this._onMouseUp(),this._removePointer(r),this._pointers.length===0&&(this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function jz(r){this._removePointer(r)}function qz(){this.enabled!==!1&&(this.keyState=At.NONE,window.addEventListener("keydown",this._onKeyDown))}function Xz(r){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===At.NONE&&(r.code===this.keys[At.ROTATE]&&!this.noRotate?this.keyState=At.ROTATE:r.code===this.keys[At.ZOOM]&&!this.noZoom?this.keyState=At.ZOOM:r.code===this.keys[At.PAN]&&!this.noPan&&(this.keyState=At.PAN)))}function Yz(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Cn.DOLLY:this.state=At.ZOOM;break;case Cn.ROTATE:this.state=At.ROTATE;break;case Cn.PAN:this.state=At.PAN;break;default:this.state=At.NONE}const n=this.keyState!==At.NONE?this.keyState:this.state;n===At.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY)),this._movePrev.copy(this._moveCurr)):n===At.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(r.pageX,r.pageY)),this._zoomEnd.copy(this._zoomStart)):n===At.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(r.pageX,r.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(qg)}function Kz(r){const e=this.keyState!==At.NONE?this.keyState:this.state;e===At.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY))):e===At.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(r.pageX,r.pageY)):e===At.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(r.pageX,r.pageY))}function Zz(){this.state=At.NONE,this.dispatchEvent(Xg)}function Qz(r){if(this.enabled!==!1&&this.noZoom!==!0){switch(r.preventDefault(),r.deltaMode){case 2:this._zoomStart.y-=r.deltaY*.025;break;case 1:this._zoomStart.y-=r.deltaY*.01;break;default:this._zoomStart.y-=r.deltaY*25e-5;break}this.dispatchEvent(qg),this.dispatchEvent(Xg)}}function Jz(r){this.enabled!==!1&&r.preventDefault()}function eG(r){switch(this._trackPointer(r),this._pointers.length){case 1:this.state=At.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=At.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,n=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+n*n);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,s=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,s)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(qg)}function tG(r){switch(this._trackPointer(r),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY));break;default:const e=this._getSecondPointerPosition(r),n=r.pageX-e.x,i=r.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(n*n+i*i);const s=(r.pageX+e.x)/2,o=(r.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(s,o));break}}function nG(r){switch(this._pointers.length){case 0:this.state=At.NONE;break;case 1:this.state=At.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=At.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==r.pointerId){const n=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(n.x,n.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(Xg)}const U0={type:"change"},Yg={type:"start"},wS={type:"end"},uh=new td,F0=new Xi,iG=Math.cos(70*wh.DEG2RAD),yn=new L,ti=2*Math.PI,It={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},fp=1e-6;class rG extends sd{constructor(e,n=null){super(e,n),this.state=It.NONE,this.target=new L,this.cursor=new L,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Cn.ROTATE,MIDDLE:Cn.DOLLY,RIGHT:Cn.PAN},this.touches={ONE:$r.ROTATE,TWO:$r.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new L,this._lastQuaternion=new er,this._lastTargetPosition=new L,this._quat=new er().setFromUnitVectors(e.up,new L(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new W_,this._sphericalDelta=new W_,this._scale=1,this._panOffset=new L,this._rotateStart=new ue,this._rotateEnd=new ue,this._rotateDelta=new ue,this._panStart=new ue,this._panEnd=new ue,this._panDelta=new ue,this._dollyStart=new ue,this._dollyEnd=new ue,this._dollyDelta=new ue,this._dollyDirection=new L,this._mouse=new ue,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=oG.bind(this),this._onPointerDown=sG.bind(this),this._onPointerUp=aG.bind(this),this._onContextMenu=pG.bind(this),this._onMouseWheel=uG.bind(this),this._onKeyDown=hG.bind(this),this._onTouchStart=dG.bind(this),this._onTouchMove=fG.bind(this),this._onMouseDown=lG.bind(this),this._onMouseMove=cG.bind(this),this._interceptControlDown=mG.bind(this),this._interceptControlUp=gG.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(U0),this.update(),this.state=It.NONE}update(e=null){const n=this.object.position;yn.copy(n).sub(this.target),yn.applyQuaternion(this._quat),this._spherical.setFromVector3(yn),this.autoRotate&&this.state===It.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(i)&&isFinite(s)&&(i<-Math.PI?i+=ti:i>Math.PI&&(i-=ti),s<-Math.PI?s+=ti:s>Math.PI&&(s-=ti),i<=s?this._spherical.theta=Math.max(i,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+s)/2?Math.max(i,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let o=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const a=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),o=a!=this._spherical.radius}if(yn.setFromSpherical(this._spherical),yn.applyQuaternion(this._quatInverse),n.copy(this.target).add(yn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let a=null;if(this.object.isPerspectiveCamera){const l=yn.length();a=this._clampDistance(l*this._scale);const c=l-a;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),o=!!c}else if(this.object.isOrthographicCamera){const l=new L(this._mouse.x,this._mouse.y,0);l.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),o=c!==this.object.zoom;const u=new L(this._mouse.x,this._mouse.y,0);u.unproject(this.object),this.object.position.sub(u).add(l),this.object.updateMatrixWorld(),a=yn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;a!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(a).add(this.object.position):(uh.origin.copy(this.object.position),uh.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(uh.direction))<iG?this.object.lookAt(this.target):(F0.setFromNormalAndCoplanarPoint(this.object.up,this.target),uh.intersectPlane(F0,this.target))))}else if(this.object.isOrthographicCamera){const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),a!==this.object.zoom&&(this.object.updateProjectionMatrix(),o=!0)}return this._scale=1,this._performCursorZoom=!1,o||this._lastPosition.distanceToSquared(this.object.position)>fp||8*(1-this._lastQuaternion.dot(this.object.quaternion))>fp||this._lastTargetPosition.distanceToSquared(this.target)>fp?(this.dispatchEvent(U0),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?ti/60*this.autoRotateSpeed*e:ti/60/60*this.autoRotateSpeed}_getZoomScale(e){const n=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*n)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,n){yn.setFromMatrixColumn(n,0),yn.multiplyScalar(-e),this._panOffset.add(yn)}_panUp(e,n){this.screenSpacePanning===!0?yn.setFromMatrixColumn(n,1):(yn.setFromMatrixColumn(n,0),yn.crossVectors(this.object.up,yn)),yn.multiplyScalar(e),this._panOffset.add(yn)}_pan(e,n){const i=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;yn.copy(s).sub(this.target);let o=yn.length();o*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*o/i.clientHeight,this.object.matrix),this._panUp(2*n*o/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(n*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,n){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),s=e-i.left,o=n-i.top,a=i.width,l=i.height;this._mouse.x=s/a*2-1,this._mouse.y=-(o/l)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(ti*this._rotateDelta.x/n.clientHeight),this._rotateUp(ti*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let n=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(ti*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),n=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-ti*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),n=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(ti*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),n=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-ti*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),n=!0;break}n&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateStart.set(i,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panStart.set(i,s)}}_handleTouchStartDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,o=Math.sqrt(i*i+s*s);this._dollyStart.set(0,o)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),s=.5*(e.pageX+i.x),o=.5*(e.pageY+i.y);this._rotateEnd.set(s,o)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(ti*this._rotateDelta.x/n.clientHeight),this._rotateUp(ti*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panEnd.set(i,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,o=Math.sqrt(i*i+s*s);this._dollyEnd.set(0,o),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=(e.pageX+n.x)*.5,l=(e.pageY+n.y)*.5;this._updateZoomParameters(a,l)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId){this._pointers.splice(n,1);return}}_isTrackingPointer(e){for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId)return!0;return!1}_trackPointer(e){let n=this._pointerPositions[e.pointerId];n===void 0&&(n=new ue,this._pointerPositions[e.pointerId]=n),n.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const n=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[n]}_customWheelEvent(e){const n=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(n){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function sG(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(r)&&(this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r)))}function oG(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function aG(r){switch(this._removePointer(r),this._pointers.length){case 0:this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(wS),this.state=It.NONE;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y});break}}function lG(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Cn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(r),this.state=It.DOLLY;break;case Cn.ROTATE:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=It.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=It.ROTATE}break;case Cn.PAN:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=It.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=It.PAN}break;default:this.state=It.NONE}this.state!==It.NONE&&this.dispatchEvent(Yg)}function cG(r){switch(this.state){case It.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(r);break;case It.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(r);break;case It.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(r);break}}function uG(r){this.enabled===!1||this.enableZoom===!1||this.state!==It.NONE||(r.preventDefault(),this.dispatchEvent(Yg),this._handleMouseWheel(this._customWheelEvent(r)),this.dispatchEvent(wS))}function hG(r){this.enabled!==!1&&this._handleKeyDown(r)}function dG(r){switch(this._trackPointer(r),this._pointers.length){case 1:switch(this.touches.ONE){case $r.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(r),this.state=It.TOUCH_ROTATE;break;case $r.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(r),this.state=It.TOUCH_PAN;break;default:this.state=It.NONE}break;case 2:switch(this.touches.TWO){case $r.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(r),this.state=It.TOUCH_DOLLY_PAN;break;case $r.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(r),this.state=It.TOUCH_DOLLY_ROTATE;break;default:this.state=It.NONE}break;default:this.state=It.NONE}this.state!==It.NONE&&this.dispatchEvent(Yg)}function fG(r){switch(this._trackPointer(r),this.state){case It.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(r),this.update();break;case It.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(r),this.update();break;case It.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(r),this.update();break;case It.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(r),this.update();break;default:this.state=It.NONE}}function pG(r){this.enabled!==!1&&r.preventDefault()}function mG(r){r.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function gG(r){r.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const _G={type:"change"},O0=1e-6,B0=new er;class yG extends sd{constructor(e,n=null){super(e,n),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new L(0,0,0),this._rotationVector=new L(0,0,0),this._lastQuaternion=new er,this._lastPosition=new L,this._status=0,this._onKeyDown=vG.bind(this),this._onKeyUp=xG.bind(this),this._onPointerMove=TG.bind(this),this._onPointerDown=bG.bind(this),this._onPointerUp=SG.bind(this),this._onPointerCancel=MG.bind(this),this._onContextMenu=EG.bind(this),n!==null&&this.connect(n)}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const n=this.object,i=e*this.movementSpeed,s=e*this.rollSpeed;n.translateX(this._moveVector.x*i),n.translateY(this._moveVector.y*i),n.translateZ(this._moveVector.z*i),B0.set(this._rotationVector.x*s,this._rotationVector.y*s,this._rotationVector.z*s,1).normalize(),n.quaternion.multiply(B0),(this._lastPosition.distanceToSquared(n.position)>O0||8*(1-this._lastQuaternion.dot(n.quaternion))>O0)&&(this.dispatchEvent(_G),this._lastQuaternion.copy(n.quaternion),this._lastPosition.copy(n.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function vG(r){if(!(r.altKey||this.enabled===!1)){switch(r.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function xG(r){if(this.enabled!==!1){switch(r.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function bG(r){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(r.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function TG(r){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),n=e.size[0]/2,i=e.size[1]/2;this._moveState.yawLeft=-(r.pageX-e.offset[0]-n)/n,this._moveState.pitchDown=(r.pageY-e.offset[1]-i)/i,this._updateRotationVector()}}function SG(r){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(r.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function MG(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function EG(r){this.enabled!==!1&&r.preventDefault()}const wG={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class bd{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const AG=new Yc(-1,1,1,-1,0,1);class RG extends Hn{constructor(){super(),this.setAttribute("position",new dn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new dn([0,2,0,0,2,0],2))}}const CG=new RG;class NG{constructor(e){this._mesh=new mn(CG,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,AG)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class PG extends bd{constructor(e,n="tDiffuse"){super(),this.textureID=n,this.uniforms=null,this.material=null,e instanceof vr?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Nx.clone(e.uniforms),this.material=new vr({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new NG(this.material)}render(e,n,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class k0 extends bd{constructor(e,n){super(),this.scene=e,this.camera=n,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,n,i){const s=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0);let a,l;this.inverse?(a=0,l=1):(a=1,l=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),o.buffers.stencil.setFunc(s.ALWAYS,a,4294967295),o.buffers.stencil.setClear(l),o.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.color.setMask(!0),o.buffers.depth.setMask(!0),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(s.EQUAL,1,4294967295),o.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),o.buffers.stencil.setLocked(!0)}}class DG extends bd{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class LG{constructor(e,n){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),n===void 0){const i=e.getSize(new ue);this._width=i.width,this._height=i.height,n=new As(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:An}),n.texture.name="EffectComposer.rt1"}else this._width=n.width,this._height=n.height;this.renderTarget1=n,this.renderTarget2=n.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new PG(wG),this.copyPass.material.blending=oi,this.clock=new Vx}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,n){this.passes.splice(n,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const n=this.passes.indexOf(e);n!==-1&&this.passes.splice(n,1)}isLastEnabledPass(e){for(let n=e+1;n<this.passes.length;n++)if(this.passes[n].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const n=this.renderer.getRenderTarget();let i=!1;for(let s=0,o=this.passes.length;s<o;s++){const a=this.passes[s];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),a.needsSwap){if(i){const l=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(l.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(l.EQUAL,1,4294967295)}this.swapBuffers()}k0!==void 0&&(a instanceof k0?i=!0:a instanceof DG&&(i=!1))}}this.renderer.setRenderTarget(n)}reset(e){if(e===void 0){const n=this.renderer.getSize(new ue);this._pixelRatio=this.renderer.getPixelRatio(),this._width=n.width,this._height=n.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,n){this._width=e,this._height=n;const i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(let o=0;o<this.passes.length;o++)this.passes[o].setSize(i,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class IG extends bd{constructor(e,n,i=null,s=null,o=null){super(),this.scene=e,this.camera=n,this.overrideMaterial=i,this.clearColor=s,this.clearAlpha=o,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ge}render(e,n,i){const s=e.autoClear;e.autoClear=!1;let o,a;this.overrideMaterial!==null&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(o=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(o),this.overrideMaterial!==null&&(this.scene.overrideMaterial=a),e.autoClear=s}}function ui(){return ui=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)({}).hasOwnProperty.call(n,i)&&(r[i]=n[i])}return r},ui.apply(null,arguments)}function UG(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function Oc(r,e){return Oc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Oc(r,e)}function FG(r,e){r.prototype=Object.create(e.prototype),r.prototype.constructor=r,Oc(r,e)}function am(r){return am=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},am(r)}function OG(r){try{return Function.toString.call(r).indexOf("[native code]")!==-1}catch{return typeof r=="function"}}function AS(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(AS=function(){return!!r})()}function BG(r,e,n){if(AS())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return n&&Oc(s,n.prototype),s}function lm(r){var e=typeof Map=="function"?new Map:void 0;return lm=function(i){if(i===null||!OG(i))return i;if(typeof i!="function")throw new TypeError("Super expression must either be null or a function");if(e!==void 0){if(e.has(i))return e.get(i);e.set(i,s)}function s(){return BG(i,arguments,am(this).constructor)}return s.prototype=Object.create(i.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),Oc(s,i)},lm(r)}var mr=function(r){FG(e,r);function e(n){var i;return i=r.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+n+" for more information.")||this,UG(i)}return e}(lm(Error));function pp(r){return Math.round(r*255)}function kG(r,e,n){return pp(r)+","+pp(e)+","+pp(n)}function Hh(r,e,n,i){if(i===void 0&&(i=kG),e===0)return i(n,n,n);var s=(r%360+360)%360/60,o=(1-Math.abs(2*n-1))*e,a=o*(1-Math.abs(s%2-1)),l=0,c=0,u=0;s>=0&&s<1?(l=o,c=a):s>=1&&s<2?(l=a,c=o):s>=2&&s<3?(c=o,u=a):s>=3&&s<4?(c=a,u=o):s>=4&&s<5?(l=a,u=o):s>=5&&s<6&&(l=o,u=a);var h=n-o/2,d=l+h,f=c+h,p=u+h;return i(d,f,p)}var z0={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function zG(r){if(typeof r!="string")return r;var e=r.toLowerCase();return z0[e]?"#"+z0[e]:r}var GG=/^#[a-fA-F0-9]{6}$/,VG=/^#[a-fA-F0-9]{8}$/,HG=/^#[a-fA-F0-9]{3}$/,WG=/^#[a-fA-F0-9]{4}$/,mp=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,$G=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,jG=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,qG=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function tl(r){if(typeof r!="string")throw new mr(3);var e=zG(r);if(e.match(GG))return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16)};if(e.match(VG)){var n=parseFloat((parseInt(""+e[7]+e[8],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16),alpha:n}}if(e.match(HG))return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16)};if(e.match(WG)){var i=parseFloat((parseInt(""+e[4]+e[4],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16),alpha:i}}var s=mp.exec(e);if(s)return{red:parseInt(""+s[1],10),green:parseInt(""+s[2],10),blue:parseInt(""+s[3],10)};var o=$G.exec(e.substring(0,50));if(o)return{red:parseInt(""+o[1],10),green:parseInt(""+o[2],10),blue:parseInt(""+o[3],10),alpha:parseFloat(""+o[4])>1?parseFloat(""+o[4])/100:parseFloat(""+o[4])};var a=jG.exec(e);if(a){var l=parseInt(""+a[1],10),c=parseInt(""+a[2],10)/100,u=parseInt(""+a[3],10)/100,h="rgb("+Hh(l,c,u)+")",d=mp.exec(h);if(!d)throw new mr(4,e,h);return{red:parseInt(""+d[1],10),green:parseInt(""+d[2],10),blue:parseInt(""+d[3],10)}}var f=qG.exec(e.substring(0,50));if(f){var p=parseInt(""+f[1],10),m=parseInt(""+f[2],10)/100,y=parseInt(""+f[3],10)/100,_="rgb("+Hh(p,m,y)+")",g=mp.exec(_);if(!g)throw new mr(4,e,_);return{red:parseInt(""+g[1],10),green:parseInt(""+g[2],10),blue:parseInt(""+g[3],10),alpha:parseFloat(""+f[4])>1?parseFloat(""+f[4])/100:parseFloat(""+f[4])}}throw new mr(5)}function XG(r){var e=r.red/255,n=r.green/255,i=r.blue/255,s=Math.max(e,n,i),o=Math.min(e,n,i),a=(s+o)/2;if(s===o)return r.alpha!==void 0?{hue:0,saturation:0,lightness:a,alpha:r.alpha}:{hue:0,saturation:0,lightness:a};var l,c=s-o,u=a>.5?c/(2-s-o):c/(s+o);switch(s){case e:l=(n-i)/c+(n<i?6:0);break;case n:l=(i-e)/c+2;break;default:l=(e-n)/c+4;break}return l*=60,r.alpha!==void 0?{hue:l,saturation:u,lightness:a,alpha:r.alpha}:{hue:l,saturation:u,lightness:a}}function Is(r){return XG(tl(r))}var YG=function(e){return e.length===7&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e},cm=YG;function eo(r){var e=r.toString(16);return e.length===1?"0"+e:e}function gp(r){return eo(Math.round(r*255))}function KG(r,e,n){return cm("#"+gp(r)+gp(e)+gp(n))}function RS(r,e,n){return Hh(r,e,n,KG)}function ZG(r,e,n){if(typeof r=="object"&&e===void 0&&n===void 0)return RS(r.hue,r.saturation,r.lightness);throw new mr(1)}function QG(r,e,n,i){if(typeof r=="object"&&e===void 0&&n===void 0&&i===void 0)return r.alpha>=1?RS(r.hue,r.saturation,r.lightness):"rgba("+Hh(r.hue,r.saturation,r.lightness)+","+r.alpha+")";throw new mr(2)}function CS(r,e,n){if(typeof r=="number"&&typeof e=="number"&&typeof n=="number")return cm("#"+eo(r)+eo(e)+eo(n));if(typeof r=="object"&&e===void 0&&n===void 0)return cm("#"+eo(r.red)+eo(r.green)+eo(r.blue));throw new mr(6)}function Td(r,e,n,i){if(typeof r=="object"&&e===void 0&&n===void 0&&i===void 0)return r.alpha>=1?CS(r.red,r.green,r.blue):"rgba("+r.red+","+r.green+","+r.blue+","+r.alpha+")";throw new mr(7)}var JG=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},eV=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&typeof e.alpha=="number"},tV=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},nV=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&typeof e.alpha=="number"};function Us(r){if(typeof r!="object")throw new mr(8);if(eV(r))return Td(r);if(JG(r))return CS(r);if(nV(r))return QG(r);if(tV(r))return ZG(r);throw new mr(8)}function NS(r,e,n){return function(){var s=n.concat(Array.prototype.slice.call(arguments));return s.length>=e?r.apply(this,s):NS(r,e,s)}}function Ri(r){return NS(r,r.length,[])}function iV(r,e){if(e==="transparent")return e;var n=Is(e);return Us(ui({},n,{hue:n.hue+parseFloat(r)}))}Ri(iV);function pl(r,e,n){return Math.max(r,Math.min(e,n))}function rV(r,e){if(e==="transparent")return e;var n=Is(e);return Us(ui({},n,{lightness:pl(0,1,n.lightness-parseFloat(r))}))}Ri(rV);function sV(r,e){if(e==="transparent")return e;var n=Is(e);return Us(ui({},n,{saturation:pl(0,1,n.saturation-parseFloat(r))}))}Ri(sV);function oV(r,e){if(e==="transparent")return e;var n=Is(e);return Us(ui({},n,{lightness:pl(0,1,n.lightness+parseFloat(r))}))}Ri(oV);function aV(r,e,n){if(e==="transparent")return n;if(n==="transparent")return e;if(r===0)return n;var i=tl(e),s=ui({},i,{alpha:typeof i.alpha=="number"?i.alpha:1}),o=tl(n),a=ui({},o,{alpha:typeof o.alpha=="number"?o.alpha:1}),l=s.alpha-a.alpha,c=parseFloat(r)*2-1,u=c*l===-1?c:c+l,h=1+c*l,d=(u/h+1)/2,f=1-d,p={red:Math.floor(s.red*d+a.red*f),green:Math.floor(s.green*d+a.green*f),blue:Math.floor(s.blue*d+a.blue*f),alpha:s.alpha*parseFloat(r)+a.alpha*(1-parseFloat(r))};return Td(p)}var lV=Ri(aV),PS=lV;function cV(r,e){if(e==="transparent")return e;var n=tl(e),i=typeof n.alpha=="number"?n.alpha:1,s=ui({},n,{alpha:pl(0,1,(i*100+parseFloat(r)*100)/100)});return Td(s)}var uV=Ri(cV),hV=uV;function dV(r,e){if(e==="transparent")return e;var n=Is(e);return Us(ui({},n,{saturation:pl(0,1,n.saturation+parseFloat(r))}))}Ri(dV);function fV(r,e){return e==="transparent"?e:Us(ui({},Is(e),{hue:parseFloat(r)}))}Ri(fV);function pV(r,e){return e==="transparent"?e:Us(ui({},Is(e),{lightness:parseFloat(r)}))}Ri(pV);function mV(r,e){return e==="transparent"?e:Us(ui({},Is(e),{saturation:parseFloat(r)}))}Ri(mV);function gV(r,e){return e==="transparent"?e:PS(parseFloat(r),"rgb(0, 0, 0)",e)}Ri(gV);function _V(r,e){return e==="transparent"?e:PS(parseFloat(r),"rgb(255, 255, 255)",e)}Ri(_V);function yV(r,e){if(e==="transparent")return e;var n=tl(e),i=typeof n.alpha=="number"?n.alpha:1,s=ui({},n,{alpha:pl(0,1,+(i*100-parseFloat(r)*100).toFixed(2)/100)});return Td(s)}Ri(yV);var es=Object.freeze({Linear:Object.freeze({None:function(r){return r},In:function(r){return r},Out:function(r){return r},InOut:function(r){return r}}),Quadratic:Object.freeze({In:function(r){return r*r},Out:function(r){return r*(2-r)},InOut:function(r){return(r*=2)<1?.5*r*r:-.5*(--r*(r-2)-1)}}),Cubic:Object.freeze({In:function(r){return r*r*r},Out:function(r){return--r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r:.5*((r-=2)*r*r+2)}}),Quartic:Object.freeze({In:function(r){return r*r*r*r},Out:function(r){return 1- --r*r*r*r},InOut:function(r){return(r*=2)<1?.5*r*r*r*r:-.5*((r-=2)*r*r*r-2)}}),Quintic:Object.freeze({In:function(r){return r*r*r*r*r},Out:function(r){return--r*r*r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r*r*r:.5*((r-=2)*r*r*r*r+2)}}),Sinusoidal:Object.freeze({In:function(r){return 1-Math.sin((1-r)*Math.PI/2)},Out:function(r){return Math.sin(r*Math.PI/2)},InOut:function(r){return .5*(1-Math.sin(Math.PI*(.5-r)))}}),Exponential:Object.freeze({In:function(r){return r===0?0:Math.pow(1024,r-1)},Out:function(r){return r===1?1:1-Math.pow(2,-10*r)},InOut:function(r){return r===0?0:r===1?1:(r*=2)<1?.5*Math.pow(1024,r-1):.5*(-Math.pow(2,-10*(r-1))+2)}}),Circular:Object.freeze({In:function(r){return 1-Math.sqrt(1-r*r)},Out:function(r){return Math.sqrt(1- --r*r)},InOut:function(r){return(r*=2)<1?-.5*(Math.sqrt(1-r*r)-1):.5*(Math.sqrt(1-(r-=2)*r)+1)}}),Elastic:Object.freeze({In:function(r){return r===0?0:r===1?1:-Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI)},Out:function(r){return r===0?0:r===1?1:Math.pow(2,-10*r)*Math.sin((r-.1)*5*Math.PI)+1},InOut:function(r){return r===0?0:r===1?1:(r*=2,r<1?-.5*Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI):.5*Math.pow(2,-10*(r-1))*Math.sin((r-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(r){var e=1.70158;return r===1?1:r*r*((e+1)*r-e)},Out:function(r){var e=1.70158;return r===0?0:--r*r*((e+1)*r+e)+1},InOut:function(r){var e=2.5949095;return(r*=2)<1?.5*(r*r*((e+1)*r-e)):.5*((r-=2)*r*((e+1)*r+e)+2)}}),Bounce:Object.freeze({In:function(r){return 1-es.Bounce.Out(1-r)},Out:function(r){return r<1/2.75?7.5625*r*r:r<2/2.75?7.5625*(r-=1.5/2.75)*r+.75:r<2.5/2.75?7.5625*(r-=2.25/2.75)*r+.9375:7.5625*(r-=2.625/2.75)*r+.984375},InOut:function(r){return r<.5?es.Bounce.In(r*2)*.5:es.Bounce.Out(r*2-1)*.5+.5}}),generatePow:function(r){return r===void 0&&(r=4),r=r<Number.EPSILON?Number.EPSILON:r,r=r>1e4?1e4:r,{In:function(e){return Math.pow(e,r)},Out:function(e){return 1-Math.pow(1-e,r)},InOut:function(e){return e<.5?Math.pow(e*2,r)/2:(1-Math.pow(2-e*2,r))/2+.5}}}}),tc=function(){return performance.now()},Kg=function(){function r(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,e)}return r.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(n){return e._tweens[n]})},r.prototype.removeAll=function(){this._tweens={}},r.prototype.add=function(){for(var e,n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];for(var s=0,o=n;s<o.length;s++){var a=o[s];(e=a._group)===null||e===void 0||e.remove(a),a._group=this,this._tweens[a.getId()]=a,this._tweensAddedDuringUpdate[a.getId()]=a}},r.prototype.remove=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var i=0,s=e;i<s.length;i++){var o=s[i];o._group=void 0,delete this._tweens[o.getId()],delete this._tweensAddedDuringUpdate[o.getId()]}},r.prototype.allStopped=function(){return this.getAll().every(function(e){return!e.isPlaying()})},r.prototype.update=function(e,n){e===void 0&&(e=tc()),n===void 0&&(n=!0);var i=Object.keys(this._tweens);if(i.length!==0)for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var s=0;s<i.length;s++){var o=this._tweens[i[s]],a=!n;o&&o.update(e,a)===!1&&!n&&this.remove(o)}i=Object.keys(this._tweensAddedDuringUpdate)}},r}(),um={Linear:function(r,e){var n=r.length-1,i=n*e,s=Math.floor(i),o=um.Utils.Linear;return e<0?o(r[0],r[1],i):e>1?o(r[n],r[n-1],n-i):o(r[s],r[s+1>n?n:s+1],i-s)},Utils:{Linear:function(r,e,n){return(e-r)*n+r}}},DS=function(){function r(){}return r.nextId=function(){return r._nextId++},r._nextId=0,r}(),hm=new Kg,Wh=function(){function r(e,n){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=es.Linear.None,this._interpolationFunction=um.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=DS.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=e,typeof n=="object"?(this._group=n,n.add(this)):n===!0&&(this._group=hm,hm.add(this))}return r.prototype.getId=function(){return this._id},r.prototype.isPlaying=function(){return this._isPlaying},r.prototype.isPaused=function(){return this._isPaused},r.prototype.getDuration=function(){return this._duration},r.prototype.to=function(e,n){if(n===void 0&&(n=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=n<0?0:n,this},r.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e<0?0:e,this},r.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},r.prototype.start=function(e,n){if(e===void 0&&(e=tc()),n===void 0&&(n=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var i in this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||n){if(this._propertiesAreSetUp=!0,!this._isDynamic){var s={};for(var o in this._valuesEnd)s[o]=this._valuesEnd[o];this._valuesEnd=s}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,n)}return this},r.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},r.prototype._setupProperties=function(e,n,i,s,o){for(var a in i){var l=e[a],c=Array.isArray(l),u=c?"array":typeof l,h=!c&&Array.isArray(i[a]);if(!(u==="undefined"||u==="function")){if(h){var d=i[a];if(d.length===0)continue;for(var f=[l],p=0,m=d.length;p<m;p+=1){var y=this._handleRelativeValue(l,d[p]);if(isNaN(y)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}f.push(y)}h&&(i[a]=f)}if((u==="object"||c)&&l&&!h){n[a]=c?[]:{};var _=l;for(var g in _)n[a][g]=_[g];s[a]=c?[]:{};var d=i[a];if(!this._isDynamic){var v={};for(var g in d)v[g]=d[g];i[a]=d=v}this._setupProperties(_,n[a],d,s[a],o)}else(typeof n[a]>"u"||o)&&(n[a]=l),c||(n[a]*=1),h?s[a]=i[a].slice().reverse():s[a]=n[a]||0}}},r.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},r.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},r.prototype.pause=function(e){return e===void 0&&(e=tc()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this)},r.prototype.resume=function(e){return e===void 0&&(e=tc()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this)},r.prototype.stopChainedTweens=function(){for(var e=0,n=this._chainedTweens.length;e<n;e++)this._chainedTweens[e].stop();return this},r.prototype.group=function(e){return e?(e.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},r.prototype.remove=function(){var e;return(e=this._group)===null||e===void 0||e.remove(this),this},r.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},r.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},r.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},r.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},r.prototype.easing=function(e){return e===void 0&&(e=es.Linear.None),this._easingFunction=e,this},r.prototype.interpolation=function(e){return e===void 0&&(e=um.Linear),this._interpolationFunction=e,this},r.prototype.chain=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this._chainedTweens=e,this},r.prototype.onStart=function(e){return this._onStartCallback=e,this},r.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},r.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},r.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},r.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},r.prototype.onStop=function(e){return this._onStopCallback=e,this},r.prototype.update=function(e,n){var i=this,s;if(e===void 0&&(e=tc()),n===void 0&&(n=r.autoStartOnUpdate),this._isPaused)return!0;var o;if(!this._goToEnd&&!this._isPlaying)if(n)this.start(e,!0);else return!1;if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var a=e-this._startTime,l=this._duration+((s=this._repeatDelayTime)!==null&&s!==void 0?s:this._delayTime),c=this._duration+this._repeat*l,u=function(){if(i._duration===0||a>c)return 1;var y=Math.trunc(a/l),_=a-y*l,g=Math.min(_/i._duration,1);return g===0&&a===i._duration?1:g},h=u(),d=this._easingFunction(h);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,d),this._onUpdateCallback&&this._onUpdateCallback(this._object,h),this._duration===0||a>=this._duration)if(this._repeat>0){var f=Math.min(Math.trunc((a-this._duration)/l)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=f);for(o in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[o]=="string"&&(this._valuesStartRepeat[o]=this._valuesStartRepeat[o]+parseFloat(this._valuesEnd[o])),this._yoyo&&this._swapEndStartRepeatValues(o),this._valuesStart[o]=this._valuesStartRepeat[o];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=l*f,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var p=0,m=this._chainedTweens.length;p<m;p++)this._chainedTweens[p].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},r.prototype._updateProperties=function(e,n,i,s){for(var o in i)if(n[o]!==void 0){var a=n[o]||0,l=i[o],c=Array.isArray(e[o]),u=Array.isArray(l),h=!c&&u;h?e[o]=this._interpolationFunction(l,s):typeof l=="object"&&l?this._updateProperties(e[o],a,l,s):(l=this._handleRelativeValue(a,l),typeof l=="number"&&(e[o]=a+(l-a)*s))}},r.prototype._handleRelativeValue=function(e,n){return typeof n!="string"?n:n.charAt(0)==="+"||n.charAt(0)==="-"?e+parseFloat(n):parseFloat(n)},r.prototype._swapEndStartRepeatValues=function(e){var n=this._valuesStartRepeat[e],i=this._valuesEnd[e];typeof i=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(i):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=n},r.autoStartOnUpdate=!1,r}();DS.nextId;var Tr=hm;Tr.getAll.bind(Tr);Tr.removeAll.bind(Tr);Tr.add.bind(Tr);Tr.remove.bind(Tr);Tr.update.bind(Tr);var tu,Zt,LS,IS,oo,G0,US,FS,OS,Zg,dm,fm,Bc={},BS=[],vV=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,Sd=Array.isArray;function gr(r,e){for(var n in e)r[n]=e[n];return r}function Qg(r){r&&r.parentNode&&r.parentNode.removeChild(r)}function xV(r,e,n){var i,s,o,a={};for(o in e)o=="key"?i=e[o]:o=="ref"?s=e[o]:a[o]=e[o];if(arguments.length>2&&(a.children=arguments.length>3?tu.call(arguments,2):n),typeof r=="function"&&r.defaultProps!=null)for(o in r.defaultProps)a[o]===void 0&&(a[o]=r.defaultProps[o]);return dc(r,a,i,s,null)}function dc(r,e,n,i,s){var o={type:r,props:e,key:n,ref:i,__k:null,__:null,__b:0,__e:null,__c:null,constructor:void 0,__v:s??++LS,__i:-1,__u:0};return s==null&&Zt.vnode!=null&&Zt.vnode(o),o}function Md(r){return r.children}function Sh(r,e){this.props=r,this.context=e}function nl(r,e){if(e==null)return r.__?nl(r.__,r.__i+1):null;for(var n;e<r.__k.length;e++)if((n=r.__k[e])!=null&&n.__e!=null)return n.__e;return typeof r.type=="function"?nl(r):null}function kS(r){var e,n;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((n=r.__k[e])!=null&&n.__e!=null){r.__e=r.__c.base=n.__e;break}return kS(r)}}function V0(r){(!r.__d&&(r.__d=!0)&&oo.push(r)&&!$h.__r++||G0!=Zt.debounceRendering)&&((G0=Zt.debounceRendering)||US)($h)}function $h(){for(var r,e,n,i,s,o,a,l=1;oo.length;)oo.length>l&&oo.sort(FS),r=oo.shift(),l=oo.length,r.__d&&(n=void 0,s=(i=(e=r).__v).__e,o=[],a=[],e.__P&&((n=gr({},i)).__v=i.__v+1,Zt.vnode&&Zt.vnode(n),Jg(e.__P,n,i,e.__n,e.__P.namespaceURI,32&i.__u?[s]:null,o,s??nl(i),!!(32&i.__u),a),n.__v=i.__v,n.__.__k[n.__i]=n,VS(o,n,a),n.__e!=s&&kS(n)));$h.__r=0}function zS(r,e,n,i,s,o,a,l,c,u,h){var d,f,p,m,y,_,g,v=i&&i.__k||BS,x=e.length;for(c=bV(n,e,v,c,x),d=0;d<x;d++)(p=n.__k[d])!=null&&(f=p.__i==-1?Bc:v[p.__i]||Bc,p.__i=d,_=Jg(r,p,f,s,o,a,l,c,u,h),m=p.__e,p.ref&&f.ref!=p.ref&&(f.ref&&e_(f.ref,null,p),h.push(p.ref,p.__c||m,p)),y==null&&m!=null&&(y=m),(g=!!(4&p.__u))||f.__k===p.__k?c=GS(p,c,r,g):typeof p.type=="function"&&_!==void 0?c=_:m&&(c=m.nextSibling),p.__u&=-7);return n.__e=y,c}function bV(r,e,n,i,s){var o,a,l,c,u,h=n.length,d=h,f=0;for(r.__k=new Array(s),o=0;o<s;o++)(a=e[o])!=null&&typeof a!="boolean"&&typeof a!="function"?(c=o+f,(a=r.__k[o]=typeof a=="string"||typeof a=="number"||typeof a=="bigint"||a.constructor==String?dc(null,a,null,null,null):Sd(a)?dc(Md,{children:a},null,null,null):a.constructor==null&&a.__b>0?dc(a.type,a.props,a.key,a.ref?a.ref:null,a.__v):a).__=r,a.__b=r.__b+1,l=null,(u=a.__i=TV(a,n,c,d))!=-1&&(d--,(l=n[u])&&(l.__u|=2)),l==null||l.__v==null?(u==-1&&(s>h?f--:s<h&&f++),typeof a.type!="function"&&(a.__u|=4)):u!=c&&(u==c-1?f--:u==c+1?f++:(u>c?f--:f++,a.__u|=4))):r.__k[o]=null;if(d)for(o=0;o<h;o++)(l=n[o])!=null&&(2&l.__u)==0&&(l.__e==i&&(i=nl(l)),WS(l,l));return i}function GS(r,e,n,i){var s,o;if(typeof r.type=="function"){for(s=r.__k,o=0;s&&o<s.length;o++)s[o]&&(s[o].__=r,e=GS(s[o],e,n,i));return e}r.__e!=e&&(i&&(e&&r.type&&!e.parentNode&&(e=nl(r)),n.insertBefore(r.__e,e||null)),e=r.__e);do e=e&&e.nextSibling;while(e!=null&&e.nodeType==8);return e}function TV(r,e,n,i){var s,o,a,l=r.key,c=r.type,u=e[n],h=u!=null&&(2&u.__u)==0;if(u===null&&r.key==null||h&&l==u.key&&c==u.type)return n;if(i>(h?1:0)){for(s=n-1,o=n+1;s>=0||o<e.length;)if((u=e[a=s>=0?s--:o++])!=null&&(2&u.__u)==0&&l==u.key&&c==u.type)return a}return-1}function H0(r,e,n){e[0]=="-"?r.setProperty(e,n??""):r[e]=n==null?"":typeof n!="number"||vV.test(e)?n:n+"px"}function hh(r,e,n,i,s){var o,a;e:if(e=="style")if(typeof n=="string")r.style.cssText=n;else{if(typeof i=="string"&&(r.style.cssText=i=""),i)for(e in i)n&&e in n||H0(r.style,e,"");if(n)for(e in n)i&&n[e]==i[e]||H0(r.style,e,n[e])}else if(e[0]=="o"&&e[1]=="n")o=e!=(e=e.replace(OS,"$1")),a=e.toLowerCase(),e=a in r||e=="onFocusOut"||e=="onFocusIn"?a.slice(2):e.slice(2),r.l||(r.l={}),r.l[e+o]=n,n?i?n.u=i.u:(n.u=Zg,r.addEventListener(e,o?fm:dm,o)):r.removeEventListener(e,o?fm:dm,o);else{if(s=="http://www.w3.org/2000/svg")e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!="width"&&e!="height"&&e!="href"&&e!="list"&&e!="form"&&e!="tabIndex"&&e!="download"&&e!="rowSpan"&&e!="colSpan"&&e!="role"&&e!="popover"&&e in r)try{r[e]=n??"";break e}catch{}typeof n=="function"||(n==null||n===!1&&e[4]!="-"?r.removeAttribute(e):r.setAttribute(e,e=="popover"&&n==1?"":n))}}function W0(r){return function(e){if(this.l){var n=this.l[e.type+r];if(e.t==null)e.t=Zg++;else if(e.t<n.u)return;return n(Zt.event?Zt.event(e):e)}}}function Jg(r,e,n,i,s,o,a,l,c,u){var h,d,f,p,m,y,_,g,v,x,T,b,S,M,A,E,w,N=e.type;if(e.constructor!=null)return null;128&n.__u&&(c=!!(32&n.__u),o=[l=e.__e=n.__e]),(h=Zt.__b)&&h(e);e:if(typeof N=="function")try{if(g=e.props,v="prototype"in N&&N.prototype.render,x=(h=N.contextType)&&i[h.__c],T=h?x?x.props.value:h.__:i,n.__c?_=(d=e.__c=n.__c).__=d.__E:(v?e.__c=d=new N(g,T):(e.__c=d=new Sh(g,T),d.constructor=N,d.render=MV),x&&x.sub(d),d.props=g,d.state||(d.state={}),d.context=T,d.__n=i,f=d.__d=!0,d.__h=[],d._sb=[]),v&&d.__s==null&&(d.__s=d.state),v&&N.getDerivedStateFromProps!=null&&(d.__s==d.state&&(d.__s=gr({},d.__s)),gr(d.__s,N.getDerivedStateFromProps(g,d.__s))),p=d.props,m=d.state,d.__v=e,f)v&&N.getDerivedStateFromProps==null&&d.componentWillMount!=null&&d.componentWillMount(),v&&d.componentDidMount!=null&&d.__h.push(d.componentDidMount);else{if(v&&N.getDerivedStateFromProps==null&&g!==p&&d.componentWillReceiveProps!=null&&d.componentWillReceiveProps(g,T),!d.__e&&d.shouldComponentUpdate!=null&&d.shouldComponentUpdate(g,d.__s,T)===!1||e.__v==n.__v){for(e.__v!=n.__v&&(d.props=g,d.state=d.__s,d.__d=!1),e.__e=n.__e,e.__k=n.__k,e.__k.some(function(D){D&&(D.__=e)}),b=0;b<d._sb.length;b++)d.__h.push(d._sb[b]);d._sb=[],d.__h.length&&a.push(d);break e}d.componentWillUpdate!=null&&d.componentWillUpdate(g,d.__s,T),v&&d.componentDidUpdate!=null&&d.__h.push(function(){d.componentDidUpdate(p,m,y)})}if(d.context=T,d.props=g,d.__P=r,d.__e=!1,S=Zt.__r,M=0,v){for(d.state=d.__s,d.__d=!1,S&&S(e),h=d.render(d.props,d.state,d.context),A=0;A<d._sb.length;A++)d.__h.push(d._sb[A]);d._sb=[]}else do d.__d=!1,S&&S(e),h=d.render(d.props,d.state,d.context),d.state=d.__s;while(d.__d&&++M<25);d.state=d.__s,d.getChildContext!=null&&(i=gr(gr({},i),d.getChildContext())),v&&!f&&d.getSnapshotBeforeUpdate!=null&&(y=d.getSnapshotBeforeUpdate(p,m)),E=h,h!=null&&h.type===Md&&h.key==null&&(E=HS(h.props.children)),l=zS(r,Sd(E)?E:[E],e,n,i,s,o,a,l,c,u),d.base=e.__e,e.__u&=-161,d.__h.length&&a.push(d),_&&(d.__E=d.__=null)}catch(D){if(e.__v=null,c||o!=null)if(D.then){for(e.__u|=c?160:128;l&&l.nodeType==8&&l.nextSibling;)l=l.nextSibling;o[o.indexOf(l)]=null,e.__e=l}else{for(w=o.length;w--;)Qg(o[w]);pm(e)}else e.__e=n.__e,e.__k=n.__k,D.then||pm(e);Zt.__e(D,e,n)}else o==null&&e.__v==n.__v?(e.__k=n.__k,e.__e=n.__e):l=e.__e=SV(n.__e,e,n,i,s,o,a,c,u);return(h=Zt.diffed)&&h(e),128&e.__u?void 0:l}function pm(r){r&&r.__c&&(r.__c.__e=!0),r&&r.__k&&r.__k.forEach(pm)}function VS(r,e,n){for(var i=0;i<n.length;i++)e_(n[i],n[++i],n[++i]);Zt.__c&&Zt.__c(e,r),r.some(function(s){try{r=s.__h,s.__h=[],r.some(function(o){o.call(s)})}catch(o){Zt.__e(o,s.__v)}})}function HS(r){return typeof r!="object"||r==null||r.__b&&r.__b>0?r:Sd(r)?r.map(HS):gr({},r)}function SV(r,e,n,i,s,o,a,l,c){var u,h,d,f,p,m,y,_=n.props,g=e.props,v=e.type;if(v=="svg"?s="http://www.w3.org/2000/svg":v=="math"?s="http://www.w3.org/1998/Math/MathML":s||(s="http://www.w3.org/1999/xhtml"),o!=null){for(u=0;u<o.length;u++)if((p=o[u])&&"setAttribute"in p==!!v&&(v?p.localName==v:p.nodeType==3)){r=p,o[u]=null;break}}if(r==null){if(v==null)return document.createTextNode(g);r=document.createElementNS(s,v,g.is&&g),l&&(Zt.__m&&Zt.__m(e,o),l=!1),o=null}if(v==null)_===g||l&&r.data==g||(r.data=g);else{if(o=o&&tu.call(r.childNodes),_=n.props||Bc,!l&&o!=null)for(_={},u=0;u<r.attributes.length;u++)_[(p=r.attributes[u]).name]=p.value;for(u in _)if(p=_[u],u!="children"){if(u=="dangerouslySetInnerHTML")d=p;else if(!(u in g)){if(u=="value"&&"defaultValue"in g||u=="checked"&&"defaultChecked"in g)continue;hh(r,u,null,p,s)}}for(u in g)p=g[u],u=="children"?f=p:u=="dangerouslySetInnerHTML"?h=p:u=="value"?m=p:u=="checked"?y=p:l&&typeof p!="function"||_[u]===p||hh(r,u,p,_[u],s);if(h)l||d&&(h.__html==d.__html||h.__html==r.innerHTML)||(r.innerHTML=h.__html),e.__k=[];else if(d&&(r.innerHTML=""),zS(e.type=="template"?r.content:r,Sd(f)?f:[f],e,n,i,v=="foreignObject"?"http://www.w3.org/1999/xhtml":s,o,a,o?o[0]:n.__k&&nl(n,0),l,c),o!=null)for(u=o.length;u--;)Qg(o[u]);l||(u="value",v=="progress"&&m==null?r.removeAttribute("value"):m!=null&&(m!==r[u]||v=="progress"&&!m||v=="option"&&m!=_[u])&&hh(r,u,m,_[u],s),u="checked",y!=null&&y!=r[u]&&hh(r,u,y,_[u],s))}return r}function e_(r,e,n){try{if(typeof r=="function"){var i=typeof r.__u=="function";i&&r.__u(),i&&e==null||(r.__u=r(e))}else r.current=e}catch(s){Zt.__e(s,n)}}function WS(r,e,n){var i,s;if(Zt.unmount&&Zt.unmount(r),(i=r.ref)&&(i.current&&i.current!=r.__e||e_(i,null,e)),(i=r.__c)!=null){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(o){Zt.__e(o,e)}i.base=i.__P=null}if(i=r.__k)for(s=0;s<i.length;s++)i[s]&&WS(i[s],e,n||typeof r.type!="function");n||Qg(r.__e),r.__c=r.__=r.__e=void 0}function MV(r,e,n){return this.constructor(r,n)}function EV(r,e,n){var i,s,o,a;e==document&&(e=document.documentElement),Zt.__&&Zt.__(r,e),s=(i=!1)?null:e.__k,o=[],a=[],Jg(e,r=e.__k=xV(Md,null,[r]),s||Bc,Bc,e.namespaceURI,s?null:e.firstChild?tu.call(e.childNodes):null,o,s?s.__e:e.firstChild,i,a),VS(o,r,a)}function $S(r,e,n){var i,s,o,a,l=gr({},r.props);for(o in r.type&&r.type.defaultProps&&(a=r.type.defaultProps),e)o=="key"?i=e[o]:o=="ref"?s=e[o]:l[o]=e[o]===void 0&&a!=null?a[o]:e[o];return arguments.length>2&&(l.children=arguments.length>3?tu.call(arguments,2):n),dc(r.type,l,i||r.key,s||r.ref,null)}tu=BS.slice,Zt={__e:function(r,e,n,i){for(var s,o,a;e=e.__;)if((s=e.__c)&&!s.__)try{if((o=s.constructor)&&o.getDerivedStateFromError!=null&&(s.setState(o.getDerivedStateFromError(r)),a=s.__d),s.componentDidCatch!=null&&(s.componentDidCatch(r,i||{}),a=s.__d),a)return s.__E=s}catch(l){r=l}throw r}},LS=0,IS=function(r){return r!=null&&r.constructor==null},Sh.prototype.setState=function(r,e){var n;n=this.__s!=null&&this.__s!=this.state?this.__s:this.__s=gr({},this.state),typeof r=="function"&&(r=r(gr({},n),this.props)),r&&gr(n,r),r!=null&&this.__v&&(e&&this._sb.push(e),V0(this))},Sh.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),V0(this))},Sh.prototype.render=Md,oo=[],US=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,FS=function(r,e){return r.__v.__b-e.__v.__b},$h.__r=0,OS=/(PointerCapture)$|Capture$/i,Zg=0,dm=W0(!1),fm=W0(!0);function $0(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function wV(r){if(Array.isArray(r))return r}function AV(r,e,n){return(e=LV(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function RV(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function CV(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function j0(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function NV(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?j0(Object(n),!0).forEach(function(i){AV(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):j0(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function PV(r,e){return wV(r)||RV(r,e)||IV(r,e)||CV()}function DV(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function LV(r){var e=DV(r,"string");return typeof e=="symbol"?e:e+""}function jh(r){"@babel/helpers - typeof";return jh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},jh(r)}function IV(r,e){if(r){if(typeof r=="string")return $0(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$0(r,e):void 0}}var mm=function(e){if(jh(e)!=="object")return e;var n=$S(e);if(n.props){var i;n.props=NV({},n.props),n!=null&&(i=n.props)!==null&&i!==void 0&&i.children&&(n.props.children=Array.isArray(n.props.children)?n.props.children.map(mm):mm(n.props.children))}return n},UV=function(e){return IS($S(e))},FV=function(e,n){delete n.__k,EV(mm(e),n)};function OV(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var BV=`.float-tooltip-kap {
  position: absolute;
  width: max-content; /* prevent shrinking near right edge */
  max-width: max(50%, 150px);
  padding: 3px 5px;
  border-radius: 3px;
  font: 12px sans-serif;
  color: #eee;
  background: rgba(0,0,0,0.6);
  pointer-events: none;
}
`;OV(BV);var jS=cl({props:{content:{default:!1},offsetX:{triggerUpdate:!1},offsetY:{triggerUpdate:!1}},init:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=i.style,o=s===void 0?{}:s,a=!!e&&jh(e)==="object"&&!!e.node&&typeof e.node=="function",l=wp(a?e.node():e);l.style("position")==="static"&&l.style("position","relative"),n.tooltipEl=l.append("div").attr("class","float-tooltip-kap"),Object.entries(o).forEach(function(u){var h=PV(u,2),d=h[0],f=h[1];return n.tooltipEl.style(d,f)}),n.tooltipEl.style("left","-10000px").style("display","none");var c="tooltip-".concat(Math.round(Math.random()*1e12));n.mouseInside=!1,l.on("mousemove.".concat(c),function(u){n.mouseInside=!0;var h=bM(u),d=l.node(),f=d.offsetWidth,p=d.offsetHeight,m=[n.offsetX===null||n.offsetX===void 0?"-".concat(h[0]/f*100,"%"):typeof n.offsetX=="number"?"calc(-50% + ".concat(n.offsetX,"px)"):n.offsetX,n.offsetY===null||n.offsetY===void 0?p>130&&p-h[1]<100?"calc(-100% - 6px)":"21px":typeof n.offsetY=="number"?n.offsetY<0?"calc(-100% - ".concat(Math.abs(n.offsetY),"px)"):"".concat(n.offsetY,"px"):n.offsetY];n.tooltipEl.style("left",h[0]+"px").style("top",h[1]+"px").style("transform","translate(".concat(m.join(","),")")),n.content&&n.tooltipEl.style("display","inline")}),l.on("mouseover.".concat(c),function(){n.mouseInside=!0,n.content&&n.tooltipEl.style("display","inline")}),l.on("mouseout.".concat(c),function(){n.mouseInside=!1,n.tooltipEl.style("display","none")})},update:function(e){e.tooltipEl.style("display",e.content&&e.mouseInside?"inline":"none"),e.content?e.content instanceof HTMLElement?(e.tooltipEl.text(""),e.tooltipEl.append(function(){return e.content})):typeof e.content=="string"?e.tooltipEl.html(e.content):UV(e.content)?(e.tooltipEl.text(""),FV(e.content,e.tooltipEl.node())):(e.tooltipEl.style("display","none"),console.warn("Tooltip content is invalid, skipping.",e.content,e.content.toString())):e.tooltipEl.text("")}});function kV(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var zV=`.scene-nav-info {
  position: absolute;
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
  font-family: sans-serif;
  pointer-events: none;
  user-select: none;
}

.scene-container canvas:focus {
  outline: none;
}`;kV(zV);function gm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function GV(r){if(Array.isArray(r))return r}function VV(r){if(Array.isArray(r))return gm(r)}function HV(r,e,n){return(e=KV(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function WV(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function $V(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function jV(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function qV(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function XV(r,e){return GV(r)||$V(r,e)||qS(r,e)||jV()}function Xs(r){return VV(r)||WV(r)||qS(r)||qV()}function YV(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function KV(r){var e=YV(r,"string");return typeof e=="symbol"?e:e+""}function qS(r,e){if(r){if(typeof r=="string")return gm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?gm(r,e):void 0}}var Yt=window.THREE?window.THREE:{WebGLRenderer:EN,Scene:nd,PerspectiveCamera:wn,Raycaster:Hx,SRGBColorSpace:Fn,TextureLoader:Lw,Vector2:ue,Vector3:L,Box3:vo,Color:Ge,Mesh:mn,SphereGeometry:Xc,MeshBasicMaterial:dr,BackSide:Ut,Clock:Vx},XS=cl({props:{width:{default:window.innerWidth,onChange:function(e,n,i){isNaN(e)&&(n.width=i)}},height:{default:window.innerHeight,onChange:function(e,n,i){isNaN(e)&&(n.height=i)}},viewOffset:{default:[0,0]},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,n){n.hoverObj=null,n.tooltip&&n.tooltip.content(null)},triggerUpdate:!1},pointerRaycasterThrottleMs:{default:50,triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},pointsHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){e.controls.enabled&&e.controls.update&&e.controls.update(Math.min(1,e.clock.getDelta())),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(a){return a.render(e.scene,e.camera)});var n=+new Date;if(e.enablePointerInteraction&&n-e.lastRaycasterCheck>=e.pointerRaycasterThrottleMs){e.lastRaycasterCheck=n;var i=null;if(e.hoverDuringDrag||!e.isPointerDragging){var s=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y);e.hoverOrderComparator&&s.sort(function(a,l){return e.hoverOrderComparator(a.object,l.object)});var o=s.find(function(a){return e.hoverFilter(a.object)})||null;i=o?o.object:null,e.intersection=o||null}i!==e.hoverObj&&(e.onHover(i,e.hoverObj,e.intersection),e.tooltip.content(i&&Ie(e.tooltipContent)(i,e.intersection)||null),e.hoverObj=i)}e.tweenGroup.update()}return this},getPointerPos:function(e){var n=e.pointerPos,i=n.x,s=n.y;return{x:i,y:s}},cameraPosition:function(e,n,i,s){var o=e.camera;if(n&&e.initialised){var a=n,l=i||{x:0,y:0,z:0};if(!s)h(a),d(l);else{var c=Object.assign({},o.position),u=f();e.tweenGroup.add(new Wh(c).to(a,s).easing(es.Quadratic.Out).onUpdate(h).start()),e.tweenGroup.add(new Wh(u).to(l,s/3).easing(es.Quadratic.Out).onUpdate(d).start())}return this}return Object.assign({},o.position,{lookAt:f()});function h(p){var m=p.x,y=p.y,_=p.z;m!==void 0&&(o.position.x=m),y!==void 0&&(o.position.y=y),_!==void 0&&(o.position.z=_)}function d(p){var m=new Yt.Vector3(p.x,p.y,p.z);e.controls.enabled&&e.controls.target?e.controls.target=m:o.lookAt(m)}function f(){return Object.assign(new Yt.Vector3(0,0,-1e3).applyQuaternion(o.quaternion).add(o.position))}},zoomToFit:function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];return this.fitToBbox(this.getBbox.apply(this,o),n,i)},fitToBbox:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,o=e.camera;if(n){var a=new Yt.Vector3(0,0,0),l=Math.max.apply(Math,Xs(Object.entries(n).map(function(p){var m=XV(p,2),y=m[0],_=m[1];return Math.max.apply(Math,Xs(_.map(function(g){return Math.abs(a[y]-g)})))})))*2,c=(1-s*2/e.height)*o.fov,u=l/Math.atan(c*Math.PI/180),h=u/o.aspect,d=Math.max(u,h);if(d>0){var f=a.clone().sub(o.position).normalize().multiplyScalar(-d);this.cameraPosition(f,a,i)}}return this},getBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},i=new Yt.Box3(new Yt.Vector3(0,0,0),new Yt.Vector3(0,0,0)),s=e.objects.filter(n);return s.length?(s.forEach(function(o){return i.expandByObject(o)}),Object.assign.apply(Object,Xs(["x","y","z"].map(function(o){return HV({},o,[i.min[o],i.max[o]])})))):null},getScreenCoords:function(e,n,i,s){var o=new Yt.Vector3(n,i,s);return o.project(this.camera()),{x:(o.x+1)*e.width/2,y:-(o.y-1)*e.height/2}},getSceneCoords:function(e,n,i){var s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,o=new Yt.Vector2(n/e.width*2-1,-(i/e.height)*2+1),a=new Yt.Raycaster;return a.setFromCamera(o,e.camera),Object.assign({},a.ray.at(s,new Yt.Vector3))},intersectingObjects:function(e,n,i){var s=new Yt.Vector2(n/e.width*2-1,-(i/e.height)*2+1),o=new Yt.Raycaster;return o.params.Line.threshold=e.lineHoverPrecision,o.params.Points.threshold=e.pointsHoverPrecision,o.setFromCamera(s,e.camera),o.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new Yt.Scene,camera:new Yt.PerspectiveCamera,clock:new Yt.Clock,tweenGroup:new Kg,lastRaycasterCheck:0}},init:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=i.controlType,o=s===void 0?"trackball":s,a=i.useWebGPU,l=a===void 0?!1:a,c=i.rendererConfig,u=c===void 0?{}:c,h=i.extraRenderers,d=h===void 0?[]:h,f=i.waitForLoadComplete,p=f===void 0?!0:f;e.innerHTML="",e.appendChild(n.container=document.createElement("div")),n.container.className="scene-container",n.container.style.position="relative",n.container.appendChild(n.navInfo=document.createElement("div")),n.navInfo.className="scene-nav-info",n.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[o]||"",n.navInfo.style.display=n.showNavInfo?null:"none",n.tooltip=new jS(n.container),n.pointerPos=new Yt.Vector2,n.pointerPos.x=-2,n.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(m){return n.container.addEventListener(m,function(y){if(m==="pointerdown"&&(n.isPointerPressed=!0),!n.isPointerDragging&&y.type==="pointermove"&&(y.pressure>0||n.isPointerPressed)&&(y.pointerType==="mouse"||y.movementX===void 0||[y.movementX,y.movementY].some(function(v){return Math.abs(v)>1}))&&(n.isPointerDragging=!0),n.enablePointerInteraction){var _=g(n.container);n.pointerPos.x=y.pageX-_.left,n.pointerPos.y=y.pageY-_.top}function g(v){var x=v.getBoundingClientRect(),T=window.pageXOffset||document.documentElement.scrollLeft,b=window.pageYOffset||document.documentElement.scrollTop;return{top:x.top+b,left:x.left+T}}},{passive:!0})}),n.container.addEventListener("pointerup",function(m){n.isPointerPressed&&(n.isPointerPressed=!1,!(n.isPointerDragging&&(n.isPointerDragging=!1,!n.clickAfterDrag))&&requestAnimationFrame(function(){m.button===0&&n.onClick(n.hoverObj||null,m,n.intersection),m.button===2&&n.onRightClick&&n.onRightClick(n.hoverObj||null,m,n.intersection)}))},{passive:!0,capture:!0}),n.container.addEventListener("contextmenu",function(m){n.onRightClick&&m.preventDefault()}),n.renderer=new(l?zz:Yt.WebGLRenderer)(Object.assign({antialias:!0,alpha:!0},u)),n.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),n.container.appendChild(n.renderer.domElement),n.extraRenderers=d,n.extraRenderers.forEach(function(m){m.domElement.style.position="absolute",m.domElement.style.top="0px",m.domElement.style.pointerEvents="none",n.container.appendChild(m.domElement)}),n.postProcessingComposer=new LG(n.renderer),n.postProcessingComposer.addPass(new IG(n.scene,n.camera)),n.controls=new{trackball:Vz,orbit:rG,fly:yG}[o](n.camera,n.renderer.domElement),o==="fly"&&(n.controls.movementSpeed=300,n.controls.rollSpeed=Math.PI/6,n.controls.dragToLook=!0),(o==="trackball"||o==="orbit")&&(n.controls.minDistance=.1,n.controls.maxDistance=n.skyRadius,n.controls.addEventListener("start",function(){n.controlsEngaged=!0}),n.controls.addEventListener("change",function(){n.controlsEngaged&&(n.controlsDragging=!0)}),n.controls.addEventListener("end",function(){n.controlsEngaged=!1,n.controlsDragging=!1})),[n.renderer,n.postProcessingComposer].concat(Xs(n.extraRenderers)).forEach(function(m){return m.setSize(n.width,n.height)}),n.camera.aspect=n.width/n.height,n.camera.updateProjectionMatrix(),n.camera.position.z=1e3,n.scene.add(n.skysphere=new Yt.Mesh),n.skysphere.visible=!1,n.loadComplete=n.scene.visible=!p,window.scene=n.scene},update:function(e,n){if(e.width&&e.height&&(n.hasOwnProperty("width")||n.hasOwnProperty("height"))){var i,s=e.width,o=e.height;e.container.style.width="".concat(s,"px"),e.container.style.height="".concat(o,"px"),[e.renderer,e.postProcessingComposer].concat(Xs(e.extraRenderers)).forEach(function(p){return p.setSize(s,o)}),e.camera.aspect=s/o;var a=e.viewOffset.slice(0,2);a.some(function(p){return p})&&(i=e.camera).setViewOffset.apply(i,[s,o].concat(Xs(a),[s,o])),e.camera.updateProjectionMatrix()}if(n.hasOwnProperty("viewOffset")){var l,c=e.width,u=e.height,h=e.viewOffset.slice(0,2);h.some(function(p){return p})?(l=e.camera).setViewOffset.apply(l,[c,u].concat(Xs(h),[c,u])):e.camera.clearViewOffset()}if(n.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&n.skyRadius&&(e.controls.maxDistance=Math.min(e.controls.maxDistance,e.skyRadius)),e.camera.far=e.skyRadius*2.5,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new Yt.SphereGeometry(e.skyRadius)),n.hasOwnProperty("backgroundColor")){var d=tl(e.backgroundColor).alpha;d===void 0&&(d=1),e.renderer.setClearColor(new Yt.Color(hV(1,e.backgroundColor)),d)}n.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new Yt.TextureLoader().load(e.backgroundImageUrl,function(p){p.colorSpace=Yt.SRGBColorSpace,e.skysphere.material=new Yt.MeshBasicMaterial({map:p,side:Yt.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&f()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&f())),n.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),n.hasOwnProperty("lights")&&((n.lights||[]).forEach(function(p){return e.scene.remove(p)}),e.lights.forEach(function(p){return e.scene.add(p)})),n.hasOwnProperty("objects")&&((n.objects||[]).forEach(function(p){return e.scene.remove(p)}),e.objects.forEach(function(p){return e.scene.add(p)}));function f(){e.loadComplete=e.scene.visible=!0}}});function ZV(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var QV=`.graph-info-msg {
  top: 50%;
  width: 100%;
  text-align: center;
  color: lavender;
  opacity: 0.7;
  font-size: 22px;
  position: absolute;
  font-family: Sans-serif;
}

.scene-container .clickable {
  cursor: pointer;
}

.scene-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.scene-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}`;ZV(QV);function _m(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function JV(r){if(Array.isArray(r))return _m(r)}function nu(r,e,n){return(e=i4(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function e4(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function t4(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function q0(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function dh(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?q0(Object(n),!0).forEach(function(i){nu(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):q0(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function Ed(r){return JV(r)||e4(r)||r4(r)||t4()}function n4(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function i4(r){var e=n4(r,"string");return typeof e=="symbol"?e:e+""}function r4(r,e){if(r){if(typeof r=="string")return _m(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_m(r,e):void 0}}function YS(r,e){var n=new e;return n._destructor&&n._destructor(),{linkProp:function(s){return{default:n[s](),onChange:function(a,l){l[r][s](a)},triggerUpdate:!1}},linkMethod:function(s){return function(o){for(var a=o[r],l=arguments.length,c=new Array(l>1?l-1:0),u=1;u<l;u++)c[u-1]=arguments[u];var h=a[s].apply(a,c);return h===a?this:h}}}}var _p=window.THREE?window.THREE:{AmbientLight:zx,DirectionalLight:kx,REVISION:il},s4=170,KS=YS("forceGraph",Rb),o4=Object.assign.apply(Object,Ed(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeVisibility","nodeThreeObject","nodeThreeObjectExtend","nodePositionUpdate","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleOffset","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","linkDirectionalParticleThreeObject","forceEngine","d3AlphaDecay","d3VelocityDecay","d3AlphaMin","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(r){return nu({},r,KS.linkProp(r))}))),a4=Object.assign.apply(Object,Ed(["refresh","getGraphBbox","d3Force","d3ReheatSimulation","emitParticle"].map(function(r){return nu({},r,KS.linkMethod(r))}))),Mh=YS("renderObjs",XS),l4=Object.assign.apply(Object,Ed(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(r){return nu({},r,Mh.linkProp(r))}))),c4=Object.assign.apply(Object,Ed(["lights","cameraPosition","postProcessingComposer"].map(function(r){return nu({},r,Mh.linkMethod(r))})).concat([{graph2ScreenCoords:Mh.linkMethod("getScreenCoords"),screen2GraphCoords:Mh.linkMethod("getSceneCoords")}])),u4=cl({props:dh(dh({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(e,n){return n.renderObjs.lineHoverPrecision(e)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(e,n){var i=n.renderObjs.controls();i&&(i.enabled=e,e&&i.domElement&&i.domElement.dispatchEvent(new PointerEvent("pointerup")))},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1},showPointerCursor:{default:!0,triggerUpdate:!1}},o4),l4),methods:dh(dh({zoomToFit:function(e,n,i){for(var s,o=arguments.length,a=new Array(o>3?o-3:0),l=3;l<o;l++)a[l-3]=arguments[l];return e.renderObjs.fitToBbox((s=e.forceGraph).getGraphBbox.apply(s,a),n,i),this},pauseAnimation:function(e){return e.animationFrameRequestId!==null&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(e){e.enablePointerInteraction&&(this.renderer().domElement.style.cursor=null),e.forceGraph.tickFrame(),e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},tbControls:function(e){return e.renderObjs.tbControls()},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},a4),c4),stateInit:function(e){var n=e.controlType,i=e.rendererConfig,s=e.extraRenderers,o=new Rb;return{forceGraph:o,renderObjs:XS({controlType:n,rendererConfig:i,extraRenderers:s}).objects([o]).lights([new _p.AmbientLight(13421772,Math.PI),new _p.DirectionalLight(16777215,.6*Math.PI)])}},init:function(e,n){e.innerHTML="",e.appendChild(n.container=document.createElement("div")),n.container.style.position="relative";var i=document.createElement("div");n.container.appendChild(i),n.renderObjs(i);var s=n.renderObjs.camera(),o=n.renderObjs.renderer(),a=n.renderObjs.controls();a.enabled=!!n.enableNavigationControls,n.lastSetCameraZ=s.position.z;var l;n.container.appendChild(l=document.createElement("div")),l.className="graph-info-msg",l.textContent="",n.forceGraph.onLoading(function(){l.textContent="Loading..."}).onFinishLoading(function(){l.textContent=""}).onUpdate(function(){n.graphData=n.forceGraph.graphData(),s.position.x===0&&s.position.y===0&&s.position.z===n.lastSetCameraZ&&n.graphData.nodes.length&&(s.lookAt(n.forceGraph.position),n.lastSetCameraZ=s.position.z=Math.cbrt(n.graphData.nodes.length)*s4)}).onFinishUpdate(function(){if(n._dragControls){var c=n.graphData.nodes.find(function(h){return h.__initialFixedPos&&!h.__disposeControlsAfterDrag});c?c.__disposeControlsAfterDrag=!0:n._dragControls.dispose(),n._dragControls=void 0}if(n.enableNodeDrag&&n.enablePointerInteraction&&n.forceEngine==="d3"){var u=n._dragControls=new wN(n.graphData.nodes.map(function(h){return h.__threeObj}).filter(function(h){return h}),s,o.domElement);u.addEventListener("dragstart",function(h){var d=Ir(h.object);if(d){a.enabled=!1,h.object.__initialPos=h.object.position.clone(),h.object.__prevPos=h.object.position.clone();var f=d.__data;!f.__initialFixedPos&&(f.__initialFixedPos={fx:f.fx,fy:f.fy,fz:f.fz}),!f.__initialPos&&(f.__initialPos={x:f.x,y:f.y,z:f.z}),["x","y","z"].forEach(function(p){return f["f".concat(p)]=f[p]}),o.domElement.classList.add("grabbable")}}),u.addEventListener("drag",function(h){var d=Ir(h.object);if(d){if(!h.object.hasOwnProperty("__graphObjType")){var f=h.object.__initialPos,p=h.object.__prevPos,m=h.object.position;d.position.add(m.clone().sub(p)),p.copy(m),m.copy(f)}var y=d.__data,_=d.position,g={x:_.x-y.x,y:_.y-y.y,z:_.z-y.z};["x","y","z"].forEach(function(v){return y["f".concat(v)]=y[v]=_[v]}),n.forceGraph.d3AlphaTarget(.3).resetCountdown(),y.__dragged=!0,n.onNodeDrag(y,g)}}),u.addEventListener("dragend",function(h){var d=Ir(h.object);if(d){delete h.object.__initialPos,delete h.object.__prevPos;var f=d.__data;f.__disposeControlsAfterDrag&&(u.dispose(),delete f.__disposeControlsAfterDrag);var p=f.__initialFixedPos,m=f.__initialPos,y={x:m.x-f.x,y:m.y-f.y,z:m.z-f.z};if(p&&(["x","y","z"].forEach(function(g){var v="f".concat(g);p[v]===void 0&&delete f[v]}),delete f.__initialFixedPos,delete f.__initialPos,f.__dragged&&(delete f.__dragged,n.onNodeDragEnd(f,y))),n.forceGraph.d3AlphaTarget(0).resetCountdown(),n.enableNavigationControls){var _;a.enabled=!0,a._status&&((_=a._onPointerCancel)===null||_===void 0||_.call(a)),a.domElement&&a.domElement.ownerDocument&&a.domElement.ownerDocument.dispatchEvent(new PointerEvent("pointerup",{pointerType:"touch"}))}o.domElement.classList.remove("grabbable")}})}}),_p.REVISION<155&&(n.renderObjs.renderer().useLegacyLights=!1),n.renderObjs.hoverOrderComparator(function(c,u){var h=Ir(c);if(!h)return 1;var d=Ir(u);if(!d)return-1;var f=function(m){return m.__graphObjType==="node"};return f(d)-f(h)}).tooltipContent(function(c){var u=Ir(c);return u&&Ie(n["".concat(u.__graphObjType,"Label")])(u.__data)||""}).hoverDuringDrag(!1).onHover(function(c){var u=Ir(c);if(u!==n.hoverObj){var h=n.hoverObj?n.hoverObj.__graphObjType:null,d=n.hoverObj?n.hoverObj.__data:null,f=u?u.__graphObjType:null,p=u?u.__data:null;if(h&&h!==f){var m=n["on".concat(h==="node"?"Node":"Link","Hover")];m&&m(null,d)}if(f){var y=n["on".concat(f==="node"?"Node":"Link","Hover")];y&&y(p,h===f?d:null)}o.domElement.classList[(u&&n["on".concat(f==="node"?"Node":"Link","Click")]||!u&&n.onBackgroundClick)&&Ie(n.showPointerCursor)(p)?"add":"remove"]("clickable"),n.hoverObj=u}}).clickAfterDrag(!1).onClick(function(c,u){var h=Ir(c);if(h){var d=n["on".concat(h.__graphObjType==="node"?"Node":"Link","Click")];d&&d(h.__data,u)}else n.onBackgroundClick&&n.onBackgroundClick(u)}).onRightClick(function(c,u){var h=Ir(c);if(h){var d=n["on".concat(h.__graphObjType==="node"?"Node":"Link","RightClick")];d&&d(h.__data,u)}else n.onBackgroundRightClick&&n.onBackgroundRightClick(u)}),this._animationCycle()}});function Ir(r){for(var e=r;e&&!e.hasOwnProperty("__graphObjType");)e=e.parent;return e}var yp={exports:{}},vp,X0;function h4(){if(X0)return vp;X0=1;var r="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return vp=r,vp}var xp,Y0;function d4(){if(Y0)return xp;Y0=1;var r=h4();function e(){}function n(){}return n.resetWarningCache=e,xp=function(){function i(a,l,c,u,h,d){if(d!==r){var f=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw f.name="Invariant Violation",f}}i.isRequired=i;function s(){return i}var o={array:i,bigint:i,bool:i,func:i,number:i,object:i,string:i,symbol:i,any:i,arrayOf:s,element:i,elementType:i,instanceOf:s,node:i,objectOf:s,oneOf:s,oneOfType:s,shape:s,exact:s,checkPropTypes:n,resetWarningCache:e};return o.PropTypes=o,o},xp}var K0;function f4(){return K0||(K0=1,yp.exports=d4()()),yp.exports}var p4=f4();const R=lx(p4),wd={width:R.number,height:R.number,graphData:R.shape({nodes:R.arrayOf(R.object).isRequired,links:R.arrayOf(R.object).isRequired}),backgroundColor:R.string,nodeRelSize:R.number,nodeId:R.string,nodeLabel:R.oneOfType([R.string,R.func]),nodeVal:R.oneOfType([R.number,R.string,R.func]),nodeVisibility:R.oneOfType([R.bool,R.string,R.func]),nodeColor:R.oneOfType([R.string,R.func]),nodeAutoColorBy:R.oneOfType([R.string,R.func]),onNodeHover:R.func,onNodeClick:R.func,linkSource:R.string,linkTarget:R.string,linkLabel:R.oneOfType([R.string,R.func]),linkVisibility:R.oneOfType([R.bool,R.string,R.func]),linkColor:R.oneOfType([R.string,R.func]),linkAutoColorBy:R.oneOfType([R.string,R.func]),linkWidth:R.oneOfType([R.number,R.string,R.func]),linkCurvature:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowLength:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowColor:R.oneOfType([R.string,R.func]),linkDirectionalArrowRelPos:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticles:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleSpeed:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleOffset:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleWidth:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleColor:R.oneOfType([R.string,R.func]),onLinkHover:R.func,onLinkClick:R.func,dagMode:R.oneOf(["td","bu","lr","rl","zin","zout","radialin","radialout"]),dagLevelDistance:R.number,dagNodeFilter:R.func,onDagError:R.func,d3AlphaMin:R.number,d3AlphaDecay:R.number,d3VelocityDecay:R.number,warmupTicks:R.number,cooldownTicks:R.number,cooldownTime:R.number,onEngineTick:R.func,onEngineStop:R.func,getGraphBbox:R.func},ZS={zoomToFit:R.func,onNodeRightClick:R.func,onNodeDrag:R.func,onNodeDragEnd:R.func,onLinkRightClick:R.func,linkHoverPrecision:R.number,onBackgroundClick:R.func,onBackgroundRightClick:R.func,showPointerCursor:R.oneOfType([R.bool,R.func]),enablePointerInteraction:R.bool,enableNodeDrag:R.bool},t_={showNavInfo:R.bool,nodeOpacity:R.number,nodeResolution:R.number,nodeThreeObject:R.oneOfType([R.object,R.string,R.func]),nodeThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),nodePositionUpdate:R.func,linkOpacity:R.number,linkResolution:R.number,linkCurveRotation:R.oneOfType([R.number,R.string,R.func]),linkMaterial:R.oneOfType([R.object,R.string,R.func]),linkThreeObject:R.oneOfType([R.object,R.string,R.func]),linkThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),linkPositionUpdate:R.func,linkDirectionalArrowResolution:R.number,linkDirectionalParticleResolution:R.number,linkDirectionalParticleThreeObject:R.oneOfType([R.object,R.string,R.func]),forceEngine:R.oneOf(["d3","ngraph"]),ngraphPhysics:R.object,numDimensions:R.oneOf([1,2,3])};Object.assign({},wd,ZS,{linkLineDash:R.oneOfType([R.arrayOf(R.number),R.string,R.func]),nodeCanvasObjectMode:R.oneOfType([R.string,R.func]),nodeCanvasObject:R.func,nodePointerAreaPaint:R.func,linkCanvasObjectMode:R.oneOfType([R.string,R.func]),linkCanvasObject:R.func,linkPointerAreaPaint:R.func,linkDirectionalParticleCanvasObject:R.func,autoPauseRedraw:R.bool,minZoom:R.number,maxZoom:R.number,enableZoomInteraction:R.oneOfType([R.bool,R.func]),enablePanInteraction:R.oneOfType([R.bool,R.func]),onZoom:R.func,onZoomEnd:R.func,onRenderFramePre:R.func,onRenderFramePost:R.func});const m4=Object.assign({},wd,ZS,t_,{enableNavigationControls:R.bool,controlType:R.oneOf(["trackball","orbit","fly"]),rendererConfig:R.object,extraRenderers:R.arrayOf(R.shape({render:R.func.isRequired}))});Object.assign({},wd,t_,{nodeDesc:R.oneOfType([R.string,R.func]),linkDesc:R.oneOfType([R.string,R.func])});Object.assign({},wd,t_,{markerAttrs:R.object,yOffset:R.number,glScale:R.number});const n_=dx(u4,{methodNames:["emitParticle","d3Force","d3ReheatSimulation","stopAnimation","pauseAnimation","resumeAnimation","cameraPosition","zoomToFit","getGraphBbox","screen2GraphCoords","graph2ScreenCoords","postProcessingComposer","lights","scene","camera","renderer","controls","refresh"],initPropNames:["controlType","rendererConfig","extraRenderers"]});n_.displayName="ForceGraph3D";n_.propTypes=m4;function ym(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function g4(r){if(Array.isArray(r))return r}function _4(r){if(Array.isArray(r))return ym(r)}function y4(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function v4(r,e,n){return e=qh(e),R4(r,QS()?Reflect.construct(e,n||[],qh(r).constructor):e.apply(r,n))}function x4(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function b4(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,N4(i.key),i)}}function T4(r,e,n){return e&&b4(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function qh(r){return qh=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},qh(r)}function S4(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(e&&e.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,"prototype",{writable:!1}),e&&vm(r,e)}function QS(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(QS=function(){return!!r})()}function M4(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function E4(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e===0){if(Object(n)!==n)return;c=!1}else for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function w4(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function A4(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function R4(r,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return y4(r)}function vm(r,e){return vm=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},vm(r,e)}function Z0(r,e){return g4(r)||E4(r,e)||JS(r,e)||w4()}function Hl(r){return _4(r)||M4(r)||JS(r)||A4()}function C4(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function N4(r){var e=C4(r,"string");return typeof e=="symbol"?e:e+""}function JS(r,e){if(r){if(typeof r=="string")return ym(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ym(r,e):void 0}}var Wl=typeof window<"u"&&window.THREE?window.THREE:{CanvasTexture:sw,Sprite:KE,SpriteMaterial:Jm,SRGBColorSpace:Fn},P4=function(r){function e(){var n,i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:10,o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"rgba(255, 255, 255, 1)";return x4(this,e),n=v4(this,e,[new Wl.SpriteMaterial]),n._text="".concat(i),n._textHeight=s,n._color=o,n._backgroundColor=!1,n._padding=0,n._borderWidth=0,n._borderRadius=0,n._borderColor="white",n._offsetX=0,n._offsetY=0,n._strokeWidth=0,n._strokeColor="white",n._fontFace="system-ui",n._fontSize=90,n._fontWeight="normal",n._canvas=document.createElement("canvas"),n._genCanvas(),n}return S4(e,r),T4(e,[{key:"text",get:function(){return this._text},set:function(i){this._text=i,this._genCanvas()}},{key:"textHeight",get:function(){return this._textHeight},set:function(i){this._textHeight=i,this._genCanvas()}},{key:"color",get:function(){return this._color},set:function(i){this._color=i,this._genCanvas()}},{key:"backgroundColor",get:function(){return this._backgroundColor},set:function(i){this._backgroundColor=i,this._genCanvas()}},{key:"padding",get:function(){return this._padding},set:function(i){this._padding=i,this._genCanvas()}},{key:"borderWidth",get:function(){return this._borderWidth},set:function(i){this._borderWidth=i,this._genCanvas()}},{key:"borderRadius",get:function(){return this._borderRadius},set:function(i){this._borderRadius=i,this._genCanvas()}},{key:"borderColor",get:function(){return this._borderColor},set:function(i){this._borderColor=i,this._genCanvas()}},{key:"offsetX",get:function(){return this._offsetX},set:function(i){this._offsetX=i,this._genCanvas()}},{key:"offsetY",get:function(){return this._offsetY},set:function(i){this._offsetY=i,this._genCanvas()}},{key:"fontFace",get:function(){return this._fontFace},set:function(i){this._fontFace=i,this._genCanvas()}},{key:"fontSize",get:function(){return this._fontSize},set:function(i){this._fontSize=i,this._genCanvas()}},{key:"fontWeight",get:function(){return this._fontWeight},set:function(i){this._fontWeight=i,this._genCanvas()}},{key:"strokeWidth",get:function(){return this._strokeWidth},set:function(i){this._strokeWidth=i,this._genCanvas()}},{key:"strokeColor",get:function(){return this._strokeColor},set:function(i){this._strokeColor=i,this._genCanvas()}},{key:"_genCanvas",value:function(){var i=this,s=this._canvas,o=s.getContext("2d"),a=1/this.textHeight,l=Array.isArray(this.borderWidth)?this.borderWidth:[this.borderWidth,this.borderWidth],c=l.map(function(N){return N*i.fontSize*a}),u=Array.isArray(this.borderRadius)?this.borderRadius:[this.borderRadius,this.borderRadius,this.borderRadius,this.borderRadius],h=u.map(function(N){return N*i.fontSize*a}),d=Array.isArray(this.padding)?this.padding:[this.padding,this.padding],f=d.map(function(N){return N*i.fontSize*a}),p=[this.offsetX,this.offsetY].map(function(N){return N*i.fontSize*a}),m=this.text.split(`
`),y="".concat(this.fontWeight," ").concat(this.fontSize,"px ").concat(this.fontFace);o.font=y;var _=Math.max.apply(Math,Hl(m.map(function(N){return o.measureText(N).width}))),g=this.fontSize*m.length,v=_+c[0]*2+f[0]*2,x=g+c[1]*2+f[1]*2;if(s.width=v+Math.abs(p[0]),s.height=x+Math.abs(p[1]),o.translate.apply(o,Hl(p.map(function(N){return Math.max(0,N)}))),this.borderWidth){if(o.strokeStyle=this.borderColor,c[0]){var T=c[0]/2;o.lineWidth=c[0],o.beginPath(),o.moveTo(T,h[0]),o.lineTo(T,x-h[3]),o.moveTo(v-T,h[1]),o.lineTo(v-T,x-h[2]),o.stroke()}if(c[1]){var b=c[1]/2;o.lineWidth=c[1],o.beginPath(),o.moveTo(Math.max(c[0],h[0]),b),o.lineTo(v-Math.max(c[0],h[1]),b),o.moveTo(Math.max(c[0],h[3]),x-b),o.lineTo(v-Math.max(c[0],h[2]),x-b),o.stroke()}if(this.borderRadius){var S=Math.max.apply(Math,Hl(c)),M=S/2;o.lineWidth=S,o.beginPath(),[!!h[0]&&[h[0],M,M,h[0]],!!h[1]&&[v-h[1],v-M,M,h[1]],!!h[2]&&[v-h[2],v-M,x-M,x-h[2]],!!h[3]&&[h[3],M,x-M,x-h[3]]].filter(function(N){return N}).forEach(function(N){var D=Z0(N,4),F=D[0],k=D[1],Y=D[2],$=D[3];o.moveTo(F,Y),o.quadraticCurveTo(k,Y,k,$)}),o.stroke()}}this.backgroundColor&&(o.fillStyle=this.backgroundColor,this.borderRadius?(o.beginPath(),o.moveTo(c[0],h[0]),[[c[0],h[0],v-h[1],c[1],c[1],c[1]],[v-c[0],v-c[0],v-c[0],c[1],h[1],x-h[2]],[v-c[0],v-h[2],h[3],x-c[1],x-c[1],x-c[1]],[c[0],c[0],c[0],x-c[1],x-h[3],h[0]]].forEach(function(N){var D=Z0(N,6),F=D[0],k=D[1],Y=D[2],$=D[3],V=D[4],B=D[5];o.quadraticCurveTo(F,$,k,V),o.lineTo(Y,B)}),o.closePath(),o.fill()):o.fillRect(c[0],c[1],v-c[0]*2,x-c[1]*2)),o.translate.apply(o,Hl(c)),o.translate.apply(o,Hl(f)),o.font=y,o.fillStyle=this.color,o.textBaseline="bottom";var A=this.strokeWidth>0;A&&(o.lineWidth=this.strokeWidth*this.fontSize/10,o.strokeStyle=this.strokeColor),m.forEach(function(N,D){var F=(_-o.measureText(N).width)/2,k=(D+1)*i.fontSize;A&&o.strokeText(N,F,k),o.fillText(N,F,k)}),this.material.map&&this.material.map.dispose();var E=this.material.map=new Wl.CanvasTexture(s);E.colorSpace=Wl.SRGBColorSpace;var w=this.textHeight*m.length+l[1]*2+d[1]*2+Math.abs(this.offsetY);this.scale.set(w*s.width/s.height,w,0)}},{key:"clone",value:function(){return new this.constructor(this.text,this.textHeight,this.color).copy(this)}},{key:"copy",value:function(i){return Wl.Sprite.prototype.copy.call(this,i),this.color=i.color,this.backgroundColor=i.backgroundColor,this.padding=i.padding,this.borderWidth=i.borderWidth,this.borderColor=i.borderColor,this.offsetX=i.offsetX,this.offsetY=i.offsetY,this.fontFace=i.fontFace,this.fontSize=i.fontSize,this.fontWeight=i.fontWeight,this.strokeWidth=i.strokeWidth,this.strokeColor=i.strokeColor,this}}])}(Wl.Sprite),D4="Expected a function";function L4(r,e,n){var i=!0,s=!0;if(typeof r!="function")throw new TypeError(D4);return Nh(n)&&(i="leading"in n?!!n.leading:i,s="trailing"in n?!!n.trailing:s),fb(r,e,{leading:i,maxWait:e,trailing:s})}function xm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function I4(r){if(Array.isArray(r))return xm(r)}function eM(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function U4(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function F4(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function Di(r,e){return r.get(eM(r,e))}function Q0(r,e,n){U4(r,e),e.set(r,n)}function J0(r,e,n){return r.set(eM(r,e),n),n}function O4(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,H4(i.key),i)}}function B4(r,e,n){return e&&O4(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function k4(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function z4(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function G4(r){return I4(r)||k4(r)||W4(r)||z4()}function V4(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function H4(r){var e=V4(r,"string");return typeof e=="symbol"?e:e+""}function W4(r,e){if(r){if(typeof r=="string")return xm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?xm(r,e):void 0}}var $4=123,j4=function(e){return"#".concat(Math.min(e,Math.pow(2,24)).toString(16).padStart(6,"0"))},tM=function(e,n,i){return(e<<16)+(n<<8)+i},q4=function(e){var n=Ve(e).toRgb(),i=n.r,s=n.g,o=n.b;return tM(i,s,o)},ex=function(e,n){return e*$4%Math.pow(2,n)},Ys=new WeakMap,Ur=new WeakMap,X4=function(){function r(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:6;F4(this,r),Q0(this,Ys,void 0),Q0(this,Ur,void 0),J0(Ur,this,e),this.reset()}return B4(r,[{key:"reset",value:function(){J0(Ys,this,["__reserved for background__"])}},{key:"register",value:function(n){if(Di(Ys,this).length>=Math.pow(2,24-Di(Ur,this)))return null;var i=Di(Ys,this).length,s=ex(i,Di(Ur,this)),o=j4(i+(s<<24-Di(Ur,this)));return Di(Ys,this).push(n),o}},{key:"lookup",value:function(n){if(!n)return null;var i=typeof n=="string"?q4(n):tM.apply(void 0,G4(n));if(!i)return null;var s=i&Math.pow(2,24-Di(Ur,this))-1,o=i>>24-Di(Ur,this)&Math.pow(2,Di(Ur,this))-1;return ex(s,Di(Ur,this))!==o||s>=Di(Ys,this).length?null:Di(Ys,this)[s]}}])}();const{abs:$l,cos:Fr,sin:ta,acos:Y4,atan2:jl,sqrt:ps,pow:Li}=Math;function ql(r){return r<0?-Li(-r,1/3):Li(r,1/3)}const nM=Math.PI,fh=2*nM,ms=nM/2,K4=1e-6,bp=Number.MAX_SAFE_INTEGER||9007199254740991,Tp=Number.MIN_SAFE_INTEGER||-9007199254740991,Z4={x:0,y:0,z:0},_e={Tvalues:[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213],Cvalues:[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872],arcfn:function(r,e){const n=e(r);let i=n.x*n.x+n.y*n.y;return typeof n.z<"u"&&(i+=n.z*n.z),ps(i)},compute:function(r,e,n){if(r===0)return e[0].t=0,e[0];const i=e.length-1;if(r===1)return e[i].t=1,e[i];const s=1-r;let o=e;if(i===0)return e[0].t=r,e[0];if(i===1){const l={x:s*o[0].x+r*o[1].x,y:s*o[0].y+r*o[1].y,t:r};return n&&(l.z=s*o[0].z+r*o[1].z),l}if(i<4){let l=s*s,c=r*r,u,h,d,f=0;i===2?(o=[o[0],o[1],o[2],Z4],u=l,h=s*r*2,d=c):i===3&&(u=l*s,h=l*r*3,d=s*c*3,f=r*c);const p={x:u*o[0].x+h*o[1].x+d*o[2].x+f*o[3].x,y:u*o[0].y+h*o[1].y+d*o[2].y+f*o[3].y,t:r};return n&&(p.z=u*o[0].z+h*o[1].z+d*o[2].z+f*o[3].z),p}const a=JSON.parse(JSON.stringify(e));for(;a.length>1;){for(let l=0;l<a.length-1;l++)a[l]={x:a[l].x+(a[l+1].x-a[l].x)*r,y:a[l].y+(a[l+1].y-a[l].y)*r},typeof a[l].z<"u"&&(a[l].z=a[l].z+(a[l+1].z-a[l].z)*r);a.splice(a.length-1,1)}return a[0].t=r,a[0]},computeWithRatios:function(r,e,n,i){const s=1-r,o=n,a=e;let l=o[0],c=o[1],u=o[2],h=o[3],d;if(l*=s,c*=r,a.length===2)return d=l+c,{x:(l*a[0].x+c*a[1].x)/d,y:(l*a[0].y+c*a[1].y)/d,z:i?(l*a[0].z+c*a[1].z)/d:!1,t:r};if(l*=s,c*=2*s,u*=r*r,a.length===3)return d=l+c+u,{x:(l*a[0].x+c*a[1].x+u*a[2].x)/d,y:(l*a[0].y+c*a[1].y+u*a[2].y)/d,z:i?(l*a[0].z+c*a[1].z+u*a[2].z)/d:!1,t:r};if(l*=s,c*=1.5*s,u*=3*s,h*=r*r*r,a.length===4)return d=l+c+u+h,{x:(l*a[0].x+c*a[1].x+u*a[2].x+h*a[3].x)/d,y:(l*a[0].y+c*a[1].y+u*a[2].y+h*a[3].y)/d,z:i?(l*a[0].z+c*a[1].z+u*a[2].z+h*a[3].z)/d:!1,t:r}},derive:function(r,e){const n=[];for(let i=r,s=i.length,o=s-1;s>1;s--,o--){const a=[];for(let l=0,c;l<o;l++)c={x:o*(i[l+1].x-i[l].x),y:o*(i[l+1].y-i[l].y)},e&&(c.z=o*(i[l+1].z-i[l].z)),a.push(c);n.push(a),i=a}return n},between:function(r,e,n){return e<=r&&r<=n||_e.approximately(r,e)||_e.approximately(r,n)},approximately:function(r,e,n){return $l(r-e)<=(n||K4)},length:function(r){const n=_e.Tvalues.length;let i=0;for(let s=0,o;s<n;s++)o=.5*_e.Tvalues[s]+.5,i+=_e.Cvalues[s]*_e.arcfn(o,r);return .5*i},map:function(r,e,n,i,s){const o=n-e,a=s-i,l=r-e,c=l/o;return i+a*c},lerp:function(r,e,n){const i={x:e.x+r*(n.x-e.x),y:e.y+r*(n.y-e.y)};return e.z!==void 0&&n.z!==void 0&&(i.z=e.z+r*(n.z-e.z)),i},pointToString:function(r){let e=r.x+"/"+r.y;return typeof r.z<"u"&&(e+="/"+r.z),e},pointsToString:function(r){return"["+r.map(_e.pointToString).join(", ")+"]"},copy:function(r){return JSON.parse(JSON.stringify(r))},angle:function(r,e,n){const i=e.x-r.x,s=e.y-r.y,o=n.x-r.x,a=n.y-r.y,l=i*a-s*o,c=i*o+s*a;return jl(l,c)},round:function(r,e){const n=""+r,i=n.indexOf(".");return parseFloat(n.substring(0,i+1+e))},dist:function(r,e){const n=r.x-e.x,i=r.y-e.y;return ps(n*n+i*i)},closest:function(r,e){let n=Li(2,63),i,s;return r.forEach(function(o,a){s=_e.dist(e,o),s<n&&(n=s,i=a)}),{mdist:n,mpos:i}},abcratio:function(r,e){if(e!==2&&e!==3)return!1;if(typeof r>"u")r=.5;else if(r===0||r===1)return r;const n=Li(r,e)+Li(1-r,e),i=n-1;return $l(i/n)},projectionratio:function(r,e){if(e!==2&&e!==3)return!1;if(typeof r>"u")r=.5;else if(r===0||r===1)return r;const n=Li(1-r,e),i=Li(r,e)+n;return n/i},lli8:function(r,e,n,i,s,o,a,l){const c=(r*i-e*n)*(s-a)-(r-n)*(s*l-o*a),u=(r*i-e*n)*(o-l)-(e-i)*(s*l-o*a),h=(r-n)*(o-l)-(e-i)*(s-a);return h==0?!1:{x:c/h,y:u/h}},lli4:function(r,e,n,i){const s=r.x,o=r.y,a=e.x,l=e.y,c=n.x,u=n.y,h=i.x,d=i.y;return _e.lli8(s,o,a,l,c,u,h,d)},lli:function(r,e){return _e.lli4(r,r.c,e,e.c)},makeline:function(r,e){return new jt(r.x,r.y,(r.x+e.x)/2,(r.y+e.y)/2,e.x,e.y)},findbbox:function(r){let e=bp,n=bp,i=Tp,s=Tp;return r.forEach(function(o){const a=o.bbox();e>a.x.min&&(e=a.x.min),n>a.y.min&&(n=a.y.min),i<a.x.max&&(i=a.x.max),s<a.y.max&&(s=a.y.max)}),{x:{min:e,mid:(e+i)/2,max:i,size:i-e},y:{min:n,mid:(n+s)/2,max:s,size:s-n}}},shapeintersections:function(r,e,n,i,s){if(!_e.bboxoverlap(e,i))return[];const o=[],a=[r.startcap,r.forward,r.back,r.endcap],l=[n.startcap,n.forward,n.back,n.endcap];return a.forEach(function(c){c.virtual||l.forEach(function(u){if(u.virtual)return;const h=c.intersects(u,s);h.length>0&&(h.c1=c,h.c2=u,h.s1=r,h.s2=n,o.push(h))})}),o},makeshape:function(r,e,n){const i=e.points.length,s=r.points.length,o=_e.makeline(e.points[i-1],r.points[0]),a=_e.makeline(r.points[s-1],e.points[0]),l={startcap:o,forward:r,back:e,endcap:a,bbox:_e.findbbox([o,r,e,a])};return l.intersections=function(c){return _e.shapeintersections(l,l.bbox,c,c.bbox,n)},l},getminmax:function(r,e,n){if(!n)return{min:0,max:0};let i=bp,s=Tp,o,a;n.indexOf(0)===-1&&(n=[0].concat(n)),n.indexOf(1)===-1&&n.push(1);for(let l=0,c=n.length;l<c;l++)o=n[l],a=r.get(o),a[e]<i&&(i=a[e]),a[e]>s&&(s=a[e]);return{min:i,mid:(i+s)/2,max:s,size:s-i}},align:function(r,e){const n=e.p1.x,i=e.p1.y,s=-jl(e.p2.y-i,e.p2.x-n),o=function(a){return{x:(a.x-n)*Fr(s)-(a.y-i)*ta(s),y:(a.x-n)*ta(s)+(a.y-i)*Fr(s)}};return r.map(o)},roots:function(r,e){e=e||{p1:{x:0,y:0},p2:{x:1,y:0}};const n=r.length-1,i=_e.align(r,e),s=function(M){return 0<=M&&M<=1};if(n===2){const M=i[0].y,A=i[1].y,E=i[2].y,w=M-2*A+E;if(w!==0){const N=-ps(A*A-M*E),D=-M+A,F=-(N+D)/w,k=-(-N+D)/w;return[F,k].filter(s)}else if(A!==E&&w===0)return[(2*A-E)/(2*A-2*E)].filter(s);return[]}const o=i[0].y,a=i[1].y,l=i[2].y,c=i[3].y;let u=-o+3*a-3*l+c,h=3*o-6*a+3*l,d=-3*o+3*a,f=o;if(_e.approximately(u,0)){if(_e.approximately(h,0))return _e.approximately(d,0)?[]:[-f/d].filter(s);const M=ps(d*d-4*h*f),A=2*h;return[(M-d)/A,(-d-M)/A].filter(s)}h/=u,d/=u,f/=u;const p=(3*d-h*h)/3,m=p/3,y=(2*h*h*h-9*h*d+27*f)/27,_=y/2,g=_*_+m*m*m;let v,x,T,b,S;if(g<0){const M=-p/3,A=M*M*M,E=ps(A),w=-y/(2*E),N=w<-1?-1:w>1?1:w,D=Y4(N),F=ql(E),k=2*F;return T=k*Fr(D/3)-h/3,b=k*Fr((D+fh)/3)-h/3,S=k*Fr((D+2*fh)/3)-h/3,[T,b,S].filter(s)}else{if(g===0)return v=_<0?ql(-_):-ql(_),T=2*v-h/3,b=-v-h/3,[T,b].filter(s);{const M=ps(g);return v=ql(-_+M),x=ql(_+M),[v-x-h/3].filter(s)}}},droots:function(r){if(r.length===3){const e=r[0],n=r[1],i=r[2],s=e-2*n+i;if(s!==0){const o=-ps(n*n-e*i),a=-e+n,l=-(o+a)/s,c=-(-o+a)/s;return[l,c]}else if(n!==i&&s===0)return[(2*n-i)/(2*(n-i))];return[]}if(r.length===2){const e=r[0],n=r[1];return e!==n?[e/(e-n)]:[]}return[]},curvature:function(r,e,n,i,s){let o,a,l,c,u=0,h=0;const d=_e.compute(r,e),f=_e.compute(r,n),p=d.x*d.x+d.y*d.y;if(i?(o=ps(Li(d.y*f.z-f.y*d.z,2)+Li(d.z*f.x-f.z*d.x,2)+Li(d.x*f.y-f.x*d.y,2)),a=Li(p+d.z*d.z,3/2)):(o=d.x*f.y-d.y*f.x,a=Li(p,3/2)),o===0||a===0)return{k:0,r:0};if(u=o/a,h=a/o,!s){const m=_e.curvature(r-.001,e,n,i,!0).k,y=_e.curvature(r+.001,e,n,i,!0).k;c=(y-u+(u-m))/2,l=($l(y-u)+$l(u-m))/2}return{k:u,r:h,dk:c,adk:l}},inflections:function(r){if(r.length<4)return[];const e=_e.align(r,{p1:r[0],p2:r.slice(-1)[0]}),n=e[2].x*e[1].y,i=e[3].x*e[1].y,s=e[1].x*e[2].y,o=e[3].x*e[2].y,a=18*(-3*n+2*i+3*s-o),l=18*(3*n-i-3*s),c=18*(s-n);if(_e.approximately(a,0)){if(!_e.approximately(l,0)){let f=-c/l;if(0<=f&&f<=1)return[f]}return[]}const u=2*a;if(_e.approximately(u,0))return[];const h=l*l-4*a*c;if(h<0)return[];const d=Math.sqrt(h);return[(d-l)/u,-(l+d)/u].filter(function(f){return 0<=f&&f<=1})},bboxoverlap:function(r,e){const n=["x","y"],i=n.length;for(let s=0,o,a,l,c;s<i;s++)if(o=n[s],a=r[o].mid,l=e[o].mid,c=(r[o].size+e[o].size)/2,$l(a-l)>=c)return!1;return!0},expandbox:function(r,e){e.x.min<r.x.min&&(r.x.min=e.x.min),e.y.min<r.y.min&&(r.y.min=e.y.min),e.z&&e.z.min<r.z.min&&(r.z.min=e.z.min),e.x.max>r.x.max&&(r.x.max=e.x.max),e.y.max>r.y.max&&(r.y.max=e.y.max),e.z&&e.z.max>r.z.max&&(r.z.max=e.z.max),r.x.mid=(r.x.min+r.x.max)/2,r.y.mid=(r.y.min+r.y.max)/2,r.z&&(r.z.mid=(r.z.min+r.z.max)/2),r.x.size=r.x.max-r.x.min,r.y.size=r.y.max-r.y.min,r.z&&(r.z.size=r.z.max-r.z.min)},pairiteration:function(r,e,n){const i=r.bbox(),s=e.bbox(),o=1e5,a=n||.5;if(i.x.size+i.y.size<a&&s.x.size+s.y.size<a)return[(o*(r._t1+r._t2)/2|0)/o+"/"+(o*(e._t1+e._t2)/2|0)/o];let l=r.split(.5),c=e.split(.5),u=[{left:l.left,right:c.left},{left:l.left,right:c.right},{left:l.right,right:c.right},{left:l.right,right:c.left}];u=u.filter(function(d){return _e.bboxoverlap(d.left.bbox(),d.right.bbox())});let h=[];return u.length===0||(u.forEach(function(d){h=h.concat(_e.pairiteration(d.left,d.right,a))}),h=h.filter(function(d,f){return h.indexOf(d)===f})),h},getccenter:function(r,e,n){const i=e.x-r.x,s=e.y-r.y,o=n.x-e.x,a=n.y-e.y,l=i*Fr(ms)-s*ta(ms),c=i*ta(ms)+s*Fr(ms),u=o*Fr(ms)-a*ta(ms),h=o*ta(ms)+a*Fr(ms),d=(r.x+e.x)/2,f=(r.y+e.y)/2,p=(e.x+n.x)/2,m=(e.y+n.y)/2,y=d+l,_=f+c,g=p+u,v=m+h,x=_e.lli8(d,f,y,_,p,m,g,v),T=_e.dist(x,r);let b=jl(r.y-x.y,r.x-x.x),S=jl(e.y-x.y,e.x-x.x),M=jl(n.y-x.y,n.x-x.x),A;return b<M?((b>S||S>M)&&(b+=fh),b>M&&(A=M,M=b,b=A)):M<S&&S<b?(A=M,M=b,b=A):M+=fh,x.s=b,x.e=M,x.r=T,x},numberSort:function(r,e){return r-e}};class fc{constructor(e){this.curves=[],this._3d=!1,e&&(this.curves=e,this._3d=this.curves[0]._3d)}valueOf(){return this.toString()}toString(){return"["+this.curves.map(function(e){return _e.pointsToString(e.points)}).join(", ")+"]"}addCurve(e){this.curves.push(e),this._3d=this._3d||e._3d}length(){return this.curves.map(function(e){return e.length()}).reduce(function(e,n){return e+n})}curve(e){return this.curves[e]}bbox(){const e=this.curves;for(var n=e[0].bbox(),i=1;i<e.length;i++)_e.expandbox(n,e[i].bbox());return n}offset(e){const n=[];return this.curves.forEach(function(i){n.push(...i.offset(e))}),new fc(n)}}const{abs:Xl,min:tx,max:nx,cos:Q4,sin:J4,acos:eH,sqrt:Yl}=Math,tH=Math.PI;class jt{constructor(e){let n=e&&e.forEach?e:Array.from(arguments).slice(),i=!1;if(typeof n[0]=="object"){i=n.length;const p=[];n.forEach(function(m){["x","y","z"].forEach(function(y){typeof m[y]<"u"&&p.push(m[y])})}),n=p}let s=!1;const o=n.length;if(i){if(i>4){if(arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");s=!0}}else if(o!==6&&o!==8&&o!==9&&o!==12&&arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");const a=this._3d=!s&&(o===9||o===12)||e&&e[0]&&typeof e[0].z<"u",l=this.points=[];for(let p=0,m=a?3:2;p<o;p+=m){var c={x:n[p],y:n[p+1]};a&&(c.z=n[p+2]),l.push(c)}const u=this.order=l.length-1,h=this.dims=["x","y"];a&&h.push("z"),this.dimlen=h.length;const d=_e.align(l,{p1:l[0],p2:l[u]}),f=_e.dist(l[0],l[u]);this._linear=d.reduce((p,m)=>p+Xl(m.y),0)<f/50,this._lut=[],this._t1=0,this._t2=1,this.update()}static quadraticFromPoints(e,n,i,s){if(typeof s>"u"&&(s=.5),s===0)return new jt(n,n,i);if(s===1)return new jt(e,n,n);const o=jt.getABC(2,e,n,i,s);return new jt(e,o.A,i)}static cubicFromPoints(e,n,i,s,o){typeof s>"u"&&(s=.5);const a=jt.getABC(3,e,n,i,s);typeof o>"u"&&(o=_e.dist(n,a.C));const l=o*(1-s)/s,c=_e.dist(e,i),u=(i.x-e.x)/c,h=(i.y-e.y)/c,d=o*u,f=o*h,p=l*u,m=l*h,y={x:n.x-d,y:n.y-f},_={x:n.x+p,y:n.y+m},g=a.A,v={x:g.x+(y.x-g.x)/(1-s),y:g.y+(y.y-g.y)/(1-s)},x={x:g.x+(_.x-g.x)/s,y:g.y+(_.y-g.y)/s},T={x:e.x+(v.x-e.x)/s,y:e.y+(v.y-e.y)/s},b={x:i.x+(x.x-i.x)/(1-s),y:i.y+(x.y-i.y)/(1-s)};return new jt(e,T,b,i)}static getUtils(){return _e}getUtils(){return jt.getUtils()}static get PolyBezier(){return fc}valueOf(){return this.toString()}toString(){return _e.pointsToString(this.points)}toSVG(){if(this._3d)return!1;const e=this.points,n=e[0].x,i=e[0].y,s=["M",n,i,this.order===2?"Q":"C"];for(let o=1,a=e.length;o<a;o++)s.push(e[o].x),s.push(e[o].y);return s.join(" ")}setRatios(e){if(e.length!==this.points.length)throw new Error("incorrect number of ratio values");this.ratios=e,this._lut=[]}verify(){const e=this.coordDigest();e!==this._print&&(this._print=e,this.update())}coordDigest(){return this.points.map(function(e,n){return""+n+e.x+e.y+(e.z?e.z:0)}).join("")}update(){this._lut=[],this.dpoints=_e.derive(this.points,this._3d),this.computedirection()}computedirection(){const e=this.points,n=_e.angle(e[0],e[this.order],e[1]);this.clockwise=n>0}length(){return _e.length(this.derivative.bind(this))}static getABC(e=2,n,i,s,o=.5){const a=_e.projectionratio(o,e),l=1-a,c={x:a*n.x+l*s.x,y:a*n.y+l*s.y},u=_e.abcratio(o,e);return{A:{x:i.x+(i.x-c.x)/u,y:i.y+(i.y-c.y)/u},B:i,C:c,S:n,E:s}}getABC(e,n){n=n||this.get(e);let i=this.points[0],s=this.points[this.order];return jt.getABC(this.order,i,n,s,e)}getLUT(e){if(this.verify(),e=e||100,this._lut.length===e+1)return this._lut;this._lut=[],e++,this._lut=[];for(let n=0,i,s;n<e;n++)s=n/(e-1),i=this.compute(s),i.t=s,this._lut.push(i);return this._lut}on(e,n){n=n||5;const i=this.getLUT(),s=[];for(let o=0,a,l=0;o<i.length;o++)a=i[o],_e.dist(a,e)<n&&(s.push(a),l+=o/i.length);return s.length?t/=s.length:!1}project(e){const n=this.getLUT(),i=n.length-1,s=_e.closest(n,e),o=s.mpos,a=(o-1)/i,l=(o+1)/i,c=.1/i;let u=s.mdist,h=a,d=h,f;u+=1;for(let p;h<l+c;h+=c)f=this.compute(h),p=_e.dist(e,f),p<u&&(u=p,d=h);return d=d<0?0:d>1?1:d,f=this.compute(d),f.t=d,f.d=u,f}get(e){return this.compute(e)}point(e){return this.points[e]}compute(e){return this.ratios?_e.computeWithRatios(e,this.points,this.ratios,this._3d):_e.compute(e,this.points,this._3d,this.ratios)}raise(){const e=this.points,n=[e[0]],i=e.length;for(let s=1,o,a;s<i;s++)o=e[s],a=e[s-1],n[s]={x:(i-s)/i*o.x+s/i*a.x,y:(i-s)/i*o.y+s/i*a.y};return n[i]=e[i-1],new jt(n)}derivative(e){return _e.compute(e,this.dpoints[0],this._3d)}dderivative(e){return _e.compute(e,this.dpoints[1],this._3d)}align(){let e=this.points;return new jt(_e.align(e,{p1:e[0],p2:e[e.length-1]}))}curvature(e){return _e.curvature(e,this.dpoints[0],this.dpoints[1],this._3d)}inflections(){return _e.inflections(this.points)}normal(e){return this._3d?this.__normal3(e):this.__normal2(e)}__normal2(e){const n=this.derivative(e),i=Yl(n.x*n.x+n.y*n.y);return{t:e,x:-n.y/i,y:n.x/i}}__normal3(e){const n=this.derivative(e),i=this.derivative(e+.01),s=Yl(n.x*n.x+n.y*n.y+n.z*n.z),o=Yl(i.x*i.x+i.y*i.y+i.z*i.z);n.x/=s,n.y/=s,n.z/=s,i.x/=o,i.y/=o,i.z/=o;const a={x:i.y*n.z-i.z*n.y,y:i.z*n.x-i.x*n.z,z:i.x*n.y-i.y*n.x},l=Yl(a.x*a.x+a.y*a.y+a.z*a.z);a.x/=l,a.y/=l,a.z/=l;const c=[a.x*a.x,a.x*a.y-a.z,a.x*a.z+a.y,a.x*a.y+a.z,a.y*a.y,a.y*a.z-a.x,a.x*a.z-a.y,a.y*a.z+a.x,a.z*a.z];return{t:e,x:c[0]*n.x+c[1]*n.y+c[2]*n.z,y:c[3]*n.x+c[4]*n.y+c[5]*n.z,z:c[6]*n.x+c[7]*n.y+c[8]*n.z}}hull(e){let n=this.points,i=[],s=[],o=0;for(s[o++]=n[0],s[o++]=n[1],s[o++]=n[2],this.order===3&&(s[o++]=n[3]);n.length>1;){i=[];for(let a=0,l,c=n.length-1;a<c;a++)l=_e.lerp(e,n[a],n[a+1]),s[o++]=l,i.push(l);n=i}return s}split(e,n){if(e===0&&n)return this.split(n).left;if(n===1)return this.split(e).right;const i=this.hull(e),s={left:this.order===2?new jt([i[0],i[3],i[5]]):new jt([i[0],i[4],i[7],i[9]]),right:this.order===2?new jt([i[5],i[4],i[2]]):new jt([i[9],i[8],i[6],i[3]]),span:i};return s.left._t1=_e.map(0,0,1,this._t1,this._t2),s.left._t2=_e.map(e,0,1,this._t1,this._t2),s.right._t1=_e.map(e,0,1,this._t1,this._t2),s.right._t2=_e.map(1,0,1,this._t1,this._t2),n?(n=_e.map(n,e,1,0,1),s.right.split(n).left):s}extrema(){const e={};let n=[];return this.dims.forEach((function(i){let s=function(a){return a[i]},o=this.dpoints[0].map(s);e[i]=_e.droots(o),this.order===3&&(o=this.dpoints[1].map(s),e[i]=e[i].concat(_e.droots(o))),e[i]=e[i].filter(function(a){return a>=0&&a<=1}),n=n.concat(e[i].sort(_e.numberSort))}).bind(this)),e.values=n.sort(_e.numberSort).filter(function(i,s){return n.indexOf(i)===s}),e}bbox(){const e=this.extrema(),n={};return this.dims.forEach((function(i){n[i]=_e.getminmax(this,i,e[i])}).bind(this)),n}overlaps(e){const n=this.bbox(),i=e.bbox();return _e.bboxoverlap(n,i)}offset(e,n){if(typeof n<"u"){const i=this.get(e),s=this.normal(e),o={c:i,n:s,x:i.x+s.x*n,y:i.y+s.y*n};return this._3d&&(o.z=i.z+s.z*n),o}if(this._linear){const i=this.normal(0),s=this.points.map(function(o){const a={x:o.x+e*i.x,y:o.y+e*i.y};return o.z&&i.z&&(a.z=o.z+e*i.z),a});return[new jt(s)]}return this.reduce().map(function(i){return i._linear?i.offset(e)[0]:i.scale(e)})}simple(){if(this.order===3){const s=_e.angle(this.points[0],this.points[3],this.points[1]),o=_e.angle(this.points[0],this.points[3],this.points[2]);if(s>0&&o<0||s<0&&o>0)return!1}const e=this.normal(0),n=this.normal(1);let i=e.x*n.x+e.y*n.y;return this._3d&&(i+=e.z*n.z),Xl(eH(i))<tH/3}reduce(){let e,n=0,i=0,s=.01,o,a=[],l=[],c=this.extrema().values;for(c.indexOf(0)===-1&&(c=[0].concat(c)),c.indexOf(1)===-1&&c.push(1),n=c[0],e=1;e<c.length;e++)i=c[e],o=this.split(n,i),o._t1=n,o._t2=i,a.push(o),n=i;return a.forEach(function(u){for(n=0,i=0;i<=1;)for(i=n+s;i<=1+s;i+=s)if(o=u.split(n,i),!o.simple()){if(i-=s,Xl(n-i)<s)return[];o=u.split(n,i),o._t1=_e.map(n,0,1,u._t1,u._t2),o._t2=_e.map(i,0,1,u._t1,u._t2),l.push(o),n=i;break}n<1&&(o=u.split(n,1),o._t1=_e.map(n,0,1,u._t1,u._t2),o._t2=u._t2,l.push(o))}),l}translate(e,n,i){i=typeof i=="number"?i:n;const s=this.order;let o=this.points.map((a,l)=>(1-l/s)*n+l/s*i);return new jt(this.points.map((a,l)=>({x:a.x+e.x*o[l],y:a.y+e.y*o[l]})))}scale(e){const n=this.order;let i=!1;if(typeof e=="function"&&(i=e),i&&n===2)return this.raise().scale(i);const s=this.clockwise,o=this.points;if(this._linear)return this.translate(this.normal(0),i?i(0):e,i?i(1):e);const a=i?i(0):e,l=i?i(1):e,c=[this.offset(0,10),this.offset(1,10)],u=[],h=_e.lli4(c[0],c[0].c,c[1],c[1].c);if(!h)throw new Error("cannot scale this curve. Try reducing it first.");return[0,1].forEach(function(d){const f=u[d*n]=_e.copy(o[d*n]);f.x+=(d?l:a)*c[d].n.x,f.y+=(d?l:a)*c[d].n.y}),i?([0,1].forEach(function(d){if(!(n===2&&d)){var f=o[d+1],p={x:f.x-h.x,y:f.y-h.y},m=i?i((d+1)/n):e;i&&!s&&(m=-m);var y=Yl(p.x*p.x+p.y*p.y);p.x/=y,p.y/=y,u[d+1]={x:f.x+m*p.x,y:f.y+m*p.y}}}),new jt(u)):([0,1].forEach(d=>{if(n===2&&d)return;const f=u[d*n],p=this.derivative(d),m={x:f.x+p.x,y:f.y+p.y};u[d+1]=_e.lli4(f,m,h,o[d+1])}),new jt(u))}outline(e,n,i,s){if(n=n===void 0?e:n,this._linear){const b=this.normal(0),S=this.points[0],M=this.points[this.points.length-1];let A,E,w;i===void 0&&(i=e,s=n),A={x:S.x+b.x*e,y:S.y+b.y*e},w={x:M.x+b.x*i,y:M.y+b.y*i},E={x:(A.x+w.x)/2,y:(A.y+w.y)/2};const N=[A,E,w];A={x:S.x-b.x*n,y:S.y-b.y*n},w={x:M.x-b.x*s,y:M.y-b.y*s},E={x:(A.x+w.x)/2,y:(A.y+w.y)/2};const D=[w,E,A],F=_e.makeline(D[2],N[0]),k=_e.makeline(N[2],D[0]),Y=[F,new jt(N),k,new jt(D)];return new fc(Y)}const o=this.reduce(),a=o.length,l=[];let c=[],u,h=0,d=this.length();const f=typeof i<"u"&&typeof s<"u";function p(b,S,M,A,E){return function(w){const N=A/M,D=(A+E)/M,F=S-b;return _e.map(w,0,1,b+N*F,b+D*F)}}o.forEach(function(b){const S=b.length();f?(l.push(b.scale(p(e,i,d,h,S))),c.push(b.scale(p(-n,-s,d,h,S)))):(l.push(b.scale(e)),c.push(b.scale(-n))),h+=S}),c=c.map(function(b){return u=b.points,u[3]?b.points=[u[3],u[2],u[1],u[0]]:b.points=[u[2],u[1],u[0]],b}).reverse();const m=l[0].points[0],y=l[a-1].points[l[a-1].points.length-1],_=c[a-1].points[c[a-1].points.length-1],g=c[0].points[0],v=_e.makeline(_,m),x=_e.makeline(y,g),T=[v].concat(l).concat([x]).concat(c);return new fc(T)}outlineshapes(e,n,i){n=n||e;const s=this.outline(e,n).curves,o=[];for(let a=1,l=s.length;a<l/2;a++){const c=_e.makeshape(s[a],s[l-a],i);c.startcap.virtual=a>1,c.endcap.virtual=a<l/2-1,o.push(c)}return o}intersects(e,n){return e?e.p1&&e.p2?this.lineIntersects(e):(e instanceof jt&&(e=e.reduce()),this.curveintersects(this.reduce(),e,n)):this.selfintersects(n)}lineIntersects(e){const n=tx(e.p1.x,e.p2.x),i=tx(e.p1.y,e.p2.y),s=nx(e.p1.x,e.p2.x),o=nx(e.p1.y,e.p2.y);return _e.roots(this.points,e).filter(a=>{var l=this.get(a);return _e.between(l.x,n,s)&&_e.between(l.y,i,o)})}selfintersects(e){const n=this.reduce(),i=n.length-2,s=[];for(let o=0,a,l,c;o<i;o++)l=n.slice(o,o+1),c=n.slice(o+2),a=this.curveintersects(l,c,e),s.push(...a);return s}curveintersects(e,n,i){const s=[];e.forEach(function(a){n.forEach(function(l){a.overlaps(l)&&s.push({left:a,right:l})})});let o=[];return s.forEach(function(a){const l=_e.pairiteration(a.left,a.right,i);l.length>0&&(o=o.concat(l))}),o}arcs(e){return e=e||.5,this._iterate(e,[])}_error(e,n,i,s){const o=(s-i)/4,a=this.get(i+o),l=this.get(s-o),c=_e.dist(e,n),u=_e.dist(e,a),h=_e.dist(e,l);return Xl(u-c)+Xl(h-c)}_iterate(e,n){let i=0,s=1,o;do{o=0,s=1;let a=this.get(i),l,c,u,h,d=!1,f=!1,p,m=s,y=1;do if(f=d,h=u,m=(i+s)/2,l=this.get(m),c=this.get(s),u=_e.getccenter(a,l,c),u.interval={start:i,end:s},d=this._error(u,a,i,s)<=e,p=f&&!d,p||(y=s),d){if(s>=1){if(u.interval.end=y=1,h=u,s>1){let g={x:u.x+u.r*Q4(u.e),y:u.y+u.r*J4(u.e)};u.e+=_e.angle({x:u.x,y:u.y},g,this.get(1))}break}s=s+(s-i)/2}else s=m;while(!p&&o++<100);if(o>=100)break;h=h||u,n.push(h),i=y}while(s<1);return n}}function bm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function nH(r){if(Array.isArray(r))return r}function iH(r){if(Array.isArray(r))return bm(r)}function rH(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function sH(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function oH(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function aH(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function lH(r,e){if(r==null)return{};var n,i,s=cH(r,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);for(i=0;i<o.length;i++)n=o[i],e.includes(n)||{}.propertyIsEnumerable.call(r,n)&&(s[n]=r[n])}return s}function cH(r,e){if(r==null)return{};var n={};for(var i in r)if({}.hasOwnProperty.call(r,i)){if(e.includes(i))continue;n[i]=r[i]}return n}function uH(r,e){return nH(r)||sH(r,e)||iM(r,e)||oH()}function hH(r){return iH(r)||rH(r)||iM(r)||aH()}function dH(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function fH(r){var e=dH(r,"string");return typeof e=="symbol"?e:e+""}function iM(r,e){if(r){if(typeof r=="string")return bm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?bm(r,e):void 0}}var pH=function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,s=(e instanceof Array?e.length?e:[void 0]:[e]).map(function(l){return{keyAccessor:l,isProp:!(l instanceof Function)}}),o=r.reduce(function(l,c){var u=l,h=c;return s.forEach(function(d,f){var p=d.keyAccessor,m=d.isProp,y;if(m){var _=h,g=_[p],v=lH(_,[p].map(fH));y=g,h=v}else y=p(h,f);f+1<s.length?(u.hasOwnProperty(y)||(u[y]={}),u=u[y]):n?(u.hasOwnProperty(y)||(u[y]=[]),u[y].push(h)):u[y]=h}),l},{});n instanceof Function&&function l(c){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;u===s.length?Object.keys(c).forEach(function(h){return c[h]=n(c[h])}):Object.values(c).forEach(function(h){return l(h,u+1)})}(o);var a=o;return i&&(a=[],function l(c){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];u.length===s.length?a.push({keys:u,vals:c}):Object.entries(c).forEach(function(h){var d=uH(h,2),f=d[0],p=d[1];return l(p,[].concat(hH(u),[f]))})}(o),e instanceof Array&&e.length===0&&a.length===1&&(a[0].keys=[])),a};function mH(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var gH=`.force-graph-container canvas {
  display: block;
  user-select: none;
  outline: none;
  -webkit-tap-highlight-color: transparent;
}

.force-graph-container .clickable {
  cursor: pointer;
}

.force-graph-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.force-graph-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
`;mH(gH);function Tm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function _H(r){if(Array.isArray(r))return r}function yH(r){if(Array.isArray(r))return Tm(r)}function ix(r,e,n){if(rM())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return s}function kc(r,e,n){return(e=MH(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function rM(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(rM=function(){return!!r})()}function vH(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function xH(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function bH(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function TH(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function rx(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function na(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?rx(Object(n),!0).forEach(function(i){kc(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):rx(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function pc(r,e){return _H(r)||xH(r,e)||sM(r,e)||bH()}function Fi(r){return yH(r)||vH(r)||sM(r)||TH()}function SH(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function MH(r){var e=SH(r,"string");return typeof e=="symbol"?e:e+""}function Sm(r){"@babel/helpers - typeof";return Sm=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Sm(r)}function sM(r,e){if(r){if(typeof r=="string")return Tm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Tm(r,e):void 0}}var EH=hg(cx);function sx(r,e,n){!e||typeof n!="string"||r.filter(function(i){return!i[n]}).forEach(function(i){i[n]=EH(e(i))})}function wH(r,e){var n=r.nodes,i=r.links,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},o=s.nodeFilter,a=o===void 0?function(){return!0}:o,l=s.onLoopError,c=l===void 0?function(p){throw"Invalid DAG structure! Found cycle in node path: ".concat(p.join(" -> "),".")}:l,u={};n.forEach(function(p){return u[e(p)]={data:p,out:[],depth:-1,skip:!a(p)}}),i.forEach(function(p){var m=p.source,y=p.target,_=T(m),g=T(y);if(!u.hasOwnProperty(_))throw"Missing source node with id: ".concat(_);if(!u.hasOwnProperty(g))throw"Missing target node with id: ".concat(g);var v=u[_],x=u[g];v.out.push(x);function T(b){return Sm(b)==="object"?e(b):b}});var h=[];f(Object.values(u));var d=Object.assign.apply(Object,[{}].concat(Fi(Object.entries(u).filter(function(p){var m=pc(p,2),y=m[1];return!y.skip}).map(function(p){var m=pc(p,2),y=m[0],_=m[1];return kc({},y,_.depth)}))));return d;function f(p){for(var m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],y=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,_=function(){var T=p[g];if(m.indexOf(T)!==-1){var b=[].concat(Fi(m.slice(m.indexOf(T))),[T]).map(function(S){return e(S.data)});return h.some(function(S){return S.length===b.length&&S.every(function(M,A){return M===b[A]})})||(h.push(b),c(b)),1}y>T.depth&&(T.depth=y,f(T.out,[].concat(Fi(m),[T]),y+(T.skip?0:1)))},g=0,v=p.length;g<v;g++)_()}}var AH=2,Un=function(e,n){return n.onNeedsRedraw&&n.onNeedsRedraw()},ox=function(e,n){if(!n.isShadow){var i=Ie(n.linkDirectionalParticles);n.graphData.links.forEach(function(s){var o=Math.round(Math.abs(i(s)));o?s.__photons=Fi(Array(o)).map(function(){return{}}):delete s.__photons})}},Xh=cl({props:{graphData:{default:{nodes:[],links:[]},onChange:function(e,n){n.engineRunning=!1,ox(e,n)}},dagMode:{onChange:function(e,n){!e&&(n.graphData.nodes||[]).forEach(function(i){return i.fx=i.fy=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4,triggerUpdate:!1,onChange:Un},nodeId:{default:"id"},nodeVal:{default:"val",triggerUpdate:!1,onChange:Un},nodeColor:{default:"color",triggerUpdate:!1,onChange:Un},nodeAutoColorBy:{},nodeCanvasObject:{triggerUpdate:!1,onChange:Un},nodeCanvasObjectMode:{default:function(){return"replace"},triggerUpdate:!1,onChange:Un},nodeVisibility:{default:!0,triggerUpdate:!1,onChange:Un},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0,triggerUpdate:!1,onChange:Un},linkColor:{default:"color",triggerUpdate:!1,onChange:Un},linkAutoColorBy:{},linkLineDash:{triggerUpdate:!1,onChange:Un},linkWidth:{default:1,triggerUpdate:!1,onChange:Un},linkCurvature:{default:0,triggerUpdate:!1,onChange:Un},linkCanvasObject:{triggerUpdate:!1,onChange:Un},linkCanvasObjectMode:{default:function(){return"replace"},triggerUpdate:!1,onChange:Un},linkDirectionalArrowLength:{default:0,triggerUpdate:!1,onChange:Un},linkDirectionalArrowColor:{triggerUpdate:!1,onChange:Un},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1,onChange:Un},linkDirectionalParticles:{default:0,triggerUpdate:!1,onChange:ox},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleOffset:{default:0,triggerUpdate:!1},linkDirectionalParticleWidth:{default:4,triggerUpdate:!1},linkDirectionalParticleColor:{triggerUpdate:!1},linkDirectionalParticleCanvasObject:{triggerUpdate:!1},globalScale:{default:1,triggerUpdate:!1},d3AlphaMin:{default:0,triggerUpdate:!1},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.velocityDecay(e)}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1},onNeedsRedraw:{triggerUpdate:!1},isShadow:{default:!1,triggerUpdate:!1}},methods:{d3Force:function(e,n,i){return i===void 0?e.forceLayout.force(n):(e.forceLayout.force(n,i),this)},d3ReheatSimulation:function(e){return e.forceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},isEngineRunning:function(e){return!!e.engineRunning},tickFrame:function(e){return!e.isShadow&&n(),s(),!e.isShadow&&o(),!e.isShadow&&a(),i(),this;function n(){e.engineRunning&&(++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||e.d3AlphaMin>0&&e.forceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.forceLayout.tick(),e.onEngineTick()))}function i(){var l=Ie(e.nodeVisibility),c=Ie(e.nodeVal),u=Ie(e.nodeColor),h=Ie(e.nodeCanvasObjectMode),d=e.ctx,f=e.isShadow/e.globalScale,p=e.graphData.nodes.filter(l);d.save(),p.forEach(function(m){var y=h(m);if(e.nodeCanvasObject&&(y==="before"||y==="replace")&&(e.nodeCanvasObject(m,d,e.globalScale),y==="replace")){d.restore();return}var _=Math.sqrt(Math.max(0,c(m)||1))*e.nodeRelSize+f;d.beginPath(),d.arc(m.x,m.y,_,0,2*Math.PI,!1),d.fillStyle=u(m)||"rgba(31, 120, 180, 0.92)",d.fill(),e.nodeCanvasObject&&y==="after"&&e.nodeCanvasObject(m,e.ctx,e.globalScale)}),d.restore()}function s(){var l=Ie(e.linkVisibility),c=Ie(e.linkColor),u=Ie(e.linkWidth),h=Ie(e.linkLineDash),d=Ie(e.linkCurvature),f=Ie(e.linkCanvasObjectMode),p=e.ctx,m=e.isShadow*2,y=e.graphData.links.filter(l);y.forEach(S);var _=[],g=[],v=y;if(e.linkCanvasObject){var x=[],T=[];y.forEach(function(M){return({before:_,after:g,replace:x}[f(M)]||T).push(M)}),v=[].concat(Fi(_),g,T),_=_.concat(x)}p.save(),_.forEach(function(M){return e.linkCanvasObject(M,p,e.globalScale)}),p.restore();var b=pH(v,[c,u,h]);p.save(),Object.entries(b).forEach(function(M){var A=pc(M,2),E=A[0],w=A[1],N=!E||E==="undefined"?"rgba(0,0,0,0.15)":E;Object.entries(w).forEach(function(D){var F=pc(D,2),k=F[0],Y=F[1],$=(k||1)/e.globalScale+m;Object.entries(Y).forEach(function(V){var B=pc(V,2);B[0];var J=B[1],X=h(J[0]);p.beginPath(),J.forEach(function(re){var fe=re.source,De=re.target;if(!(!fe||!De||!fe.hasOwnProperty("x")||!De.hasOwnProperty("x"))){p.moveTo(fe.x,fe.y);var it=re.__controlPoints;it?p[it.length===2?"quadraticCurveTo":"bezierCurveTo"].apply(p,Fi(it).concat([De.x,De.y])):p.lineTo(De.x,De.y)}}),p.strokeStyle=N,p.lineWidth=$,p.setLineDash(X||[]),p.stroke()})})}),p.restore(),p.save(),g.forEach(function(M){return e.linkCanvasObject(M,p,e.globalScale)}),p.restore();function S(M){var A=d(M);if(!A){M.__controlPoints=null;return}var E=M.source,w=M.target;if(!(!E||!w||!E.hasOwnProperty("x")||!w.hasOwnProperty("x"))){var N=Math.sqrt(Math.pow(w.x-E.x,2)+Math.pow(w.y-E.y,2));if(N>0){var D=Math.atan2(w.y-E.y,w.x-E.x),F=N*A,k={x:(E.x+w.x)/2+F*Math.cos(D-Math.PI/2),y:(E.y+w.y)/2+F*Math.sin(D-Math.PI/2)};M.__controlPoints=[k.x,k.y]}else{var Y=A*70;M.__controlPoints=[w.x,w.y-Y,w.x+Y,w.y]}}}}function o(){var l=1.6,c=.2,u=Ie(e.linkDirectionalArrowLength),h=Ie(e.linkDirectionalArrowRelPos),d=Ie(e.linkVisibility),f=Ie(e.linkDirectionalArrowColor||e.linkColor),p=Ie(e.nodeVal),m=e.ctx;m.save(),e.graphData.links.filter(d).forEach(function(y){var _=u(y);if(!(!_||_<0)){var g=y.source,v=y.target;if(!(!g||!v||!g.hasOwnProperty("x")||!v.hasOwnProperty("x"))){var x=Math.sqrt(Math.max(0,p(g)||1))*e.nodeRelSize,T=Math.sqrt(Math.max(0,p(v)||1))*e.nodeRelSize,b=Math.min(1,Math.max(0,h(y))),S=f(y)||"rgba(0,0,0,0.28)",M=_/l/2,A=y.__controlPoints&&ix(jt,[g.x,g.y].concat(Fi(y.__controlPoints),[v.x,v.y])),E=A?function($){return A.get($)}:function($){return{x:g.x+(v.x-g.x)*$||0,y:g.y+(v.y-g.y)*$||0}},w=A?A.length():Math.sqrt(Math.pow(v.x-g.x,2)+Math.pow(v.y-g.y,2)),N=x+_+(w-x-T-_)*b,D=E(N/w),F=E((N-_)/w),k=E((N-_*(1-c))/w),Y=Math.atan2(D.y-F.y,D.x-F.x)-Math.PI/2;m.beginPath(),m.moveTo(D.x,D.y),m.lineTo(F.x+M*Math.cos(Y),F.y+M*Math.sin(Y)),m.lineTo(k.x,k.y),m.lineTo(F.x-M*Math.cos(Y),F.y-M*Math.sin(Y)),m.fillStyle=S,m.fill()}}}),m.restore()}function a(){var l=Ie(e.linkDirectionalParticles),c=Ie(e.linkDirectionalParticleSpeed),u=Ie(e.linkDirectionalParticleOffset),h=Ie(e.linkDirectionalParticleWidth),d=Ie(e.linkVisibility),f=Ie(e.linkDirectionalParticleColor||e.linkColor),p=e.ctx;p.save(),e.graphData.links.filter(d).forEach(function(m){var y=l(m);if(!(!m.hasOwnProperty("__photons")||!m.__photons.length)){var _=m.source,g=m.target;if(!(!_||!g||!_.hasOwnProperty("x")||!g.hasOwnProperty("x"))){var v=c(m),x=Math.abs(u(m)),T=m.__photons||[],b=Math.max(0,h(m)/2)/Math.sqrt(e.globalScale),S=f(m)||"rgba(0,0,0,0.28)";p.fillStyle=S;var M=m.__controlPoints?ix(jt,[_.x,_.y].concat(Fi(m.__controlPoints),[g.x,g.y])):null,A=0,E=!1;T.forEach(function(w){var N=!!w.__singleHop;if(w.hasOwnProperty("__progressRatio")||(w.__progressRatio=N?0:(A+x)/y),!N&&A++,w.__progressRatio+=v,w.__progressRatio>=1)if(!N)w.__progressRatio=w.__progressRatio%1;else{E=!0;return}var D=w.__progressRatio,F=M?M.get(D):{x:_.x+(g.x-_.x)*D||0,y:_.y+(g.y-_.y)*D||0};e.linkDirectionalParticleCanvasObject?e.linkDirectionalParticleCanvasObject(F.x,F.y,m,p,e.globalScale):(p.beginPath(),p.arc(F.x,F.y,b,0,2*Math.PI,!1),p.fill())}),E&&(m.__photons=m.__photons.filter(function(w){return!w.__singleHop||w.__progressRatio<=1}))}}}),p.restore()}},emitParticle:function(e,n){return n&&(!n.__photons&&(n.__photons=[]),n.__photons.push({__singleHop:!0})),this}},stateInit:function(){return{forceLayout:ob().force("link",sb()).force("charge",ab()).force("center",eb()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,n){n.ctx=e},update:function(e,n){e.engineRunning=!1,e.onUpdate(),e.nodeAutoColorBy!==null&&sx(e.graphData.nodes,Ie(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&sx(e.graphData.links,Ie(e.linkAutoColorBy),e.linkColor),e.graphData.links.forEach(function(f){f.source=f[e.linkSource],f.target=f[e.linkTarget]}),e.forceLayout.stop().alpha(1).nodes(e.graphData.nodes);var i=e.forceLayout.force("link");i&&i.id(function(f){return f[e.nodeId]}).links(e.graphData.links);var s=e.dagMode&&wH(e.graphData,function(f){return f[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),o=Math.max.apply(Math,Fi(Object.values(s||[]))),a=e.dagLevelDistance||e.graphData.nodes.length/(o||1)*AH*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu"].includes(n.dagMode)){var l=["lr","rl"].includes(n.dagMode)?"fx":"fy";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(f){return delete f[l]})}if(["lr","rl","td","bu"].includes(e.dagMode)){var c=["rl","bu"].includes(e.dagMode),u=function(p){return(s[p[e.nodeId]]-o/2)*a*(c?-1:1)},h=["lr","rl"].includes(e.dagMode)?"fx":"fy";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(f){return f[h]=u(f)})}e.forceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?lb(function(f){var p=s[f[e.nodeId]]||-1;return(e.dagMode==="radialin"?o-p:p)*a}).strength(function(f){return e.dagNodeFilter(f)?1:0}):null);for(var d=0;d<e.warmupTicks&&!(e.d3AlphaMin>0&&e.forceLayout.alpha()<e.d3AlphaMin);d++)e.forceLayout.tick();this.resetCountdown(),e.onFinishUpdate()}});function oM(r,e){var n=r instanceof Array?r:[r],i=new e;return i._destructor&&i._destructor(),{linkProp:function(o){return{default:i[o](),onChange:function(l,c){n.forEach(function(u){return c[u][o](l)})},triggerUpdate:!1}},linkMethod:function(o){return function(a){for(var l=arguments.length,c=new Array(l>1?l-1:0),u=1;u<l;u++)c[u-1]=arguments[u];var h=[];return n.forEach(function(d){var f=a[d],p=f[o].apply(f,c);p!==f&&h.push(p)}),h.length?h[0]:this}}}}var RH=800,CH=4,NH=5,aM=oM("forceGraph",Xh),PH=oM(["forceGraph","shadowGraph"],Xh),DH=Object.assign.apply(Object,Fi(["nodeColor","nodeAutoColorBy","nodeCanvasObject","nodeCanvasObjectMode","linkColor","linkAutoColorBy","linkLineDash","linkWidth","linkCanvasObject","linkCanvasObjectMode","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleOffset","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleCanvasObject","dagMode","dagLevelDistance","dagNodeFilter","onDagError","d3AlphaMin","d3AlphaDecay","d3VelocityDecay","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(r){return kc({},r,aM.linkProp(r))})).concat(Fi(["nodeRelSize","nodeId","nodeVal","nodeVisibility","linkSource","linkTarget","linkVisibility","linkCurvature"].map(function(r){return kc({},r,PH.linkProp(r))})))),LH=Object.assign.apply(Object,Fi(["d3Force","d3ReheatSimulation","emitParticle"].map(function(r){return kc({},r,aM.linkMethod(r))})));function Sp(r){if(r.canvas){var e=r.canvas.width,n=r.canvas.height;e===300&&n===150&&(e=n=0);var i=window.devicePixelRatio;e/=i,n/=i,[r.canvas,r.shadowCanvas].forEach(function(o){o.style.width="".concat(r.width,"px"),o.style.height="".concat(r.height,"px"),o.width=r.width*i,o.height=r.height*i,!e&&!n&&o.getContext("2d").scale(i,i)});var s=Or(r.canvas).k;r.zoom.translateBy(r.zoom.__baseElem,(r.width-e)/2/s,(r.height-n)/2/s),r.needsRedraw=!0}}function lM(r){var e=window.devicePixelRatio;r.setTransform(e,0,0,e,0,0)}function ax(r,e,n){r.save(),lM(r),r.clearRect(0,0,e,n),r.restore()}var IH=cl({props:na({width:{default:window.innerWidth,onChange:function(e,n){return Sp(n)},triggerUpdate:!1},height:{default:window.innerHeight,onChange:function(e,n){return Sp(n)},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,n){[e.nodes,e.links].every(function(s){return(s||[]).every(function(o){return!o.hasOwnProperty("__indexColor")})})&&n.colorTracker.reset(),[{type:"Node",objs:e.nodes},{type:"Link",objs:e.links}].forEach(i),n.forceGraph.graphData(e),n.shadowGraph.graphData(e);function i(s){var o=s.type,a=s.objs;a.filter(function(l){if(!l.hasOwnProperty("__indexColor"))return!0;var c=n.colorTracker.lookup(l.__indexColor);return!c||!c.hasOwnProperty("d")||c.d!==l}).forEach(function(l){l.__indexColor=n.colorTracker.register({type:o,d:l})})}},triggerUpdate:!1},backgroundColor:{onChange:function(e,n){n.canvas&&e&&(n.canvas.style.background=e)},triggerUpdate:!1},nodeLabel:{default:"name",triggerUpdate:!1},nodePointerAreaPaint:{onChange:function(e,n){n.shadowGraph.nodeCanvasObject(e?function(i,s,o){return e(i,i.__indexColor,s,o)}:null),n.flushShadowCanvas&&n.flushShadowCanvas()},triggerUpdate:!1},linkPointerAreaPaint:{onChange:function(e,n){n.shadowGraph.linkCanvasObject(e?function(i,s,o){return e(i,i.__indexColor,s,o)}:null),n.flushShadowCanvas&&n.flushShadowCanvas()},triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:4,triggerUpdate:!1},minZoom:{default:.01,onChange:function(e,n){n.zoom.scaleExtent([e,n.zoom.scaleExtent()[1]])},triggerUpdate:!1},maxZoom:{default:1e3,onChange:function(e,n){n.zoom.scaleExtent([n.zoom.scaleExtent()[0],e])},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},enableZoomInteraction:{default:!0,triggerUpdate:!1},enablePanInteraction:{default:!0,triggerUpdate:!1},enableZoomPanInteraction:{default:!0,triggerUpdate:!1},enablePointerInteraction:{default:!0,onChange:function(e,n){n.hoverObj=null},triggerUpdate:!1},autoPauseRedraw:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1},showPointerCursor:{default:!0,triggerUpdate:!1},onZoom:{triggerUpdate:!1},onZoomEnd:{triggerUpdate:!1},onRenderFramePre:{triggerUpdate:!1},onRenderFramePost:{triggerUpdate:!1}},DH),aliases:{stopAnimation:"pauseAnimation"},methods:na({graph2ScreenCoords:function(e,n,i){var s=Or(e.canvas);return{x:n*s.k+s.x,y:i*s.k+s.y}},screen2GraphCoords:function(e,n,i){var s=Or(e.canvas);return{x:(n-s.x)/s.k,y:(i-s.y)/s.k}},centerAt:function(e,n,i,s){if(!e.canvas)return null;if(n!==void 0||i!==void 0){var o=Object.assign({},n!==void 0?{x:n}:{},i!==void 0?{y:i}:{});return s?e.tweenGroup.add(new Wh(a()).to(o,s).easing(es.Quadratic.Out).onUpdate(l).start()):l(o),this}return a();function a(){var c=Or(e.canvas);return{x:(e.width/2-c.x)/c.k,y:(e.height/2-c.y)/c.k}}function l(c){var u=c.x,h=c.y;e.zoom.translateTo(e.zoom.__baseElem,u===void 0?a().x:u,h===void 0?a().y:h),e.needsRedraw=!0}},zoom:function(e,n,i){if(!e.canvas)return null;if(n!==void 0)return i?e.tweenGroup.add(new Wh({k:s()}).to({k:n},i).easing(es.Quadratic.Out).onUpdate(function(a){var l=a.k;return o(l)}).start()):o(n),this;return s();function s(){return Or(e.canvas).k}function o(a){e.zoom.scaleTo(e.zoom.__baseElem,a),e.needsRedraw=!0}},zoomToFit:function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];var l=this.getGraphBbox.apply(this,o);if(l){var c={x:(l.x[0]+l.x[1])/2,y:(l.y[0]+l.y[1])/2},u=Math.max(1e-12,Math.min(1e12,(e.width-i*2)/(l.x[1]-l.x[0]),(e.height-i*2)/(l.y[1]-l.y[0])));this.centerAt(c.x,c.y,n),this.zoom(u,n)}return this},getGraphBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},i=Ie(e.nodeVal),s=function(l){return Math.sqrt(Math.max(0,i(l)||1))*e.nodeRelSize},o=e.graphData.nodes.filter(n).map(function(a){return{x:a.x,y:a.y,r:s(a)}});return o.length?{x:[Mp(o,function(a){return a.x-a.r}),Ep(o,function(a){return a.x+a.r})],y:[Mp(o,function(a){return a.y-a.r}),Ep(o,function(a){return a.y+a.r})]}:null},pauseAnimation:function(e){return e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId||this._animationCycle(),this},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},LH),stateInit:function(){return{lastSetZoom:1,zoom:SM(),forceGraph:new Xh,shadowGraph:new Xh().cooldownTicks(0).nodeColor("__indexColor").linkColor("__indexColor").isShadow(!0),colorTracker:new X4,tweenGroup:new Kg}},init:function(e,n){var i=this;e.innerHTML="";var s=document.createElement("div");s.classList.add("force-graph-container"),s.style.position="relative",e.appendChild(s),n.canvas=document.createElement("canvas"),n.backgroundColor&&(n.canvas.style.background=n.backgroundColor),s.appendChild(n.canvas),n.shadowCanvas=document.createElement("canvas");var o=n.canvas.getContext("2d"),a=n.shadowCanvas.getContext("2d",{willReadFrequently:!0}),l={x:-1e12,y:-1e12},c=function(){var d=null,f=window.devicePixelRatio,p=l.x>0&&l.y>0?a.getImageData(l.x*f,l.y*f,1,1):null;return p&&(d=n.colorTracker.lookup(p.data)),d};wp(n.canvas).call(TM().subject(function(){if(!n.enableNodeDrag)return null;var h=c();return h&&h.type==="Node"?h.d:null}).on("start",function(h){var d=h.subject;d.__initialDragPos={x:d.x,y:d.y,fx:d.fx,fy:d.fy},h.active||(d.fx=d.x,d.fy=d.y),n.canvas.classList.add("grabbable")}).on("drag",function(h){var d=h.subject,f=d.__initialDragPos,p=h,m=Or(n.canvas).k,y={x:f.x+(p.x-f.x)/m-d.x,y:f.y+(p.y-f.y)/m-d.y};["x","y"].forEach(function(_){return d["f".concat(_)]=d[_]=f[_]+(p[_]-f[_])/m}),!(!d.__dragged&&NH>=Math.sqrt(xM(["x","y"].map(function(_){return Math.pow(h[_]-f[_],2)}))))&&(n.forceGraph.d3AlphaTarget(.3).resetCountdown(),n.isPointerDragging=!0,d.__dragged=!0,n.onNodeDrag(d,y))}).on("end",function(h){var d=h.subject,f=d.__initialDragPos,p={x:d.x-f.x,y:d.y-f.y};f.fx===void 0&&(d.fx=void 0),f.fy===void 0&&(d.fy=void 0),delete d.__initialDragPos,n.forceGraph.d3AlphaTarget()&&n.forceGraph.d3AlphaTarget(0).resetCountdown(),n.canvas.classList.remove("grabbable"),n.isPointerDragging=!1,d.__dragged&&(delete d.__dragged,n.onNodeDragEnd(d,p))})),n.zoom(n.zoom.__baseElem=wp(n.canvas)),n.zoom.__baseElem.on("dblclick.zoom",null),n.zoom.filter(function(h){return!h.button&&n.enableZoomPanInteraction&&(h.type!=="wheel"||Ie(n.enableZoomInteraction)(h))&&(h.type==="wheel"||Ie(n.enablePanInteraction)(h))}).on("zoom",function(h){var d=h.transform;[o,a].forEach(function(f){lM(f),f.translate(d.x,d.y),f.scale(d.k,d.k)}),n.isPointerDragging=!0,n.onZoom&&n.onZoom(na(na({},d),i.centerAt())),n.needsRedraw=!0}).on("end",function(h){n.isPointerDragging=!1,n.onZoomEnd&&n.onZoomEnd(na(na({},h.transform),i.centerAt()))}),Sp(n),n.forceGraph.onNeedsRedraw(function(){return n.needsRedraw=!0}).onFinishUpdate(function(){Or(n.canvas).k===n.lastSetZoom&&n.graphData.nodes.length&&(n.zoom.scaleTo(n.zoom.__baseElem,n.lastSetZoom=CH/Math.cbrt(n.graphData.nodes.length)),n.needsRedraw=!0)}),n.tooltip=new jS(s),["pointermove","pointerdown"].forEach(function(h){return s.addEventListener(h,function(d){h==="pointerdown"&&(n.isPointerPressed=!0,n.pointerDownEvent=d),!n.isPointerDragging&&d.type==="pointermove"&&n.onBackgroundClick&&(d.pressure>0||n.isPointerPressed)&&(d.pointerType==="mouse"||d.movementX===void 0||[d.movementX,d.movementY].some(function(m){return Math.abs(m)>1}))&&(n.isPointerDragging=!0);var f=p(s);l.x=d.pageX-f.left,l.y=d.pageY-f.top;function p(m){var y=m.getBoundingClientRect(),_=window.pageXOffset||document.documentElement.scrollLeft,g=window.pageYOffset||document.documentElement.scrollTop;return{top:y.top+g,left:y.left+_}}},{passive:!0})}),s.addEventListener("pointerup",function(h){if(n.isPointerPressed){if(n.isPointerPressed=!1,n.isPointerDragging){n.isPointerDragging=!1;return}var d=[h,n.pointerDownEvent];requestAnimationFrame(function(){if(h.button===0)if(n.hoverObj){var f=n["on".concat(n.hoverObj.type,"Click")];f&&f.apply(void 0,[n.hoverObj.d].concat(d))}else n.onBackgroundClick&&n.onBackgroundClick.apply(n,d);if(h.button===2)if(n.hoverObj){var p=n["on".concat(n.hoverObj.type,"RightClick")];p&&p.apply(void 0,[n.hoverObj.d].concat(d))}else n.onBackgroundRightClick&&n.onBackgroundRightClick.apply(n,d)})}},{passive:!0}),s.addEventListener("contextmenu",function(h){return!n.onBackgroundRightClick&&!n.onNodeRightClick&&!n.onLinkRightClick?!0:(h.preventDefault(),!1)}),n.forceGraph(o),n.shadowGraph(a);var u=L4(function(){ax(a,n.width,n.height),n.shadowGraph.linkWidth(function(d){return Ie(n.linkWidth)(d)+n.linkHoverPrecision});var h=Or(n.canvas);n.shadowGraph.globalScale(h.k).tickFrame()},RH);n.flushShadowCanvas=u.flush,(this._animationCycle=function h(){var d=!n.autoPauseRedraw||!!n.needsRedraw||n.forceGraph.isEngineRunning()||n.graphData.links.some(function(x){return x.__photons&&x.__photons.length});if(n.needsRedraw=!1,n.enablePointerInteraction){var f=n.isPointerDragging?null:c();if(f!==n.hoverObj){var p=n.hoverObj,m=p?p.type:null,y=f?f.type:null;if(m&&m!==y){var _=n["on".concat(m,"Hover")];_&&_(null,p.d)}if(y){var g=n["on".concat(y,"Hover")];g&&g(f.d,m===y?p.d:null)}n.tooltip.content(f&&Ie(n["".concat(f.type.toLowerCase(),"Label")])(f.d)||null),n.canvas.classList[(f&&n["on".concat(y,"Click")]||!f&&n.onBackgroundClick)&&Ie(n.showPointerCursor)(f==null?void 0:f.d)?"add":"remove"]("clickable"),n.hoverObj=f}d&&u()}if(d){ax(o,n.width,n.height);var v=Or(n.canvas).k;n.onRenderFramePre&&n.onRenderFramePre(o,v),n.forceGraph.globalScale(v).tickFrame(),n.onRenderFramePost&&n.onRenderFramePost(o,v)}n.tweenGroup.update(),n.animationFrameRequestId=requestAnimationFrame(h)})()},update:function(e){}});const Ad={width:R.number,height:R.number,graphData:R.shape({nodes:R.arrayOf(R.object).isRequired,links:R.arrayOf(R.object).isRequired}),backgroundColor:R.string,nodeRelSize:R.number,nodeId:R.string,nodeLabel:R.oneOfType([R.string,R.func]),nodeVal:R.oneOfType([R.number,R.string,R.func]),nodeVisibility:R.oneOfType([R.bool,R.string,R.func]),nodeColor:R.oneOfType([R.string,R.func]),nodeAutoColorBy:R.oneOfType([R.string,R.func]),onNodeHover:R.func,onNodeClick:R.func,linkSource:R.string,linkTarget:R.string,linkLabel:R.oneOfType([R.string,R.func]),linkVisibility:R.oneOfType([R.bool,R.string,R.func]),linkColor:R.oneOfType([R.string,R.func]),linkAutoColorBy:R.oneOfType([R.string,R.func]),linkWidth:R.oneOfType([R.number,R.string,R.func]),linkCurvature:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowLength:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowColor:R.oneOfType([R.string,R.func]),linkDirectionalArrowRelPos:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticles:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleSpeed:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleOffset:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleWidth:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleColor:R.oneOfType([R.string,R.func]),onLinkHover:R.func,onLinkClick:R.func,dagMode:R.oneOf(["td","bu","lr","rl","zin","zout","radialin","radialout"]),dagLevelDistance:R.number,dagNodeFilter:R.func,onDagError:R.func,d3AlphaMin:R.number,d3AlphaDecay:R.number,d3VelocityDecay:R.number,warmupTicks:R.number,cooldownTicks:R.number,cooldownTime:R.number,onEngineTick:R.func,onEngineStop:R.func,getGraphBbox:R.func},cM={zoomToFit:R.func,onNodeRightClick:R.func,onNodeDrag:R.func,onNodeDragEnd:R.func,onLinkRightClick:R.func,linkHoverPrecision:R.number,onBackgroundClick:R.func,onBackgroundRightClick:R.func,showPointerCursor:R.oneOfType([R.bool,R.func]),enablePointerInteraction:R.bool,enableNodeDrag:R.bool},i_={showNavInfo:R.bool,nodeOpacity:R.number,nodeResolution:R.number,nodeThreeObject:R.oneOfType([R.object,R.string,R.func]),nodeThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),nodePositionUpdate:R.func,linkOpacity:R.number,linkResolution:R.number,linkCurveRotation:R.oneOfType([R.number,R.string,R.func]),linkMaterial:R.oneOfType([R.object,R.string,R.func]),linkThreeObject:R.oneOfType([R.object,R.string,R.func]),linkThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),linkPositionUpdate:R.func,linkDirectionalArrowResolution:R.number,linkDirectionalParticleResolution:R.number,linkDirectionalParticleThreeObject:R.oneOfType([R.object,R.string,R.func]),forceEngine:R.oneOf(["d3","ngraph"]),ngraphPhysics:R.object,numDimensions:R.oneOf([1,2,3])},UH=Object.assign({},Ad,cM,{linkLineDash:R.oneOfType([R.arrayOf(R.number),R.string,R.func]),nodeCanvasObjectMode:R.oneOfType([R.string,R.func]),nodeCanvasObject:R.func,nodePointerAreaPaint:R.func,linkCanvasObjectMode:R.oneOfType([R.string,R.func]),linkCanvasObject:R.func,linkPointerAreaPaint:R.func,linkDirectionalParticleCanvasObject:R.func,autoPauseRedraw:R.bool,minZoom:R.number,maxZoom:R.number,enableZoomInteraction:R.oneOfType([R.bool,R.func]),enablePanInteraction:R.oneOfType([R.bool,R.func]),onZoom:R.func,onZoomEnd:R.func,onRenderFramePre:R.func,onRenderFramePost:R.func});Object.assign({},Ad,cM,i_,{enableNavigationControls:R.bool,controlType:R.oneOf(["trackball","orbit","fly"]),rendererConfig:R.object,extraRenderers:R.arrayOf(R.shape({render:R.func.isRequired}))});Object.assign({},Ad,i_,{nodeDesc:R.oneOfType([R.string,R.func]),linkDesc:R.oneOfType([R.string,R.func])});Object.assign({},Ad,i_,{markerAttrs:R.object,yOffset:R.number,glScale:R.number});const r_=dx(IH,{methodNames:["emitParticle","d3Force","d3ReheatSimulation","stopAnimation","pauseAnimation","resumeAnimation","centerAt","zoom","zoomToFit","getGraphBbox","screen2GraphCoords","graph2ScreenCoords"]});r_.displayName="ForceGraph2D";r_.propTypes=UH;const VH=({loading:r,is3D:e,fgRef:n,graphData:i,width:s,height:o,queryParams:a,contextNode:l,labelColorMap:c,spriteCacheRef:u,graphReady:h,openView:d,setContextNode:f,setSelectedLink:p,setOpenRightMenu:m,setMenuPos:y,selectedLink:_,setGraphReady:g})=>{const v=bi.useCallback(b=>{const S=String(b.id??b.node_id??b.entity_id??b.entity_name),M=u.current;if(!M.has(S)){const A=c[b.label]||"#888888",E=new P4(b.entity_name??b.id??S);E.color=A,E.textHeight=8,E.center&&(E.center.y=-.6),M.set(S,E)}return M.get(S)},[]),T={onNodeClick:b=>{d("details",{id:b.id,label:b.label,entity_name:b.entity_name,node_id:b.node_id}),f(b),p(null)},onNodeRightClick:(b,S)=>{S.preventDefault(),f(b),m(!0),y({x:S.clientX,y:S.clientY})},onLinkClick:b=>{f(null),console.log(b)},linkColor:b=>(console.log(b),_&&b.relation_id===_.relation_id?"red":"rgba(200,200,200,0.5)"),onNodeDragEnd:b=>{b.fx=b.x,b.fy=b.y,b.fz=b.z},onEngineTick:()=>{h||(g(!0),console.log("graphReady"))},linkLabel:b=>b.relations.map(M=>`${M.study_name}(${M.effect})`).join(", ")};return Mo.jsx(Mo.Fragment,{children:!r&&e!=null&&Mo.jsx(Mo.Fragment,{children:e?Mo.jsx(n_,{ref:n,graphData:i,nodeAutoColorBy:"label",nodeLabel:b=>`${b.label}: ${b.entity_name||b.id}`,width:s,height:o,linkWidth:2,nodeThreeObjectExtend:!0,linkAutoColorBy:"type",nodeColor:b=>{var M;const S=a.keyword;if(S&&((M=b.entity_name)!=null&&M.includes(S)||b.id.includes(S))||b.id.includes(l==null?void 0:l.id))return"red";if(b.label==="taxonomy"){const E=b.taxonomy_links||1,w=Math.min(E/50,1);return`rgb(${56*(1-w)}, ${205*(1-w)}, ${113*(1-w)})`}return b.label&&c[b.label]?c[b.label]:"#888888"},nodeVal:b=>{var M;const S=a.keyword;return b.label=="association"?1:S&&((M=b.entity_name)!=null&&M.includes(S)||b.id.includes(S))?10:4},linkThreeObjectExtend:!0,nodeThreeObject:v,...T}):Mo.jsx(r_,{ref:n,graphData:i,nodeAutoColorBy:"label",nodeLabel:b=>`${b.label}: ${b.entity_name||b.id}`,width:s,height:o,backgroundColor:"#111111",linkWidth:2,nodeRelSize:8,nodeCanvasObject:(b,S,M)=>{const A=a.keyword,E=b.entity_name||b.id,w=b.label&&c[b.label]?c[b.label]:"#888888",N=12/M;S.fillStyle=w,S.beginPath(),S.arc(b.x,b.y,6,0,2*Math.PI),S.fill(),A&&E.includes(A)&&(S.strokeStyle="#ff0000",S.lineWidth=2,S.beginPath(),S.arc(b.x,b.y,8,0,2*Math.PI),S.stroke()),S.fillStyle=w,S.font=`${N}px Sans-Serif`,S.fillText(E,b.x+8,b.y+4)},...T})})})};export{VH as default};
