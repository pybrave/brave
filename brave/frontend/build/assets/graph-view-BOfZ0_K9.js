import{r as st,v as wM,_ as AM,R as RM,l as mx,p as CM,d as gx,M as Nm,c8 as NM,h as PM,a as Cp,j as Ne,S as ro,I as DM,g as LM,c9 as IM,B as Jl,V as UM,F as ls,i as FM,c as OM}from"./index-CWx5cHtj.js";import{s as Np,p as BM,d as kM,t as kr,z as zM}from"./zoom-BGsqVsDF.js";import{t as GM,d as VM,q as HM,I as y_,p as _x,s as WM,m as Pp,b as Dp}from"./rgb-BwIoVOhg.js";import{C as $M}from"./index-BhpvB4Wv.js";import{S as yx}from"./index-BAlUq73q.js";import{D as jM,S as qM,b as XM}from"./index-Dlnhd9Is.js";import{D as YM}from"./index-DNPu2izs.js";import"./index-BgXoXwrY.js";var KM={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}},{tag:"path",attrs:{d:"M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z"}}]},name:"info-circle",theme:"outlined"},ZM=function(e,n){return st.createElement(wM,AM({},e,{ref:n,icon:KM}))},QM=st.forwardRef(ZM);function JM(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e===0){if(Object(n)!==n)return;c=!1}else for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function eE(r,e,n){return e=lE(e),e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function v_(r,e){return iE(r)||JM(r,e)||vx(r,e)||oE()}function tE(r){return nE(r)||rE(r)||vx(r)||sE()}function nE(r){if(Array.isArray(r))return Lp(r)}function iE(r){if(Array.isArray(r))return r}function rE(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function vx(r,e){if(r){if(typeof r=="string")return Lp(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);if(n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set")return Array.from(r);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Lp(r,e)}}function Lp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=r[n];return i}function sE(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function oE(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function aE(r,e){if(typeof r!="object"||r===null)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function lE(r){var e=aE(r,"string");return typeof e=="symbol"?e:String(e)}var cE=function(e,n){var i=new Set(n);return Object.assign.apply(Object,[{}].concat(tE(Object.entries(e).filter(function(s){var o=v_(s,1),a=o[0];return!i.has(a)}).map(function(s){var o=v_(s,2),a=o[0],l=o[1];return eE({},a,l)}))))};function Ip(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function uE(r){if(Array.isArray(r))return r}function hE(r){if(Array.isArray(r))return Ip(r)}function dE(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function fE(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function pE(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function mE(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function gE(r,e){return uE(r)||fE(r,e)||xx(r,e)||pE()}function x_(r){return hE(r)||dE(r)||xx(r)||mE()}function xx(r,e){if(r){if(typeof r=="string")return Ip(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ip(r,e):void 0}}function bx(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=e.wrapperElementType,i=n===void 0?"div":n,s=e.nodeMapper,o=s===void 0?function(h){return h}:s,a=e.methodNames,l=a===void 0?[]:a,c=e.initPropNames,u=c===void 0?[]:c;return st.forwardRef(function(h,d){var f=st.useRef(),p=st.useMemo(function(){var _=Object.fromEntries(u.filter(function(g){return h.hasOwnProperty(g)}).map(function(g){return[g,h[g]]}));return r(_)},[]);b_(function(){p(o(f.current))},st.useLayoutEffect),b_(function(){return p._destructor instanceof Function?p._destructor:void 0});var m=st.useCallback(function(_){for(var g=arguments.length,v=new Array(g>1?g-1:0),x=1;x<g;x++)v[x-1]=arguments[x];return p[_]instanceof Function?p[_].apply(p,v):void 0},[p]),y=st.useRef({});return Object.keys(cE(h,[].concat(x_(l),x_(u)))).filter(function(_){return y.current[_]!==h[_]}).forEach(function(_){return m(_,h[_])}),y.current=h,st.useImperativeHandle(d,function(){return Object.fromEntries(l.map(function(_){return[_,function(){for(var g=arguments.length,v=new Array(g),x=0;x<g;x++)v[x]=arguments[x];return m.apply(void 0,[_].concat(v))}]}))},[m]),RM.createElement(i,{ref:f})})}function b_(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:st.useEffect,n=st.useRef(),i=st.useRef(!1),s=st.useRef(!1),o=st.useState(0),a=gE(o,2);a[0];var l=a[1];i.current&&(s.current=!0),e(function(){return i.current||(n.current=r(),i.current=!0),l(function(c){return c+1}),function(){s.current&&n.current&&n.current()}},[])}var _E=typeof global=="object"&&global&&global.Object===Object&&global,yE=typeof self=="object"&&self&&self.Object===Object&&self,Tx=_E||yE||Function("return this")(),Nh=Tx.Symbol,Sx=Object.prototype,vE=Sx.hasOwnProperty,xE=Sx.toString,vl=Nh?Nh.toStringTag:void 0;function bE(r){var e=vE.call(r,vl),n=r[vl];try{r[vl]=void 0;var i=!0}catch{}var s=xE.call(r);return i&&(e?r[vl]=n:delete r[vl]),s}var TE=Object.prototype,SE=TE.toString;function ME(r){return SE.call(r)}var EE="[object Null]",wE="[object Undefined]",T_=Nh?Nh.toStringTag:void 0;function AE(r){return r==null?r===void 0?wE:EE:T_&&T_ in Object(r)?bE(r):ME(r)}function RE(r){return r!=null&&typeof r=="object"}var CE="[object Symbol]";function NE(r){return typeof r=="symbol"||RE(r)&&AE(r)==CE}var PE=/\s/;function DE(r){for(var e=r.length;e--&&PE.test(r.charAt(e)););return e}var LE=/^\s+/;function IE(r){return r&&r.slice(0,DE(r)+1).replace(LE,"")}function Ph(r){var e=typeof r;return r!=null&&(e=="object"||e=="function")}var S_=NaN,UE=/^[-+]0x[0-9a-f]+$/i,FE=/^0b[01]+$/i,OE=/^0o[0-7]+$/i,BE=parseInt;function M_(r){if(typeof r=="number")return r;if(NE(r))return S_;if(Ph(r)){var e=typeof r.valueOf=="function"?r.valueOf():r;r=Ph(e)?e+"":e}if(typeof r!="string")return r===0?r:+r;r=IE(r);var n=FE.test(r);return n||OE.test(r)?BE(r.slice(2),n?2:8):UE.test(r)?S_:+r}var Ud=function(){return Tx.Date.now()},kE="Expected a function",zE=Math.max,GE=Math.min;function Mx(r,e,n){var i,s,o,a,l,c,u=0,h=!1,d=!1,f=!0;if(typeof r!="function")throw new TypeError(kE);e=M_(e)||0,Ph(n)&&(h=!!n.leading,d="maxWait"in n,o=d?zE(M_(n.maxWait)||0,e):o,f="trailing"in n?!!n.trailing:f);function p(S){var M=i,A=s;return i=s=void 0,u=S,a=r.apply(A,M),a}function m(S){return u=S,l=setTimeout(g,e),h?p(S):a}function y(S){var M=S-c,A=S-u,E=e-M;return d?GE(E,o-A):E}function _(S){var M=S-c,A=S-u;return c===void 0||M>=e||M<0||d&&A>=o}function g(){var S=Ud();if(_(S))return v(S);l=setTimeout(g,y(S))}function v(S){return l=void 0,f&&i?p(S):(i=s=void 0,a)}function x(){l!==void 0&&clearTimeout(l),u=0,i=c=s=l=void 0}function b(){return l===void 0?a:v(Ud())}function T(){var S=Ud(),M=_(S);if(i=arguments,s=this,c=S,M){if(l===void 0)return m(c);if(d)return clearTimeout(l),l=setTimeout(g,e),p(c)}return l===void 0&&(l=setTimeout(g,e)),a}return T.cancel=x,T.flush=b,T}var VE="Expected a function";function HE(r,e,n){var i=!0,s=!0;if(typeof r!="function")throw new TypeError(VE);return Ph(n)&&(i="leading"in n?!!n.leading:i,s="trailing"in n?!!n.trailing:s),Mx(r,e,{leading:i,maxWait:e,trailing:s})}var Zr=Object.freeze({Linear:Object.freeze({None:function(r){return r},In:function(r){return r},Out:function(r){return r},InOut:function(r){return r}}),Quadratic:Object.freeze({In:function(r){return r*r},Out:function(r){return r*(2-r)},InOut:function(r){return(r*=2)<1?.5*r*r:-.5*(--r*(r-2)-1)}}),Cubic:Object.freeze({In:function(r){return r*r*r},Out:function(r){return--r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r:.5*((r-=2)*r*r+2)}}),Quartic:Object.freeze({In:function(r){return r*r*r*r},Out:function(r){return 1- --r*r*r*r},InOut:function(r){return(r*=2)<1?.5*r*r*r*r:-.5*((r-=2)*r*r*r-2)}}),Quintic:Object.freeze({In:function(r){return r*r*r*r*r},Out:function(r){return--r*r*r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r*r*r:.5*((r-=2)*r*r*r*r+2)}}),Sinusoidal:Object.freeze({In:function(r){return 1-Math.sin((1-r)*Math.PI/2)},Out:function(r){return Math.sin(r*Math.PI/2)},InOut:function(r){return .5*(1-Math.sin(Math.PI*(.5-r)))}}),Exponential:Object.freeze({In:function(r){return r===0?0:Math.pow(1024,r-1)},Out:function(r){return r===1?1:1-Math.pow(2,-10*r)},InOut:function(r){return r===0?0:r===1?1:(r*=2)<1?.5*Math.pow(1024,r-1):.5*(-Math.pow(2,-10*(r-1))+2)}}),Circular:Object.freeze({In:function(r){return 1-Math.sqrt(1-r*r)},Out:function(r){return Math.sqrt(1- --r*r)},InOut:function(r){return(r*=2)<1?-.5*(Math.sqrt(1-r*r)-1):.5*(Math.sqrt(1-(r-=2)*r)+1)}}),Elastic:Object.freeze({In:function(r){return r===0?0:r===1?1:-Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI)},Out:function(r){return r===0?0:r===1?1:Math.pow(2,-10*r)*Math.sin((r-.1)*5*Math.PI)+1},InOut:function(r){return r===0?0:r===1?1:(r*=2,r<1?-.5*Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI):.5*Math.pow(2,-10*(r-1))*Math.sin((r-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(r){var e=1.70158;return r===1?1:r*r*((e+1)*r-e)},Out:function(r){var e=1.70158;return r===0?0:--r*r*((e+1)*r+e)+1},InOut:function(r){var e=2.5949095;return(r*=2)<1?.5*(r*r*((e+1)*r-e)):.5*((r-=2)*r*((e+1)*r+e)+2)}}),Bounce:Object.freeze({In:function(r){return 1-Zr.Bounce.Out(1-r)},Out:function(r){return r<1/2.75?7.5625*r*r:r<2/2.75?7.5625*(r-=1.5/2.75)*r+.75:r<2.5/2.75?7.5625*(r-=2.25/2.75)*r+.9375:7.5625*(r-=2.625/2.75)*r+.984375},InOut:function(r){return r<.5?Zr.Bounce.In(r*2)*.5:Zr.Bounce.Out(r*2-1)*.5+.5}}),generatePow:function(r){return r===void 0&&(r=4),r=r<Number.EPSILON?Number.EPSILON:r,r=r>1e4?1e4:r,{In:function(e){return Math.pow(e,r)},Out:function(e){return 1-Math.pow(1-e,r)},InOut:function(e){return e<.5?Math.pow(e*2,r)/2:(1-Math.pow(2-e*2,r))/2+.5}}}}),ec=function(){return performance.now()},Pm=function(){function r(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,e)}return r.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(n){return e._tweens[n]})},r.prototype.removeAll=function(){this._tweens={}},r.prototype.add=function(){for(var e,n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];for(var s=0,o=n;s<o.length;s++){var a=o[s];(e=a._group)===null||e===void 0||e.remove(a),a._group=this,this._tweens[a.getId()]=a,this._tweensAddedDuringUpdate[a.getId()]=a}},r.prototype.remove=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var i=0,s=e;i<s.length;i++){var o=s[i];o._group=void 0,delete this._tweens[o.getId()],delete this._tweensAddedDuringUpdate[o.getId()]}},r.prototype.allStopped=function(){return this.getAll().every(function(e){return!e.isPlaying()})},r.prototype.update=function(e,n){e===void 0&&(e=ec()),n===void 0&&(n=!0);var i=Object.keys(this._tweens);if(i.length!==0)for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var s=0;s<i.length;s++){var o=this._tweens[i[s]],a=!n;o&&o.update(e,a)===!1&&!n&&this.remove(o)}i=Object.keys(this._tweensAddedDuringUpdate)}},r}(),Up={Linear:function(r,e){var n=r.length-1,i=n*e,s=Math.floor(i),o=Up.Utils.Linear;return e<0?o(r[0],r[1],i):e>1?o(r[n],r[n-1],n-i):o(r[s],r[s+1>n?n:s+1],i-s)},Utils:{Linear:function(r,e,n){return(e-r)*n+r}}},Ex=function(){function r(){}return r.nextId=function(){return r._nextId++},r._nextId=0,r}(),Fp=new Pm,Dh=function(){function r(e,n){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Zr.Linear.None,this._interpolationFunction=Up.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=Ex.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=e,typeof n=="object"?(this._group=n,n.add(this)):n===!0&&(this._group=Fp,Fp.add(this))}return r.prototype.getId=function(){return this._id},r.prototype.isPlaying=function(){return this._isPlaying},r.prototype.isPaused=function(){return this._isPaused},r.prototype.getDuration=function(){return this._duration},r.prototype.to=function(e,n){if(n===void 0&&(n=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=n<0?0:n,this},r.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e<0?0:e,this},r.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},r.prototype.start=function(e,n){if(e===void 0&&(e=ec()),n===void 0&&(n=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var i in this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||n){if(this._propertiesAreSetUp=!0,!this._isDynamic){var s={};for(var o in this._valuesEnd)s[o]=this._valuesEnd[o];this._valuesEnd=s}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,n)}return this},r.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},r.prototype._setupProperties=function(e,n,i,s,o){for(var a in i){var l=e[a],c=Array.isArray(l),u=c?"array":typeof l,h=!c&&Array.isArray(i[a]);if(!(u==="undefined"||u==="function")){if(h){var d=i[a];if(d.length===0)continue;for(var f=[l],p=0,m=d.length;p<m;p+=1){var y=this._handleRelativeValue(l,d[p]);if(isNaN(y)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}f.push(y)}h&&(i[a]=f)}if((u==="object"||c)&&l&&!h){n[a]=c?[]:{};var _=l;for(var g in _)n[a][g]=_[g];s[a]=c?[]:{};var d=i[a];if(!this._isDynamic){var v={};for(var g in d)v[g]=d[g];i[a]=d=v}this._setupProperties(_,n[a],d,s[a],o)}else(typeof n[a]>"u"||o)&&(n[a]=l),c||(n[a]*=1),h?s[a]=i[a].slice().reverse():s[a]=n[a]||0}}},r.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},r.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},r.prototype.pause=function(e){return e===void 0&&(e=ec()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this)},r.prototype.resume=function(e){return e===void 0&&(e=ec()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this)},r.prototype.stopChainedTweens=function(){for(var e=0,n=this._chainedTweens.length;e<n;e++)this._chainedTweens[e].stop();return this},r.prototype.group=function(e){return e?(e.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},r.prototype.remove=function(){var e;return(e=this._group)===null||e===void 0||e.remove(this),this},r.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},r.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},r.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},r.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},r.prototype.easing=function(e){return e===void 0&&(e=Zr.Linear.None),this._easingFunction=e,this},r.prototype.interpolation=function(e){return e===void 0&&(e=Up.Linear),this._interpolationFunction=e,this},r.prototype.chain=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this._chainedTweens=e,this},r.prototype.onStart=function(e){return this._onStartCallback=e,this},r.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},r.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},r.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},r.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},r.prototype.onStop=function(e){return this._onStopCallback=e,this},r.prototype.update=function(e,n){var i=this,s;if(e===void 0&&(e=ec()),n===void 0&&(n=r.autoStartOnUpdate),this._isPaused)return!0;var o;if(!this._goToEnd&&!this._isPlaying)if(n)this.start(e,!0);else return!1;if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var a=e-this._startTime,l=this._duration+((s=this._repeatDelayTime)!==null&&s!==void 0?s:this._delayTime),c=this._duration+this._repeat*l,u=function(){if(i._duration===0||a>c)return 1;var y=Math.trunc(a/l),_=a-y*l,g=Math.min(_/i._duration,1);return g===0&&a===i._duration?1:g},h=u(),d=this._easingFunction(h);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,d),this._onUpdateCallback&&this._onUpdateCallback(this._object,h),this._duration===0||a>=this._duration)if(this._repeat>0){var f=Math.min(Math.trunc((a-this._duration)/l)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=f);for(o in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[o]=="string"&&(this._valuesStartRepeat[o]=this._valuesStartRepeat[o]+parseFloat(this._valuesEnd[o])),this._yoyo&&this._swapEndStartRepeatValues(o),this._valuesStart[o]=this._valuesStartRepeat[o];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=l*f,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var p=0,m=this._chainedTweens.length;p<m;p++)this._chainedTweens[p].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},r.prototype._updateProperties=function(e,n,i,s){for(var o in i)if(n[o]!==void 0){var a=n[o]||0,l=i[o],c=Array.isArray(e[o]),u=Array.isArray(l),h=!c&&u;h?e[o]=this._interpolationFunction(l,s):typeof l=="object"&&l?this._updateProperties(e[o],a,l,s):(l=this._handleRelativeValue(a,l),typeof l=="number"&&(e[o]=a+(l-a)*s))}},r.prototype._handleRelativeValue=function(e,n){return typeof n!="string"?n:n.charAt(0)==="+"||n.charAt(0)==="-"?e+parseFloat(n):parseFloat(n)},r.prototype._swapEndStartRepeatValues=function(e){var n=this._valuesStartRepeat[e],i=this._valuesEnd[e];typeof i=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(i):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=n},r.autoStartOnUpdate=!1,r}();Ex.nextId;var vr=Fp;vr.getAll.bind(vr);vr.removeAll.bind(vr);vr.add.bind(vr);vr.remove.bind(vr);vr.update.bind(vr);function E_(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function WE(r){if(Array.isArray(r))return r}function $E(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function jE(r,e,n){return Object.defineProperty(r,"prototype",{writable:!1}),r}function qE(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function XE(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function YE(r,e){return WE(r)||qE(r,e)||KE(r,e)||XE()}function KE(r,e){if(r){if(typeof r=="string")return E_(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?E_(r,e):void 0}}var ZE=jE(function r(e,n){var i=n.default,s=i===void 0?null:i,o=n.triggerUpdate,a=o===void 0?!0:o,l=n.onChange,c=l===void 0?function(u,h){}:l;$E(this,r),this.name=e,this.defaultVal=s,this.triggerUpdate=a,this.onChange=c});function ol(r){var e=r.stateInit,n=e===void 0?function(){return{}}:e,i=r.props,s=i===void 0?{}:i,o=r.methods,a=o===void 0?{}:o,l=r.aliases,c=l===void 0?{}:l,u=r.init,h=u===void 0?function(){}:u,d=r.update,f=d===void 0?function(){}:d,p=Object.keys(s).map(function(m){return new ZE(m,s[m])});return function m(){for(var y=arguments.length,_=new Array(y),g=0;g<y;g++)_[g]=arguments[g];var v=!!(this instanceof m&&this.constructor),x=v?_.shift():void 0,b=_[0],T=b===void 0?{}:b,S=Object.assign({},n instanceof Function?n(T):n,{initialised:!1}),M={};function A(N){return E(N,T),w(),A}var E=function(D,F){h.call(A,D,S,F),S.initialised=!0},w=Mx(function(){S.initialised&&(f.call(A,S,M),M={})},1);return p.forEach(function(N){A[N.name]=D(N);function D(F){var k=F.name,j=F.triggerUpdate,$=j===void 0?!1:j,G=F.onChange,B=G===void 0?function(re,me){}:G,J=F.defaultVal,Y=J===void 0?null:J;return function(re){var me=S[k];if(!arguments.length)return me;var Re=re===void 0?Y:re;return S[k]=Re,B.call(A,Re,S,me),!M.hasOwnProperty(k)&&(M[k]=me),$&&w(),A}}}),Object.keys(a).forEach(function(N){A[N]=function(){for(var D,F=arguments.length,k=new Array(F),j=0;j<F;j++)k[j]=arguments[j];return(D=a[N]).call.apply(D,[A,S].concat(k))}}),Object.entries(c).forEach(function(N){var D=YE(N,2),F=D[0],k=D[1];return A[F]=A[k]}),A.resetProps=function(){return p.forEach(function(N){A[N.name](N.defaultVal)}),A},A.resetProps(),S._rerender=w,v&&x&&A(x),A}}var Oe=function(r){return typeof r=="function"?r:typeof r=="string"?function(e){return e[r]}:function(e){return r}};function Lh(r){"@babel/helpers - typeof";return Lh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Lh(r)}var QE=/^\s+/,JE=/\s+$/;function $e(r,e){if(r=r||"",e=e||{},r instanceof $e)return r;if(!(this instanceof $e))return new $e(r,e);var n=ew(r);this._originalInput=r,this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=Math.round(100*this._a)/100,this._format=e.format||n.format,this._gradientType=e.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=n.ok}$e.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(e.r*299+e.g*587+e.b*114)/1e3},getLuminance:function(){var e=this.toRgb(),n,i,s,o,a,l;return n=e.r/255,i=e.g/255,s=e.b/255,n<=.03928?o=n/12.92:o=Math.pow((n+.055)/1.055,2.4),i<=.03928?a=i/12.92:a=Math.pow((i+.055)/1.055,2.4),s<=.03928?l=s/12.92:l=Math.pow((s+.055)/1.055,2.4),.2126*o+.7152*a+.0722*l},setAlpha:function(e){return this._a=wx(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=A_(this._r,this._g,this._b);return{h:e.h*360,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=A_(this._r,this._g,this._b),n=Math.round(e.h*360),i=Math.round(e.s*100),s=Math.round(e.v*100);return this._a==1?"hsv("+n+", "+i+"%, "+s+"%)":"hsva("+n+", "+i+"%, "+s+"%, "+this._roundA+")"},toHsl:function(){var e=w_(this._r,this._g,this._b);return{h:e.h*360,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=w_(this._r,this._g,this._b),n=Math.round(e.h*360),i=Math.round(e.s*100),s=Math.round(e.l*100);return this._a==1?"hsl("+n+", "+i+"%, "+s+"%)":"hsla("+n+", "+i+"%, "+s+"%, "+this._roundA+")"},toHex:function(e){return R_(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return rw(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(Jt(this._r,255)*100)+"%",g:Math.round(Jt(this._g,255)*100)+"%",b:Math.round(Jt(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(Jt(this._r,255)*100)+"%, "+Math.round(Jt(this._g,255)*100)+"%, "+Math.round(Jt(this._b,255)*100)+"%)":"rgba("+Math.round(Jt(this._r,255)*100)+"%, "+Math.round(Jt(this._g,255)*100)+"%, "+Math.round(Jt(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:gw[R_(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var n="#"+C_(this._r,this._g,this._b,this._a),i=n,s=this._gradientType?"GradientType = 1, ":"";if(e){var o=$e(e);i="#"+C_(o._r,o._g,o._b,o._a)}return"progid:DXImageTransform.Microsoft.gradient("+s+"startColorstr="+n+",endColorstr="+i+")"},toString:function(e){var n=!!e;e=e||this._format;var i=!1,s=this._a<1&&this._a>=0,o=!n&&s&&(e==="hex"||e==="hex6"||e==="hex3"||e==="hex4"||e==="hex8"||e==="name");return o?e==="name"&&this._a===0?this.toName():this.toRgbString():(e==="rgb"&&(i=this.toRgbString()),e==="prgb"&&(i=this.toPercentageRgbString()),(e==="hex"||e==="hex6")&&(i=this.toHexString()),e==="hex3"&&(i=this.toHexString(!0)),e==="hex4"&&(i=this.toHex8String(!0)),e==="hex8"&&(i=this.toHex8String()),e==="name"&&(i=this.toName()),e==="hsl"&&(i=this.toHslString()),e==="hsv"&&(i=this.toHsvString()),i||this.toHexString())},clone:function(){return $e(this.toString())},_applyModification:function(e,n){var i=e.apply(null,[this].concat([].slice.call(n)));return this._r=i._r,this._g=i._g,this._b=i._b,this.setAlpha(i._a),this},lighten:function(){return this._applyModification(lw,arguments)},brighten:function(){return this._applyModification(cw,arguments)},darken:function(){return this._applyModification(uw,arguments)},desaturate:function(){return this._applyModification(sw,arguments)},saturate:function(){return this._applyModification(ow,arguments)},greyscale:function(){return this._applyModification(aw,arguments)},spin:function(){return this._applyModification(hw,arguments)},_applyCombination:function(e,n){return e.apply(null,[this].concat([].slice.call(n)))},analogous:function(){return this._applyCombination(pw,arguments)},complement:function(){return this._applyCombination(dw,arguments)},monochromatic:function(){return this._applyCombination(mw,arguments)},splitcomplement:function(){return this._applyCombination(fw,arguments)},triad:function(){return this._applyCombination(N_,[3])},tetrad:function(){return this._applyCombination(N_,[4])}};$e.fromRatio=function(r,e){if(Lh(r)=="object"){var n={};for(var i in r)r.hasOwnProperty(i)&&(i==="a"?n[i]=r[i]:n[i]=tc(r[i]));r=n}return $e(r,e)};function ew(r){var e={r:0,g:0,b:0},n=1,i=null,s=null,o=null,a=!1,l=!1;return typeof r=="string"&&(r=xw(r)),Lh(r)=="object"&&(Rr(r.r)&&Rr(r.g)&&Rr(r.b)?(e=tw(r.r,r.g,r.b),a=!0,l=String(r.r).substr(-1)==="%"?"prgb":"rgb"):Rr(r.h)&&Rr(r.s)&&Rr(r.v)?(i=tc(r.s),s=tc(r.v),e=iw(r.h,i,s),a=!0,l="hsv"):Rr(r.h)&&Rr(r.s)&&Rr(r.l)&&(i=tc(r.s),o=tc(r.l),e=nw(r.h,i,o),a=!0,l="hsl"),r.hasOwnProperty("a")&&(n=r.a)),n=wx(n),{ok:a,format:r.format||l,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:n}}function tw(r,e,n){return{r:Jt(r,255)*255,g:Jt(e,255)*255,b:Jt(n,255)*255}}function w_(r,e,n){r=Jt(r,255),e=Jt(e,255),n=Jt(n,255);var i=Math.max(r,e,n),s=Math.min(r,e,n),o,a,l=(i+s)/2;if(i==s)o=a=0;else{var c=i-s;switch(a=l>.5?c/(2-i-s):c/(i+s),i){case r:o=(e-n)/c+(e<n?6:0);break;case e:o=(n-r)/c+2;break;case n:o=(r-e)/c+4;break}o/=6}return{h:o,s:a,l}}function nw(r,e,n){var i,s,o;r=Jt(r,360),e=Jt(e,100),n=Jt(n,100);function a(u,h,d){return d<0&&(d+=1),d>1&&(d-=1),d<1/6?u+(h-u)*6*d:d<1/2?h:d<2/3?u+(h-u)*(2/3-d)*6:u}if(e===0)i=s=o=n;else{var l=n<.5?n*(1+e):n+e-n*e,c=2*n-l;i=a(c,l,r+1/3),s=a(c,l,r),o=a(c,l,r-1/3)}return{r:i*255,g:s*255,b:o*255}}function A_(r,e,n){r=Jt(r,255),e=Jt(e,255),n=Jt(n,255);var i=Math.max(r,e,n),s=Math.min(r,e,n),o,a,l=i,c=i-s;if(a=i===0?0:c/i,i==s)o=0;else{switch(i){case r:o=(e-n)/c+(e<n?6:0);break;case e:o=(n-r)/c+2;break;case n:o=(r-e)/c+4;break}o/=6}return{h:o,s:a,v:l}}function iw(r,e,n){r=Jt(r,360)*6,e=Jt(e,100),n=Jt(n,100);var i=Math.floor(r),s=r-i,o=n*(1-e),a=n*(1-s*e),l=n*(1-(1-s)*e),c=i%6,u=[n,a,o,o,l,n][c],h=[l,n,n,a,o,o][c],d=[o,o,l,n,n,a][c];return{r:u*255,g:h*255,b:d*255}}function R_(r,e,n,i){var s=[er(Math.round(r).toString(16)),er(Math.round(e).toString(16)),er(Math.round(n).toString(16))];return i&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)?s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0):s.join("")}function rw(r,e,n,i,s){var o=[er(Math.round(r).toString(16)),er(Math.round(e).toString(16)),er(Math.round(n).toString(16)),er(Ax(i))];return s&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)&&o[3].charAt(0)==o[3].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0)+o[3].charAt(0):o.join("")}function C_(r,e,n,i){var s=[er(Ax(i)),er(Math.round(r).toString(16)),er(Math.round(e).toString(16)),er(Math.round(n).toString(16))];return s.join("")}$e.equals=function(r,e){return!r||!e?!1:$e(r).toRgbString()==$e(e).toRgbString()};$e.random=function(){return $e.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function sw(r,e){e=e===0?0:e||10;var n=$e(r).toHsl();return n.s-=e/100,n.s=ed(n.s),$e(n)}function ow(r,e){e=e===0?0:e||10;var n=$e(r).toHsl();return n.s+=e/100,n.s=ed(n.s),$e(n)}function aw(r){return $e(r).desaturate(100)}function lw(r,e){e=e===0?0:e||10;var n=$e(r).toHsl();return n.l+=e/100,n.l=ed(n.l),$e(n)}function cw(r,e){e=e===0?0:e||10;var n=$e(r).toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(255*-(e/100)))),n.g=Math.max(0,Math.min(255,n.g-Math.round(255*-(e/100)))),n.b=Math.max(0,Math.min(255,n.b-Math.round(255*-(e/100)))),$e(n)}function uw(r,e){e=e===0?0:e||10;var n=$e(r).toHsl();return n.l-=e/100,n.l=ed(n.l),$e(n)}function hw(r,e){var n=$e(r).toHsl(),i=(n.h+e)%360;return n.h=i<0?360+i:i,$e(n)}function dw(r){var e=$e(r).toHsl();return e.h=(e.h+180)%360,$e(e)}function N_(r,e){if(isNaN(e)||e<=0)throw new Error("Argument to polyad must be a positive number");for(var n=$e(r).toHsl(),i=[$e(r)],s=360/e,o=1;o<e;o++)i.push($e({h:(n.h+o*s)%360,s:n.s,l:n.l}));return i}function fw(r){var e=$e(r).toHsl(),n=e.h;return[$e(r),$e({h:(n+72)%360,s:e.s,l:e.l}),$e({h:(n+216)%360,s:e.s,l:e.l})]}function pw(r,e,n){e=e||6,n=n||30;var i=$e(r).toHsl(),s=360/n,o=[$e(r)];for(i.h=(i.h-(s*e>>1)+720)%360;--e;)i.h=(i.h+s)%360,o.push($e(i));return o}function mw(r,e){e=e||6;for(var n=$e(r).toHsv(),i=n.h,s=n.s,o=n.v,a=[],l=1/e;e--;)a.push($e({h:i,s,v:o})),o=(o+l)%1;return a}$e.mix=function(r,e,n){n=n===0?0:n||50;var i=$e(r).toRgb(),s=$e(e).toRgb(),o=n/100,a={r:(s.r-i.r)*o+i.r,g:(s.g-i.g)*o+i.g,b:(s.b-i.b)*o+i.b,a:(s.a-i.a)*o+i.a};return $e(a)};$e.readability=function(r,e){var n=$e(r),i=$e(e);return(Math.max(n.getLuminance(),i.getLuminance())+.05)/(Math.min(n.getLuminance(),i.getLuminance())+.05)};$e.isReadable=function(r,e,n){var i=$e.readability(r,e),s,o;switch(o=!1,s=bw(n),s.level+s.size){case"AAsmall":case"AAAlarge":o=i>=4.5;break;case"AAlarge":o=i>=3;break;case"AAAsmall":o=i>=7;break}return o};$e.mostReadable=function(r,e,n){var i=null,s=0,o,a,l,c;n=n||{},a=n.includeFallbackColors,l=n.level,c=n.size;for(var u=0;u<e.length;u++)o=$e.readability(r,e[u]),o>s&&(s=o,i=$e(e[u]));return $e.isReadable(r,i,{level:l,size:c})||!a?i:(n.includeFallbackColors=!1,$e.mostReadable(r,["#fff","#000"],n))};var Op=$e.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},gw=$e.hexNames=_w(Op);function _w(r){var e={};for(var n in r)r.hasOwnProperty(n)&&(e[r[n]]=n);return e}function wx(r){return r=parseFloat(r),(isNaN(r)||r<0||r>1)&&(r=1),r}function Jt(r,e){yw(r)&&(r="100%");var n=vw(r);return r=Math.min(e,Math.max(0,parseFloat(r))),n&&(r=parseInt(r*e,10)/100),Math.abs(r-e)<1e-6?1:r%e/parseFloat(e)}function ed(r){return Math.min(1,Math.max(0,r))}function xi(r){return parseInt(r,16)}function yw(r){return typeof r=="string"&&r.indexOf(".")!=-1&&parseFloat(r)===1}function vw(r){return typeof r=="string"&&r.indexOf("%")!=-1}function er(r){return r.length==1?"0"+r:""+r}function tc(r){return r<=1&&(r=r*100+"%"),r}function Ax(r){return Math.round(parseFloat(r)*255).toString(16)}function P_(r){return xi(r)/255}var qi=function(){var r="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",n="(?:"+e+")|(?:"+r+")",i="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?",s="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?";return{CSS_UNIT:new RegExp(n),rgb:new RegExp("rgb"+i),rgba:new RegExp("rgba"+s),hsl:new RegExp("hsl"+i),hsla:new RegExp("hsla"+s),hsv:new RegExp("hsv"+i),hsva:new RegExp("hsva"+s),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function Rr(r){return!!qi.CSS_UNIT.exec(r)}function xw(r){r=r.replace(QE,"").replace(JE,"").toLowerCase();var e=!1;if(Op[r])r=Op[r],e=!0;else if(r=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var n;return(n=qi.rgb.exec(r))?{r:n[1],g:n[2],b:n[3]}:(n=qi.rgba.exec(r))?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=qi.hsl.exec(r))?{h:n[1],s:n[2],l:n[3]}:(n=qi.hsla.exec(r))?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=qi.hsv.exec(r))?{h:n[1],s:n[2],v:n[3]}:(n=qi.hsva.exec(r))?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=qi.hex8.exec(r))?{r:xi(n[1]),g:xi(n[2]),b:xi(n[3]),a:P_(n[4]),format:e?"name":"hex8"}:(n=qi.hex6.exec(r))?{r:xi(n[1]),g:xi(n[2]),b:xi(n[3]),format:e?"name":"hex"}:(n=qi.hex4.exec(r))?{r:xi(n[1]+""+n[1]),g:xi(n[2]+""+n[2]),b:xi(n[3]+""+n[3]),a:P_(n[4]+""+n[4]),format:e?"name":"hex8"}:(n=qi.hex3.exec(r))?{r:xi(n[1]+""+n[1]),g:xi(n[2]+""+n[2]),b:xi(n[3]+""+n[3]),format:e?"name":"hex"}:!1}function bw(r){var e,n;return r=r||{level:"AA",size:"small"},e=(r.level||"AA").toUpperCase(),n=(r.size||"small").toLowerCase(),e!=="AA"&&e!=="AAA"&&(e="AA"),n!=="small"&&n!=="large"&&(n="small"),{level:e,size:n}}function Bp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function Tw(r){if(Array.isArray(r))return Bp(r)}function Rx(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function Sw(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Mw(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function Di(r,e){return r.get(Rx(r,e))}function D_(r,e,n){Sw(r,e),e.set(r,n)}function L_(r,e,n){return r.set(Rx(r,e),n),n}function Ew(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,Pw(i.key),i)}}function ww(r,e,n){return e&&Ew(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function Aw(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function Rw(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Cw(r){return Tw(r)||Aw(r)||Dw(r)||Rw()}function Nw(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function Pw(r){var e=Nw(r,"string");return typeof e=="symbol"?e:e+""}function Dw(r,e){if(r){if(typeof r=="string")return Bp(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Bp(r,e):void 0}}var Lw=123,Iw=function(e){return"#".concat(Math.min(e,Math.pow(2,24)).toString(16).padStart(6,"0"))},Cx=function(e,n,i){return(e<<16)+(n<<8)+i},Uw=function(e){var n=$e(e).toRgb(),i=n.r,s=n.g,o=n.b;return Cx(i,s,o)},I_=function(e,n){return e*Lw%Math.pow(2,n)},Gs=new WeakMap,Cr=new WeakMap,Fw=function(){function r(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:6;Mw(this,r),D_(this,Gs,void 0),D_(this,Cr,void 0),L_(Cr,this,e),this.reset()}return ww(r,[{key:"reset",value:function(){L_(Gs,this,["__reserved for background__"])}},{key:"register",value:function(n){if(Di(Gs,this).length>=Math.pow(2,24-Di(Cr,this)))return null;var i=Di(Gs,this).length,s=I_(i,Di(Cr,this)),o=Iw(i+(s<<24-Di(Cr,this)));return Di(Gs,this).push(n),o}},{key:"lookup",value:function(n){if(!n)return null;var i=typeof n=="string"?Uw(n):Cx.apply(void 0,Cw(n));if(!i)return null;var s=i&Math.pow(2,24-Di(Cr,this))-1,o=i>>24-Di(Cr,this)&Math.pow(2,Di(Cr,this))-1;return I_(s,Di(Cr,this))!==o||s>=Di(Gs,this).length?null:Di(Gs,this)[s]}}])}(),Wc,en,Nx,Px,so,U_,Dx,Lx,Ix,Dm,kp,zp,vc={},Ux=[],Ow=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,td=Array.isArray;function mr(r,e){for(var n in e)r[n]=e[n];return r}function Lm(r){r&&r.parentNode&&r.parentNode.removeChild(r)}function Bw(r,e,n){var i,s,o,a={};for(o in e)o=="key"?i=e[o]:o=="ref"?s=e[o]:a[o]=e[o];if(arguments.length>2&&(a.children=arguments.length>3?Wc.call(arguments,2):n),typeof r=="function"&&r.defaultProps!=null)for(o in r.defaultProps)a[o]===void 0&&(a[o]=r.defaultProps[o]);return oc(r,a,i,s,null)}function oc(r,e,n,i,s){var o={type:r,props:e,key:n,ref:i,__k:null,__:null,__b:0,__e:null,__c:null,constructor:void 0,__v:s??++Nx,__i:-1,__u:0};return s==null&&en.vnode!=null&&en.vnode(o),o}function nd(r){return r.children}function vh(r,e){this.props=r,this.context=e}function Sa(r,e){if(e==null)return r.__?Sa(r.__,r.__i+1):null;for(var n;e<r.__k.length;e++)if((n=r.__k[e])!=null&&n.__e!=null)return n.__e;return typeof r.type=="function"?Sa(r):null}function Fx(r){var e,n;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((n=r.__k[e])!=null&&n.__e!=null){r.__e=r.__c.base=n.__e;break}return Fx(r)}}function F_(r){(!r.__d&&(r.__d=!0)&&so.push(r)&&!Ih.__r++||U_!=en.debounceRendering)&&((U_=en.debounceRendering)||Dx)(Ih)}function Ih(){for(var r,e,n,i,s,o,a,l=1;so.length;)so.length>l&&so.sort(Lx),r=so.shift(),l=so.length,r.__d&&(n=void 0,s=(i=(e=r).__v).__e,o=[],a=[],e.__P&&((n=mr({},i)).__v=i.__v+1,en.vnode&&en.vnode(n),Im(e.__P,n,i,e.__n,e.__P.namespaceURI,32&i.__u?[s]:null,o,s??Sa(i),!!(32&i.__u),a),n.__v=i.__v,n.__.__k[n.__i]=n,kx(o,n,a),n.__e!=s&&Fx(n)));Ih.__r=0}function Ox(r,e,n,i,s,o,a,l,c,u,h){var d,f,p,m,y,_,g,v=i&&i.__k||Ux,x=e.length;for(c=kw(n,e,v,c,x),d=0;d<x;d++)(p=n.__k[d])!=null&&(f=p.__i==-1?vc:v[p.__i]||vc,p.__i=d,_=Im(r,p,f,s,o,a,l,c,u,h),m=p.__e,p.ref&&f.ref!=p.ref&&(f.ref&&Um(f.ref,null,p),h.push(p.ref,p.__c||m,p)),y==null&&m!=null&&(y=m),(g=!!(4&p.__u))||f.__k===p.__k?c=Bx(p,c,r,g):typeof p.type=="function"&&_!==void 0?c=_:m&&(c=m.nextSibling),p.__u&=-7);return n.__e=y,c}function kw(r,e,n,i,s){var o,a,l,c,u,h=n.length,d=h,f=0;for(r.__k=new Array(s),o=0;o<s;o++)(a=e[o])!=null&&typeof a!="boolean"&&typeof a!="function"?(c=o+f,(a=r.__k[o]=typeof a=="string"||typeof a=="number"||typeof a=="bigint"||a.constructor==String?oc(null,a,null,null,null):td(a)?oc(nd,{children:a},null,null,null):a.constructor==null&&a.__b>0?oc(a.type,a.props,a.key,a.ref?a.ref:null,a.__v):a).__=r,a.__b=r.__b+1,l=null,(u=a.__i=zw(a,n,c,d))!=-1&&(d--,(l=n[u])&&(l.__u|=2)),l==null||l.__v==null?(u==-1&&(s>h?f--:s<h&&f++),typeof a.type!="function"&&(a.__u|=4)):u!=c&&(u==c-1?f--:u==c+1?f++:(u>c?f--:f++,a.__u|=4))):r.__k[o]=null;if(d)for(o=0;o<h;o++)(l=n[o])!=null&&(2&l.__u)==0&&(l.__e==i&&(i=Sa(l)),Gx(l,l));return i}function Bx(r,e,n,i){var s,o;if(typeof r.type=="function"){for(s=r.__k,o=0;s&&o<s.length;o++)s[o]&&(s[o].__=r,e=Bx(s[o],e,n,i));return e}r.__e!=e&&(i&&(e&&r.type&&!e.parentNode&&(e=Sa(r)),n.insertBefore(r.__e,e||null)),e=r.__e);do e=e&&e.nextSibling;while(e!=null&&e.nodeType==8);return e}function zw(r,e,n,i){var s,o,a,l=r.key,c=r.type,u=e[n],h=u!=null&&(2&u.__u)==0;if(u===null&&r.key==null||h&&l==u.key&&c==u.type)return n;if(i>(h?1:0)){for(s=n-1,o=n+1;s>=0||o<e.length;)if((u=e[a=s>=0?s--:o++])!=null&&(2&u.__u)==0&&l==u.key&&c==u.type)return a}return-1}function O_(r,e,n){e[0]=="-"?r.setProperty(e,n??""):r[e]=n==null?"":typeof n!="number"||Ow.test(e)?n:n+"px"}function cu(r,e,n,i,s){var o,a;e:if(e=="style")if(typeof n=="string")r.style.cssText=n;else{if(typeof i=="string"&&(r.style.cssText=i=""),i)for(e in i)n&&e in n||O_(r.style,e,"");if(n)for(e in n)i&&n[e]==i[e]||O_(r.style,e,n[e])}else if(e[0]=="o"&&e[1]=="n")o=e!=(e=e.replace(Ix,"$1")),a=e.toLowerCase(),e=a in r||e=="onFocusOut"||e=="onFocusIn"?a.slice(2):e.slice(2),r.l||(r.l={}),r.l[e+o]=n,n?i?n.u=i.u:(n.u=Dm,r.addEventListener(e,o?zp:kp,o)):r.removeEventListener(e,o?zp:kp,o);else{if(s=="http://www.w3.org/2000/svg")e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!="width"&&e!="height"&&e!="href"&&e!="list"&&e!="form"&&e!="tabIndex"&&e!="download"&&e!="rowSpan"&&e!="colSpan"&&e!="role"&&e!="popover"&&e in r)try{r[e]=n??"";break e}catch{}typeof n=="function"||(n==null||n===!1&&e[4]!="-"?r.removeAttribute(e):r.setAttribute(e,e=="popover"&&n==1?"":n))}}function B_(r){return function(e){if(this.l){var n=this.l[e.type+r];if(e.t==null)e.t=Dm++;else if(e.t<n.u)return;return n(en.event?en.event(e):e)}}}function Im(r,e,n,i,s,o,a,l,c,u){var h,d,f,p,m,y,_,g,v,x,b,T,S,M,A,E,w,N=e.type;if(e.constructor!=null)return null;128&n.__u&&(c=!!(32&n.__u),o=[l=e.__e=n.__e]),(h=en.__b)&&h(e);e:if(typeof N=="function")try{if(g=e.props,v="prototype"in N&&N.prototype.render,x=(h=N.contextType)&&i[h.__c],b=h?x?x.props.value:h.__:i,n.__c?_=(d=e.__c=n.__c).__=d.__E:(v?e.__c=d=new N(g,b):(e.__c=d=new vh(g,b),d.constructor=N,d.render=Vw),x&&x.sub(d),d.props=g,d.state||(d.state={}),d.context=b,d.__n=i,f=d.__d=!0,d.__h=[],d._sb=[]),v&&d.__s==null&&(d.__s=d.state),v&&N.getDerivedStateFromProps!=null&&(d.__s==d.state&&(d.__s=mr({},d.__s)),mr(d.__s,N.getDerivedStateFromProps(g,d.__s))),p=d.props,m=d.state,d.__v=e,f)v&&N.getDerivedStateFromProps==null&&d.componentWillMount!=null&&d.componentWillMount(),v&&d.componentDidMount!=null&&d.__h.push(d.componentDidMount);else{if(v&&N.getDerivedStateFromProps==null&&g!==p&&d.componentWillReceiveProps!=null&&d.componentWillReceiveProps(g,b),!d.__e&&d.shouldComponentUpdate!=null&&d.shouldComponentUpdate(g,d.__s,b)===!1||e.__v==n.__v){for(e.__v!=n.__v&&(d.props=g,d.state=d.__s,d.__d=!1),e.__e=n.__e,e.__k=n.__k,e.__k.some(function(D){D&&(D.__=e)}),T=0;T<d._sb.length;T++)d.__h.push(d._sb[T]);d._sb=[],d.__h.length&&a.push(d);break e}d.componentWillUpdate!=null&&d.componentWillUpdate(g,d.__s,b),v&&d.componentDidUpdate!=null&&d.__h.push(function(){d.componentDidUpdate(p,m,y)})}if(d.context=b,d.props=g,d.__P=r,d.__e=!1,S=en.__r,M=0,v){for(d.state=d.__s,d.__d=!1,S&&S(e),h=d.render(d.props,d.state,d.context),A=0;A<d._sb.length;A++)d.__h.push(d._sb[A]);d._sb=[]}else do d.__d=!1,S&&S(e),h=d.render(d.props,d.state,d.context),d.state=d.__s;while(d.__d&&++M<25);d.state=d.__s,d.getChildContext!=null&&(i=mr(mr({},i),d.getChildContext())),v&&!f&&d.getSnapshotBeforeUpdate!=null&&(y=d.getSnapshotBeforeUpdate(p,m)),E=h,h!=null&&h.type===nd&&h.key==null&&(E=zx(h.props.children)),l=Ox(r,td(E)?E:[E],e,n,i,s,o,a,l,c,u),d.base=e.__e,e.__u&=-161,d.__h.length&&a.push(d),_&&(d.__E=d.__=null)}catch(D){if(e.__v=null,c||o!=null)if(D.then){for(e.__u|=c?160:128;l&&l.nodeType==8&&l.nextSibling;)l=l.nextSibling;o[o.indexOf(l)]=null,e.__e=l}else{for(w=o.length;w--;)Lm(o[w]);Gp(e)}else e.__e=n.__e,e.__k=n.__k,D.then||Gp(e);en.__e(D,e,n)}else o==null&&e.__v==n.__v?(e.__k=n.__k,e.__e=n.__e):l=e.__e=Gw(n.__e,e,n,i,s,o,a,c,u);return(h=en.diffed)&&h(e),128&e.__u?void 0:l}function Gp(r){r&&r.__c&&(r.__c.__e=!0),r&&r.__k&&r.__k.forEach(Gp)}function kx(r,e,n){for(var i=0;i<n.length;i++)Um(n[i],n[++i],n[++i]);en.__c&&en.__c(e,r),r.some(function(s){try{r=s.__h,s.__h=[],r.some(function(o){o.call(s)})}catch(o){en.__e(o,s.__v)}})}function zx(r){return typeof r!="object"||r==null||r.__b&&r.__b>0?r:td(r)?r.map(zx):mr({},r)}function Gw(r,e,n,i,s,o,a,l,c){var u,h,d,f,p,m,y,_=n.props,g=e.props,v=e.type;if(v=="svg"?s="http://www.w3.org/2000/svg":v=="math"?s="http://www.w3.org/1998/Math/MathML":s||(s="http://www.w3.org/1999/xhtml"),o!=null){for(u=0;u<o.length;u++)if((p=o[u])&&"setAttribute"in p==!!v&&(v?p.localName==v:p.nodeType==3)){r=p,o[u]=null;break}}if(r==null){if(v==null)return document.createTextNode(g);r=document.createElementNS(s,v,g.is&&g),l&&(en.__m&&en.__m(e,o),l=!1),o=null}if(v==null)_===g||l&&r.data==g||(r.data=g);else{if(o=o&&Wc.call(r.childNodes),_=n.props||vc,!l&&o!=null)for(_={},u=0;u<r.attributes.length;u++)_[(p=r.attributes[u]).name]=p.value;for(u in _)if(p=_[u],u!="children"){if(u=="dangerouslySetInnerHTML")d=p;else if(!(u in g)){if(u=="value"&&"defaultValue"in g||u=="checked"&&"defaultChecked"in g)continue;cu(r,u,null,p,s)}}for(u in g)p=g[u],u=="children"?f=p:u=="dangerouslySetInnerHTML"?h=p:u=="value"?m=p:u=="checked"?y=p:l&&typeof p!="function"||_[u]===p||cu(r,u,p,_[u],s);if(h)l||d&&(h.__html==d.__html||h.__html==r.innerHTML)||(r.innerHTML=h.__html),e.__k=[];else if(d&&(r.innerHTML=""),Ox(e.type=="template"?r.content:r,td(f)?f:[f],e,n,i,v=="foreignObject"?"http://www.w3.org/1999/xhtml":s,o,a,o?o[0]:n.__k&&Sa(n,0),l,c),o!=null)for(u=o.length;u--;)Lm(o[u]);l||(u="value",v=="progress"&&m==null?r.removeAttribute("value"):m!=null&&(m!==r[u]||v=="progress"&&!m||v=="option"&&m!=_[u])&&cu(r,u,m,_[u],s),u="checked",y!=null&&y!=r[u]&&cu(r,u,y,_[u],s))}return r}function Um(r,e,n){try{if(typeof r=="function"){var i=typeof r.__u=="function";i&&r.__u(),i&&e==null||(r.__u=r(e))}else r.current=e}catch(s){en.__e(s,n)}}function Gx(r,e,n){var i,s;if(en.unmount&&en.unmount(r),(i=r.ref)&&(i.current&&i.current!=r.__e||Um(i,null,e)),(i=r.__c)!=null){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(o){en.__e(o,e)}i.base=i.__P=null}if(i=r.__k)for(s=0;s<i.length;s++)i[s]&&Gx(i[s],e,n||typeof r.type!="function");n||Lm(r.__e),r.__c=r.__=r.__e=void 0}function Vw(r,e,n){return this.constructor(r,n)}function Hw(r,e,n){var i,s,o,a;e==document&&(e=document.documentElement),en.__&&en.__(r,e),s=(i=!1)?null:e.__k,o=[],a=[],Im(e,r=e.__k=Bw(nd,null,[r]),s||vc,vc,e.namespaceURI,s?null:e.firstChild?Wc.call(e.childNodes):null,o,s?s.__e:e.firstChild,i,a),kx(o,r,a)}function Vx(r,e,n){var i,s,o,a,l=mr({},r.props);for(o in r.type&&r.type.defaultProps&&(a=r.type.defaultProps),e)o=="key"?i=e[o]:o=="ref"?s=e[o]:l[o]=e[o]===void 0&&a!=null?a[o]:e[o];return arguments.length>2&&(l.children=arguments.length>3?Wc.call(arguments,2):n),oc(r.type,l,i||r.key,s||r.ref,null)}Wc=Ux.slice,en={__e:function(r,e,n,i){for(var s,o,a;e=e.__;)if((s=e.__c)&&!s.__)try{if((o=s.constructor)&&o.getDerivedStateFromError!=null&&(s.setState(o.getDerivedStateFromError(r)),a=s.__d),s.componentDidCatch!=null&&(s.componentDidCatch(r,i||{}),a=s.__d),a)return s.__E=s}catch(l){r=l}throw r}},Nx=0,Px=function(r){return r!=null&&r.constructor==null},vh.prototype.setState=function(r,e){var n;n=this.__s!=null&&this.__s!=this.state?this.__s:this.__s=mr({},this.state),typeof r=="function"&&(r=r(mr({},n),this.props)),r&&mr(n,r),r!=null&&this.__v&&(e&&this._sb.push(e),F_(this))},vh.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),F_(this))},vh.prototype.render=nd,so=[],Dx=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,Lx=function(r,e){return r.__v.__b-e.__v.__b},Ih.__r=0,Ix=/(PointerCapture)$|Capture$/i,Dm=0,kp=B_(!1),zp=B_(!0);function k_(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function Ww(r){if(Array.isArray(r))return r}function $w(r,e,n){return(e=Zw(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function jw(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function qw(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function z_(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function Xw(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?z_(Object(n),!0).forEach(function(i){$w(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):z_(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function Yw(r,e){return Ww(r)||jw(r,e)||Qw(r,e)||qw()}function Kw(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function Zw(r){var e=Kw(r,"string");return typeof e=="symbol"?e:e+""}function Uh(r){"@babel/helpers - typeof";return Uh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Uh(r)}function Qw(r,e){if(r){if(typeof r=="string")return k_(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?k_(r,e):void 0}}var Vp=function(e){if(Uh(e)!=="object")return e;var n=Vx(e);if(n.props){var i;n.props=Xw({},n.props),n!=null&&(i=n.props)!==null&&i!==void 0&&i.children&&(n.props.children=Array.isArray(n.props.children)?n.props.children.map(Vp):Vp(n.props.children))}return n},Jw=function(e){return Px(Vx(e))},eA=function(e,n){delete n.__k,Hw(Vp(e),n)};function tA(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var nA=`.float-tooltip-kap {
  position: absolute;
  width: max-content; /* prevent shrinking near right edge */
  max-width: max(50%, 150px);
  padding: 3px 5px;
  border-radius: 3px;
  font: 12px sans-serif;
  color: #eee;
  background: rgba(0,0,0,0.6);
  pointer-events: none;
}
`;tA(nA);var Hx=ol({props:{content:{default:!1},offsetX:{triggerUpdate:!1},offsetY:{triggerUpdate:!1}},init:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=i.style,o=s===void 0?{}:s,a=!!e&&Uh(e)==="object"&&!!e.node&&typeof e.node=="function",l=Np(a?e.node():e);l.style("position")==="static"&&l.style("position","relative"),n.tooltipEl=l.append("div").attr("class","float-tooltip-kap"),Object.entries(o).forEach(function(u){var h=Yw(u,2),d=h[0],f=h[1];return n.tooltipEl.style(d,f)}),n.tooltipEl.style("left","-10000px").style("display","none");var c="tooltip-".concat(Math.round(Math.random()*1e12));n.mouseInside=!1,l.on("mousemove.".concat(c),function(u){n.mouseInside=!0;var h=BM(u),d=l.node(),f=d.offsetWidth,p=d.offsetHeight,m=[n.offsetX===null||n.offsetX===void 0?"-".concat(h[0]/f*100,"%"):typeof n.offsetX=="number"?"calc(-50% + ".concat(n.offsetX,"px)"):n.offsetX,n.offsetY===null||n.offsetY===void 0?p>130&&p-h[1]<100?"calc(-100% - 6px)":"21px":typeof n.offsetY=="number"?n.offsetY<0?"calc(-100% - ".concat(Math.abs(n.offsetY),"px)"):"".concat(n.offsetY,"px"):n.offsetY];n.tooltipEl.style("left",h[0]+"px").style("top",h[1]+"px").style("transform","translate(".concat(m.join(","),")")),n.content&&n.tooltipEl.style("display","inline")}),l.on("mouseover.".concat(c),function(){n.mouseInside=!0,n.content&&n.tooltipEl.style("display","inline")}),l.on("mouseout.".concat(c),function(){n.mouseInside=!1,n.tooltipEl.style("display","none")})},update:function(e){e.tooltipEl.style("display",e.content&&e.mouseInside?"inline":"none"),e.content?e.content instanceof HTMLElement?(e.tooltipEl.text(""),e.tooltipEl.append(function(){return e.content})):typeof e.content=="string"?e.tooltipEl.html(e.content):Jw(e.content)?(e.tooltipEl.text(""),eA(e.content,e.tooltipEl.node())):(e.tooltipEl.style("display","none"),console.warn("Tooltip content is invalid, skipping.",e.content,e.content.toString())):e.tooltipEl.text("")}});function Wx(r,e,n){var i,s=1;r==null&&(r=0),e==null&&(e=0),n==null&&(n=0);function o(){var a,l=i.length,c,u=0,h=0,d=0;for(a=0;a<l;++a)c=i[a],u+=c.x||0,h+=c.y||0,d+=c.z||0;for(u=(u/l-r)*s,h=(h/l-e)*s,d=(d/l-n)*s,a=0;a<l;++a)c=i[a],u&&(c.x-=u),h&&(c.y-=h),d&&(c.z-=d)}return o.initialize=function(a){i=a},o.x=function(a){return arguments.length?(r=+a,o):r},o.y=function(a){return arguments.length?(e=+a,o):e},o.z=function(a){return arguments.length?(n=+a,o):n},o.strength=function(a){return arguments.length?(s=+a,o):s},o}function iA(r){const e=+this._x.call(null,r);return $x(this.cover(e),e,r)}function $x(r,e,n){if(isNaN(e))return r;var i,s=r._root,o={data:n},a=r._x0,l=r._x1,c,u,h,d,f;if(!s)return r._root=o,r;for(;s.length;)if((h=e>=(c=(a+l)/2))?a=c:l=c,i=s,!(s=s[d=+h]))return i[d]=o,r;if(u=+r._x.call(null,s.data),e===u)return o.next=s,i?i[d]=o:r._root=o,r;do i=i?i[d]=new Array(2):r._root=new Array(2),(h=e>=(c=(a+l)/2))?a=c:l=c;while((d=+h)==(f=+(u>=c)));return i[f]=s,i[d]=o,r}function rA(r){Array.isArray(r)||(r=Array.from(r));const e=r.length,n=new Float64Array(e);let i=1/0,s=-1/0;for(let o=0,a;o<e;++o)isNaN(a=+this._x.call(null,r[o]))||(n[o]=a,a<i&&(i=a),a>s&&(s=a));if(i>s)return this;this.cover(i).cover(s);for(let o=0;o<e;++o)$x(this,n[o],r[o]);return this}function sA(r){if(isNaN(r=+r))return this;var e=this._x0,n=this._x1;if(isNaN(e))n=(e=Math.floor(r))+1;else{for(var i=n-e||1,s=this._root,o,a;e>r||r>=n;)switch(a=+(r<e),o=new Array(2),o[a]=s,s=o,i*=2,a){case 0:n=e+i;break;case 1:e=n-i;break}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._x1=n,this}function oA(){var r=[];return this.visit(function(e){if(!e.length)do r.push(e.data);while(e=e.next)}),r}function aA(r){return arguments.length?this.cover(+r[0][0]).cover(+r[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]}function Qr(r,e,n){this.node=r,this.x0=e,this.x1=n}function lA(r,e){var n,i=this._x0,s,o,a=this._x1,l=[],c=this._root,u,h;for(c&&l.push(new Qr(c,i,a)),e==null?e=1/0:(i=r-e,a=r+e);u=l.pop();)if(!(!(c=u.node)||(s=u.x0)>a||(o=u.x1)<i))if(c.length){var d=(s+o)/2;l.push(new Qr(c[1],d,o),new Qr(c[0],s,d)),(h=+(r>=d))&&(u=l[l.length-1],l[l.length-1]=l[l.length-1-h],l[l.length-1-h]=u)}else{var f=Math.abs(r-+this._x.call(null,c.data));f<e&&(e=f,i=r-f,a=r+f,n=c.data)}return n}function cA(r){if(isNaN(c=+this._x.call(null,r)))return this;var e,n=this._root,i,s,o,a=this._x0,l=this._x1,c,u,h,d,f;if(!n)return this;if(n.length)for(;;){if((h=c>=(u=(a+l)/2))?a=u:l=u,e=n,!(n=n[d=+h]))return this;if(!n.length)break;e[d+1&1]&&(i=e,f=d)}for(;n.data!==r;)if(s=n,!(n=n.next))return this;return(o=n.next)&&delete n.next,s?(o?s.next=o:delete s.next,this):e?(o?e[d]=o:delete e[d],(n=e[0]||e[1])&&n===(e[1]||e[0])&&!n.length&&(i?i[f]=n:this._root=n),this):(this._root=o,this)}function uA(r){for(var e=0,n=r.length;e<n;++e)this.remove(r[e]);return this}function hA(){return this._root}function dA(){var r=0;return this.visit(function(e){if(!e.length)do++r;while(e=e.next)}),r}function fA(r){var e=[],n,i=this._root,s,o,a;for(i&&e.push(new Qr(i,this._x0,this._x1));n=e.pop();)if(!r(i=n.node,o=n.x0,a=n.x1)&&i.length){var l=(o+a)/2;(s=i[1])&&e.push(new Qr(s,l,a)),(s=i[0])&&e.push(new Qr(s,o,l))}return this}function pA(r){var e=[],n=[],i;for(this._root&&e.push(new Qr(this._root,this._x0,this._x1));i=e.pop();){var s=i.node;if(s.length){var o,a=i.x0,l=i.x1,c=(a+l)/2;(o=s[0])&&e.push(new Qr(o,a,c)),(o=s[1])&&e.push(new Qr(o,c,l))}n.push(i)}for(;i=n.pop();)r(i.node,i.x0,i.x1);return this}function mA(r){return r[0]}function gA(r){return arguments.length?(this._x=r,this):this._x}function jx(r,e){var n=new Fm(e??mA,NaN,NaN);return r==null?n:n.addAll(r)}function Fm(r,e,n){this._x=r,this._x0=e,this._x1=n,this._root=void 0}function G_(r){for(var e={data:r.data},n=e;r=r.next;)n=n.next={data:r.data};return e}var fi=jx.prototype=Fm.prototype;fi.copy=function(){var r=new Fm(this._x,this._x0,this._x1),e=this._root,n,i;if(!e)return r;if(!e.length)return r._root=G_(e),r;for(n=[{source:e,target:r._root=new Array(2)}];e=n.pop();)for(var s=0;s<2;++s)(i=e.source[s])&&(i.length?n.push({source:i,target:e.target[s]=new Array(2)}):e.target[s]=G_(i));return r};fi.add=iA;fi.addAll=rA;fi.cover=sA;fi.data=oA;fi.extent=aA;fi.find=lA;fi.remove=cA;fi.removeAll=uA;fi.root=hA;fi.size=dA;fi.visit=fA;fi.visitAfter=pA;fi.x=gA;function _A(r){const e=+this._x.call(null,r),n=+this._y.call(null,r),i=+this._z.call(null,r);return qx(this.cover(e,n,i),e,n,i,r)}function qx(r,e,n,i,s){if(isNaN(e)||isNaN(n)||isNaN(i))return r;var o,a=r._root,l={data:s},c=r._x0,u=r._y0,h=r._z0,d=r._x1,f=r._y1,p=r._z1,m,y,_,g,v,x,b,T,S,M,A;if(!a)return r._root=l,r;for(;a.length;)if((b=e>=(m=(c+d)/2))?c=m:d=m,(T=n>=(y=(u+f)/2))?u=y:f=y,(S=i>=(_=(h+p)/2))?h=_:p=_,o=a,!(a=a[M=S<<2|T<<1|b]))return o[M]=l,r;if(g=+r._x.call(null,a.data),v=+r._y.call(null,a.data),x=+r._z.call(null,a.data),e===g&&n===v&&i===x)return l.next=a,o?o[M]=l:r._root=l,r;do o=o?o[M]=new Array(8):r._root=new Array(8),(b=e>=(m=(c+d)/2))?c=m:d=m,(T=n>=(y=(u+f)/2))?u=y:f=y,(S=i>=(_=(h+p)/2))?h=_:p=_;while((M=S<<2|T<<1|b)===(A=(x>=_)<<2|(v>=y)<<1|g>=m));return o[A]=a,o[M]=l,r}function yA(r){Array.isArray(r)||(r=Array.from(r));const e=r.length,n=new Float64Array(e),i=new Float64Array(e),s=new Float64Array(e);let o=1/0,a=1/0,l=1/0,c=-1/0,u=-1/0,h=-1/0;for(let d=0,f,p,m,y;d<e;++d)isNaN(p=+this._x.call(null,f=r[d]))||isNaN(m=+this._y.call(null,f))||isNaN(y=+this._z.call(null,f))||(n[d]=p,i[d]=m,s[d]=y,p<o&&(o=p),p>c&&(c=p),m<a&&(a=m),m>u&&(u=m),y<l&&(l=y),y>h&&(h=y));if(o>c||a>u||l>h)return this;this.cover(o,a,l).cover(c,u,h);for(let d=0;d<e;++d)qx(this,n[d],i[d],s[d],r[d]);return this}function vA(r,e,n){if(isNaN(r=+r)||isNaN(e=+e)||isNaN(n=+n))return this;var i=this._x0,s=this._y0,o=this._z0,a=this._x1,l=this._y1,c=this._z1;if(isNaN(i))a=(i=Math.floor(r))+1,l=(s=Math.floor(e))+1,c=(o=Math.floor(n))+1;else{for(var u=a-i||1,h=this._root,d,f;i>r||r>=a||s>e||e>=l||o>n||n>=c;)switch(f=(n<o)<<2|(e<s)<<1|r<i,d=new Array(8),d[f]=h,h=d,u*=2,f){case 0:a=i+u,l=s+u,c=o+u;break;case 1:i=a-u,l=s+u,c=o+u;break;case 2:a=i+u,s=l-u,c=o+u;break;case 3:i=a-u,s=l-u,c=o+u;break;case 4:a=i+u,l=s+u,o=c-u;break;case 5:i=a-u,l=s+u,o=c-u;break;case 6:a=i+u,s=l-u,o=c-u;break;case 7:i=a-u,s=l-u,o=c-u;break}this._root&&this._root.length&&(this._root=h)}return this._x0=i,this._y0=s,this._z0=o,this._x1=a,this._y1=l,this._z1=c,this}function xA(){var r=[];return this.visit(function(e){if(!e.length)do r.push(e.data);while(e=e.next)}),r}function bA(r){return arguments.length?this.cover(+r[0][0],+r[0][1],+r[0][2]).cover(+r[1][0],+r[1][1],+r[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]}function Vt(r,e,n,i,s,o,a){this.node=r,this.x0=e,this.y0=n,this.z0=i,this.x1=s,this.y1=o,this.z1=a}function TA(r,e,n,i){var s,o=this._x0,a=this._y0,l=this._z0,c,u,h,d,f,p,m=this._x1,y=this._y1,_=this._z1,g=[],v=this._root,x,b;for(v&&g.push(new Vt(v,o,a,l,m,y,_)),i==null?i=1/0:(o=r-i,a=e-i,l=n-i,m=r+i,y=e+i,_=n+i,i*=i);x=g.pop();)if(!(!(v=x.node)||(c=x.x0)>m||(u=x.y0)>y||(h=x.z0)>_||(d=x.x1)<o||(f=x.y1)<a||(p=x.z1)<l))if(v.length){var T=(c+d)/2,S=(u+f)/2,M=(h+p)/2;g.push(new Vt(v[7],T,S,M,d,f,p),new Vt(v[6],c,S,M,T,f,p),new Vt(v[5],T,u,M,d,S,p),new Vt(v[4],c,u,M,T,S,p),new Vt(v[3],T,S,h,d,f,M),new Vt(v[2],c,S,h,T,f,M),new Vt(v[1],T,u,h,d,S,M),new Vt(v[0],c,u,h,T,S,M)),(b=(n>=M)<<2|(e>=S)<<1|r>=T)&&(x=g[g.length-1],g[g.length-1]=g[g.length-1-b],g[g.length-1-b]=x)}else{var A=r-+this._x.call(null,v.data),E=e-+this._y.call(null,v.data),w=n-+this._z.call(null,v.data),N=A*A+E*E+w*w;if(N<i){var D=Math.sqrt(i=N);o=r-D,a=e-D,l=n-D,m=r+D,y=e+D,_=n+D,s=v.data}}return s}const SA=(r,e,n,i,s,o)=>Math.sqrt((r-i)**2+(e-s)**2+(n-o)**2);function MA(r,e,n,i){const s=[],o=r-i,a=e-i,l=n-i,c=r+i,u=e+i,h=n+i;return this.visit((d,f,p,m,y,_,g)=>{if(!d.length)do{const v=d.data;SA(r,e,n,this._x(v),this._y(v),this._z(v))<=i&&s.push(v)}while(d=d.next);return f>c||p>u||m>h||y<o||_<a||g<l}),s}function EA(r){if(isNaN(f=+this._x.call(null,r))||isNaN(p=+this._y.call(null,r))||isNaN(m=+this._z.call(null,r)))return this;var e,n=this._root,i,s,o,a=this._x0,l=this._y0,c=this._z0,u=this._x1,h=this._y1,d=this._z1,f,p,m,y,_,g,v,x,b,T,S;if(!n)return this;if(n.length)for(;;){if((v=f>=(y=(a+u)/2))?a=y:u=y,(x=p>=(_=(l+h)/2))?l=_:h=_,(b=m>=(g=(c+d)/2))?c=g:d=g,e=n,!(n=n[T=b<<2|x<<1|v]))return this;if(!n.length)break;(e[T+1&7]||e[T+2&7]||e[T+3&7]||e[T+4&7]||e[T+5&7]||e[T+6&7]||e[T+7&7])&&(i=e,S=T)}for(;n.data!==r;)if(s=n,!(n=n.next))return this;return(o=n.next)&&delete n.next,s?(o?s.next=o:delete s.next,this):e?(o?e[T]=o:delete e[T],(n=e[0]||e[1]||e[2]||e[3]||e[4]||e[5]||e[6]||e[7])&&n===(e[7]||e[6]||e[5]||e[4]||e[3]||e[2]||e[1]||e[0])&&!n.length&&(i?i[S]=n:this._root=n),this):(this._root=o,this)}function wA(r){for(var e=0,n=r.length;e<n;++e)this.remove(r[e]);return this}function AA(){return this._root}function RA(){var r=0;return this.visit(function(e){if(!e.length)do++r;while(e=e.next)}),r}function CA(r){var e=[],n,i=this._root,s,o,a,l,c,u,h;for(i&&e.push(new Vt(i,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));n=e.pop();)if(!r(i=n.node,o=n.x0,a=n.y0,l=n.z0,c=n.x1,u=n.y1,h=n.z1)&&i.length){var d=(o+c)/2,f=(a+u)/2,p=(l+h)/2;(s=i[7])&&e.push(new Vt(s,d,f,p,c,u,h)),(s=i[6])&&e.push(new Vt(s,o,f,p,d,u,h)),(s=i[5])&&e.push(new Vt(s,d,a,p,c,f,h)),(s=i[4])&&e.push(new Vt(s,o,a,p,d,f,h)),(s=i[3])&&e.push(new Vt(s,d,f,l,c,u,p)),(s=i[2])&&e.push(new Vt(s,o,f,l,d,u,p)),(s=i[1])&&e.push(new Vt(s,d,a,l,c,f,p)),(s=i[0])&&e.push(new Vt(s,o,a,l,d,f,p))}return this}function NA(r){var e=[],n=[],i;for(this._root&&e.push(new Vt(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));i=e.pop();){var s=i.node;if(s.length){var o,a=i.x0,l=i.y0,c=i.z0,u=i.x1,h=i.y1,d=i.z1,f=(a+u)/2,p=(l+h)/2,m=(c+d)/2;(o=s[0])&&e.push(new Vt(o,a,l,c,f,p,m)),(o=s[1])&&e.push(new Vt(o,f,l,c,u,p,m)),(o=s[2])&&e.push(new Vt(o,a,p,c,f,h,m)),(o=s[3])&&e.push(new Vt(o,f,p,c,u,h,m)),(o=s[4])&&e.push(new Vt(o,a,l,m,f,p,d)),(o=s[5])&&e.push(new Vt(o,f,l,m,u,p,d)),(o=s[6])&&e.push(new Vt(o,a,p,m,f,h,d)),(o=s[7])&&e.push(new Vt(o,f,p,m,u,h,d))}n.push(i)}for(;i=n.pop();)r(i.node,i.x0,i.y0,i.z0,i.x1,i.y1,i.z1);return this}function PA(r){return r[0]}function DA(r){return arguments.length?(this._x=r,this):this._x}function LA(r){return r[1]}function IA(r){return arguments.length?(this._y=r,this):this._y}function UA(r){return r[2]}function FA(r){return arguments.length?(this._z=r,this):this._z}function Xx(r,e,n,i){var s=new Om(e??PA,n??LA,i??UA,NaN,NaN,NaN,NaN,NaN,NaN);return r==null?s:s.addAll(r)}function Om(r,e,n,i,s,o,a,l,c){this._x=r,this._y=e,this._z=n,this._x0=i,this._y0=s,this._z0=o,this._x1=a,this._y1=l,this._z1=c,this._root=void 0}function V_(r){for(var e={data:r.data},n=e;r=r.next;)n=n.next={data:r.data};return e}var Ln=Xx.prototype=Om.prototype;Ln.copy=function(){var r=new Om(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),e=this._root,n,i;if(!e)return r;if(!e.length)return r._root=V_(e),r;for(n=[{source:e,target:r._root=new Array(8)}];e=n.pop();)for(var s=0;s<8;++s)(i=e.source[s])&&(i.length?n.push({source:i,target:e.target[s]=new Array(8)}):e.target[s]=V_(i));return r};Ln.add=_A;Ln.addAll=yA;Ln.cover=vA;Ln.data=xA;Ln.extent=bA;Ln.find=TA;Ln.findAllWithinRadius=MA;Ln.remove=EA;Ln.removeAll=wA;Ln.root=AA;Ln.size=RA;Ln.visit=CA;Ln.visitAfter=NA;Ln.x=DA;Ln.y=IA;Ln.z=FA;function qr(r){return function(){return r}}function zr(r){return(r()-.5)*1e-6}function OA(r){return r.index}function H_(r,e){var n=r.get(e);if(!n)throw new Error("node not found: "+e);return n}function Yx(r){var e=OA,n=f,i,s=qr(30),o,a,l,c,u,h,d=1;r==null&&(r=[]);function f(g){return 1/Math.min(c[g.source.index],c[g.target.index])}function p(g){for(var v=0,x=r.length;v<d;++v)for(var b=0,T,S,M,A=0,E=0,w=0,N,D;b<x;++b)T=r[b],S=T.source,M=T.target,A=M.x+M.vx-S.x-S.vx||zr(h),l>1&&(E=M.y+M.vy-S.y-S.vy||zr(h)),l>2&&(w=M.z+M.vz-S.z-S.vz||zr(h)),N=Math.sqrt(A*A+E*E+w*w),N=(N-o[b])/N*g*i[b],A*=N,E*=N,w*=N,M.vx-=A*(D=u[b]),l>1&&(M.vy-=E*D),l>2&&(M.vz-=w*D),S.vx+=A*(D=1-D),l>1&&(S.vy+=E*D),l>2&&(S.vz+=w*D)}function m(){if(a){var g,v=a.length,x=r.length,b=new Map(a.map((S,M)=>[e(S,M,a),S])),T;for(g=0,c=new Array(v);g<x;++g)T=r[g],T.index=g,typeof T.source!="object"&&(T.source=H_(b,T.source)),typeof T.target!="object"&&(T.target=H_(b,T.target)),c[T.source.index]=(c[T.source.index]||0)+1,c[T.target.index]=(c[T.target.index]||0)+1;for(g=0,u=new Array(x);g<x;++g)T=r[g],u[g]=c[T.source.index]/(c[T.source.index]+c[T.target.index]);i=new Array(x),y(),o=new Array(x),_()}}function y(){if(a)for(var g=0,v=r.length;g<v;++g)i[g]=+n(r[g],g,r)}function _(){if(a)for(var g=0,v=r.length;g<v;++g)o[g]=+s(r[g],g,r)}return p.initialize=function(g,...v){a=g,h=v.find(x=>typeof x=="function")||Math.random,l=v.find(x=>[1,2,3].includes(x))||2,m()},p.links=function(g){return arguments.length?(r=g,m(),p):r},p.id=function(g){return arguments.length?(e=g,p):e},p.iterations=function(g){return arguments.length?(d=+g,p):d},p.strength=function(g){return arguments.length?(n=typeof g=="function"?g:qr(+g),y(),p):n},p.distance=function(g){return arguments.length?(s=typeof g=="function"?g:qr(+g),_(),p):s},p}const BA=1664525,kA=1013904223,W_=4294967296;function zA(){let r=1;return()=>(r=(BA*r+kA)%W_)/W_}var $_=3;function Fd(r){return r.x}function j_(r){return r.y}function GA(r){return r.z}var VA=10,HA=Math.PI*(3-Math.sqrt(5)),WA=Math.PI*20/(9+Math.sqrt(221));function Kx(r,e){e=e||2;var n=Math.min($_,Math.max(1,Math.round(e))),i,s=1,o=.001,a=1-Math.pow(o,1/300),l=0,c=.6,u=new Map,h=GM(p),d=VM("tick","end"),f=zA();r==null&&(r=[]);function p(){m(),d.call("tick",i),s<o&&(h.stop(),d.call("end",i))}function m(g){var v,x=r.length,b;g===void 0&&(g=1);for(var T=0;T<g;++T)for(s+=(l-s)*a,u.forEach(function(S){S(s)}),v=0;v<x;++v)b=r[v],b.fx==null?b.x+=b.vx*=c:(b.x=b.fx,b.vx=0),n>1&&(b.fy==null?b.y+=b.vy*=c:(b.y=b.fy,b.vy=0)),n>2&&(b.fz==null?b.z+=b.vz*=c:(b.z=b.fz,b.vz=0));return i}function y(){for(var g=0,v=r.length,x;g<v;++g){if(x=r[g],x.index=g,x.fx!=null&&(x.x=x.fx),x.fy!=null&&(x.y=x.fy),x.fz!=null&&(x.z=x.fz),isNaN(x.x)||n>1&&isNaN(x.y)||n>2&&isNaN(x.z)){var b=VA*(n>2?Math.cbrt(.5+g):n>1?Math.sqrt(.5+g):g),T=g*HA,S=g*WA;n===1?x.x=b:n===2?(x.x=b*Math.cos(T),x.y=b*Math.sin(T)):(x.x=b*Math.sin(T)*Math.cos(S),x.y=b*Math.cos(T),x.z=b*Math.sin(T)*Math.sin(S))}(isNaN(x.vx)||n>1&&isNaN(x.vy)||n>2&&isNaN(x.vz))&&(x.vx=0,n>1&&(x.vy=0),n>2&&(x.vz=0))}}function _(g){return g.initialize&&g.initialize(r,f,n),g}return y(),i={tick:m,restart:function(){return h.restart(p),i},stop:function(){return h.stop(),i},numDimensions:function(g){return arguments.length?(n=Math.min($_,Math.max(1,Math.round(g))),u.forEach(_),i):n},nodes:function(g){return arguments.length?(r=g,y(),u.forEach(_),i):r},alpha:function(g){return arguments.length?(s=+g,i):s},alphaMin:function(g){return arguments.length?(o=+g,i):o},alphaDecay:function(g){return arguments.length?(a=+g,i):+a},alphaTarget:function(g){return arguments.length?(l=+g,i):l},velocityDecay:function(g){return arguments.length?(c=1-g,i):1-c},randomSource:function(g){return arguments.length?(f=g,u.forEach(_),i):f},force:function(g,v){return arguments.length>1?(v==null?u.delete(g):u.set(g,_(v)),i):u.get(g)},find:function(){var g=Array.prototype.slice.call(arguments),v=g.shift()||0,x=(n>1?g.shift():null)||0,b=(n>2?g.shift():null)||0,T=g.shift()||1/0,S=0,M=r.length,A,E,w,N,D,F;for(T*=T,S=0;S<M;++S)D=r[S],A=v-D.x,E=x-(D.y||0),w=b-(D.z||0),N=A*A+E*E+w*w,N<T&&(F=D,T=N);return F},on:function(g,v){return arguments.length>1?(d.on(g,v),i):d.on(g)}}}function Zx(){var r,e,n,i,s,o=qr(-30),a,l=1,c=1/0,u=.81;function h(m){var y,_=r.length,g=(e===1?jx(r,Fd):e===2?HM(r,Fd,j_):e===3?Xx(r,Fd,j_,GA):null).visitAfter(f);for(s=m,y=0;y<_;++y)n=r[y],g.visit(p)}function d(){if(r){var m,y=r.length,_;for(a=new Array(y),m=0;m<y;++m)_=r[m],a[_.index]=+o(_,m,r)}}function f(m){var y=0,_,g,v=0,x,b,T,S,M=m.length;if(M){for(x=b=T=S=0;S<M;++S)(_=m[S])&&(g=Math.abs(_.value))&&(y+=_.value,v+=g,x+=g*(_.x||0),b+=g*(_.y||0),T+=g*(_.z||0));y*=Math.sqrt(4/M),m.x=x/v,e>1&&(m.y=b/v),e>2&&(m.z=T/v)}else{_=m,_.x=_.data.x,e>1&&(_.y=_.data.y),e>2&&(_.z=_.data.z);do y+=a[_.data.index];while(_=_.next)}m.value=y}function p(m,y,_,g,v){if(!m.value)return!0;var x=[_,g,v][e-1],b=m.x-n.x,T=e>1?m.y-n.y:0,S=e>2?m.z-n.z:0,M=x-y,A=b*b+T*T+S*S;if(M*M/u<A)return A<c&&(b===0&&(b=zr(i),A+=b*b),e>1&&T===0&&(T=zr(i),A+=T*T),e>2&&S===0&&(S=zr(i),A+=S*S),A<l&&(A=Math.sqrt(l*A)),n.vx+=b*m.value*s/A,e>1&&(n.vy+=T*m.value*s/A),e>2&&(n.vz+=S*m.value*s/A)),!0;if(m.length||A>=c)return;(m.data!==n||m.next)&&(b===0&&(b=zr(i),A+=b*b),e>1&&T===0&&(T=zr(i),A+=T*T),e>2&&S===0&&(S=zr(i),A+=S*S),A<l&&(A=Math.sqrt(l*A)));do m.data!==n&&(M=a[m.data.index]*s/A,n.vx+=b*M,e>1&&(n.vy+=T*M),e>2&&(n.vz+=S*M));while(m=m.next)}return h.initialize=function(m,...y){r=m,i=y.find(_=>typeof _=="function")||Math.random,e=y.find(_=>[1,2,3].includes(_))||2,d()},h.strength=function(m){return arguments.length?(o=typeof m=="function"?m:qr(+m),d(),h):o},h.distanceMin=function(m){return arguments.length?(l=m*m,h):Math.sqrt(l)},h.distanceMax=function(m){return arguments.length?(c=m*m,h):Math.sqrt(c)},h.theta=function(m){return arguments.length?(u=m*m,h):Math.sqrt(u)},h}function Qx(r,e,n,i){var s,o,a=qr(.1),l,c;typeof r!="function"&&(r=qr(+r)),e==null&&(e=0),n==null&&(n=0),i==null&&(i=0);function u(d){for(var f=0,p=s.length;f<p;++f){var m=s[f],y=m.x-e||1e-6,_=(m.y||0)-n||1e-6,g=(m.z||0)-i||1e-6,v=Math.sqrt(y*y+_*_+g*g),x=(c[f]-v)*l[f]*d/v;m.vx+=y*x,o>1&&(m.vy+=_*x),o>2&&(m.vz+=g*x)}}function h(){if(s){var d,f=s.length;for(l=new Array(f),c=new Array(f),d=0;d<f;++d)c[d]=+r(s[d],d,s),l[d]=isNaN(c[d])?0:+a(s[d],d,s)}}return u.initialize=function(d,...f){s=d,o=f.find(p=>[1,2,3].includes(p))||2,h()},u.strength=function(d){return arguments.length?(a=typeof d=="function"?d:qr(+d),h(),u):a},u.radius=function(d){return arguments.length?(r=typeof d=="function"?d:qr(+d),h(),u):r},u.x=function(d){return arguments.length?(e=+d,u):e},u.y=function(d){return arguments.length?(n=+d,u):n},u.z=function(d){return arguments.length?(i=+d,u):i},u}const{abs:xl,cos:Nr,sin:Ro,acos:$A,atan2:bl,sqrt:cs,pow:Ii}=Math;function Tl(r){return r<0?-Ii(-r,1/3):Ii(r,1/3)}const Jx=Math.PI,uu=2*Jx,us=Jx/2,jA=1e-6,Od=Number.MAX_SAFE_INTEGER||9007199254740991,Bd=Number.MIN_SAFE_INTEGER||-9007199254740991,qA={x:0,y:0,z:0},ve={Tvalues:[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213],Cvalues:[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872],arcfn:function(r,e){const n=e(r);let i=n.x*n.x+n.y*n.y;return typeof n.z<"u"&&(i+=n.z*n.z),cs(i)},compute:function(r,e,n){if(r===0)return e[0].t=0,e[0];const i=e.length-1;if(r===1)return e[i].t=1,e[i];const s=1-r;let o=e;if(i===0)return e[0].t=r,e[0];if(i===1){const l={x:s*o[0].x+r*o[1].x,y:s*o[0].y+r*o[1].y,t:r};return n&&(l.z=s*o[0].z+r*o[1].z),l}if(i<4){let l=s*s,c=r*r,u,h,d,f=0;i===2?(o=[o[0],o[1],o[2],qA],u=l,h=s*r*2,d=c):i===3&&(u=l*s,h=l*r*3,d=s*c*3,f=r*c);const p={x:u*o[0].x+h*o[1].x+d*o[2].x+f*o[3].x,y:u*o[0].y+h*o[1].y+d*o[2].y+f*o[3].y,t:r};return n&&(p.z=u*o[0].z+h*o[1].z+d*o[2].z+f*o[3].z),p}const a=JSON.parse(JSON.stringify(e));for(;a.length>1;){for(let l=0;l<a.length-1;l++)a[l]={x:a[l].x+(a[l+1].x-a[l].x)*r,y:a[l].y+(a[l+1].y-a[l].y)*r},typeof a[l].z<"u"&&(a[l].z=a[l].z+(a[l+1].z-a[l].z)*r);a.splice(a.length-1,1)}return a[0].t=r,a[0]},computeWithRatios:function(r,e,n,i){const s=1-r,o=n,a=e;let l=o[0],c=o[1],u=o[2],h=o[3],d;if(l*=s,c*=r,a.length===2)return d=l+c,{x:(l*a[0].x+c*a[1].x)/d,y:(l*a[0].y+c*a[1].y)/d,z:i?(l*a[0].z+c*a[1].z)/d:!1,t:r};if(l*=s,c*=2*s,u*=r*r,a.length===3)return d=l+c+u,{x:(l*a[0].x+c*a[1].x+u*a[2].x)/d,y:(l*a[0].y+c*a[1].y+u*a[2].y)/d,z:i?(l*a[0].z+c*a[1].z+u*a[2].z)/d:!1,t:r};if(l*=s,c*=1.5*s,u*=3*s,h*=r*r*r,a.length===4)return d=l+c+u+h,{x:(l*a[0].x+c*a[1].x+u*a[2].x+h*a[3].x)/d,y:(l*a[0].y+c*a[1].y+u*a[2].y+h*a[3].y)/d,z:i?(l*a[0].z+c*a[1].z+u*a[2].z+h*a[3].z)/d:!1,t:r}},derive:function(r,e){const n=[];for(let i=r,s=i.length,o=s-1;s>1;s--,o--){const a=[];for(let l=0,c;l<o;l++)c={x:o*(i[l+1].x-i[l].x),y:o*(i[l+1].y-i[l].y)},e&&(c.z=o*(i[l+1].z-i[l].z)),a.push(c);n.push(a),i=a}return n},between:function(r,e,n){return e<=r&&r<=n||ve.approximately(r,e)||ve.approximately(r,n)},approximately:function(r,e,n){return xl(r-e)<=(n||jA)},length:function(r){const n=ve.Tvalues.length;let i=0;for(let s=0,o;s<n;s++)o=.5*ve.Tvalues[s]+.5,i+=ve.Cvalues[s]*ve.arcfn(o,r);return .5*i},map:function(r,e,n,i,s){const o=n-e,a=s-i,l=r-e,c=l/o;return i+a*c},lerp:function(r,e,n){const i={x:e.x+r*(n.x-e.x),y:e.y+r*(n.y-e.y)};return e.z!==void 0&&n.z!==void 0&&(i.z=e.z+r*(n.z-e.z)),i},pointToString:function(r){let e=r.x+"/"+r.y;return typeof r.z<"u"&&(e+="/"+r.z),e},pointsToString:function(r){return"["+r.map(ve.pointToString).join(", ")+"]"},copy:function(r){return JSON.parse(JSON.stringify(r))},angle:function(r,e,n){const i=e.x-r.x,s=e.y-r.y,o=n.x-r.x,a=n.y-r.y,l=i*a-s*o,c=i*o+s*a;return bl(l,c)},round:function(r,e){const n=""+r,i=n.indexOf(".");return parseFloat(n.substring(0,i+1+e))},dist:function(r,e){const n=r.x-e.x,i=r.y-e.y;return cs(n*n+i*i)},closest:function(r,e){let n=Ii(2,63),i,s;return r.forEach(function(o,a){s=ve.dist(e,o),s<n&&(n=s,i=a)}),{mdist:n,mpos:i}},abcratio:function(r,e){if(e!==2&&e!==3)return!1;if(typeof r>"u")r=.5;else if(r===0||r===1)return r;const n=Ii(r,e)+Ii(1-r,e),i=n-1;return xl(i/n)},projectionratio:function(r,e){if(e!==2&&e!==3)return!1;if(typeof r>"u")r=.5;else if(r===0||r===1)return r;const n=Ii(1-r,e),i=Ii(r,e)+n;return n/i},lli8:function(r,e,n,i,s,o,a,l){const c=(r*i-e*n)*(s-a)-(r-n)*(s*l-o*a),u=(r*i-e*n)*(o-l)-(e-i)*(s*l-o*a),h=(r-n)*(o-l)-(e-i)*(s-a);return h==0?!1:{x:c/h,y:u/h}},lli4:function(r,e,n,i){const s=r.x,o=r.y,a=e.x,l=e.y,c=n.x,u=n.y,h=i.x,d=i.y;return ve.lli8(s,o,a,l,c,u,h,d)},lli:function(r,e){return ve.lli4(r,r.c,e,e.c)},makeline:function(r,e){return new Yt(r.x,r.y,(r.x+e.x)/2,(r.y+e.y)/2,e.x,e.y)},findbbox:function(r){let e=Od,n=Od,i=Bd,s=Bd;return r.forEach(function(o){const a=o.bbox();e>a.x.min&&(e=a.x.min),n>a.y.min&&(n=a.y.min),i<a.x.max&&(i=a.x.max),s<a.y.max&&(s=a.y.max)}),{x:{min:e,mid:(e+i)/2,max:i,size:i-e},y:{min:n,mid:(n+s)/2,max:s,size:s-n}}},shapeintersections:function(r,e,n,i,s){if(!ve.bboxoverlap(e,i))return[];const o=[],a=[r.startcap,r.forward,r.back,r.endcap],l=[n.startcap,n.forward,n.back,n.endcap];return a.forEach(function(c){c.virtual||l.forEach(function(u){if(u.virtual)return;const h=c.intersects(u,s);h.length>0&&(h.c1=c,h.c2=u,h.s1=r,h.s2=n,o.push(h))})}),o},makeshape:function(r,e,n){const i=e.points.length,s=r.points.length,o=ve.makeline(e.points[i-1],r.points[0]),a=ve.makeline(r.points[s-1],e.points[0]),l={startcap:o,forward:r,back:e,endcap:a,bbox:ve.findbbox([o,r,e,a])};return l.intersections=function(c){return ve.shapeintersections(l,l.bbox,c,c.bbox,n)},l},getminmax:function(r,e,n){if(!n)return{min:0,max:0};let i=Od,s=Bd,o,a;n.indexOf(0)===-1&&(n=[0].concat(n)),n.indexOf(1)===-1&&n.push(1);for(let l=0,c=n.length;l<c;l++)o=n[l],a=r.get(o),a[e]<i&&(i=a[e]),a[e]>s&&(s=a[e]);return{min:i,mid:(i+s)/2,max:s,size:s-i}},align:function(r,e){const n=e.p1.x,i=e.p1.y,s=-bl(e.p2.y-i,e.p2.x-n),o=function(a){return{x:(a.x-n)*Nr(s)-(a.y-i)*Ro(s),y:(a.x-n)*Ro(s)+(a.y-i)*Nr(s)}};return r.map(o)},roots:function(r,e){e=e||{p1:{x:0,y:0},p2:{x:1,y:0}};const n=r.length-1,i=ve.align(r,e),s=function(M){return 0<=M&&M<=1};if(n===2){const M=i[0].y,A=i[1].y,E=i[2].y,w=M-2*A+E;if(w!==0){const N=-cs(A*A-M*E),D=-M+A,F=-(N+D)/w,k=-(-N+D)/w;return[F,k].filter(s)}else if(A!==E&&w===0)return[(2*A-E)/(2*A-2*E)].filter(s);return[]}const o=i[0].y,a=i[1].y,l=i[2].y,c=i[3].y;let u=-o+3*a-3*l+c,h=3*o-6*a+3*l,d=-3*o+3*a,f=o;if(ve.approximately(u,0)){if(ve.approximately(h,0))return ve.approximately(d,0)?[]:[-f/d].filter(s);const M=cs(d*d-4*h*f),A=2*h;return[(M-d)/A,(-d-M)/A].filter(s)}h/=u,d/=u,f/=u;const p=(3*d-h*h)/3,m=p/3,y=(2*h*h*h-9*h*d+27*f)/27,_=y/2,g=_*_+m*m*m;let v,x,b,T,S;if(g<0){const M=-p/3,A=M*M*M,E=cs(A),w=-y/(2*E),N=w<-1?-1:w>1?1:w,D=$A(N),F=Tl(E),k=2*F;return b=k*Nr(D/3)-h/3,T=k*Nr((D+uu)/3)-h/3,S=k*Nr((D+2*uu)/3)-h/3,[b,T,S].filter(s)}else{if(g===0)return v=_<0?Tl(-_):-Tl(_),b=2*v-h/3,T=-v-h/3,[b,T].filter(s);{const M=cs(g);return v=Tl(-_+M),x=Tl(_+M),[v-x-h/3].filter(s)}}},droots:function(r){if(r.length===3){const e=r[0],n=r[1],i=r[2],s=e-2*n+i;if(s!==0){const o=-cs(n*n-e*i),a=-e+n,l=-(o+a)/s,c=-(-o+a)/s;return[l,c]}else if(n!==i&&s===0)return[(2*n-i)/(2*(n-i))];return[]}if(r.length===2){const e=r[0],n=r[1];return e!==n?[e/(e-n)]:[]}return[]},curvature:function(r,e,n,i,s){let o,a,l,c,u=0,h=0;const d=ve.compute(r,e),f=ve.compute(r,n),p=d.x*d.x+d.y*d.y;if(i?(o=cs(Ii(d.y*f.z-f.y*d.z,2)+Ii(d.z*f.x-f.z*d.x,2)+Ii(d.x*f.y-f.x*d.y,2)),a=Ii(p+d.z*d.z,3/2)):(o=d.x*f.y-d.y*f.x,a=Ii(p,3/2)),o===0||a===0)return{k:0,r:0};if(u=o/a,h=a/o,!s){const m=ve.curvature(r-.001,e,n,i,!0).k,y=ve.curvature(r+.001,e,n,i,!0).k;c=(y-u+(u-m))/2,l=(xl(y-u)+xl(u-m))/2}return{k:u,r:h,dk:c,adk:l}},inflections:function(r){if(r.length<4)return[];const e=ve.align(r,{p1:r[0],p2:r.slice(-1)[0]}),n=e[2].x*e[1].y,i=e[3].x*e[1].y,s=e[1].x*e[2].y,o=e[3].x*e[2].y,a=18*(-3*n+2*i+3*s-o),l=18*(3*n-i-3*s),c=18*(s-n);if(ve.approximately(a,0)){if(!ve.approximately(l,0)){let f=-c/l;if(0<=f&&f<=1)return[f]}return[]}const u=2*a;if(ve.approximately(u,0))return[];const h=l*l-4*a*c;if(h<0)return[];const d=Math.sqrt(h);return[(d-l)/u,-(l+d)/u].filter(function(f){return 0<=f&&f<=1})},bboxoverlap:function(r,e){const n=["x","y"],i=n.length;for(let s=0,o,a,l,c;s<i;s++)if(o=n[s],a=r[o].mid,l=e[o].mid,c=(r[o].size+e[o].size)/2,xl(a-l)>=c)return!1;return!0},expandbox:function(r,e){e.x.min<r.x.min&&(r.x.min=e.x.min),e.y.min<r.y.min&&(r.y.min=e.y.min),e.z&&e.z.min<r.z.min&&(r.z.min=e.z.min),e.x.max>r.x.max&&(r.x.max=e.x.max),e.y.max>r.y.max&&(r.y.max=e.y.max),e.z&&e.z.max>r.z.max&&(r.z.max=e.z.max),r.x.mid=(r.x.min+r.x.max)/2,r.y.mid=(r.y.min+r.y.max)/2,r.z&&(r.z.mid=(r.z.min+r.z.max)/2),r.x.size=r.x.max-r.x.min,r.y.size=r.y.max-r.y.min,r.z&&(r.z.size=r.z.max-r.z.min)},pairiteration:function(r,e,n){const i=r.bbox(),s=e.bbox(),o=1e5,a=n||.5;if(i.x.size+i.y.size<a&&s.x.size+s.y.size<a)return[(o*(r._t1+r._t2)/2|0)/o+"/"+(o*(e._t1+e._t2)/2|0)/o];let l=r.split(.5),c=e.split(.5),u=[{left:l.left,right:c.left},{left:l.left,right:c.right},{left:l.right,right:c.right},{left:l.right,right:c.left}];u=u.filter(function(d){return ve.bboxoverlap(d.left.bbox(),d.right.bbox())});let h=[];return u.length===0||(u.forEach(function(d){h=h.concat(ve.pairiteration(d.left,d.right,a))}),h=h.filter(function(d,f){return h.indexOf(d)===f})),h},getccenter:function(r,e,n){const i=e.x-r.x,s=e.y-r.y,o=n.x-e.x,a=n.y-e.y,l=i*Nr(us)-s*Ro(us),c=i*Ro(us)+s*Nr(us),u=o*Nr(us)-a*Ro(us),h=o*Ro(us)+a*Nr(us),d=(r.x+e.x)/2,f=(r.y+e.y)/2,p=(e.x+n.x)/2,m=(e.y+n.y)/2,y=d+l,_=f+c,g=p+u,v=m+h,x=ve.lli8(d,f,y,_,p,m,g,v),b=ve.dist(x,r);let T=bl(r.y-x.y,r.x-x.x),S=bl(e.y-x.y,e.x-x.x),M=bl(n.y-x.y,n.x-x.x),A;return T<M?((T>S||S>M)&&(T+=uu),T>M&&(A=M,M=T,T=A)):M<S&&S<T?(A=M,M=T,T=A):M+=uu,x.s=T,x.e=M,x.r=b,x},numberSort:function(r,e){return r-e}};class ac{constructor(e){this.curves=[],this._3d=!1,e&&(this.curves=e,this._3d=this.curves[0]._3d)}valueOf(){return this.toString()}toString(){return"["+this.curves.map(function(e){return ve.pointsToString(e.points)}).join(", ")+"]"}addCurve(e){this.curves.push(e),this._3d=this._3d||e._3d}length(){return this.curves.map(function(e){return e.length()}).reduce(function(e,n){return e+n})}curve(e){return this.curves[e]}bbox(){const e=this.curves;for(var n=e[0].bbox(),i=1;i<e.length;i++)ve.expandbox(n,e[i].bbox());return n}offset(e){const n=[];return this.curves.forEach(function(i){n.push(...i.offset(e))}),new ac(n)}}const{abs:Sl,min:q_,max:X_,cos:XA,sin:YA,acos:KA,sqrt:Ml}=Math,ZA=Math.PI;class Yt{constructor(e){let n=e&&e.forEach?e:Array.from(arguments).slice(),i=!1;if(typeof n[0]=="object"){i=n.length;const p=[];n.forEach(function(m){["x","y","z"].forEach(function(y){typeof m[y]<"u"&&p.push(m[y])})}),n=p}let s=!1;const o=n.length;if(i){if(i>4){if(arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");s=!0}}else if(o!==6&&o!==8&&o!==9&&o!==12&&arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");const a=this._3d=!s&&(o===9||o===12)||e&&e[0]&&typeof e[0].z<"u",l=this.points=[];for(let p=0,m=a?3:2;p<o;p+=m){var c={x:n[p],y:n[p+1]};a&&(c.z=n[p+2]),l.push(c)}const u=this.order=l.length-1,h=this.dims=["x","y"];a&&h.push("z"),this.dimlen=h.length;const d=ve.align(l,{p1:l[0],p2:l[u]}),f=ve.dist(l[0],l[u]);this._linear=d.reduce((p,m)=>p+Sl(m.y),0)<f/50,this._lut=[],this._t1=0,this._t2=1,this.update()}static quadraticFromPoints(e,n,i,s){if(typeof s>"u"&&(s=.5),s===0)return new Yt(n,n,i);if(s===1)return new Yt(e,n,n);const o=Yt.getABC(2,e,n,i,s);return new Yt(e,o.A,i)}static cubicFromPoints(e,n,i,s,o){typeof s>"u"&&(s=.5);const a=Yt.getABC(3,e,n,i,s);typeof o>"u"&&(o=ve.dist(n,a.C));const l=o*(1-s)/s,c=ve.dist(e,i),u=(i.x-e.x)/c,h=(i.y-e.y)/c,d=o*u,f=o*h,p=l*u,m=l*h,y={x:n.x-d,y:n.y-f},_={x:n.x+p,y:n.y+m},g=a.A,v={x:g.x+(y.x-g.x)/(1-s),y:g.y+(y.y-g.y)/(1-s)},x={x:g.x+(_.x-g.x)/s,y:g.y+(_.y-g.y)/s},b={x:e.x+(v.x-e.x)/s,y:e.y+(v.y-e.y)/s},T={x:i.x+(x.x-i.x)/(1-s),y:i.y+(x.y-i.y)/(1-s)};return new Yt(e,b,T,i)}static getUtils(){return ve}getUtils(){return Yt.getUtils()}static get PolyBezier(){return ac}valueOf(){return this.toString()}toString(){return ve.pointsToString(this.points)}toSVG(){if(this._3d)return!1;const e=this.points,n=e[0].x,i=e[0].y,s=["M",n,i,this.order===2?"Q":"C"];for(let o=1,a=e.length;o<a;o++)s.push(e[o].x),s.push(e[o].y);return s.join(" ")}setRatios(e){if(e.length!==this.points.length)throw new Error("incorrect number of ratio values");this.ratios=e,this._lut=[]}verify(){const e=this.coordDigest();e!==this._print&&(this._print=e,this.update())}coordDigest(){return this.points.map(function(e,n){return""+n+e.x+e.y+(e.z?e.z:0)}).join("")}update(){this._lut=[],this.dpoints=ve.derive(this.points,this._3d),this.computedirection()}computedirection(){const e=this.points,n=ve.angle(e[0],e[this.order],e[1]);this.clockwise=n>0}length(){return ve.length(this.derivative.bind(this))}static getABC(e=2,n,i,s,o=.5){const a=ve.projectionratio(o,e),l=1-a,c={x:a*n.x+l*s.x,y:a*n.y+l*s.y},u=ve.abcratio(o,e);return{A:{x:i.x+(i.x-c.x)/u,y:i.y+(i.y-c.y)/u},B:i,C:c,S:n,E:s}}getABC(e,n){n=n||this.get(e);let i=this.points[0],s=this.points[this.order];return Yt.getABC(this.order,i,n,s,e)}getLUT(e){if(this.verify(),e=e||100,this._lut.length===e+1)return this._lut;this._lut=[],e++,this._lut=[];for(let n=0,i,s;n<e;n++)s=n/(e-1),i=this.compute(s),i.t=s,this._lut.push(i);return this._lut}on(e,n){n=n||5;const i=this.getLUT(),s=[];for(let o=0,a,l=0;o<i.length;o++)a=i[o],ve.dist(a,e)<n&&(s.push(a),l+=o/i.length);return s.length?t/=s.length:!1}project(e){const n=this.getLUT(),i=n.length-1,s=ve.closest(n,e),o=s.mpos,a=(o-1)/i,l=(o+1)/i,c=.1/i;let u=s.mdist,h=a,d=h,f;u+=1;for(let p;h<l+c;h+=c)f=this.compute(h),p=ve.dist(e,f),p<u&&(u=p,d=h);return d=d<0?0:d>1?1:d,f=this.compute(d),f.t=d,f.d=u,f}get(e){return this.compute(e)}point(e){return this.points[e]}compute(e){return this.ratios?ve.computeWithRatios(e,this.points,this.ratios,this._3d):ve.compute(e,this.points,this._3d,this.ratios)}raise(){const e=this.points,n=[e[0]],i=e.length;for(let s=1,o,a;s<i;s++)o=e[s],a=e[s-1],n[s]={x:(i-s)/i*o.x+s/i*a.x,y:(i-s)/i*o.y+s/i*a.y};return n[i]=e[i-1],new Yt(n)}derivative(e){return ve.compute(e,this.dpoints[0],this._3d)}dderivative(e){return ve.compute(e,this.dpoints[1],this._3d)}align(){let e=this.points;return new Yt(ve.align(e,{p1:e[0],p2:e[e.length-1]}))}curvature(e){return ve.curvature(e,this.dpoints[0],this.dpoints[1],this._3d)}inflections(){return ve.inflections(this.points)}normal(e){return this._3d?this.__normal3(e):this.__normal2(e)}__normal2(e){const n=this.derivative(e),i=Ml(n.x*n.x+n.y*n.y);return{t:e,x:-n.y/i,y:n.x/i}}__normal3(e){const n=this.derivative(e),i=this.derivative(e+.01),s=Ml(n.x*n.x+n.y*n.y+n.z*n.z),o=Ml(i.x*i.x+i.y*i.y+i.z*i.z);n.x/=s,n.y/=s,n.z/=s,i.x/=o,i.y/=o,i.z/=o;const a={x:i.y*n.z-i.z*n.y,y:i.z*n.x-i.x*n.z,z:i.x*n.y-i.y*n.x},l=Ml(a.x*a.x+a.y*a.y+a.z*a.z);a.x/=l,a.y/=l,a.z/=l;const c=[a.x*a.x,a.x*a.y-a.z,a.x*a.z+a.y,a.x*a.y+a.z,a.y*a.y,a.y*a.z-a.x,a.x*a.z-a.y,a.y*a.z+a.x,a.z*a.z];return{t:e,x:c[0]*n.x+c[1]*n.y+c[2]*n.z,y:c[3]*n.x+c[4]*n.y+c[5]*n.z,z:c[6]*n.x+c[7]*n.y+c[8]*n.z}}hull(e){let n=this.points,i=[],s=[],o=0;for(s[o++]=n[0],s[o++]=n[1],s[o++]=n[2],this.order===3&&(s[o++]=n[3]);n.length>1;){i=[];for(let a=0,l,c=n.length-1;a<c;a++)l=ve.lerp(e,n[a],n[a+1]),s[o++]=l,i.push(l);n=i}return s}split(e,n){if(e===0&&n)return this.split(n).left;if(n===1)return this.split(e).right;const i=this.hull(e),s={left:this.order===2?new Yt([i[0],i[3],i[5]]):new Yt([i[0],i[4],i[7],i[9]]),right:this.order===2?new Yt([i[5],i[4],i[2]]):new Yt([i[9],i[8],i[6],i[3]]),span:i};return s.left._t1=ve.map(0,0,1,this._t1,this._t2),s.left._t2=ve.map(e,0,1,this._t1,this._t2),s.right._t1=ve.map(e,0,1,this._t1,this._t2),s.right._t2=ve.map(1,0,1,this._t1,this._t2),n?(n=ve.map(n,e,1,0,1),s.right.split(n).left):s}extrema(){const e={};let n=[];return this.dims.forEach((function(i){let s=function(a){return a[i]},o=this.dpoints[0].map(s);e[i]=ve.droots(o),this.order===3&&(o=this.dpoints[1].map(s),e[i]=e[i].concat(ve.droots(o))),e[i]=e[i].filter(function(a){return a>=0&&a<=1}),n=n.concat(e[i].sort(ve.numberSort))}).bind(this)),e.values=n.sort(ve.numberSort).filter(function(i,s){return n.indexOf(i)===s}),e}bbox(){const e=this.extrema(),n={};return this.dims.forEach((function(i){n[i]=ve.getminmax(this,i,e[i])}).bind(this)),n}overlaps(e){const n=this.bbox(),i=e.bbox();return ve.bboxoverlap(n,i)}offset(e,n){if(typeof n<"u"){const i=this.get(e),s=this.normal(e),o={c:i,n:s,x:i.x+s.x*n,y:i.y+s.y*n};return this._3d&&(o.z=i.z+s.z*n),o}if(this._linear){const i=this.normal(0),s=this.points.map(function(o){const a={x:o.x+e*i.x,y:o.y+e*i.y};return o.z&&i.z&&(a.z=o.z+e*i.z),a});return[new Yt(s)]}return this.reduce().map(function(i){return i._linear?i.offset(e)[0]:i.scale(e)})}simple(){if(this.order===3){const s=ve.angle(this.points[0],this.points[3],this.points[1]),o=ve.angle(this.points[0],this.points[3],this.points[2]);if(s>0&&o<0||s<0&&o>0)return!1}const e=this.normal(0),n=this.normal(1);let i=e.x*n.x+e.y*n.y;return this._3d&&(i+=e.z*n.z),Sl(KA(i))<ZA/3}reduce(){let e,n=0,i=0,s=.01,o,a=[],l=[],c=this.extrema().values;for(c.indexOf(0)===-1&&(c=[0].concat(c)),c.indexOf(1)===-1&&c.push(1),n=c[0],e=1;e<c.length;e++)i=c[e],o=this.split(n,i),o._t1=n,o._t2=i,a.push(o),n=i;return a.forEach(function(u){for(n=0,i=0;i<=1;)for(i=n+s;i<=1+s;i+=s)if(o=u.split(n,i),!o.simple()){if(i-=s,Sl(n-i)<s)return[];o=u.split(n,i),o._t1=ve.map(n,0,1,u._t1,u._t2),o._t2=ve.map(i,0,1,u._t1,u._t2),l.push(o),n=i;break}n<1&&(o=u.split(n,1),o._t1=ve.map(n,0,1,u._t1,u._t2),o._t2=u._t2,l.push(o))}),l}translate(e,n,i){i=typeof i=="number"?i:n;const s=this.order;let o=this.points.map((a,l)=>(1-l/s)*n+l/s*i);return new Yt(this.points.map((a,l)=>({x:a.x+e.x*o[l],y:a.y+e.y*o[l]})))}scale(e){const n=this.order;let i=!1;if(typeof e=="function"&&(i=e),i&&n===2)return this.raise().scale(i);const s=this.clockwise,o=this.points;if(this._linear)return this.translate(this.normal(0),i?i(0):e,i?i(1):e);const a=i?i(0):e,l=i?i(1):e,c=[this.offset(0,10),this.offset(1,10)],u=[],h=ve.lli4(c[0],c[0].c,c[1],c[1].c);if(!h)throw new Error("cannot scale this curve. Try reducing it first.");return[0,1].forEach(function(d){const f=u[d*n]=ve.copy(o[d*n]);f.x+=(d?l:a)*c[d].n.x,f.y+=(d?l:a)*c[d].n.y}),i?([0,1].forEach(function(d){if(!(n===2&&d)){var f=o[d+1],p={x:f.x-h.x,y:f.y-h.y},m=i?i((d+1)/n):e;i&&!s&&(m=-m);var y=Ml(p.x*p.x+p.y*p.y);p.x/=y,p.y/=y,u[d+1]={x:f.x+m*p.x,y:f.y+m*p.y}}}),new Yt(u)):([0,1].forEach(d=>{if(n===2&&d)return;const f=u[d*n],p=this.derivative(d),m={x:f.x+p.x,y:f.y+p.y};u[d+1]=ve.lli4(f,m,h,o[d+1])}),new Yt(u))}outline(e,n,i,s){if(n=n===void 0?e:n,this._linear){const T=this.normal(0),S=this.points[0],M=this.points[this.points.length-1];let A,E,w;i===void 0&&(i=e,s=n),A={x:S.x+T.x*e,y:S.y+T.y*e},w={x:M.x+T.x*i,y:M.y+T.y*i},E={x:(A.x+w.x)/2,y:(A.y+w.y)/2};const N=[A,E,w];A={x:S.x-T.x*n,y:S.y-T.y*n},w={x:M.x-T.x*s,y:M.y-T.y*s},E={x:(A.x+w.x)/2,y:(A.y+w.y)/2};const D=[w,E,A],F=ve.makeline(D[2],N[0]),k=ve.makeline(N[2],D[0]),j=[F,new Yt(N),k,new Yt(D)];return new ac(j)}const o=this.reduce(),a=o.length,l=[];let c=[],u,h=0,d=this.length();const f=typeof i<"u"&&typeof s<"u";function p(T,S,M,A,E){return function(w){const N=A/M,D=(A+E)/M,F=S-T;return ve.map(w,0,1,T+N*F,T+D*F)}}o.forEach(function(T){const S=T.length();f?(l.push(T.scale(p(e,i,d,h,S))),c.push(T.scale(p(-n,-s,d,h,S)))):(l.push(T.scale(e)),c.push(T.scale(-n))),h+=S}),c=c.map(function(T){return u=T.points,u[3]?T.points=[u[3],u[2],u[1],u[0]]:T.points=[u[2],u[1],u[0]],T}).reverse();const m=l[0].points[0],y=l[a-1].points[l[a-1].points.length-1],_=c[a-1].points[c[a-1].points.length-1],g=c[0].points[0],v=ve.makeline(_,m),x=ve.makeline(y,g),b=[v].concat(l).concat([x]).concat(c);return new ac(b)}outlineshapes(e,n,i){n=n||e;const s=this.outline(e,n).curves,o=[];for(let a=1,l=s.length;a<l/2;a++){const c=ve.makeshape(s[a],s[l-a],i);c.startcap.virtual=a>1,c.endcap.virtual=a<l/2-1,o.push(c)}return o}intersects(e,n){return e?e.p1&&e.p2?this.lineIntersects(e):(e instanceof Yt&&(e=e.reduce()),this.curveintersects(this.reduce(),e,n)):this.selfintersects(n)}lineIntersects(e){const n=q_(e.p1.x,e.p2.x),i=q_(e.p1.y,e.p2.y),s=X_(e.p1.x,e.p2.x),o=X_(e.p1.y,e.p2.y);return ve.roots(this.points,e).filter(a=>{var l=this.get(a);return ve.between(l.x,n,s)&&ve.between(l.y,i,o)})}selfintersects(e){const n=this.reduce(),i=n.length-2,s=[];for(let o=0,a,l,c;o<i;o++)l=n.slice(o,o+1),c=n.slice(o+2),a=this.curveintersects(l,c,e),s.push(...a);return s}curveintersects(e,n,i){const s=[];e.forEach(function(a){n.forEach(function(l){a.overlaps(l)&&s.push({left:a,right:l})})});let o=[];return s.forEach(function(a){const l=ve.pairiteration(a.left,a.right,i);l.length>0&&(o=o.concat(l))}),o}arcs(e){return e=e||.5,this._iterate(e,[])}_error(e,n,i,s){const o=(s-i)/4,a=this.get(i+o),l=this.get(s-o),c=ve.dist(e,n),u=ve.dist(e,a),h=ve.dist(e,l);return Sl(u-c)+Sl(h-c)}_iterate(e,n){let i=0,s=1,o;do{o=0,s=1;let a=this.get(i),l,c,u,h,d=!1,f=!1,p,m=s,y=1;do if(f=d,h=u,m=(i+s)/2,l=this.get(m),c=this.get(s),u=ve.getccenter(a,l,c),u.interval={start:i,end:s},d=this._error(u,a,i,s)<=e,p=f&&!d,p||(y=s),d){if(s>=1){if(u.interval.end=y=1,h=u,s>1){let g={x:u.x+u.r*XA(u.e),y:u.y+u.r*YA(u.e)};u.e+=ve.angle({x:u.x,y:u.y},g,this.get(1))}break}s=s+(s-i)/2}else s=m;while(!p&&o++<100);if(o>=100)break;h=h||u,n.push(h),i=y}while(s<1);return n}}function Hp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function QA(r){if(Array.isArray(r))return r}function JA(r){if(Array.isArray(r))return Hp(r)}function eR(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function tR(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function nR(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function iR(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function rR(r,e){if(r==null)return{};var n,i,s=sR(r,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);for(i=0;i<o.length;i++)n=o[i],e.includes(n)||{}.propertyIsEnumerable.call(r,n)&&(s[n]=r[n])}return s}function sR(r,e){if(r==null)return{};var n={};for(var i in r)if({}.hasOwnProperty.call(r,i)){if(e.includes(i))continue;n[i]=r[i]}return n}function oR(r,e){return QA(r)||tR(r,e)||eb(r,e)||nR()}function aR(r){return JA(r)||eR(r)||eb(r)||iR()}function lR(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function cR(r){var e=lR(r,"string");return typeof e=="symbol"?e:e+""}function eb(r,e){if(r){if(typeof r=="string")return Hp(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Hp(r,e):void 0}}var uR=function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,s=(e instanceof Array?e.length?e:[void 0]:[e]).map(function(l){return{keyAccessor:l,isProp:!(l instanceof Function)}}),o=r.reduce(function(l,c){var u=l,h=c;return s.forEach(function(d,f){var p=d.keyAccessor,m=d.isProp,y;if(m){var _=h,g=_[p],v=rR(_,[p].map(cR));y=g,h=v}else y=p(h,f);f+1<s.length?(u.hasOwnProperty(y)||(u[y]={}),u=u[y]):n?(u.hasOwnProperty(y)||(u[y]=[]),u[y].push(h)):u[y]=h}),l},{});n instanceof Function&&function l(c){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;u===s.length?Object.keys(c).forEach(function(h){return c[h]=n(c[h])}):Object.values(c).forEach(function(h){return l(h,u+1)})}(o);var a=o;return i&&(a=[],function l(c){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];u.length===s.length?a.push({keys:u,vals:c}):Object.entries(c).forEach(function(h){var d=oR(h,2),f=d[0],p=d[1];return l(p,[].concat(aR(u),[f]))})}(o),e instanceof Array&&e.length===0&&a.length===1&&(a[0].keys=[])),a};function hR(r,e){switch(arguments.length){case 0:break;case 1:this.range(r);break;default:this.range(e).domain(r);break}return this}const Y_=Symbol("implicit");function Bm(){var r=new y_,e=[],n=[],i=Y_;function s(o){let a=r.get(o);if(a===void 0){if(i!==Y_)return i;r.set(o,a=e.push(o)-1)}return n[a%n.length]}return s.domain=function(o){if(!arguments.length)return e.slice();e=[],r=new y_;for(const a of o)r.has(a)||r.set(a,e.push(a)-1);return s},s.range=function(o){return arguments.length?(n=Array.from(o),s):n.slice()},s.unknown=function(o){return arguments.length?(i=o,s):i},s.copy=function(){return Bm(e,n).unknown(i)},hR.apply(s,arguments),s}function dR(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var fR=`.force-graph-container canvas {
  display: block;
  user-select: none;
  outline: none;
  -webkit-tap-highlight-color: transparent;
}

.force-graph-container .clickable {
  cursor: pointer;
}

.force-graph-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.force-graph-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}
`;dR(fR);function Wp(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function pR(r){if(Array.isArray(r))return r}function mR(r){if(Array.isArray(r))return Wp(r)}function K_(r,e,n){if(tb())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return s}function xc(r,e,n){return(e=bR(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function tb(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(tb=function(){return!!r})()}function gR(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function _R(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function yR(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function vR(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Z_(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function Co(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Z_(Object(n),!0).forEach(function(i){xc(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):Z_(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function lc(r,e){return pR(r)||_R(r,e)||nb(r,e)||yR()}function Oi(r){return mR(r)||gR(r)||nb(r)||vR()}function xR(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function bR(r){var e=xR(r,"string");return typeof e=="symbol"?e:e+""}function $p(r){"@babel/helpers - typeof";return $p=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$p(r)}function nb(r,e){if(r){if(typeof r=="string")return Wp(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Wp(r,e):void 0}}var TR=Bm(_x);function Q_(r,e,n){!e||typeof n!="string"||r.filter(function(i){return!i[n]}).forEach(function(i){i[n]=TR(e(i))})}function SR(r,e){var n=r.nodes,i=r.links,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},o=s.nodeFilter,a=o===void 0?function(){return!0}:o,l=s.onLoopError,c=l===void 0?function(p){throw"Invalid DAG structure! Found cycle in node path: ".concat(p.join(" -> "),".")}:l,u={};n.forEach(function(p){return u[e(p)]={data:p,out:[],depth:-1,skip:!a(p)}}),i.forEach(function(p){var m=p.source,y=p.target,_=b(m),g=b(y);if(!u.hasOwnProperty(_))throw"Missing source node with id: ".concat(_);if(!u.hasOwnProperty(g))throw"Missing target node with id: ".concat(g);var v=u[_],x=u[g];v.out.push(x);function b(T){return $p(T)==="object"?e(T):T}});var h=[];f(Object.values(u));var d=Object.assign.apply(Object,[{}].concat(Oi(Object.entries(u).filter(function(p){var m=lc(p,2),y=m[1];return!y.skip}).map(function(p){var m=lc(p,2),y=m[0],_=m[1];return xc({},y,_.depth)}))));return d;function f(p){for(var m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],y=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,_=function(){var b=p[g];if(m.indexOf(b)!==-1){var T=[].concat(Oi(m.slice(m.indexOf(b))),[b]).map(function(S){return e(S.data)});return h.some(function(S){return S.length===T.length&&S.every(function(M,A){return M===T[A]})})||(h.push(T),c(T)),1}y>b.depth&&(b.depth=y,f(b.out,[].concat(Oi(m),[b]),y+(b.skip?0:1)))},g=0,v=p.length;g<v;g++)_()}}var MR=2,In=function(e,n){return n.onNeedsRedraw&&n.onNeedsRedraw()},J_=function(e,n){if(!n.isShadow){var i=Oe(n.linkDirectionalParticles);n.graphData.links.forEach(function(s){var o=Math.round(Math.abs(i(s)));o?s.__photons=Oi(Array(o)).map(function(){return{}}):delete s.__photons})}},Fh=ol({props:{graphData:{default:{nodes:[],links:[]},onChange:function(e,n){n.engineRunning=!1,J_(e,n)}},dagMode:{onChange:function(e,n){!e&&(n.graphData.nodes||[]).forEach(function(i){return i.fx=i.fy=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4,triggerUpdate:!1,onChange:In},nodeId:{default:"id"},nodeVal:{default:"val",triggerUpdate:!1,onChange:In},nodeColor:{default:"color",triggerUpdate:!1,onChange:In},nodeAutoColorBy:{},nodeCanvasObject:{triggerUpdate:!1,onChange:In},nodeCanvasObjectMode:{default:function(){return"replace"},triggerUpdate:!1,onChange:In},nodeVisibility:{default:!0,triggerUpdate:!1,onChange:In},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0,triggerUpdate:!1,onChange:In},linkColor:{default:"color",triggerUpdate:!1,onChange:In},linkAutoColorBy:{},linkLineDash:{triggerUpdate:!1,onChange:In},linkWidth:{default:1,triggerUpdate:!1,onChange:In},linkCurvature:{default:0,triggerUpdate:!1,onChange:In},linkCanvasObject:{triggerUpdate:!1,onChange:In},linkCanvasObjectMode:{default:function(){return"replace"},triggerUpdate:!1,onChange:In},linkDirectionalArrowLength:{default:0,triggerUpdate:!1,onChange:In},linkDirectionalArrowColor:{triggerUpdate:!1,onChange:In},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1,onChange:In},linkDirectionalParticles:{default:0,triggerUpdate:!1,onChange:J_},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleOffset:{default:0,triggerUpdate:!1},linkDirectionalParticleWidth:{default:4,triggerUpdate:!1},linkDirectionalParticleColor:{triggerUpdate:!1},linkDirectionalParticleCanvasObject:{triggerUpdate:!1},globalScale:{default:1,triggerUpdate:!1},d3AlphaMin:{default:0,triggerUpdate:!1},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,n){n.forceLayout.velocityDecay(e)}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1},onNeedsRedraw:{triggerUpdate:!1},isShadow:{default:!1,triggerUpdate:!1}},methods:{d3Force:function(e,n,i){return i===void 0?e.forceLayout.force(n):(e.forceLayout.force(n,i),this)},d3ReheatSimulation:function(e){return e.forceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},isEngineRunning:function(e){return!!e.engineRunning},tickFrame:function(e){return!e.isShadow&&n(),s(),!e.isShadow&&o(),!e.isShadow&&a(),i(),this;function n(){e.engineRunning&&(++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||e.d3AlphaMin>0&&e.forceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.forceLayout.tick(),e.onEngineTick()))}function i(){var l=Oe(e.nodeVisibility),c=Oe(e.nodeVal),u=Oe(e.nodeColor),h=Oe(e.nodeCanvasObjectMode),d=e.ctx,f=e.isShadow/e.globalScale,p=e.graphData.nodes.filter(l);d.save(),p.forEach(function(m){var y=h(m);if(e.nodeCanvasObject&&(y==="before"||y==="replace")&&(e.nodeCanvasObject(m,d,e.globalScale),y==="replace")){d.restore();return}var _=Math.sqrt(Math.max(0,c(m)||1))*e.nodeRelSize+f;d.beginPath(),d.arc(m.x,m.y,_,0,2*Math.PI,!1),d.fillStyle=u(m)||"rgba(31, 120, 180, 0.92)",d.fill(),e.nodeCanvasObject&&y==="after"&&e.nodeCanvasObject(m,e.ctx,e.globalScale)}),d.restore()}function s(){var l=Oe(e.linkVisibility),c=Oe(e.linkColor),u=Oe(e.linkWidth),h=Oe(e.linkLineDash),d=Oe(e.linkCurvature),f=Oe(e.linkCanvasObjectMode),p=e.ctx,m=e.isShadow*2,y=e.graphData.links.filter(l);y.forEach(S);var _=[],g=[],v=y;if(e.linkCanvasObject){var x=[],b=[];y.forEach(function(M){return({before:_,after:g,replace:x}[f(M)]||b).push(M)}),v=[].concat(Oi(_),g,b),_=_.concat(x)}p.save(),_.forEach(function(M){return e.linkCanvasObject(M,p,e.globalScale)}),p.restore();var T=uR(v,[c,u,h]);p.save(),Object.entries(T).forEach(function(M){var A=lc(M,2),E=A[0],w=A[1],N=!E||E==="undefined"?"rgba(0,0,0,0.15)":E;Object.entries(w).forEach(function(D){var F=lc(D,2),k=F[0],j=F[1],$=(k||1)/e.globalScale+m;Object.entries(j).forEach(function(G){var B=lc(G,2);B[0];var J=B[1],Y=h(J[0]);p.beginPath(),J.forEach(function(re){var me=re.source,Re=re.target;if(!(!me||!Re||!me.hasOwnProperty("x")||!Re.hasOwnProperty("x"))){p.moveTo(me.x,me.y);var tt=re.__controlPoints;tt?p[tt.length===2?"quadraticCurveTo":"bezierCurveTo"].apply(p,Oi(tt).concat([Re.x,Re.y])):p.lineTo(Re.x,Re.y)}}),p.strokeStyle=N,p.lineWidth=$,p.setLineDash(Y||[]),p.stroke()})})}),p.restore(),p.save(),g.forEach(function(M){return e.linkCanvasObject(M,p,e.globalScale)}),p.restore();function S(M){var A=d(M);if(!A){M.__controlPoints=null;return}var E=M.source,w=M.target;if(!(!E||!w||!E.hasOwnProperty("x")||!w.hasOwnProperty("x"))){var N=Math.sqrt(Math.pow(w.x-E.x,2)+Math.pow(w.y-E.y,2));if(N>0){var D=Math.atan2(w.y-E.y,w.x-E.x),F=N*A,k={x:(E.x+w.x)/2+F*Math.cos(D-Math.PI/2),y:(E.y+w.y)/2+F*Math.sin(D-Math.PI/2)};M.__controlPoints=[k.x,k.y]}else{var j=A*70;M.__controlPoints=[w.x,w.y-j,w.x+j,w.y]}}}}function o(){var l=1.6,c=.2,u=Oe(e.linkDirectionalArrowLength),h=Oe(e.linkDirectionalArrowRelPos),d=Oe(e.linkVisibility),f=Oe(e.linkDirectionalArrowColor||e.linkColor),p=Oe(e.nodeVal),m=e.ctx;m.save(),e.graphData.links.filter(d).forEach(function(y){var _=u(y);if(!(!_||_<0)){var g=y.source,v=y.target;if(!(!g||!v||!g.hasOwnProperty("x")||!v.hasOwnProperty("x"))){var x=Math.sqrt(Math.max(0,p(g)||1))*e.nodeRelSize,b=Math.sqrt(Math.max(0,p(v)||1))*e.nodeRelSize,T=Math.min(1,Math.max(0,h(y))),S=f(y)||"rgba(0,0,0,0.28)",M=_/l/2,A=y.__controlPoints&&K_(Yt,[g.x,g.y].concat(Oi(y.__controlPoints),[v.x,v.y])),E=A?function($){return A.get($)}:function($){return{x:g.x+(v.x-g.x)*$||0,y:g.y+(v.y-g.y)*$||0}},w=A?A.length():Math.sqrt(Math.pow(v.x-g.x,2)+Math.pow(v.y-g.y,2)),N=x+_+(w-x-b-_)*T,D=E(N/w),F=E((N-_)/w),k=E((N-_*(1-c))/w),j=Math.atan2(D.y-F.y,D.x-F.x)-Math.PI/2;m.beginPath(),m.moveTo(D.x,D.y),m.lineTo(F.x+M*Math.cos(j),F.y+M*Math.sin(j)),m.lineTo(k.x,k.y),m.lineTo(F.x-M*Math.cos(j),F.y-M*Math.sin(j)),m.fillStyle=S,m.fill()}}}),m.restore()}function a(){var l=Oe(e.linkDirectionalParticles),c=Oe(e.linkDirectionalParticleSpeed),u=Oe(e.linkDirectionalParticleOffset),h=Oe(e.linkDirectionalParticleWidth),d=Oe(e.linkVisibility),f=Oe(e.linkDirectionalParticleColor||e.linkColor),p=e.ctx;p.save(),e.graphData.links.filter(d).forEach(function(m){var y=l(m);if(!(!m.hasOwnProperty("__photons")||!m.__photons.length)){var _=m.source,g=m.target;if(!(!_||!g||!_.hasOwnProperty("x")||!g.hasOwnProperty("x"))){var v=c(m),x=Math.abs(u(m)),b=m.__photons||[],T=Math.max(0,h(m)/2)/Math.sqrt(e.globalScale),S=f(m)||"rgba(0,0,0,0.28)";p.fillStyle=S;var M=m.__controlPoints?K_(Yt,[_.x,_.y].concat(Oi(m.__controlPoints),[g.x,g.y])):null,A=0,E=!1;b.forEach(function(w){var N=!!w.__singleHop;if(w.hasOwnProperty("__progressRatio")||(w.__progressRatio=N?0:(A+x)/y),!N&&A++,w.__progressRatio+=v,w.__progressRatio>=1)if(!N)w.__progressRatio=w.__progressRatio%1;else{E=!0;return}var D=w.__progressRatio,F=M?M.get(D):{x:_.x+(g.x-_.x)*D||0,y:_.y+(g.y-_.y)*D||0};e.linkDirectionalParticleCanvasObject?e.linkDirectionalParticleCanvasObject(F.x,F.y,m,p,e.globalScale):(p.beginPath(),p.arc(F.x,F.y,T,0,2*Math.PI,!1),p.fill())}),E&&(m.__photons=m.__photons.filter(function(w){return!w.__singleHop||w.__progressRatio<=1}))}}}),p.restore()}},emitParticle:function(e,n){return n&&(!n.__photons&&(n.__photons=[]),n.__photons.push({__singleHop:!0})),this}},stateInit:function(){return{forceLayout:Kx().force("link",Yx()).force("charge",Zx()).force("center",Wx()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,n){n.ctx=e},update:function(e,n){e.engineRunning=!1,e.onUpdate(),e.nodeAutoColorBy!==null&&Q_(e.graphData.nodes,Oe(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&Q_(e.graphData.links,Oe(e.linkAutoColorBy),e.linkColor),e.graphData.links.forEach(function(f){f.source=f[e.linkSource],f.target=f[e.linkTarget]}),e.forceLayout.stop().alpha(1).nodes(e.graphData.nodes);var i=e.forceLayout.force("link");i&&i.id(function(f){return f[e.nodeId]}).links(e.graphData.links);var s=e.dagMode&&SR(e.graphData,function(f){return f[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),o=Math.max.apply(Math,Oi(Object.values(s||[]))),a=e.dagLevelDistance||e.graphData.nodes.length/(o||1)*MR*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu"].includes(n.dagMode)){var l=["lr","rl"].includes(n.dagMode)?"fx":"fy";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(f){return delete f[l]})}if(["lr","rl","td","bu"].includes(e.dagMode)){var c=["rl","bu"].includes(e.dagMode),u=function(p){return(s[p[e.nodeId]]-o/2)*a*(c?-1:1)},h=["lr","rl"].includes(e.dagMode)?"fx":"fy";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(f){return f[h]=u(f)})}e.forceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?Qx(function(f){var p=s[f[e.nodeId]]||-1;return(e.dagMode==="radialin"?o-p:p)*a}).strength(function(f){return e.dagNodeFilter(f)?1:0}):null);for(var d=0;d<e.warmupTicks&&!(e.d3AlphaMin>0&&e.forceLayout.alpha()<e.d3AlphaMin);d++)e.forceLayout.tick();this.resetCountdown(),e.onFinishUpdate()}});function ib(r,e){var n=r instanceof Array?r:[r],i=new e;return i._destructor&&i._destructor(),{linkProp:function(o){return{default:i[o](),onChange:function(l,c){n.forEach(function(u){return c[u][o](l)})},triggerUpdate:!1}},linkMethod:function(o){return function(a){for(var l=arguments.length,c=new Array(l>1?l-1:0),u=1;u<l;u++)c[u-1]=arguments[u];var h=[];return n.forEach(function(d){var f=a[d],p=f[o].apply(f,c);p!==f&&h.push(p)}),h.length?h[0]:this}}}}var ER=800,wR=4,AR=5,rb=ib("forceGraph",Fh),RR=ib(["forceGraph","shadowGraph"],Fh),CR=Object.assign.apply(Object,Oi(["nodeColor","nodeAutoColorBy","nodeCanvasObject","nodeCanvasObjectMode","linkColor","linkAutoColorBy","linkLineDash","linkWidth","linkCanvasObject","linkCanvasObjectMode","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleOffset","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleCanvasObject","dagMode","dagLevelDistance","dagNodeFilter","onDagError","d3AlphaMin","d3AlphaDecay","d3VelocityDecay","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(r){return xc({},r,rb.linkProp(r))})).concat(Oi(["nodeRelSize","nodeId","nodeVal","nodeVisibility","linkSource","linkTarget","linkVisibility","linkCurvature"].map(function(r){return xc({},r,RR.linkProp(r))})))),NR=Object.assign.apply(Object,Oi(["d3Force","d3ReheatSimulation","emitParticle"].map(function(r){return xc({},r,rb.linkMethod(r))})));function kd(r){if(r.canvas){var e=r.canvas.width,n=r.canvas.height;e===300&&n===150&&(e=n=0);var i=window.devicePixelRatio;e/=i,n/=i,[r.canvas,r.shadowCanvas].forEach(function(o){o.style.width="".concat(r.width,"px"),o.style.height="".concat(r.height,"px"),o.width=r.width*i,o.height=r.height*i,!e&&!n&&o.getContext("2d").scale(i,i)});var s=kr(r.canvas).k;r.zoom.translateBy(r.zoom.__baseElem,(r.width-e)/2/s,(r.height-n)/2/s),r.needsRedraw=!0}}function sb(r){var e=window.devicePixelRatio;r.setTransform(e,0,0,e,0,0)}function ey(r,e,n){r.save(),sb(r),r.clearRect(0,0,e,n),r.restore()}var PR=ol({props:Co({width:{default:window.innerWidth,onChange:function(e,n){return kd(n)},triggerUpdate:!1},height:{default:window.innerHeight,onChange:function(e,n){return kd(n)},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,n){[e.nodes,e.links].every(function(s){return(s||[]).every(function(o){return!o.hasOwnProperty("__indexColor")})})&&n.colorTracker.reset(),[{type:"Node",objs:e.nodes},{type:"Link",objs:e.links}].forEach(i),n.forceGraph.graphData(e),n.shadowGraph.graphData(e);function i(s){var o=s.type,a=s.objs;a.filter(function(l){if(!l.hasOwnProperty("__indexColor"))return!0;var c=n.colorTracker.lookup(l.__indexColor);return!c||!c.hasOwnProperty("d")||c.d!==l}).forEach(function(l){l.__indexColor=n.colorTracker.register({type:o,d:l})})}},triggerUpdate:!1},backgroundColor:{onChange:function(e,n){n.canvas&&e&&(n.canvas.style.background=e)},triggerUpdate:!1},nodeLabel:{default:"name",triggerUpdate:!1},nodePointerAreaPaint:{onChange:function(e,n){n.shadowGraph.nodeCanvasObject(e?function(i,s,o){return e(i,i.__indexColor,s,o)}:null),n.flushShadowCanvas&&n.flushShadowCanvas()},triggerUpdate:!1},linkPointerAreaPaint:{onChange:function(e,n){n.shadowGraph.linkCanvasObject(e?function(i,s,o){return e(i,i.__indexColor,s,o)}:null),n.flushShadowCanvas&&n.flushShadowCanvas()},triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:4,triggerUpdate:!1},minZoom:{default:.01,onChange:function(e,n){n.zoom.scaleExtent([e,n.zoom.scaleExtent()[1]])},triggerUpdate:!1},maxZoom:{default:1e3,onChange:function(e,n){n.zoom.scaleExtent([n.zoom.scaleExtent()[0],e])},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},enableZoomInteraction:{default:!0,triggerUpdate:!1},enablePanInteraction:{default:!0,triggerUpdate:!1},enableZoomPanInteraction:{default:!0,triggerUpdate:!1},enablePointerInteraction:{default:!0,onChange:function(e,n){n.hoverObj=null},triggerUpdate:!1},autoPauseRedraw:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1},showPointerCursor:{default:!0,triggerUpdate:!1},onZoom:{triggerUpdate:!1},onZoomEnd:{triggerUpdate:!1},onRenderFramePre:{triggerUpdate:!1},onRenderFramePost:{triggerUpdate:!1}},CR),aliases:{stopAnimation:"pauseAnimation"},methods:Co({graph2ScreenCoords:function(e,n,i){var s=kr(e.canvas);return{x:n*s.k+s.x,y:i*s.k+s.y}},screen2GraphCoords:function(e,n,i){var s=kr(e.canvas);return{x:(n-s.x)/s.k,y:(i-s.y)/s.k}},centerAt:function(e,n,i,s){if(!e.canvas)return null;if(n!==void 0||i!==void 0){var o=Object.assign({},n!==void 0?{x:n}:{},i!==void 0?{y:i}:{});return s?e.tweenGroup.add(new Dh(a()).to(o,s).easing(Zr.Quadratic.Out).onUpdate(l).start()):l(o),this}return a();function a(){var c=kr(e.canvas);return{x:(e.width/2-c.x)/c.k,y:(e.height/2-c.y)/c.k}}function l(c){var u=c.x,h=c.y;e.zoom.translateTo(e.zoom.__baseElem,u===void 0?a().x:u,h===void 0?a().y:h),e.needsRedraw=!0}},zoom:function(e,n,i){if(!e.canvas)return null;if(n!==void 0)return i?e.tweenGroup.add(new Dh({k:s()}).to({k:n},i).easing(Zr.Quadratic.Out).onUpdate(function(a){var l=a.k;return o(l)}).start()):o(n),this;return s();function s(){return kr(e.canvas).k}function o(a){e.zoom.scaleTo(e.zoom.__baseElem,a),e.needsRedraw=!0}},zoomToFit:function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];var l=this.getGraphBbox.apply(this,o);if(l){var c={x:(l.x[0]+l.x[1])/2,y:(l.y[0]+l.y[1])/2},u=Math.max(1e-12,Math.min(1e12,(e.width-i*2)/(l.x[1]-l.x[0]),(e.height-i*2)/(l.y[1]-l.y[0])));this.centerAt(c.x,c.y,n),this.zoom(u,n)}return this},getGraphBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},i=Oe(e.nodeVal),s=function(l){return Math.sqrt(Math.max(0,i(l)||1))*e.nodeRelSize},o=e.graphData.nodes.filter(n).map(function(a){return{x:a.x,y:a.y,r:s(a)}});return o.length?{x:[Pp(o,function(a){return a.x-a.r}),Dp(o,function(a){return a.x+a.r})],y:[Pp(o,function(a){return a.y-a.r}),Dp(o,function(a){return a.y+a.r})]}:null},pauseAnimation:function(e){return e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId||this._animationCycle(),this},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},NR),stateInit:function(){return{lastSetZoom:1,zoom:zM(),forceGraph:new Fh,shadowGraph:new Fh().cooldownTicks(0).nodeColor("__indexColor").linkColor("__indexColor").isShadow(!0),colorTracker:new Fw,tweenGroup:new Pm}},init:function(e,n){var i=this;e.innerHTML="";var s=document.createElement("div");s.classList.add("force-graph-container"),s.style.position="relative",e.appendChild(s),n.canvas=document.createElement("canvas"),n.backgroundColor&&(n.canvas.style.background=n.backgroundColor),s.appendChild(n.canvas),n.shadowCanvas=document.createElement("canvas");var o=n.canvas.getContext("2d"),a=n.shadowCanvas.getContext("2d",{willReadFrequently:!0}),l={x:-1e12,y:-1e12},c=function(){var d=null,f=window.devicePixelRatio,p=l.x>0&&l.y>0?a.getImageData(l.x*f,l.y*f,1,1):null;return p&&(d=n.colorTracker.lookup(p.data)),d};Np(n.canvas).call(kM().subject(function(){if(!n.enableNodeDrag)return null;var h=c();return h&&h.type==="Node"?h.d:null}).on("start",function(h){var d=h.subject;d.__initialDragPos={x:d.x,y:d.y,fx:d.fx,fy:d.fy},h.active||(d.fx=d.x,d.fy=d.y),n.canvas.classList.add("grabbable")}).on("drag",function(h){var d=h.subject,f=d.__initialDragPos,p=h,m=kr(n.canvas).k,y={x:f.x+(p.x-f.x)/m-d.x,y:f.y+(p.y-f.y)/m-d.y};["x","y"].forEach(function(_){return d["f".concat(_)]=d[_]=f[_]+(p[_]-f[_])/m}),!(!d.__dragged&&AR>=Math.sqrt(WM(["x","y"].map(function(_){return Math.pow(h[_]-f[_],2)}))))&&(n.forceGraph.d3AlphaTarget(.3).resetCountdown(),n.isPointerDragging=!0,d.__dragged=!0,n.onNodeDrag(d,y))}).on("end",function(h){var d=h.subject,f=d.__initialDragPos,p={x:d.x-f.x,y:d.y-f.y};f.fx===void 0&&(d.fx=void 0),f.fy===void 0&&(d.fy=void 0),delete d.__initialDragPos,n.forceGraph.d3AlphaTarget()&&n.forceGraph.d3AlphaTarget(0).resetCountdown(),n.canvas.classList.remove("grabbable"),n.isPointerDragging=!1,d.__dragged&&(delete d.__dragged,n.onNodeDragEnd(d,p))})),n.zoom(n.zoom.__baseElem=Np(n.canvas)),n.zoom.__baseElem.on("dblclick.zoom",null),n.zoom.filter(function(h){return!h.button&&n.enableZoomPanInteraction&&(h.type!=="wheel"||Oe(n.enableZoomInteraction)(h))&&(h.type==="wheel"||Oe(n.enablePanInteraction)(h))}).on("zoom",function(h){var d=h.transform;[o,a].forEach(function(f){sb(f),f.translate(d.x,d.y),f.scale(d.k,d.k)}),n.isPointerDragging=!0,n.onZoom&&n.onZoom(Co(Co({},d),i.centerAt())),n.needsRedraw=!0}).on("end",function(h){n.isPointerDragging=!1,n.onZoomEnd&&n.onZoomEnd(Co(Co({},h.transform),i.centerAt()))}),kd(n),n.forceGraph.onNeedsRedraw(function(){return n.needsRedraw=!0}).onFinishUpdate(function(){kr(n.canvas).k===n.lastSetZoom&&n.graphData.nodes.length&&(n.zoom.scaleTo(n.zoom.__baseElem,n.lastSetZoom=wR/Math.cbrt(n.graphData.nodes.length)),n.needsRedraw=!0)}),n.tooltip=new Hx(s),["pointermove","pointerdown"].forEach(function(h){return s.addEventListener(h,function(d){h==="pointerdown"&&(n.isPointerPressed=!0,n.pointerDownEvent=d),!n.isPointerDragging&&d.type==="pointermove"&&n.onBackgroundClick&&(d.pressure>0||n.isPointerPressed)&&(d.pointerType==="mouse"||d.movementX===void 0||[d.movementX,d.movementY].some(function(m){return Math.abs(m)>1}))&&(n.isPointerDragging=!0);var f=p(s);l.x=d.pageX-f.left,l.y=d.pageY-f.top;function p(m){var y=m.getBoundingClientRect(),_=window.pageXOffset||document.documentElement.scrollLeft,g=window.pageYOffset||document.documentElement.scrollTop;return{top:y.top+g,left:y.left+_}}},{passive:!0})}),s.addEventListener("pointerup",function(h){if(n.isPointerPressed){if(n.isPointerPressed=!1,n.isPointerDragging){n.isPointerDragging=!1;return}var d=[h,n.pointerDownEvent];requestAnimationFrame(function(){if(h.button===0)if(n.hoverObj){var f=n["on".concat(n.hoverObj.type,"Click")];f&&f.apply(void 0,[n.hoverObj.d].concat(d))}else n.onBackgroundClick&&n.onBackgroundClick.apply(n,d);if(h.button===2)if(n.hoverObj){var p=n["on".concat(n.hoverObj.type,"RightClick")];p&&p.apply(void 0,[n.hoverObj.d].concat(d))}else n.onBackgroundRightClick&&n.onBackgroundRightClick.apply(n,d)})}},{passive:!0}),s.addEventListener("contextmenu",function(h){return!n.onBackgroundRightClick&&!n.onNodeRightClick&&!n.onLinkRightClick?!0:(h.preventDefault(),!1)}),n.forceGraph(o),n.shadowGraph(a);var u=HE(function(){ey(a,n.width,n.height),n.shadowGraph.linkWidth(function(d){return Oe(n.linkWidth)(d)+n.linkHoverPrecision});var h=kr(n.canvas);n.shadowGraph.globalScale(h.k).tickFrame()},ER);n.flushShadowCanvas=u.flush,(this._animationCycle=function h(){var d=!n.autoPauseRedraw||!!n.needsRedraw||n.forceGraph.isEngineRunning()||n.graphData.links.some(function(x){return x.__photons&&x.__photons.length});if(n.needsRedraw=!1,n.enablePointerInteraction){var f=n.isPointerDragging?null:c();if(f!==n.hoverObj){var p=n.hoverObj,m=p?p.type:null,y=f?f.type:null;if(m&&m!==y){var _=n["on".concat(m,"Hover")];_&&_(null,p.d)}if(y){var g=n["on".concat(y,"Hover")];g&&g(f.d,m===y?p.d:null)}n.tooltip.content(f&&Oe(n["".concat(f.type.toLowerCase(),"Label")])(f.d)||null),n.canvas.classList[(f&&n["on".concat(y,"Click")]||!f&&n.onBackgroundClick)&&Oe(n.showPointerCursor)(f==null?void 0:f.d)?"add":"remove"]("clickable"),n.hoverObj=f}d&&u()}if(d){ey(o,n.width,n.height);var v=kr(n.canvas).k;n.onRenderFramePre&&n.onRenderFramePre(o,v),n.forceGraph.globalScale(v).tickFrame(),n.onRenderFramePost&&n.onRenderFramePost(o,v)}n.tweenGroup.update(),n.animationFrameRequestId=requestAnimationFrame(h)})()},update:function(e){}}),zd={exports:{}},Gd,ty;function DR(){if(ty)return Gd;ty=1;var r="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return Gd=r,Gd}var Vd,ny;function LR(){if(ny)return Vd;ny=1;var r=DR();function e(){}function n(){}return n.resetWarningCache=e,Vd=function(){function i(a,l,c,u,h,d){if(d!==r){var f=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw f.name="Invariant Violation",f}}i.isRequired=i;function s(){return i}var o={array:i,bigint:i,bool:i,func:i,number:i,object:i,string:i,symbol:i,any:i,arrayOf:s,element:i,elementType:i,instanceOf:s,node:i,objectOf:s,oneOf:s,oneOfType:s,shape:s,exact:s,checkPropTypes:n,resetWarningCache:e};return o.PropTypes=o,o},Vd}var iy;function IR(){return iy||(iy=1,zd.exports=LR()()),zd.exports}var UR=IR();const R=mx(UR),id={width:R.number,height:R.number,graphData:R.shape({nodes:R.arrayOf(R.object).isRequired,links:R.arrayOf(R.object).isRequired}),backgroundColor:R.string,nodeRelSize:R.number,nodeId:R.string,nodeLabel:R.oneOfType([R.string,R.func]),nodeVal:R.oneOfType([R.number,R.string,R.func]),nodeVisibility:R.oneOfType([R.bool,R.string,R.func]),nodeColor:R.oneOfType([R.string,R.func]),nodeAutoColorBy:R.oneOfType([R.string,R.func]),onNodeHover:R.func,onNodeClick:R.func,linkSource:R.string,linkTarget:R.string,linkLabel:R.oneOfType([R.string,R.func]),linkVisibility:R.oneOfType([R.bool,R.string,R.func]),linkColor:R.oneOfType([R.string,R.func]),linkAutoColorBy:R.oneOfType([R.string,R.func]),linkWidth:R.oneOfType([R.number,R.string,R.func]),linkCurvature:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowLength:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowColor:R.oneOfType([R.string,R.func]),linkDirectionalArrowRelPos:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticles:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleSpeed:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleOffset:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleWidth:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleColor:R.oneOfType([R.string,R.func]),onLinkHover:R.func,onLinkClick:R.func,dagMode:R.oneOf(["td","bu","lr","rl","zin","zout","radialin","radialout"]),dagLevelDistance:R.number,dagNodeFilter:R.func,onDagError:R.func,d3AlphaMin:R.number,d3AlphaDecay:R.number,d3VelocityDecay:R.number,warmupTicks:R.number,cooldownTicks:R.number,cooldownTime:R.number,onEngineTick:R.func,onEngineStop:R.func,getGraphBbox:R.func},ob={zoomToFit:R.func,onNodeRightClick:R.func,onNodeDrag:R.func,onNodeDragEnd:R.func,onLinkRightClick:R.func,linkHoverPrecision:R.number,onBackgroundClick:R.func,onBackgroundRightClick:R.func,showPointerCursor:R.oneOfType([R.bool,R.func]),enablePointerInteraction:R.bool,enableNodeDrag:R.bool},km={showNavInfo:R.bool,nodeOpacity:R.number,nodeResolution:R.number,nodeThreeObject:R.oneOfType([R.object,R.string,R.func]),nodeThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),nodePositionUpdate:R.func,linkOpacity:R.number,linkResolution:R.number,linkCurveRotation:R.oneOfType([R.number,R.string,R.func]),linkMaterial:R.oneOfType([R.object,R.string,R.func]),linkThreeObject:R.oneOfType([R.object,R.string,R.func]),linkThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),linkPositionUpdate:R.func,linkDirectionalArrowResolution:R.number,linkDirectionalParticleResolution:R.number,linkDirectionalParticleThreeObject:R.oneOfType([R.object,R.string,R.func]),forceEngine:R.oneOf(["d3","ngraph"]),ngraphPhysics:R.object,numDimensions:R.oneOf([1,2,3])},FR=Object.assign({},id,ob,{linkLineDash:R.oneOfType([R.arrayOf(R.number),R.string,R.func]),nodeCanvasObjectMode:R.oneOfType([R.string,R.func]),nodeCanvasObject:R.func,nodePointerAreaPaint:R.func,linkCanvasObjectMode:R.oneOfType([R.string,R.func]),linkCanvasObject:R.func,linkPointerAreaPaint:R.func,linkDirectionalParticleCanvasObject:R.func,autoPauseRedraw:R.bool,minZoom:R.number,maxZoom:R.number,enableZoomInteraction:R.oneOfType([R.bool,R.func]),enablePanInteraction:R.oneOfType([R.bool,R.func]),onZoom:R.func,onZoomEnd:R.func,onRenderFramePre:R.func,onRenderFramePost:R.func});Object.assign({},id,ob,km,{enableNavigationControls:R.bool,controlType:R.oneOf(["trackball","orbit","fly"]),rendererConfig:R.object,extraRenderers:R.arrayOf(R.shape({render:R.func.isRequired}))});Object.assign({},id,km,{nodeDesc:R.oneOfType([R.string,R.func]),linkDesc:R.oneOfType([R.string,R.func])});Object.assign({},id,km,{markerAttrs:R.object,yOffset:R.number,glScale:R.number});const zm=bx(PR,{methodNames:["emitParticle","d3Force","d3ReheatSimulation","stopAnimation","pauseAnimation","resumeAnimation","centerAt","zoom","zoomToFit","getGraphBbox","screen2GraphCoords","graph2ScreenCoords"]});zm.displayName="ForceGraph2D";zm.propTypes=FR;/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const al="180",Pn={ROTATE:0,DOLLY:1,PAN:2},Xr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ab=0,jp=1,lb=2,OR=0,Gm=1,BR=2,Ti=3,Si=0,kt=1,zn=2,li=0,Mi=1,Ma=2,Ea=3,wa=4,pa=5,Gn=100,Vm=101,Hm=102,cb=103,ub=104,Gr=200,Wm=201,$m=202,jm=203,bc=204,Tc=205,qm=206,Xm=207,Ym=208,Km=209,Zm=210,kR=211,zR=212,GR=213,VR=214,Sc=0,Mc=1,Ec=2,Rs=3,wc=4,Ac=5,Rc=6,Cc=7,$c=0,hb=1,db=2,ci=0,fb=1,pb=2,mb=3,gb=4,HR=5,_b=6,yb=7,Qm=300,xr=301,br=302,Aa=303,Ra=304,mo=306,go=1e3,gr=1001,_o=1002,qt=1003,Jm=1004,Yr=1005,Tn=1006,ma=1007,si=1008,an=1009,ho=1010,fo=1011,tr=1012,An=1013,Wt=1014,hn=1015,Cn=1016,rd=1017,sd=1018,Ei=1020,od=35902,ad=35899,eg=1021,jc=1022,cn=1023,wi=1026,Ai=1027,qc=1028,ll=1029,Kr=1030,cl=1031,WR=1032,ul=1033,Ts=33776,Ss=33777,Ms=33778,Es=33779,Nc=35840,Pc=35841,Dc=35842,Lc=35843,Ca=36196,Na=37492,Pa=37496,Da=37808,La=37809,Ia=37810,Ua=37811,Fa=37812,Oa=37813,Ba=37814,ka=37815,za=37816,Ga=37817,Va=37818,Ha=37819,Wa=37820,$a=37821,ja=36492,qp=36494,Xp=36495,qa=36283,Xa=36284,Ya=36285,Ka=36286,$R=3200,jR=3201,is=0,vb=1,ri="",Bn="srgb",yo="srgb-linear",Za="linear",Pe="srgb",qR=0,Js=7680,XR=7681,YR=7682,KR=7683,ZR=34055,QR=34056,JR=5386,eC=512,tC=513,nC=514,iC=515,rC=516,sC=517,oC=518,Yp=519,tg=512,ld=513,ng=514,cd=515,ig=516,rg=517,sg=518,og=519,Oh=35044,oa=35048,ry="300 es",Jn=2e3,Cs=2001,aa={COMPUTE:"compute",RENDER:"render"};class ss{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){const i=this._listeners;if(i===void 0)return;const s=i[e];if(s!==void 0){const o=s.indexOf(n);o!==-1&&s.splice(o,1)}}dispatchEvent(e){const n=this._listeners;if(n===void 0)return;const i=n[e.type];if(i!==void 0){e.target=this;const s=i.slice(0);for(let o=0,a=s.length;o<a;o++)s[o].call(this,e);e.target=null}}}const Un=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let sy=1234567;const cc=Math.PI/180,vo=180/Math.PI;function Jr(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Un[r&255]+Un[r>>8&255]+Un[r>>16&255]+Un[r>>24&255]+"-"+Un[e&255]+Un[e>>8&255]+"-"+Un[e>>16&15|64]+Un[e>>24&255]+"-"+Un[n&63|128]+Un[n>>8&255]+"-"+Un[n>>16&255]+Un[n>>24&255]+Un[i&255]+Un[i>>8&255]+Un[i>>16&255]+Un[i>>24&255]).toLowerCase()}function mt(r,e,n){return Math.max(e,Math.min(n,r))}function ag(r,e){return(r%e+e)%e}function aC(r,e,n,i,s){return i+(r-e)*(s-i)/(n-e)}function lC(r,e,n){return r!==e?(n-r)/(e-r):0}function uc(r,e,n){return(1-n)*r+n*e}function cC(r,e,n,i){return uc(r,e,1-Math.exp(-n*i))}function uC(r,e=1){return e-Math.abs(ag(r,e*2)-e)}function hC(r,e,n){return r<=e?0:r>=n?1:(r=(r-e)/(n-e),r*r*(3-2*r))}function dC(r,e,n){return r<=e?0:r>=n?1:(r=(r-e)/(n-e),r*r*r*(r*(r*6-15)+10))}function fC(r,e){return r+Math.floor(Math.random()*(e-r+1))}function pC(r,e){return r+Math.random()*(e-r)}function mC(r){return r*(.5-Math.random())}function gC(r){r!==void 0&&(sy=r);let e=sy+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function _C(r){return r*cc}function yC(r){return r*vo}function vC(r){return(r&r-1)===0&&r!==0}function xC(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function bC(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function TC(r,e,n,i,s){const o=Math.cos,a=Math.sin,l=o(n/2),c=a(n/2),u=o((e+i)/2),h=a((e+i)/2),d=o((e-i)/2),f=a((e-i)/2),p=o((i-e)/2),m=a((i-e)/2);switch(s){case"XYX":r.set(l*h,c*d,c*f,l*u);break;case"YZY":r.set(c*f,l*h,c*d,l*u);break;case"ZXZ":r.set(c*d,c*f,l*h,l*u);break;case"XZX":r.set(l*h,c*m,c*p,l*u);break;case"YXY":r.set(c*p,l*h,c*m,l*u);break;case"ZYZ":r.set(c*m,c*p,l*h,l*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Qn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function pt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Bh={DEG2RAD:cc,RAD2DEG:vo,generateUUID:Jr,clamp:mt,euclideanModulo:ag,mapLinear:aC,inverseLerp:lC,lerp:uc,damp:cC,pingpong:uC,smoothstep:hC,smootherstep:dC,randInt:fC,randFloat:pC,randFloatSpread:mC,seededRandom:gC,degToRad:_C,radToDeg:yC,isPowerOfTwo:vC,ceilPowerOfTwo:xC,floorPowerOfTwo:bC,setQuaternionFromProperEuler:TC,normalize:pt,denormalize:Qn};class de{constructor(e=0,n=0){de.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=mt(this.x,e.x,n.x),this.y=mt(this.y,e.y,n.y),this}clampScalar(e,n){return this.x=mt(this.x,e,n),this.y=mt(this.y,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(mt(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(mt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),o=this.x-e.x,a=this.y-e.y;return this.x=o*i-a*s+e.x,this.y=o*s+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class nr{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,o,a,l){let c=i[s+0],u=i[s+1],h=i[s+2],d=i[s+3];const f=o[a+0],p=o[a+1],m=o[a+2],y=o[a+3];if(l===0){e[n+0]=c,e[n+1]=u,e[n+2]=h,e[n+3]=d;return}if(l===1){e[n+0]=f,e[n+1]=p,e[n+2]=m,e[n+3]=y;return}if(d!==y||c!==f||u!==p||h!==m){let _=1-l;const g=c*f+u*p+h*m+d*y,v=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const T=Math.sqrt(x),S=Math.atan2(T,g*v);_=Math.sin(_*S)/T,l=Math.sin(l*S)/T}const b=l*v;if(c=c*_+f*b,u=u*_+p*b,h=h*_+m*b,d=d*_+y*b,_===1-l){const T=1/Math.sqrt(c*c+u*u+h*h+d*d);c*=T,u*=T,h*=T,d*=T}}e[n]=c,e[n+1]=u,e[n+2]=h,e[n+3]=d}static multiplyQuaternionsFlat(e,n,i,s,o,a){const l=i[s],c=i[s+1],u=i[s+2],h=i[s+3],d=o[a],f=o[a+1],p=o[a+2],m=o[a+3];return e[n]=l*m+h*d+c*p-u*f,e[n+1]=c*m+h*f+u*d-l*p,e[n+2]=u*m+h*p+l*f-c*d,e[n+3]=h*m-l*d-c*f-u*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,s=e._y,o=e._z,a=e._order,l=Math.cos,c=Math.sin,u=l(i/2),h=l(s/2),d=l(o/2),f=c(i/2),p=c(s/2),m=c(o/2);switch(a){case"XYZ":this._x=f*h*d+u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d-f*p*m;break;case"YXZ":this._x=f*h*d+u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d+f*p*m;break;case"ZXY":this._x=f*h*d-u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d-f*p*m;break;case"ZYX":this._x=f*h*d-u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d+f*p*m;break;case"YZX":this._x=f*h*d+u*p*m,this._y=u*p*d+f*h*m,this._z=u*h*m-f*p*d,this._w=u*h*d-f*p*m;break;case"XZY":this._x=f*h*d-u*p*m,this._y=u*p*d-f*h*m,this._z=u*h*m+f*p*d,this._w=u*h*d+f*p*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],o=n[8],a=n[1],l=n[5],c=n[9],u=n[2],h=n[6],d=n[10],f=i+l+d;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(h-c)*p,this._y=(o-u)*p,this._z=(a-s)*p}else if(i>l&&i>d){const p=2*Math.sqrt(1+i-l-d);this._w=(h-c)/p,this._x=.25*p,this._y=(s+a)/p,this._z=(o+u)/p}else if(l>d){const p=2*Math.sqrt(1+l-i-d);this._w=(o-u)/p,this._x=(s+a)/p,this._y=.25*p,this._z=(c+h)/p}else{const p=2*Math.sqrt(1+d-i-l);this._w=(a-s)/p,this._x=(o+u)/p,this._y=(c+h)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(mt(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,o=e._z,a=e._w,l=n._x,c=n._y,u=n._z,h=n._w;return this._x=i*h+a*l+s*u-o*c,this._y=s*h+a*c+o*l-i*u,this._z=o*h+a*u+i*c-s*l,this._w=a*h-i*l-s*c-o*u,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,o=this._z,a=this._w;let l=a*e._w+i*e._x+s*e._y+o*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=i,this._y=s,this._z=o,this;const c=1-l*l;if(c<=Number.EPSILON){const p=1-n;return this._w=p*a+n*this._w,this._x=p*i+n*this._x,this._y=p*s+n*this._y,this._z=p*o+n*this._z,this.normalize(),this}const u=Math.sqrt(c),h=Math.atan2(u,l),d=Math.sin((1-n)*h)/u,f=Math.sin(n*h)/u;return this._w=a*d+this._w*f,this._x=i*d+this._x*f,this._y=s*d+this._y*f,this._z=o*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),o=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),o*Math.sin(n),o*Math.cos(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(e=0,n=0,i=0){L.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(oy.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(oy.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,o=e.elements;return this.x=o[0]*n+o[3]*i+o[6]*s,this.y=o[1]*n+o[4]*i+o[7]*s,this.z=o[2]*n+o[5]*i+o[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,o=e.elements,a=1/(o[3]*n+o[7]*i+o[11]*s+o[15]);return this.x=(o[0]*n+o[4]*i+o[8]*s+o[12])*a,this.y=(o[1]*n+o[5]*i+o[9]*s+o[13])*a,this.z=(o[2]*n+o[6]*i+o[10]*s+o[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,o=e.x,a=e.y,l=e.z,c=e.w,u=2*(a*s-l*i),h=2*(l*n-o*s),d=2*(o*i-a*n);return this.x=n+c*u+a*d-l*h,this.y=i+c*h+l*u-o*d,this.z=s+c*d+o*h-a*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*s,this.y=o[1]*n+o[5]*i+o[9]*s,this.z=o[2]*n+o[6]*i+o[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=mt(this.x,e.x,n.x),this.y=mt(this.y,e.y,n.y),this.z=mt(this.z,e.z,n.z),this}clampScalar(e,n){return this.x=mt(this.x,e,n),this.y=mt(this.y,e,n),this.z=mt(this.z,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(mt(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,o=e.z,a=n.x,l=n.y,c=n.z;return this.x=s*c-o*l,this.y=o*a-i*c,this.z=i*l-s*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Hd.copy(this).projectOnVector(e),this.sub(Hd)}reflect(e){return this.sub(Hd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(mt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(e),this.y=n,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Hd=new L,oy=new nr;class ut{constructor(e,n,i,s,o,a,l,c,u){ut.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,s,o,a,l,c,u)}set(e,n,i,s,o,a,l,c,u){const h=this.elements;return h[0]=e,h[1]=s,h[2]=l,h[3]=n,h[4]=o,h[5]=c,h[6]=i,h[7]=a,h[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,o=this.elements,a=i[0],l=i[3],c=i[6],u=i[1],h=i[4],d=i[7],f=i[2],p=i[5],m=i[8],y=s[0],_=s[3],g=s[6],v=s[1],x=s[4],b=s[7],T=s[2],S=s[5],M=s[8];return o[0]=a*y+l*v+c*T,o[3]=a*_+l*x+c*S,o[6]=a*g+l*b+c*M,o[1]=u*y+h*v+d*T,o[4]=u*_+h*x+d*S,o[7]=u*g+h*b+d*M,o[2]=f*y+p*v+m*T,o[5]=f*_+p*x+m*S,o[8]=f*g+p*b+m*M,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8];return n*a*h-n*l*u-i*o*h+i*l*c+s*o*u-s*a*c}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8],d=h*a-l*u,f=l*c-h*o,p=u*o-a*c,m=n*d+i*f+s*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/m;return e[0]=d*y,e[1]=(s*u-h*i)*y,e[2]=(l*i-s*a)*y,e[3]=f*y,e[4]=(h*n-s*c)*y,e[5]=(s*o-l*n)*y,e[6]=p*y,e[7]=(i*c-u*n)*y,e[8]=(a*n-i*o)*y,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,o,a,l){const c=Math.cos(o),u=Math.sin(o);return this.set(i*c,i*u,-i*(c*a+u*l)+a+e,-s*u,s*c,-s*(-u*a+c*l)+l+n,0,0,1),this}scale(e,n){return this.premultiply(Wd.makeScale(e,n)),this}rotate(e){return this.premultiply(Wd.makeRotation(-e)),this}translate(e,n){return this.premultiply(Wd.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Wd=new ut;function lg(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Ic(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function xb(){const r=Ic("canvas");return r.style.display="block",r}const ay={};function Ri(r){r in ay||(ay[r]=!0,console.warn(r))}function SC(r,e,n){return new Promise(function(i,s){function o(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:s();break;case r.TIMEOUT_EXPIRED:setTimeout(o,n);break;default:i()}}setTimeout(o,n)})}const ly=new ut().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),cy=new ut().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function MC(){const r={enabled:!0,workingColorSpace:yo,spaces:{},convert:function(s,o,a){return this.enabled===!1||o===a||!o||!a||(this.spaces[o].transfer===Pe&&(s.r=es(s.r),s.g=es(s.g),s.b=es(s.b)),this.spaces[o].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[o].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===Pe&&(s.r=ga(s.r),s.g=ga(s.g),s.b=ga(s.b))),s},workingToColorSpace:function(s,o){return this.convert(s,this.workingColorSpace,o)},colorSpaceToWorking:function(s,o){return this.convert(s,o,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===ri?Za:this.spaces[s].transfer},getToneMappingMode:function(s){return this.spaces[s].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(s,o=this.workingColorSpace){return s.fromArray(this.spaces[o].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,o,a){return s.copy(this.spaces[o].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(s,o){return Ri("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(s,o)},toWorkingColorSpace:function(s,o){return Ri("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(s,o)}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[yo]:{primaries:e,whitePoint:i,transfer:Za,toXYZ:ly,fromXYZ:cy,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:Bn},outputColorSpaceConfig:{drawingBufferColorSpace:Bn}},[Bn]:{primaries:e,whitePoint:i,transfer:Pe,toXYZ:ly,fromXYZ:cy,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:Bn}}}),r}const Je=MC();function es(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function ga(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let No;class EC{static getDataURL(e,n="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{No===void 0&&(No=Ic("canvas")),No.width=e.width,No.height=e.height;const s=No.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),i=No}return i.toDataURL(n)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=Ic("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),o=s.data;for(let a=0;a<o.length;a++)o[a]=es(o[a]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(es(n[i]/255)*255):n[i]=es(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let wC=0;class cg{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:wC++}),this.uuid=Jr(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const n=this.data;return typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement?e.set(n.videoWidth,n.videoHeight,0):n instanceof VideoFrame?e.set(n.displayHeight,n.displayWidth,0):n!==null?e.set(n.width,n.height,n.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let o;if(Array.isArray(s)){o=[];for(let a=0,l=s.length;a<l;a++)s[a].isDataTexture?o.push($d(s[a].image)):o.push($d(s[a]))}else o=$d(s);i.url=o}return n||(e.images[this.uuid]=i),i}}function $d(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?EC.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let AC=0;const jd=new L;class fn extends ss{constructor(e=fn.DEFAULT_IMAGE,n=fn.DEFAULT_MAPPING,i=gr,s=gr,o=Tn,a=si,l=cn,c=an,u=fn.DEFAULT_ANISOTROPY,h=ri){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:AC++}),this.uuid=Jr(),this.name="",this.source=new cg(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=o,this.minFilter=a,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=c,this.offset=new de(0,0),this.repeat=new de(1,1),this.center=new de(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ut,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(jd).x}get height(){return this.source.getSize(jd).y}get depth(){return this.source.getSize(jd).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Texture.setValues(): property '${n}' does not exist.`);continue}s&&i&&s.isVector2&&i.isVector2||s&&i&&s.isVector3&&i.isVector3||s&&i&&s.isMatrix3&&i.isMatrix3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Qm)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case go:e.x=e.x-Math.floor(e.x);break;case gr:e.x=e.x<0?0:1;break;case _o:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case go:e.y=e.y-Math.floor(e.y);break;case gr:e.y=e.y<0?0:1;break;case _o:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}fn.DEFAULT_IMAGE=null;fn.DEFAULT_MAPPING=Qm;fn.DEFAULT_ANISOTROPY=1;class et{constructor(e=0,n=0,i=0,s=1){et.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,o=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*s+a[12]*o,this.y=a[1]*n+a[5]*i+a[9]*s+a[13]*o,this.z=a[2]*n+a[6]*i+a[10]*s+a[14]*o,this.w=a[3]*n+a[7]*i+a[11]*s+a[15]*o,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,o;const c=e.elements,u=c[0],h=c[4],d=c[8],f=c[1],p=c[5],m=c[9],y=c[2],_=c[6],g=c[10];if(Math.abs(h-f)<.01&&Math.abs(d-y)<.01&&Math.abs(m-_)<.01){if(Math.abs(h+f)<.1&&Math.abs(d+y)<.1&&Math.abs(m+_)<.1&&Math.abs(u+p+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const x=(u+1)/2,b=(p+1)/2,T=(g+1)/2,S=(h+f)/4,M=(d+y)/4,A=(m+_)/4;return x>b&&x>T?x<.01?(i=0,s=.707106781,o=.707106781):(i=Math.sqrt(x),s=S/i,o=M/i):b>T?b<.01?(i=.707106781,s=0,o=.707106781):(s=Math.sqrt(b),i=S/s,o=A/s):T<.01?(i=.707106781,s=.707106781,o=0):(o=Math.sqrt(T),i=M/o,s=A/o),this.set(i,s,o,n),this}let v=Math.sqrt((_-m)*(_-m)+(d-y)*(d-y)+(f-h)*(f-h));return Math.abs(v)<.001&&(v=1),this.x=(_-m)/v,this.y=(d-y)/v,this.z=(f-h)/v,this.w=Math.acos((u+p+g-1)/2),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this.w=n[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=mt(this.x,e.x,n.x),this.y=mt(this.y,e.y,n.y),this.z=mt(this.z,e.z,n.z),this.w=mt(this.w,e.w,n.w),this}clampScalar(e,n){return this.x=mt(this.x,e,n),this.y=mt(this.y,e,n),this.z=mt(this.z,e,n),this.w=mt(this.w,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(mt(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class To extends ss{constructor(e=1,n=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Tn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=i.depth,this.scissor=new et(0,0,e,n),this.scissorTest=!1,this.viewport=new et(0,0,e,n);const s={width:e,height:n,depth:i.depth},o=new fn(s);this.textures=[];const a=i.count;for(let l=0;l<a;l++)this.textures[l]=o.clone(),this.textures[l].isRenderTargetTexture=!0,this.textures[l].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const n={minFilter:Tn,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(n.mapping=e.mapping),e.wrapS!==void 0&&(n.wrapS=e.wrapS),e.wrapT!==void 0&&(n.wrapT=e.wrapT),e.wrapR!==void 0&&(n.wrapR=e.wrapR),e.magFilter!==void 0&&(n.magFilter=e.magFilter),e.minFilter!==void 0&&(n.minFilter=e.minFilter),e.format!==void 0&&(n.format=e.format),e.type!==void 0&&(n.type=e.type),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(n.colorSpace=e.colorSpace),e.flipY!==void 0&&(n.flipY=e.flipY),e.generateMipmaps!==void 0&&(n.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(n.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(n)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let s=0,o=this.textures.length;s<o;s++)this.textures[s].image.width=e,this.textures[s].image.height=n,this.textures[s].image.depth=i,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++){this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const s=Object.assign({},e.textures[n].image);this.textures[n].source=new cg(s)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ns extends To{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}}class ug extends fn{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=qt,this.minFilter=qt,this.wrapR=gr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class RC extends fn{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=qt,this.minFilter=qt,this.wrapR=gr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class So{constructor(e=new L(1/0,1/0,1/0),n=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(Hi.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(Hi.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Hi.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const o=i.getAttribute("position");if(n===!0&&o!==void 0&&e.isInstancedMesh!==!0)for(let a=0,l=o.count;a<l;a++)e.isMesh===!0?e.getVertexPosition(a,Hi):Hi.fromBufferAttribute(o,a),Hi.applyMatrix4(e.matrixWorld),this.expandByPoint(Hi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),hu.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),hu.copy(i.boundingBox)),hu.applyMatrix4(e.matrixWorld),this.union(hu)}const s=e.children;for(let o=0,a=s.length;o<a;o++)this.expandByObject(s[o],n);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Hi),Hi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(El),du.subVectors(this.max,El),Po.subVectors(e.a,El),Do.subVectors(e.b,El),Lo.subVectors(e.c,El),hs.subVectors(Do,Po),ds.subVectors(Lo,Do),Vs.subVectors(Po,Lo);let n=[0,-hs.z,hs.y,0,-ds.z,ds.y,0,-Vs.z,Vs.y,hs.z,0,-hs.x,ds.z,0,-ds.x,Vs.z,0,-Vs.x,-hs.y,hs.x,0,-ds.y,ds.x,0,-Vs.y,Vs.x,0];return!qd(n,Po,Do,Lo,du)||(n=[1,0,0,0,1,0,0,0,1],!qd(n,Po,Do,Lo,du))?!1:(fu.crossVectors(hs,ds),n=[fu.x,fu.y,fu.z],qd(n,Po,Do,Lo,du))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Hi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Hi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Pr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Pr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Pr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Pr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Pr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Pr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Pr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Pr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Pr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Pr=[new L,new L,new L,new L,new L,new L,new L,new L],Hi=new L,hu=new So,Po=new L,Do=new L,Lo=new L,hs=new L,ds=new L,Vs=new L,El=new L,du=new L,fu=new L,Hs=new L;function qd(r,e,n,i,s){for(let o=0,a=r.length-3;o<=a;o+=3){Hs.fromArray(r,o);const l=s.x*Math.abs(Hs.x)+s.y*Math.abs(Hs.y)+s.z*Math.abs(Hs.z),c=e.dot(Hs),u=n.dot(Hs),h=i.dot(Hs);if(Math.max(-Math.max(c,u,h),Math.min(c,u,h))>l)return!1}return!0}const CC=new So,wl=new L,Xd=new L;class Xc{constructor(e=new L,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):CC.setFromPoints(e).getCenter(i);let s=0;for(let o=0,a=e.length;o<a;o++)s=Math.max(s,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;wl.subVectors(e,this.center);const n=wl.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(wl,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Xd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(wl.copy(e.center).add(Xd)),this.expandByPoint(wl.copy(e.center).sub(Xd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Dr=new L,Yd=new L,pu=new L,fs=new L,Kd=new L,mu=new L,Zd=new L;class ud{constructor(e=new L,n=new L(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Dr)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Dr.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Dr.copy(this.origin).addScaledVector(this.direction,n),Dr.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){Yd.copy(e).add(n).multiplyScalar(.5),pu.copy(n).sub(e).normalize(),fs.copy(this.origin).sub(Yd);const o=e.distanceTo(n)*.5,a=-this.direction.dot(pu),l=fs.dot(this.direction),c=-fs.dot(pu),u=fs.lengthSq(),h=Math.abs(1-a*a);let d,f,p,m;if(h>0)if(d=a*c-l,f=a*l-c,m=o*h,d>=0)if(f>=-m)if(f<=m){const y=1/h;d*=y,f*=y,p=d*(d+a*f+2*l)+f*(a*d+f+2*c)+u}else f=o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;else f=-o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;else f<=-m?(d=Math.max(0,-(-a*o+l)),f=d>0?-o:Math.min(Math.max(-o,-c),o),p=-d*d+f*(f+2*c)+u):f<=m?(d=0,f=Math.min(Math.max(-o,-c),o),p=f*(f+2*c)+u):(d=Math.max(0,-(a*o+l)),f=d>0?o:Math.min(Math.max(-o,-c),o),p=-d*d+f*(f+2*c)+u);else f=a>0?-o:o,d=Math.max(0,-(a*f+l)),p=-d*d+f*(f+2*c)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,d),s&&s.copy(Yd).addScaledVector(pu,f),p}intersectSphere(e,n){Dr.subVectors(e.center,this.origin);const i=Dr.dot(this.direction),s=Dr.dot(Dr)-i*i,o=e.radius*e.radius;if(s>o)return null;const a=Math.sqrt(o-s),l=i-a,c=i+a;return c<0?null:l<0?this.at(c,n):this.at(l,n)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,o,a,l,c;const u=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,f=this.origin;return u>=0?(i=(e.min.x-f.x)*u,s=(e.max.x-f.x)*u):(i=(e.max.x-f.x)*u,s=(e.min.x-f.x)*u),h>=0?(o=(e.min.y-f.y)*h,a=(e.max.y-f.y)*h):(o=(e.max.y-f.y)*h,a=(e.min.y-f.y)*h),i>a||o>s||((o>i||isNaN(i))&&(i=o),(a<s||isNaN(s))&&(s=a),d>=0?(l=(e.min.z-f.z)*d,c=(e.max.z-f.z)*d):(l=(e.max.z-f.z)*d,c=(e.min.z-f.z)*d),i>c||l>s)||((l>i||i!==i)&&(i=l),(c<s||s!==s)&&(s=c),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,Dr)!==null}intersectTriangle(e,n,i,s,o){Kd.subVectors(n,e),mu.subVectors(i,e),Zd.crossVectors(Kd,mu);let a=this.direction.dot(Zd),l;if(a>0){if(s)return null;l=1}else if(a<0)l=-1,a=-a;else return null;fs.subVectors(this.origin,e);const c=l*this.direction.dot(mu.crossVectors(fs,mu));if(c<0)return null;const u=l*this.direction.dot(Kd.cross(fs));if(u<0||c+u>a)return null;const h=-l*fs.dot(Zd);return h<0?null:this.at(h/a,o)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class bt{constructor(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_){bt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_)}set(e,n,i,s,o,a,l,c,u,h,d,f,p,m,y,_){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=s,g[1]=o,g[5]=a,g[9]=l,g[13]=c,g[2]=u,g[6]=h,g[10]=d,g[14]=f,g[3]=p,g[7]=m,g[11]=y,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new bt().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/Io.setFromMatrixColumn(e,0).length(),o=1/Io.setFromMatrixColumn(e,1).length(),a=1/Io.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*o,n[5]=i[5]*o,n[6]=i[6]*o,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,o=e.z,a=Math.cos(i),l=Math.sin(i),c=Math.cos(s),u=Math.sin(s),h=Math.cos(o),d=Math.sin(o);if(e.order==="XYZ"){const f=a*h,p=a*d,m=l*h,y=l*d;n[0]=c*h,n[4]=-c*d,n[8]=u,n[1]=p+m*u,n[5]=f-y*u,n[9]=-l*c,n[2]=y-f*u,n[6]=m+p*u,n[10]=a*c}else if(e.order==="YXZ"){const f=c*h,p=c*d,m=u*h,y=u*d;n[0]=f+y*l,n[4]=m*l-p,n[8]=a*u,n[1]=a*d,n[5]=a*h,n[9]=-l,n[2]=p*l-m,n[6]=y+f*l,n[10]=a*c}else if(e.order==="ZXY"){const f=c*h,p=c*d,m=u*h,y=u*d;n[0]=f-y*l,n[4]=-a*d,n[8]=m+p*l,n[1]=p+m*l,n[5]=a*h,n[9]=y-f*l,n[2]=-a*u,n[6]=l,n[10]=a*c}else if(e.order==="ZYX"){const f=a*h,p=a*d,m=l*h,y=l*d;n[0]=c*h,n[4]=m*u-p,n[8]=f*u+y,n[1]=c*d,n[5]=y*u+f,n[9]=p*u-m,n[2]=-u,n[6]=l*c,n[10]=a*c}else if(e.order==="YZX"){const f=a*c,p=a*u,m=l*c,y=l*u;n[0]=c*h,n[4]=y-f*d,n[8]=m*d+p,n[1]=d,n[5]=a*h,n[9]=-l*h,n[2]=-u*h,n[6]=p*d+m,n[10]=f-y*d}else if(e.order==="XZY"){const f=a*c,p=a*u,m=l*c,y=l*u;n[0]=c*h,n[4]=-d,n[8]=u*h,n[1]=f*d+y,n[5]=a*h,n[9]=p*d-m,n[2]=m*d-p,n[6]=l*h,n[10]=y*d+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(NC,e,PC)}lookAt(e,n,i){const s=this.elements;return gi.subVectors(e,n),gi.lengthSq()===0&&(gi.z=1),gi.normalize(),ps.crossVectors(i,gi),ps.lengthSq()===0&&(Math.abs(i.z)===1?gi.x+=1e-4:gi.z+=1e-4,gi.normalize(),ps.crossVectors(i,gi)),ps.normalize(),gu.crossVectors(gi,ps),s[0]=ps.x,s[4]=gu.x,s[8]=gi.x,s[1]=ps.y,s[5]=gu.y,s[9]=gi.y,s[2]=ps.z,s[6]=gu.z,s[10]=gi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,o=this.elements,a=i[0],l=i[4],c=i[8],u=i[12],h=i[1],d=i[5],f=i[9],p=i[13],m=i[2],y=i[6],_=i[10],g=i[14],v=i[3],x=i[7],b=i[11],T=i[15],S=s[0],M=s[4],A=s[8],E=s[12],w=s[1],N=s[5],D=s[9],F=s[13],k=s[2],j=s[6],$=s[10],G=s[14],B=s[3],J=s[7],Y=s[11],re=s[15];return o[0]=a*S+l*w+c*k+u*B,o[4]=a*M+l*N+c*j+u*J,o[8]=a*A+l*D+c*$+u*Y,o[12]=a*E+l*F+c*G+u*re,o[1]=h*S+d*w+f*k+p*B,o[5]=h*M+d*N+f*j+p*J,o[9]=h*A+d*D+f*$+p*Y,o[13]=h*E+d*F+f*G+p*re,o[2]=m*S+y*w+_*k+g*B,o[6]=m*M+y*N+_*j+g*J,o[10]=m*A+y*D+_*$+g*Y,o[14]=m*E+y*F+_*G+g*re,o[3]=v*S+x*w+b*k+T*B,o[7]=v*M+x*N+b*j+T*J,o[11]=v*A+x*D+b*$+T*Y,o[15]=v*E+x*F+b*G+T*re,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],o=e[12],a=e[1],l=e[5],c=e[9],u=e[13],h=e[2],d=e[6],f=e[10],p=e[14],m=e[3],y=e[7],_=e[11],g=e[15];return m*(+o*c*d-s*u*d-o*l*f+i*u*f+s*l*p-i*c*p)+y*(+n*c*p-n*u*f+o*a*f-s*a*p+s*u*h-o*c*h)+_*(+n*u*d-n*l*p-o*a*d+i*a*p+o*l*h-i*u*h)+g*(-s*l*h-n*c*d+n*l*f+s*a*d-i*a*f+i*c*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],o=e[3],a=e[4],l=e[5],c=e[6],u=e[7],h=e[8],d=e[9],f=e[10],p=e[11],m=e[12],y=e[13],_=e[14],g=e[15],v=d*_*u-y*f*u+y*c*p-l*_*p-d*c*g+l*f*g,x=m*f*u-h*_*u-m*c*p+a*_*p+h*c*g-a*f*g,b=h*y*u-m*d*u+m*l*p-a*y*p-h*l*g+a*d*g,T=m*d*c-h*y*c-m*l*f+a*y*f+h*l*_-a*d*_,S=n*v+i*x+s*b+o*T;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return e[0]=v*M,e[1]=(y*f*o-d*_*o-y*s*p+i*_*p+d*s*g-i*f*g)*M,e[2]=(l*_*o-y*c*o+y*s*u-i*_*u-l*s*g+i*c*g)*M,e[3]=(d*c*o-l*f*o-d*s*u+i*f*u+l*s*p-i*c*p)*M,e[4]=x*M,e[5]=(h*_*o-m*f*o+m*s*p-n*_*p-h*s*g+n*f*g)*M,e[6]=(m*c*o-a*_*o-m*s*u+n*_*u+a*s*g-n*c*g)*M,e[7]=(a*f*o-h*c*o+h*s*u-n*f*u-a*s*p+n*c*p)*M,e[8]=b*M,e[9]=(m*d*o-h*y*o-m*i*p+n*y*p+h*i*g-n*d*g)*M,e[10]=(a*y*o-m*l*o+m*i*u-n*y*u-a*i*g+n*l*g)*M,e[11]=(h*l*o-a*d*o-h*i*u+n*d*u+a*i*p-n*l*p)*M,e[12]=T*M,e[13]=(h*y*s-m*d*s+m*i*f-n*y*f-h*i*_+n*d*_)*M,e[14]=(m*l*s-a*y*s-m*i*c+n*y*c+a*i*_-n*l*_)*M,e[15]=(a*d*s-h*l*s+h*i*c-n*d*c-a*i*f+n*l*f)*M,this}scale(e){const n=this.elements,i=e.x,s=e.y,o=e.z;return n[0]*=i,n[4]*=s,n[8]*=o,n[1]*=i,n[5]*=s,n[9]*=o,n[2]*=i,n[6]*=s,n[10]*=o,n[3]*=i,n[7]*=s,n[11]*=o,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),o=1-i,a=e.x,l=e.y,c=e.z,u=o*a,h=o*l;return this.set(u*a+i,u*l-s*c,u*c+s*l,0,u*l+s*c,h*l+i,h*c-s*a,0,u*c-s*l,h*c+s*a,o*c*c+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,o,a){return this.set(1,i,o,0,e,1,a,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,o=n._x,a=n._y,l=n._z,c=n._w,u=o+o,h=a+a,d=l+l,f=o*u,p=o*h,m=o*d,y=a*h,_=a*d,g=l*d,v=c*u,x=c*h,b=c*d,T=i.x,S=i.y,M=i.z;return s[0]=(1-(y+g))*T,s[1]=(p+b)*T,s[2]=(m-x)*T,s[3]=0,s[4]=(p-b)*S,s[5]=(1-(f+g))*S,s[6]=(_+v)*S,s[7]=0,s[8]=(m+x)*M,s[9]=(_-v)*M,s[10]=(1-(f+y))*M,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let o=Io.set(s[0],s[1],s[2]).length();const a=Io.set(s[4],s[5],s[6]).length(),l=Io.set(s[8],s[9],s[10]).length();this.determinant()<0&&(o=-o),e.x=s[12],e.y=s[13],e.z=s[14],Wi.copy(this);const u=1/o,h=1/a,d=1/l;return Wi.elements[0]*=u,Wi.elements[1]*=u,Wi.elements[2]*=u,Wi.elements[4]*=h,Wi.elements[5]*=h,Wi.elements[6]*=h,Wi.elements[8]*=d,Wi.elements[9]*=d,Wi.elements[10]*=d,n.setFromRotationMatrix(Wi),i.x=o,i.y=a,i.z=l,this}makePerspective(e,n,i,s,o,a,l=Jn,c=!1){const u=this.elements,h=2*o/(n-e),d=2*o/(i-s),f=(n+e)/(n-e),p=(i+s)/(i-s);let m,y;if(c)m=o/(a-o),y=a*o/(a-o);else if(l===Jn)m=-(a+o)/(a-o),y=-2*a*o/(a-o);else if(l===Cs)m=-a/(a-o),y=-a*o/(a-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=f,u[12]=0,u[1]=0,u[5]=d,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=m,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,n,i,s,o,a,l=Jn,c=!1){const u=this.elements,h=2/(n-e),d=2/(i-s),f=-(n+e)/(n-e),p=-(i+s)/(i-s);let m,y;if(c)m=1/(a-o),y=a/(a-o);else if(l===Jn)m=-2/(a-o),y=-(a+o)/(a-o);else if(l===Cs)m=-1/(a-o),y=-o/(a-o);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=0,u[12]=f,u[1]=0,u[5]=d,u[9]=0,u[13]=p,u[2]=0,u[6]=0,u[10]=m,u[14]=y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Io=new L,Wi=new bt,NC=new L(0,0,0),PC=new L(1,1,1),ps=new L,gu=new L,gi=new L,uy=new bt,hy=new nr;class ui{constructor(e=0,n=0,i=0,s=ui.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],h=s[9],d=s[2],f=s[6],p=s[10];switch(n){case"XYZ":this._y=Math.asin(mt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(f,u),this._z=0);break;case"YXZ":this._x=Math.asin(-mt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(mt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-mt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(mt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-mt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,u),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return uy.makeRotationFromQuaternion(e),this.setFromRotationMatrix(uy,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return hy.setFromEuler(this),this.setFromQuaternion(hy,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ui.DEFAULT_ORDER="XYZ";class hg{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let DC=0;const dy=new L,Uo=new nr,Lr=new bt,_u=new L,Al=new L,LC=new L,IC=new nr,fy=new L(1,0,0),py=new L(0,1,0),my=new L(0,0,1),gy={type:"added"},UC={type:"removed"},Fo={type:"childadded",child:null},Qd={type:"childremoved",child:null};class pn extends ss{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:DC++}),this.uuid=Jr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=pn.DEFAULT_UP.clone();const e=new L,n=new ui,i=new nr,s=new L(1,1,1);function o(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(o),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new bt},normalMatrix:{value:new ut}}),this.matrix=new bt,this.matrixWorld=new bt,this.matrixAutoUpdate=pn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=pn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new hg,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return Uo.setFromAxisAngle(e,n),this.quaternion.multiply(Uo),this}rotateOnWorldAxis(e,n){return Uo.setFromAxisAngle(e,n),this.quaternion.premultiply(Uo),this}rotateX(e){return this.rotateOnAxis(fy,e)}rotateY(e){return this.rotateOnAxis(py,e)}rotateZ(e){return this.rotateOnAxis(my,e)}translateOnAxis(e,n){return dy.copy(e).applyQuaternion(this.quaternion),this.position.add(dy.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(fy,e)}translateY(e){return this.translateOnAxis(py,e)}translateZ(e){return this.translateOnAxis(my,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Lr.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?_u.copy(e):_u.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Al.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Lr.lookAt(Al,_u,this.up):Lr.lookAt(_u,Al,this.up),this.quaternion.setFromRotationMatrix(Lr),s&&(Lr.extractRotation(s.matrixWorld),Uo.setFromRotationMatrix(Lr),this.quaternion.premultiply(Uo.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(gy),Fo.child=e,this.dispatchEvent(Fo),Fo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(UC),Qd.child=e,this.dispatchEvent(Qd),Qd.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Lr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Lr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Lr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(gy),Fo.child=e,this.dispatchEvent(Fo),Fo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const s=this.children;for(let o=0,a=s.length;o<a;o++)s[o].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Al,e,LC),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Al,IC,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),n===!0){const s=this.children;for(let o=0,a=s.length;o<a;o++)s[o].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(l=>({...l,boundingBox:l.boundingBox?l.boundingBox.toJSON():void 0,boundingSphere:l.boundingSphere?l.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(l=>({...l})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(e),s.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(s.boundingBox=this.boundingBox.toJSON()));function o(l,c){return l[c.uuid]===void 0&&(l[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=o(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const c=l.shapes;if(Array.isArray(c))for(let u=0,h=c.length;u<h;u++){const d=c[u];o(e.shapes,d)}else o(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let c=0,u=this.material.length;c<u;c++)l.push(o(e.materials,this.material[c]));s.material=l}else s.material=o(e.materials,this.material);if(this.children.length>0){s.children=[];for(let l=0;l<this.children.length;l++)s.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let l=0;l<this.animations.length;l++){const c=this.animations[l];s.animations.push(o(e.animations,c))}}if(n){const l=a(e.geometries),c=a(e.materials),u=a(e.textures),h=a(e.images),d=a(e.shapes),f=a(e.skeletons),p=a(e.animations),m=a(e.nodes);l.length>0&&(i.geometries=l),c.length>0&&(i.materials=c),u.length>0&&(i.textures=u),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),f.length>0&&(i.skeletons=f),p.length>0&&(i.animations=p),m.length>0&&(i.nodes=m)}return i.object=s,i;function a(l){const c=[];for(const u in l){const h=l[u];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}pn.DEFAULT_UP=new L(0,1,0);pn.DEFAULT_MATRIX_AUTO_UPDATE=!0;pn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const $i=new L,Ir=new L,Jd=new L,Ur=new L,Oo=new L,Bo=new L,_y=new L,ef=new L,tf=new L,nf=new L,rf=new et,sf=new et,of=new et;class Bi{constructor(e=new L,n=new L,i=new L){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),$i.subVectors(e,n),s.cross($i);const o=s.lengthSq();return o>0?s.multiplyScalar(1/Math.sqrt(o)):s.set(0,0,0)}static getBarycoord(e,n,i,s,o){$i.subVectors(s,n),Ir.subVectors(i,n),Jd.subVectors(e,n);const a=$i.dot($i),l=$i.dot(Ir),c=$i.dot(Jd),u=Ir.dot(Ir),h=Ir.dot(Jd),d=a*u-l*l;if(d===0)return o.set(0,0,0),null;const f=1/d,p=(u*c-l*h)*f,m=(a*h-l*c)*f;return o.set(1-p-m,m,p)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,Ur)===null?!1:Ur.x>=0&&Ur.y>=0&&Ur.x+Ur.y<=1}static getInterpolation(e,n,i,s,o,a,l,c){return this.getBarycoord(e,n,i,s,Ur)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(o,Ur.x),c.addScaledVector(a,Ur.y),c.addScaledVector(l,Ur.z),c)}static getInterpolatedAttribute(e,n,i,s,o,a){return rf.setScalar(0),sf.setScalar(0),of.setScalar(0),rf.fromBufferAttribute(e,n),sf.fromBufferAttribute(e,i),of.fromBufferAttribute(e,s),a.setScalar(0),a.addScaledVector(rf,o.x),a.addScaledVector(sf,o.y),a.addScaledVector(of,o.z),a}static isFrontFacing(e,n,i,s){return $i.subVectors(i,n),Ir.subVectors(e,n),$i.cross(Ir).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return $i.subVectors(this.c,this.b),Ir.subVectors(this.a,this.b),$i.cross(Ir).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Bi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Bi.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,s,o){return Bi.getInterpolation(e,this.a,this.b,this.c,n,i,s,o)}containsPoint(e){return Bi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Bi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,o=this.c;let a,l;Oo.subVectors(s,i),Bo.subVectors(o,i),ef.subVectors(e,i);const c=Oo.dot(ef),u=Bo.dot(ef);if(c<=0&&u<=0)return n.copy(i);tf.subVectors(e,s);const h=Oo.dot(tf),d=Bo.dot(tf);if(h>=0&&d<=h)return n.copy(s);const f=c*d-h*u;if(f<=0&&c>=0&&h<=0)return a=c/(c-h),n.copy(i).addScaledVector(Oo,a);nf.subVectors(e,o);const p=Oo.dot(nf),m=Bo.dot(nf);if(m>=0&&p<=m)return n.copy(o);const y=p*u-c*m;if(y<=0&&u>=0&&m<=0)return l=u/(u-m),n.copy(i).addScaledVector(Bo,l);const _=h*m-p*d;if(_<=0&&d-h>=0&&p-m>=0)return _y.subVectors(o,s),l=(d-h)/(d-h+(p-m)),n.copy(s).addScaledVector(_y,l);const g=1/(_+y+f);return a=y*g,l=f*g,n.copy(i).addScaledVector(Oo,a).addScaledVector(Bo,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const bb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ms={h:0,s:0,l:0},yu={h:0,s:0,l:0};function af(r,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?r+(e-r)*6*n:n<1/2?e:n<2/3?r+(e-r)*6*(2/3-n):r}class We{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=Bn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Je.colorSpaceToWorking(this,n),this}setRGB(e,n,i,s=Je.workingColorSpace){return this.r=e,this.g=n,this.b=i,Je.colorSpaceToWorking(this,s),this}setHSL(e,n,i,s=Je.workingColorSpace){if(e=ag(e,1),n=mt(n,0,1),i=mt(i,0,1),n===0)this.r=this.g=this.b=i;else{const o=i<=.5?i*(1+n):i+n-i*n,a=2*i-o;this.r=af(a,o,e+1/3),this.g=af(a,o,e),this.b=af(a,o,e-1/3)}return Je.colorSpaceToWorking(this,s),this}setStyle(e,n=Bn){function i(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let o;const a=s[1],l=s[2];switch(a){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,n);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,n);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const o=s[1],a=o.length;if(a===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,n);if(a===6)return this.setHex(parseInt(o,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=Bn){const i=bb[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=es(e.r),this.g=es(e.g),this.b=es(e.b),this}copyLinearToSRGB(e){return this.r=ga(e.r),this.g=ga(e.g),this.b=ga(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bn){return Je.workingToColorSpace(Fn.copy(this),e),Math.round(mt(Fn.r*255,0,255))*65536+Math.round(mt(Fn.g*255,0,255))*256+Math.round(mt(Fn.b*255,0,255))}getHexString(e=Bn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=Je.workingColorSpace){Je.workingToColorSpace(Fn.copy(this),n);const i=Fn.r,s=Fn.g,o=Fn.b,a=Math.max(i,s,o),l=Math.min(i,s,o);let c,u;const h=(l+a)/2;if(l===a)c=0,u=0;else{const d=a-l;switch(u=h<=.5?d/(a+l):d/(2-a-l),a){case i:c=(s-o)/d+(s<o?6:0);break;case s:c=(o-i)/d+2;break;case o:c=(i-s)/d+4;break}c/=6}return e.h=c,e.s=u,e.l=h,e}getRGB(e,n=Je.workingColorSpace){return Je.workingToColorSpace(Fn.copy(this),n),e.r=Fn.r,e.g=Fn.g,e.b=Fn.b,e}getStyle(e=Bn){Je.workingToColorSpace(Fn.copy(this),e);const n=Fn.r,i=Fn.g,s=Fn.b;return e!==Bn?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(ms),this.setHSL(ms.h+e,ms.s+n,ms.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(ms),e.getHSL(yu);const i=uc(ms.h,yu.h,n),s=uc(ms.s,yu.s,n),o=uc(ms.l,yu.l,n);return this.setHSL(i,s,o),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,o=e.elements;return this.r=o[0]*n+o[3]*i+o[6]*s,this.g=o[1]*n+o[4]*i+o[7]*s,this.b=o[2]*n+o[5]*i+o[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Fn=new We;We.NAMES=bb;let FC=0;class Hn extends ss{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:FC++}),this.uuid=Jr(),this.name="",this.type="Material",this.blending=Mi,this.side=Si,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=bc,this.blendDst=Tc,this.blendEquation=Gn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new We(0,0,0),this.blendAlpha=0,this.depthFunc=Rs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Yp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Js,this.stencilZFail=Js,this.stencilZPass=Js,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(i.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(i.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Mi&&(i.blending=this.blending),this.side!==Si&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==bc&&(i.blendSrc=this.blendSrc),this.blendDst!==Tc&&(i.blendDst=this.blendDst),this.blendEquation!==Gn&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Rs&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Yp&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Js&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Js&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Js&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}if(n){const o=s(e.textures),a=s(e.images);o.length>0&&(i.textures=o),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let o=0;o!==s;++o)i[o]=n[o].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class pr extends Hn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=$c,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Hr=OC();function OC(){const r=new ArrayBuffer(4),e=new Float32Array(r),n=new Uint32Array(r),i=new Uint32Array(512),s=new Uint32Array(512);for(let c=0;c<256;++c){const u=c-127;u<-27?(i[c]=0,i[c|256]=32768,s[c]=24,s[c|256]=24):u<-14?(i[c]=1024>>-u-14,i[c|256]=1024>>-u-14|32768,s[c]=-u-1,s[c|256]=-u-1):u<=15?(i[c]=u+15<<10,i[c|256]=u+15<<10|32768,s[c]=13,s[c|256]=13):u<128?(i[c]=31744,i[c|256]=64512,s[c]=24,s[c|256]=24):(i[c]=31744,i[c|256]=64512,s[c]=13,s[c|256]=13)}const o=new Uint32Array(2048),a=new Uint32Array(64),l=new Uint32Array(64);for(let c=1;c<1024;++c){let u=c<<13,h=0;for(;(u&8388608)===0;)u<<=1,h-=8388608;u&=-8388609,h+=947912704,o[c]=u|h}for(let c=1024;c<2048;++c)o[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(l[c]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:s,mantissaTable:o,exponentTable:a,offsetTable:l}}function _i(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=mt(r,-65504,65504),Hr.floatView[0]=r;const e=Hr.uint32View[0],n=e>>23&511;return Hr.baseTable[n]+((e&8388607)>>Hr.shiftTable[n])}function vu(r){const e=r>>10;return Hr.uint32View[0]=Hr.mantissaTable[Hr.offsetTable[e]+(r&1023)]+Hr.exponentTable[e],Hr.floatView[0]}const gn=new L,xu=new de;let BC=0;class Dn{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:BC++}),this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=Oh,this.updateRanges=[],this.gpuType=hn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,o=this.itemSize;s<o;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)xu.fromBufferAttribute(this,n),xu.applyMatrix3(e),this.setXY(n,xu.x,xu.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)gn.fromBufferAttribute(this,n),gn.applyMatrix3(e),this.setXYZ(n,gn.x,gn.y,gn.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)gn.fromBufferAttribute(this,n),gn.applyMatrix4(e),this.setXYZ(n,gn.x,gn.y,gn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)gn.fromBufferAttribute(this,n),gn.applyNormalMatrix(e),this.setXYZ(n,gn.x,gn.y,gn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)gn.fromBufferAttribute(this,n),gn.transformDirection(e),this.setXYZ(n,gn.x,gn.y,gn.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=Qn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=pt(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Qn(n,this.array)),n}setX(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Qn(n,this.array)),n}setY(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Qn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Qn(n,this.array)),n}setW(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,o){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array),o=pt(o,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=o,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Oh&&(e.usage=this.usage),e}}class dg extends Dn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class fg extends Dn{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Tb extends Dn{constructor(e,n,i){super(new Uint16Array(e),n,i),this.isFloat16BufferAttribute=!0}getX(e){let n=vu(this.array[e*this.itemSize]);return this.normalized&&(n=Qn(n,this.array)),n}setX(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize]=_i(n),this}getY(e){let n=vu(this.array[e*this.itemSize+1]);return this.normalized&&(n=Qn(n,this.array)),n}setY(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+1]=_i(n),this}getZ(e){let n=vu(this.array[e*this.itemSize+2]);return this.normalized&&(n=Qn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+2]=_i(n),this}getW(e){let n=vu(this.array[e*this.itemSize+3]);return this.normalized&&(n=Qn(n,this.array)),n}setW(e,n){return this.normalized&&(n=pt(n,this.array)),this.array[e*this.itemSize+3]=_i(n),this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array)),this.array[e+0]=_i(n),this.array[e+1]=_i(i),this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array)),this.array[e+0]=_i(n),this.array[e+1]=_i(i),this.array[e+2]=_i(s),this}setXYZW(e,n,i,s,o){return e*=this.itemSize,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array),o=pt(o,this.array)),this.array[e+0]=_i(n),this.array[e+1]=_i(i),this.array[e+2]=_i(s),this.array[e+3]=_i(o),this}}class mn extends Dn{constructor(e,n,i){super(new Float32Array(e),n,i)}}let kC=0;const Li=new bt,lf=new pn,ko=new L,yi=new So,Rl=new So,wn=new L;class $n extends ss{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:kC++}),this.uuid=Jr(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lg(e)?fg:dg)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const o=new ut().getNormalMatrix(e);i.applyNormalMatrix(o),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Li.makeRotationFromQuaternion(e),this.applyMatrix4(Li),this}rotateX(e){return Li.makeRotationX(e),this.applyMatrix4(Li),this}rotateY(e){return Li.makeRotationY(e),this.applyMatrix4(Li),this}rotateZ(e){return Li.makeRotationZ(e),this.applyMatrix4(Li),this}translate(e,n,i){return Li.makeTranslation(e,n,i),this.applyMatrix4(Li),this}scale(e,n,i){return Li.makeScale(e,n,i),this.applyMatrix4(Li),this}lookAt(e){return lf.lookAt(e),lf.updateMatrix(),this.applyMatrix4(lf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ko).negate(),this.translate(ko.x,ko.y,ko.z),this}setFromPoints(e){const n=this.getAttribute("position");if(n===void 0){const i=[];for(let s=0,o=e.length;s<o;s++){const a=e[s];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new mn(i,3))}else{const i=Math.min(e.length,n.count);for(let s=0;s<i;s++){const o=e[s];n.setXYZ(s,o.x,o.y,o.z||0)}e.length>n.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),n.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new So);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const o=n[i];yi.setFromBufferAttribute(o),this.morphTargetsRelative?(wn.addVectors(this.boundingBox.min,yi.min),this.boundingBox.expandByPoint(wn),wn.addVectors(this.boundingBox.max,yi.max),this.boundingBox.expandByPoint(wn)):(this.boundingBox.expandByPoint(yi.min),this.boundingBox.expandByPoint(yi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xc);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(e){const i=this.boundingSphere.center;if(yi.setFromBufferAttribute(e),n)for(let o=0,a=n.length;o<a;o++){const l=n[o];Rl.setFromBufferAttribute(l),this.morphTargetsRelative?(wn.addVectors(yi.min,Rl.min),yi.expandByPoint(wn),wn.addVectors(yi.max,Rl.max),yi.expandByPoint(wn)):(yi.expandByPoint(Rl.min),yi.expandByPoint(Rl.max))}yi.getCenter(i);let s=0;for(let o=0,a=e.count;o<a;o++)wn.fromBufferAttribute(e,o),s=Math.max(s,i.distanceToSquared(wn));if(n)for(let o=0,a=n.length;o<a;o++){const l=n[o],c=this.morphTargetsRelative;for(let u=0,h=l.count;u<h;u++)wn.fromBufferAttribute(l,u),c&&(ko.fromBufferAttribute(e,u),wn.add(ko)),s=Math.max(s,i.distanceToSquared(wn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,s=n.normal,o=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Dn(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),l=[],c=[];for(let A=0;A<i.count;A++)l[A]=new L,c[A]=new L;const u=new L,h=new L,d=new L,f=new de,p=new de,m=new de,y=new L,_=new L;function g(A,E,w){u.fromBufferAttribute(i,A),h.fromBufferAttribute(i,E),d.fromBufferAttribute(i,w),f.fromBufferAttribute(o,A),p.fromBufferAttribute(o,E),m.fromBufferAttribute(o,w),h.sub(u),d.sub(u),p.sub(f),m.sub(f);const N=1/(p.x*m.y-m.x*p.y);isFinite(N)&&(y.copy(h).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(N),_.copy(d).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(N),l[A].add(y),l[E].add(y),l[w].add(y),c[A].add(_),c[E].add(_),c[w].add(_))}let v=this.groups;v.length===0&&(v=[{start:0,count:e.count}]);for(let A=0,E=v.length;A<E;++A){const w=v[A],N=w.start,D=w.count;for(let F=N,k=N+D;F<k;F+=3)g(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const x=new L,b=new L,T=new L,S=new L;function M(A){T.fromBufferAttribute(s,A),S.copy(T);const E=l[A];x.copy(E),x.sub(T.multiplyScalar(T.dot(E))).normalize(),b.crossVectors(S,E);const N=b.dot(c[A])<0?-1:1;a.setXYZW(A,x.x,x.y,x.z,N)}for(let A=0,E=v.length;A<E;++A){const w=v[A],N=w.start,D=w.count;for(let F=N,k=N+D;F<k;F+=3)M(e.getX(F+0)),M(e.getX(F+1)),M(e.getX(F+2))}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Dn(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,p=i.count;f<p;f++)i.setXYZ(f,0,0,0);const s=new L,o=new L,a=new L,l=new L,c=new L,u=new L,h=new L,d=new L;if(e)for(let f=0,p=e.count;f<p;f+=3){const m=e.getX(f+0),y=e.getX(f+1),_=e.getX(f+2);s.fromBufferAttribute(n,m),o.fromBufferAttribute(n,y),a.fromBufferAttribute(n,_),h.subVectors(a,o),d.subVectors(s,o),h.cross(d),l.fromBufferAttribute(i,m),c.fromBufferAttribute(i,y),u.fromBufferAttribute(i,_),l.add(h),c.add(h),u.add(h),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(y,c.x,c.y,c.z),i.setXYZ(_,u.x,u.y,u.z)}else for(let f=0,p=n.count;f<p;f+=3)s.fromBufferAttribute(n,f+0),o.fromBufferAttribute(n,f+1),a.fromBufferAttribute(n,f+2),h.subVectors(a,o),d.subVectors(s,o),h.cross(d),i.setXYZ(f+0,h.x,h.y,h.z),i.setXYZ(f+1,h.x,h.y,h.z),i.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)wn.fromBufferAttribute(e,n),wn.normalize(),e.setXYZ(n,wn.x,wn.y,wn.z)}toNonIndexed(){function e(l,c){const u=l.array,h=l.itemSize,d=l.normalized,f=new u.constructor(c.length*h);let p=0,m=0;for(let y=0,_=c.length;y<_;y++){l.isInterleavedBufferAttribute?p=c[y]*l.data.stride+l.offset:p=c[y]*h;for(let g=0;g<h;g++)f[m++]=u[p++]}return new Dn(f,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new $n,i=this.index.array,s=this.attributes;for(const l in s){const c=s[l],u=e(c,i);n.setAttribute(l,u)}const o=this.morphAttributes;for(const l in o){const c=[],u=o[l];for(let h=0,d=u.length;h<d;h++){const f=u[h],p=e(f,i);c.push(p)}n.morphAttributes[l]=c}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let l=0,c=a.length;l<c;l++){const u=a[l];n.addGroup(u.start,u.count,u.materialIndex)}return n}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const u in c)c[u]!==void 0&&(e[u]=c[u]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const c in i){const u=i[c];e.data.attributes[c]=u.toJSON(e.data)}const s={};let o=!1;for(const c in this.morphAttributes){const u=this.morphAttributes[c],h=[];for(let d=0,f=u.length;d<f;d++){const p=u[d];h.push(p.toJSON(e.data))}h.length>0&&(s[c]=h,o=!0)}o&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere=l.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const s=e.attributes;for(const u in s){const h=s[u];this.setAttribute(u,h.clone(n))}const o=e.morphAttributes;for(const u in o){const h=[],d=o[u];for(let f=0,p=d.length;f<p;f++)h.push(d[f].clone(n));this.morphAttributes[u]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,h=a.length;u<h;u++){const d=a[u];this.addGroup(d.start,d.count,d.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const yy=new bt,Ws=new ud,bu=new Xc,vy=new L,Tu=new L,Su=new L,Mu=new L,cf=new L,Eu=new L,xy=new L,wu=new L;class yn extends pn{constructor(e=new $n,n=new pr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,a=s.length;o<a;o++){const l=s[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=o}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,o=i.morphAttributes.position,a=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const l=this.morphTargetInfluences;if(o&&l){Eu.set(0,0,0);for(let c=0,u=o.length;c<u;c++){const h=l[c],d=o[c];h!==0&&(cf.fromBufferAttribute(d,e),a?Eu.addScaledVector(cf,h):Eu.addScaledVector(cf.sub(n),h))}n.add(Eu)}return n}raycast(e,n){const i=this.geometry,s=this.material,o=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),bu.copy(i.boundingSphere),bu.applyMatrix4(o),Ws.copy(e.ray).recast(e.near),!(bu.containsPoint(Ws.origin)===!1&&(Ws.intersectSphere(bu,vy)===null||Ws.origin.distanceToSquared(vy)>(e.far-e.near)**2))&&(yy.copy(o).invert(),Ws.copy(e.ray).applyMatrix4(yy),!(i.boundingBox!==null&&Ws.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,Ws)))}_computeIntersections(e,n,i){let s;const o=this.geometry,a=this.material,l=o.index,c=o.attributes.position,u=o.attributes.uv,h=o.attributes.uv1,d=o.attributes.normal,f=o.groups,p=o.drawRange;if(l!==null)if(Array.isArray(a))for(let m=0,y=f.length;m<y;m++){const _=f[m],g=a[_.materialIndex],v=Math.max(_.start,p.start),x=Math.min(l.count,Math.min(_.start+_.count,p.start+p.count));for(let b=v,T=x;b<T;b+=3){const S=l.getX(b),M=l.getX(b+1),A=l.getX(b+2);s=Au(this,g,e,i,u,h,d,S,M,A),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=_.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),y=Math.min(l.count,p.start+p.count);for(let _=m,g=y;_<g;_+=3){const v=l.getX(_),x=l.getX(_+1),b=l.getX(_+2);s=Au(this,a,e,i,u,h,d,v,x,b),s&&(s.faceIndex=Math.floor(_/3),n.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let m=0,y=f.length;m<y;m++){const _=f[m],g=a[_.materialIndex],v=Math.max(_.start,p.start),x=Math.min(c.count,Math.min(_.start+_.count,p.start+p.count));for(let b=v,T=x;b<T;b+=3){const S=b,M=b+1,A=b+2;s=Au(this,g,e,i,u,h,d,S,M,A),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=_.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),y=Math.min(c.count,p.start+p.count);for(let _=m,g=y;_<g;_+=3){const v=_,x=_+1,b=_+2;s=Au(this,a,e,i,u,h,d,v,x,b),s&&(s.faceIndex=Math.floor(_/3),n.push(s))}}}}function zC(r,e,n,i,s,o,a,l){let c;if(e.side===kt?c=i.intersectTriangle(a,o,s,!0,l):c=i.intersectTriangle(s,o,a,e.side===Si,l),c===null)return null;wu.copy(l),wu.applyMatrix4(r.matrixWorld);const u=n.ray.origin.distanceTo(wu);return u<n.near||u>n.far?null:{distance:u,point:wu.clone(),object:r}}function Au(r,e,n,i,s,o,a,l,c,u){r.getVertexPosition(l,Tu),r.getVertexPosition(c,Su),r.getVertexPosition(u,Mu);const h=zC(r,e,n,i,Tu,Su,Mu,xy);if(h){const d=new L;Bi.getBarycoord(xy,Tu,Su,Mu,d),s&&(h.uv=Bi.getInterpolatedAttribute(s,l,c,u,d,new de)),o&&(h.uv1=Bi.getInterpolatedAttribute(o,l,c,u,d,new de)),a&&(h.normal=Bi.getInterpolatedAttribute(a,l,c,u,d,new L),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const f={a:l,b:c,c:u,normal:new L,materialIndex:0};Bi.getNormal(Tu,Su,Mu,f.normal),h.face=f,h.barycoord=d}return h}class Mo extends $n{constructor(e=1,n=1,i=1,s=1,o=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:o,depthSegments:a};const l=this;s=Math.floor(s),o=Math.floor(o),a=Math.floor(a);const c=[],u=[],h=[],d=[];let f=0,p=0;m("z","y","x",-1,-1,i,n,e,a,o,0),m("z","y","x",1,-1,i,n,-e,a,o,1),m("x","z","y",1,1,e,i,n,s,a,2),m("x","z","y",1,-1,e,i,-n,s,a,3),m("x","y","z",1,-1,e,n,i,s,o,4),m("x","y","z",-1,-1,e,n,-i,s,o,5),this.setIndex(c),this.setAttribute("position",new mn(u,3)),this.setAttribute("normal",new mn(h,3)),this.setAttribute("uv",new mn(d,2));function m(y,_,g,v,x,b,T,S,M,A,E){const w=b/M,N=T/A,D=b/2,F=T/2,k=S/2,j=M+1,$=A+1;let G=0,B=0;const J=new L;for(let Y=0;Y<$;Y++){const re=Y*N-F;for(let me=0;me<j;me++){const Re=me*w-D;J[y]=Re*v,J[_]=re*x,J[g]=k,u.push(J.x,J.y,J.z),J[y]=0,J[_]=0,J[g]=S>0?1:-1,h.push(J.x,J.y,J.z),d.push(me/M),d.push(1-Y/A),G+=1}}for(let Y=0;Y<A;Y++)for(let re=0;re<M;re++){const me=f+re+j*Y,Re=f+re+j*(Y+1),tt=f+(re+1)+j*(Y+1),q=f+(re+1)+j*Y;c.push(me,Re,q),c.push(Re,tt,q),B+=6}l.addGroup(p,B,E),p+=B,f+=G}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mo(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Qa(r){const e={};for(const n in r){e[n]={};for(const i in r[n]){const s=r[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function Xn(r){const e={};for(let n=0;n<r.length;n++){const i=Qa(r[n]);for(const s in i)e[s]=i[s]}return e}function GC(r){const e=[];for(let n=0;n<r.length;n++)e.push(r[n].clone());return e}function Sb(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Je.workingColorSpace}const Mb={clone:Qa,merge:Xn};var VC=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,HC=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Tr extends Hn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=VC,this.fragmentShader=HC,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Qa(e.uniforms),this.uniformsGroups=GC(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?n.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[s]={type:"m4",value:a.toArray()}:n.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class pg extends pn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new bt,this.projectionMatrix=new bt,this.projectionMatrixInverse=new bt,this.coordinateSystem=Jn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const gs=new L,by=new de,Ty=new de;class Rn extends pg{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=vo*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(cc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return vo*2*Math.atan(Math.tan(cc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){gs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(gs.x,gs.y).multiplyScalar(-e/gs.z),gs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(gs.x,gs.y).multiplyScalar(-e/gs.z)}getViewSize(e,n){return this.getViewBounds(e,by,Ty),n.subVectors(Ty,by)}setViewOffset(e,n,i,s,o,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(cc*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,o=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,u=a.fullHeight;o+=a.offsetX*s/c,n-=a.offsetY*i/u,s*=a.width/c,i*=a.height/u}const l=this.filmOffset;l!==0&&(o+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+s,n,n-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const zo=-90,Go=1;class Eb extends pn{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Rn(zo,Go,e,n);s.layers=this.layers,this.add(s);const o=new Rn(zo,Go,e,n);o.layers=this.layers,this.add(o);const a=new Rn(zo,Go,e,n);a.layers=this.layers,this.add(a);const l=new Rn(zo,Go,e,n);l.layers=this.layers,this.add(l);const c=new Rn(zo,Go,e,n);c.layers=this.layers,this.add(c);const u=new Rn(zo,Go,e,n);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,s,o,a,l,c]=n;for(const u of n)this.remove(u);if(e===Jn)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===Cs)i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of n)this.add(u),u.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[o,a,l,c,u,h]=this.children,d=e.getRenderTarget(),f=e.getActiveCubeFace(),p=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const y=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(n,o),e.setRenderTarget(i,1,s),e.render(n,a),e.setRenderTarget(i,2,s),e.render(n,l),e.setRenderTarget(i,3,s),e.render(n,c),e.setRenderTarget(i,4,s),e.render(n,u),i.texture.generateMipmaps=y,e.setRenderTarget(i,5,s),e.render(n,h),e.setRenderTarget(d,f,p),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class Yc extends fn{constructor(e=[],n=xr,i,s,o,a,l,c,u,h){super(e,n,i,s,o,a,l,c,u,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class wb extends Ns{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new Yc(s),this._setTextureOptions(n),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Mo(5,5,5),o=new Tr({name:"CubemapFromEquirect",uniforms:Qa(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:kt,blending:li});o.uniforms.tEquirect.value=n;const a=new yn(s,o),l=n.minFilter;return n.minFilter===si&&(n.minFilter=Tn),new Eb(1,10,this).update(e,a),n.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,n=!0,i=!0,s=!0){const o=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,s);e.setRenderTarget(o)}}class la extends pn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const WC={type:"move"};class xh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new la,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new la,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new la,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,o=null,a=null;const l=this._targetRay,c=this._grip,u=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const y of e.hand.values()){const _=n.getJointPose(y,i),g=this._getHandJoint(u,y);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],f=h.position.distanceTo(d.position),p=.02,m=.005;u.inputState.pinching&&f>p+m?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&f<=p-m&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(o=n.getPose(e.gripSpace,i),o!==null&&(c.matrix.fromArray(o.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,o.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(o.linearVelocity)):c.hasLinearVelocity=!1,o.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(o.angularVelocity)):c.hasAngularVelocity=!1));l!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&o!==null&&(s=o),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(WC)))}return l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new la;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}class hd extends pn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ui,this.environmentIntensity=1,this.environmentRotation=new ui,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}class mg{constructor(e,n){this.isInterleavedBuffer=!0,this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=Oh,this.updateRanges=[],this.version=0,this.uuid=Jr()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let s=0,o=this.stride;s<o;s++)this.array[e+s]=n.array[i+s];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jr()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const qn=new L;class Uc{constructor(e,n,i,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)qn.fromBufferAttribute(this,n),qn.applyMatrix4(e),this.setXYZ(n,qn.x,qn.y,qn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)qn.fromBufferAttribute(this,n),qn.applyNormalMatrix(e),this.setXYZ(n,qn.x,qn.y,qn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)qn.fromBufferAttribute(this,n),qn.transformDirection(e),this.setXYZ(n,qn.x,qn.y,qn.z);return this}getComponent(e,n){let i=this.array[e*this.data.stride+this.offset+n];return this.normalized&&(i=Qn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=pt(i,this.array)),this.data.array[e*this.data.stride+this.offset+n]=i,this}setX(e,n){return this.normalized&&(n=pt(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.normalized&&(n=pt(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.normalized&&(n=pt(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.normalized&&(n=pt(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){let n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=Qn(n,this.array)),n}getY(e){let n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=Qn(n,this.array)),n}getZ(e){let n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=Qn(n,this.array)),n}getW(e){let n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=Qn(n,this.array)),n}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this}setXYZW(e,n,i,s,o){return e=e*this.data.stride+this.offset,this.normalized&&(n=pt(n,this.array),i=pt(i,this.array),s=pt(s,this.array),o=pt(o,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this.data.array[e+3]=o,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)n.push(this.data.array[s+o])}return new Dn(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Uc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)n.push(this.data.array[s+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class gg extends Hn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Vo;const Cl=new L,Ho=new L,Wo=new L,$o=new de,Nl=new de,Ab=new bt,Ru=new L,Pl=new L,Cu=new L,Sy=new de,uf=new de,My=new de;class $C extends pn{constructor(e=new gg){if(super(),this.isSprite=!0,this.type="Sprite",Vo===void 0){Vo=new $n;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new mg(n,5);Vo.setIndex([0,1,2,0,2,3]),Vo.setAttribute("position",new Uc(i,3,0,!1)),Vo.setAttribute("uv",new Uc(i,2,3,!1))}this.geometry=Vo,this.material=e,this.center=new de(.5,.5),this.count=1}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ho.setFromMatrixScale(this.matrixWorld),Ab.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Wo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ho.multiplyScalar(-Wo.z);const i=this.material.rotation;let s,o;i!==0&&(o=Math.cos(i),s=Math.sin(i));const a=this.center;Nu(Ru.set(-.5,-.5,0),Wo,a,Ho,s,o),Nu(Pl.set(.5,-.5,0),Wo,a,Ho,s,o),Nu(Cu.set(.5,.5,0),Wo,a,Ho,s,o),Sy.set(0,0),uf.set(1,0),My.set(1,1);let l=e.ray.intersectTriangle(Ru,Pl,Cu,!1,Cl);if(l===null&&(Nu(Pl.set(-.5,.5,0),Wo,a,Ho,s,o),uf.set(0,1),l=e.ray.intersectTriangle(Ru,Cu,Pl,!1,Cl),l===null))return;const c=e.ray.origin.distanceTo(Cl);c<e.near||c>e.far||n.push({distance:c,point:Cl.clone(),uv:Bi.getInterpolation(Cl,Ru,Pl,Cu,Sy,uf,My,new de),face:null,object:this})}copy(e,n){return super.copy(e,n),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Nu(r,e,n,i,s,o){$o.subVectors(r,n).addScalar(.5).multiply(i),s!==void 0?(Nl.x=o*$o.x-s*$o.y,Nl.y=s*$o.x+o*$o.y):Nl.copy($o),r.copy(e),r.x+=Nl.x,r.y+=Nl.y,r.applyMatrix4(Ab)}class jC extends fn{constructor(e=null,n=1,i=1,s,o,a,l,c,u=qt,h=qt,d,f){super(null,a,l,c,u,h,s,o,d,f),this.isDataTexture=!0,this.image={data:e,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qC extends Dn{constructor(e,n,i,s=1){super(e,n,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const hf=new L,XC=new L,YC=new ut;class Ki{constructor(e=new L(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=hf.subVectors(i,n).cross(XC.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(hf),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const o=-(e.start.dot(this.normal)+this.constant)/s;return o<0||o>1?null:n.copy(e.start).addScaledVector(i,o)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||YC.getNormalMatrix(e),s=this.coplanarPoint(hf).applyMatrix4(e),o=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(o),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $s=new Xc,KC=new de(.5,.5),Pu=new L;class Kc{constructor(e=new Ki,n=new Ki,i=new Ki,s=new Ki,o=new Ki,a=new Ki){this.planes=[e,n,i,s,o,a]}set(e,n,i,s,o,a){const l=this.planes;return l[0].copy(e),l[1].copy(n),l[2].copy(i),l[3].copy(s),l[4].copy(o),l[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=Jn,i=!1){const s=this.planes,o=e.elements,a=o[0],l=o[1],c=o[2],u=o[3],h=o[4],d=o[5],f=o[6],p=o[7],m=o[8],y=o[9],_=o[10],g=o[11],v=o[12],x=o[13],b=o[14],T=o[15];if(s[0].setComponents(u-a,p-h,g-m,T-v).normalize(),s[1].setComponents(u+a,p+h,g+m,T+v).normalize(),s[2].setComponents(u+l,p+d,g+y,T+x).normalize(),s[3].setComponents(u-l,p-d,g-y,T-x).normalize(),i)s[4].setComponents(c,f,_,b).normalize(),s[5].setComponents(u-c,p-f,g-_,T-b).normalize();else if(s[4].setComponents(u-c,p-f,g-_,T-b).normalize(),n===Jn)s[5].setComponents(u+c,p+f,g+_,T+b).normalize();else if(n===Cs)s[5].setComponents(c,f,_,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),$s.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),$s.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($s)}intersectsSprite(e){$s.center.set(0,0,0);const n=KC.distanceTo(e.center);return $s.radius=.7071067811865476+n,$s.applyMatrix4(e.matrixWorld),this.intersectsSphere($s)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let o=0;o<6;o++)if(n[o].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(Pu.x=s.normal.x>0?e.max.x:e.min.x,Pu.y=s.normal.y>0?e.max.y:e.min.y,Pu.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Pu)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const sr=new bt,or=new Kc;class _g{constructor(){this.coordinateSystem=Jn}intersectsObject(e,n){if(!n.isArrayCamera||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(sr.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),or.setFromProjectionMatrix(sr,s.coordinateSystem,s.reversedDepth),or.intersectsObject(e))return!0}return!1}intersectsSprite(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(sr.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),or.setFromProjectionMatrix(sr,s.coordinateSystem,s.reversedDepth),or.intersectsSprite(e))return!0}return!1}intersectsSphere(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(sr.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),or.setFromProjectionMatrix(sr,s.coordinateSystem,s.reversedDepth),or.intersectsSphere(e))return!0}return!1}intersectsBox(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(sr.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),or.setFromProjectionMatrix(sr,s.coordinateSystem,s.reversedDepth),or.intersectsBox(e))return!0}return!1}containsPoint(e,n){if(!n||!n.cameras||n.cameras.length===0)return!1;for(let i=0;i<n.cameras.length;i++){const s=n.cameras[i];if(sr.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),or.setFromProjectionMatrix(sr,s.coordinateSystem,s.reversedDepth),or.containsPoint(e))return!0}return!1}clone(){return new _g}}class dd extends Hn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new We(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const kh=new L,zh=new L,Ey=new bt,Dl=new ud,Du=new Xc,df=new L,wy=new L;class ZC extends pn{constructor(e=new $n,n=new dd){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let s=1,o=n.count;s<o;s++)kh.fromBufferAttribute(n,s-1),zh.fromBufferAttribute(n,s),i[s]=i[s-1],i[s]+=kh.distanceTo(zh);e.setAttribute("lineDistance",new mn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,s=this.matrixWorld,o=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Du.copy(i.boundingSphere),Du.applyMatrix4(s),Du.radius+=o,e.ray.intersectsSphere(Du)===!1)return;Ey.copy(s).invert(),Dl.copy(e.ray).applyMatrix4(Ey);const l=o/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,u=this.isLineSegments?2:1,h=i.index,f=i.attributes.position;if(h!==null){const p=Math.max(0,a.start),m=Math.min(h.count,a.start+a.count);for(let y=p,_=m-1;y<_;y+=u){const g=h.getX(y),v=h.getX(y+1),x=Lu(this,e,Dl,c,g,v,y);x&&n.push(x)}if(this.isLineLoop){const y=h.getX(m-1),_=h.getX(p),g=Lu(this,e,Dl,c,y,_,m-1);g&&n.push(g)}}else{const p=Math.max(0,a.start),m=Math.min(f.count,a.start+a.count);for(let y=p,_=m-1;y<_;y+=u){const g=Lu(this,e,Dl,c,y,y+1,y);g&&n.push(g)}if(this.isLineLoop){const y=Lu(this,e,Dl,c,m-1,p,m-1);y&&n.push(y)}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,a=s.length;o<a;o++){const l=s[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=o}}}}}function Lu(r,e,n,i,s,o,a){const l=r.geometry.attributes.position;if(kh.fromBufferAttribute(l,s),zh.fromBufferAttribute(l,o),n.distanceSqToSegment(kh,zh,df,wy)>i)return;df.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(df);if(!(u<e.near||u>e.far))return{distance:u,point:wy.clone().applyMatrix4(r.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:r}}class QC extends Hn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class JC extends fn{constructor(e,n){super({width:e,height:n}),this.isFramebufferTexture=!0,this.magFilter=qt,this.minFilter=qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class e1 extends fn{constructor(e,n,i,s,o,a,l,c,u){super(e,n,i,s,o,a,l,c,u),this.isCanvasTexture=!0,this.needsUpdate=!0}}class zi extends fn{constructor(e,n,i=Wt,s,o,a,l=qt,c=qt,u,h=wi,d=1){if(h!==wi&&h!==Ai)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const f={width:e,height:n,depth:d};super(f,s,o,a,l,c,h,i,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new cg(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}class Rb extends fn{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class Zc extends $n{constructor(e=1,n=1,i=1,s=32,o=1,a=!1,l=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:s,heightSegments:o,openEnded:a,thetaStart:l,thetaLength:c};const u=this;s=Math.floor(s),o=Math.floor(o);const h=[],d=[],f=[],p=[];let m=0;const y=[],_=i/2;let g=0;v(),a===!1&&(e>0&&x(!0),n>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new mn(d,3)),this.setAttribute("normal",new mn(f,3)),this.setAttribute("uv",new mn(p,2));function v(){const b=new L,T=new L;let S=0;const M=(n-e)/i;for(let A=0;A<=o;A++){const E=[],w=A/o,N=w*(n-e)+e;for(let D=0;D<=s;D++){const F=D/s,k=F*c+l,j=Math.sin(k),$=Math.cos(k);T.x=N*j,T.y=-w*i+_,T.z=N*$,d.push(T.x,T.y,T.z),b.set(j,M,$).normalize(),f.push(b.x,b.y,b.z),p.push(F,1-w),E.push(m++)}y.push(E)}for(let A=0;A<s;A++)for(let E=0;E<o;E++){const w=y[E][A],N=y[E+1][A],D=y[E+1][A+1],F=y[E][A+1];(e>0||E!==0)&&(h.push(w,N,F),S+=3),(n>0||E!==o-1)&&(h.push(N,D,F),S+=3)}u.addGroup(g,S,0),g+=S}function x(b){const T=m,S=new de,M=new L;let A=0;const E=b===!0?e:n,w=b===!0?1:-1;for(let D=1;D<=s;D++)d.push(0,_*w,0),f.push(0,w,0),p.push(.5,.5),m++;const N=m;for(let D=0;D<=s;D++){const k=D/s*c+l,j=Math.cos(k),$=Math.sin(k);M.x=E*$,M.y=_*w,M.z=E*j,d.push(M.x,M.y,M.z),f.push(0,w,0),S.x=j*.5+.5,S.y=$*.5*w+.5,p.push(S.x,S.y),m++}for(let D=0;D<s;D++){const F=T+D,k=N+D;b===!0?h.push(k,k+1,F):h.push(k+1,k,F),A+=3}u.addGroup(g,A,b===!0?1:2),g+=A}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class yg extends Zc{constructor(e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(0,e,n,i,s,o,a,l),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l}}static fromJSON(e){return new yg(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class os{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,s=this.getPoint(0),o=0;n.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),o+=i.distanceTo(s),n.push(o),s=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n=null){const i=this.getLengths();let s=0;const o=i.length;let a;n?a=n:a=e*i[o-1];let l=0,c=o-1,u;for(;l<=c;)if(s=Math.floor(l+(c-l)/2),u=i[s]-a,u<0)l=s+1;else if(u>0)c=s-1;else{c=s;break}if(s=c,i[s]===a)return s/(o-1);const h=i[s],f=i[s+1]-h,p=(a-h)/f;return(s+p)/(o-1)}getTangent(e,n){let s=e-1e-4,o=e+1e-4;s<0&&(s=0),o>1&&(o=1);const a=this.getPoint(s),l=this.getPoint(o),c=n||(a.isVector2?new de:new L);return c.copy(l).sub(a).normalize(),c}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n=!1){const i=new L,s=[],o=[],a=[],l=new L,c=new bt;for(let p=0;p<=e;p++){const m=p/e;s[p]=this.getTangentAt(m,new L)}o[0]=new L,a[0]=new L;let u=Number.MAX_VALUE;const h=Math.abs(s[0].x),d=Math.abs(s[0].y),f=Math.abs(s[0].z);h<=u&&(u=h,i.set(1,0,0)),d<=u&&(u=d,i.set(0,1,0)),f<=u&&i.set(0,0,1),l.crossVectors(s[0],i).normalize(),o[0].crossVectors(s[0],l),a[0].crossVectors(s[0],o[0]);for(let p=1;p<=e;p++){if(o[p]=o[p-1].clone(),a[p]=a[p-1].clone(),l.crossVectors(s[p-1],s[p]),l.length()>Number.EPSILON){l.normalize();const m=Math.acos(mt(s[p-1].dot(s[p]),-1,1));o[p].applyMatrix4(c.makeRotationAxis(l,m))}a[p].crossVectors(s[p],o[p])}if(n===!0){let p=Math.acos(mt(o[0].dot(o[e]),-1,1));p/=e,s[0].dot(l.crossVectors(o[0],o[e]))>0&&(p=-p);for(let m=1;m<=e;m++)o[m].applyMatrix4(c.makeRotationAxis(s[m],p*m)),a[m].crossVectors(s[m],o[m])}return{tangents:s,normals:o,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Cb extends os{constructor(e=0,n=0,i=1,s=1,o=0,a=Math.PI*2,l=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=s,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=l,this.aRotation=c}getPoint(e,n=new de){const i=n,s=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const a=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=s;for(;o>s;)o-=s;o<Number.EPSILON&&(a?o=0:o=s),this.aClockwise===!0&&!a&&(o===s?o=-s:o=o-s);const l=this.aStartAngle+e*o;let c=this.aX+this.xRadius*Math.cos(l),u=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),f=c-this.aX,p=u-this.aY;c=f*h-p*d+this.aX,u=f*d+p*h+this.aY}return i.set(c,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class t1 extends Cb{constructor(e,n,i,s,o,a){super(e,n,i,i,s,o,a),this.isArcCurve=!0,this.type="ArcCurve"}}function vg(){let r=0,e=0,n=0,i=0;function s(o,a,l,c){r=o,e=l,n=-3*o+3*a-2*l-c,i=2*o-2*a+l+c}return{initCatmullRom:function(o,a,l,c,u){s(a,l,u*(l-o),u*(c-a))},initNonuniformCatmullRom:function(o,a,l,c,u,h,d){let f=(a-o)/u-(l-o)/(u+h)+(l-a)/h,p=(l-a)/h-(c-a)/(h+d)+(c-l)/d;f*=h,p*=h,s(a,l,f,p)},calc:function(o){const a=o*o,l=a*o;return r+e*o+n*a+i*l}}}const Iu=new L,ff=new vg,pf=new vg,mf=new vg;class n1 extends os{constructor(e=[],n=!1,i="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=s}getPoint(e,n=new L){const i=n,s=this.points,o=s.length,a=(o-(this.closed?0:1))*e;let l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/o)+1)*o:c===0&&l===o-1&&(l=o-2,c=1);let u,h;this.closed||l>0?u=s[(l-1)%o]:(Iu.subVectors(s[0],s[1]).add(s[0]),u=Iu);const d=s[l%o],f=s[(l+1)%o];if(this.closed||l+2<o?h=s[(l+2)%o]:(Iu.subVectors(s[o-1],s[o-2]).add(s[o-1]),h=Iu),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let m=Math.pow(u.distanceToSquared(d),p),y=Math.pow(d.distanceToSquared(f),p),_=Math.pow(f.distanceToSquared(h),p);y<1e-4&&(y=1),m<1e-4&&(m=y),_<1e-4&&(_=y),ff.initNonuniformCatmullRom(u.x,d.x,f.x,h.x,m,y,_),pf.initNonuniformCatmullRom(u.y,d.y,f.y,h.y,m,y,_),mf.initNonuniformCatmullRom(u.z,d.z,f.z,h.z,m,y,_)}else this.curveType==="catmullrom"&&(ff.initCatmullRom(u.x,d.x,f.x,h.x,this.tension),pf.initCatmullRom(u.y,d.y,f.y,h.y,this.tension),mf.initCatmullRom(u.z,d.z,f.z,h.z,this.tension));return i.set(ff.calc(c),pf.calc(c),mf.calc(c)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(s.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const s=this.points[n];e.points.push(s.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(new L().fromArray(s))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ay(r,e,n,i,s){const o=(i-e)*.5,a=(s-n)*.5,l=r*r,c=r*l;return(2*n-2*i+o+a)*c+(-3*n+3*i-2*o-a)*l+o*r+n}function i1(r,e){const n=1-r;return n*n*e}function r1(r,e){return 2*(1-r)*r*e}function s1(r,e){return r*r*e}function hc(r,e,n,i){return i1(r,e)+r1(r,n)+s1(r,i)}function o1(r,e){const n=1-r;return n*n*n*e}function a1(r,e){const n=1-r;return 3*n*n*r*e}function l1(r,e){return 3*(1-r)*r*r*e}function c1(r,e){return r*r*r*e}function dc(r,e,n,i,s){return o1(r,e)+a1(r,n)+l1(r,i)+c1(r,s)}class u1 extends os{constructor(e=new de,n=new de,i=new de,s=new de){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=s}getPoint(e,n=new de){const i=n,s=this.v0,o=this.v1,a=this.v2,l=this.v3;return i.set(dc(e,s.x,o.x,a.x,l.x),dc(e,s.y,o.y,a.y,l.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Nb extends os{constructor(e=new L,n=new L,i=new L,s=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=s}getPoint(e,n=new L){const i=n,s=this.v0,o=this.v1,a=this.v2,l=this.v3;return i.set(dc(e,s.x,o.x,a.x,l.x),dc(e,s.y,o.y,a.y,l.y),dc(e,s.z,o.z,a.z,l.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class h1 extends os{constructor(e=new de,n=new de){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new de){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new de){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class d1 extends os{constructor(e=new L,n=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=n}getPoint(e,n=new L){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new L){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class f1 extends os{constructor(e=new de,n=new de,i=new de){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new de){const i=n,s=this.v0,o=this.v1,a=this.v2;return i.set(hc(e,s.x,o.x,a.x),hc(e,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class xg extends os{constructor(e=new L,n=new L,i=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new L){const i=n,s=this.v0,o=this.v1,a=this.v2;return i.set(hc(e,s.x,o.x,a.x),hc(e,s.y,o.y,a.y),hc(e,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class p1 extends os{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,n=new de){const i=n,s=this.points,o=(s.length-1)*e,a=Math.floor(o),l=o-a,c=s[a===0?a:a-1],u=s[a],h=s[a>s.length-2?s.length-1:a+1],d=s[a>s.length-3?s.length-1:a+2];return i.set(Ay(l,c.x,u.x,h.x,d.x),Ay(l,c.y,u.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(s.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const s=this.points[n];e.points.push(s.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const s=e.points[n];this.points.push(new de().fromArray(s))}return this}}var m1=Object.freeze({__proto__:null,ArcCurve:t1,CatmullRomCurve3:n1,CubicBezierCurve:u1,CubicBezierCurve3:Nb,EllipseCurve:Cb,LineCurve:h1,LineCurve3:d1,QuadraticBezierCurve:f1,QuadraticBezierCurve3:xg,SplineCurve:p1});class Qc extends $n{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const o=e/2,a=n/2,l=Math.floor(i),c=Math.floor(s),u=l+1,h=c+1,d=e/l,f=n/c,p=[],m=[],y=[],_=[];for(let g=0;g<h;g++){const v=g*f-a;for(let x=0;x<u;x++){const b=x*d-o;m.push(b,-v,0),y.push(0,0,1),_.push(x/l),_.push(1-g/c)}}for(let g=0;g<c;g++)for(let v=0;v<l;v++){const x=v+u*g,b=v+u*(g+1),T=v+1+u*(g+1),S=v+1+u*g;p.push(x,b,S),p.push(b,T,S)}this.setIndex(p),this.setAttribute("position",new mn(m,3)),this.setAttribute("normal",new mn(y,3)),this.setAttribute("uv",new mn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qc(e.width,e.height,e.widthSegments,e.heightSegments)}}class Jc extends $n{constructor(e=1,n=32,i=16,s=0,o=Math.PI*2,a=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:s,phiLength:o,thetaStart:a,thetaLength:l},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const c=Math.min(a+l,Math.PI);let u=0;const h=[],d=new L,f=new L,p=[],m=[],y=[],_=[];for(let g=0;g<=i;g++){const v=[],x=g/i;let b=0;g===0&&a===0?b=.5/n:g===i&&c===Math.PI&&(b=-.5/n);for(let T=0;T<=n;T++){const S=T/n;d.x=-e*Math.cos(s+S*o)*Math.sin(a+x*l),d.y=e*Math.cos(a+x*l),d.z=e*Math.sin(s+S*o)*Math.sin(a+x*l),m.push(d.x,d.y,d.z),f.copy(d).normalize(),y.push(f.x,f.y,f.z),_.push(S+b,1-x),v.push(u++)}h.push(v)}for(let g=0;g<i;g++)for(let v=0;v<n;v++){const x=h[g][v+1],b=h[g][v],T=h[g+1][v],S=h[g+1][v+1];(g!==0||a>0)&&p.push(x,b,S),(g!==i-1||c<Math.PI)&&p.push(b,T,S)}this.setIndex(p),this.setAttribute("position",new mn(m,3)),this.setAttribute("normal",new mn(y,3)),this.setAttribute("uv",new mn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Jc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class bg extends $n{constructor(e=new xg(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),n=64,i=1,s=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:s,closed:o};const a=e.computeFrenetFrames(n,o);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const l=new L,c=new L,u=new de;let h=new L;const d=[],f=[],p=[],m=[];y(),this.setIndex(m),this.setAttribute("position",new mn(d,3)),this.setAttribute("normal",new mn(f,3)),this.setAttribute("uv",new mn(p,2));function y(){for(let x=0;x<n;x++)_(x);_(o===!1?n:0),v(),g()}function _(x){h=e.getPointAt(x/n,h);const b=a.normals[x],T=a.binormals[x];for(let S=0;S<=s;S++){const M=S/s*Math.PI*2,A=Math.sin(M),E=-Math.cos(M);c.x=E*b.x+A*T.x,c.y=E*b.y+A*T.y,c.z=E*b.z+A*T.z,c.normalize(),f.push(c.x,c.y,c.z),l.x=h.x+i*c.x,l.y=h.y+i*c.y,l.z=h.z+i*c.z,d.push(l.x,l.y,l.z)}}function g(){for(let x=1;x<=n;x++)for(let b=1;b<=s;b++){const T=(s+1)*(x-1)+(b-1),S=(s+1)*x+(b-1),M=(s+1)*x+b,A=(s+1)*(x-1)+b;m.push(T,S,A),m.push(S,M,A)}}function v(){for(let x=0;x<=n;x++)for(let b=0;b<=s;b++)u.x=x/n,u.y=b/s,p.push(u.x,u.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new bg(new m1[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class g1 extends Hn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new We(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Pb extends Hn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new We(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _1 extends Pb{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new de(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return mt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new We(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new We(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new We(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class y1 extends Hn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new We(16777215),this.specular=new We(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=$c,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class v1 extends Hn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new We(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class x1 extends Hn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Db extends Hn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=$c,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class b1 extends Hn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=$R,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class T1 extends Hn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class S1 extends Hn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new We(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=is,this.normalScale=new de(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class M1 extends dd{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const gf={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class E1{constructor(e,n,i){const s=this;let o=!1,a=0,l=0,c;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.abortController=new AbortController,this.itemStart=function(h){l++,o===!1&&s.onStart!==void 0&&s.onStart(h,a,l),o=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,l),a===l&&(o=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,d){return u.push(h,d),this},this.removeHandler=function(h){const d=u.indexOf(h);return d!==-1&&u.splice(d,2),this},this.getHandler=function(h){for(let d=0,f=u.length;d<f;d+=2){const p=u[d],m=u[d+1];if(p.global&&(p.lastIndex=0),p.test(h))return m}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const w1=new E1;class Tg{constructor(e){this.manager=e!==void 0?e:w1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(s,o){i.load(e,s,n,o)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}Tg.DEFAULT_MATERIAL_NAME="__DEFAULT";const jo=new WeakMap;class A1 extends Tg{constructor(e){super(e)}load(e,n,i,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,a=gf.get(`image:${e}`);if(a!==void 0){if(a.complete===!0)o.manager.itemStart(e),setTimeout(function(){n&&n(a),o.manager.itemEnd(e)},0);else{let d=jo.get(a);d===void 0&&(d=[],jo.set(a,d)),d.push({onLoad:n,onError:s})}return a}const l=Ic("img");function c(){h(),n&&n(this);const d=jo.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onLoad&&p.onLoad(this)}jo.delete(this),o.manager.itemEnd(e)}function u(d){h(),s&&s(d),gf.remove(`image:${e}`);const f=jo.get(this)||[];for(let p=0;p<f.length;p++){const m=f[p];m.onError&&m.onError(d)}jo.delete(this),o.manager.itemError(e),o.manager.itemEnd(e)}function h(){l.removeEventListener("load",c,!1),l.removeEventListener("error",u,!1)}return l.addEventListener("load",c,!1),l.addEventListener("error",u,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),gf.add(`image:${e}`,l),o.manager.itemStart(e),l.src=e,l}}class R1 extends Tg{constructor(e){super(e)}load(e,n,i,s){const o=new fn,a=new A1(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(l){o.image=l,o.needsUpdate=!0,n!==void 0&&n(o)},i,s),o}}class Eo extends pn{constructor(e,n=1){super(),this.isLight=!0,this.type="Light",this.color=new We(e),this.intensity=n}dispose(){}copy(e,n){return super.copy(e,n),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(n.object.target=this.target.uuid),n}}class C1 extends Eo{constructor(e,n,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(pn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new We(n)}copy(e,n){return super.copy(e,n),this.groundColor.copy(e.groundColor),this}}const _f=new bt,Ry=new L,Cy=new L;class Sg{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new de(512,512),this.mapType=an,this.map=null,this.mapPass=null,this.matrix=new bt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kc,this._frameExtents=new de(1,1),this._viewportCount=1,this._viewports=[new et(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;Ry.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ry),Cy.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(Cy),n.updateMatrixWorld(),_f.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_f,n.coordinateSystem,n.reversedDepth),n.reversedDepth?i.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(_f)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class N1 extends Sg{constructor(){super(new Rn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const n=this.camera,i=vo*2*e.angle*this.focus,s=this.mapSize.width/this.mapSize.height*this.aspect,o=e.distance||n.far;(i!==n.fov||s!==n.aspect||o!==n.far)&&(n.fov=i,n.aspect=s,n.far=o,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Mg extends Eo{constructor(e,n,i=0,s=Math.PI/3,o=0,a=2){super(e,n),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(pn.DEFAULT_UP),this.updateMatrix(),this.target=new pn,this.distance=i,this.angle=s,this.penumbra=o,this.decay=a,this.map=null,this.shadow=new N1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Ny=new bt,Ll=new L,yf=new L;class P1 extends Sg{constructor(){super(new Rn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new de(4,2),this._viewportCount=6,this._viewports=[new et(2,1,1,1),new et(0,1,1,1),new et(3,1,1,1),new et(1,1,1,1),new et(3,0,1,1),new et(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,s=this.matrix,o=e.distance||i.far;o!==i.far&&(i.far=o,i.updateProjectionMatrix()),Ll.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ll),yf.copy(i.position),yf.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(yf),i.updateMatrixWorld(),s.makeTranslation(-Ll.x,-Ll.y,-Ll.z),Ny.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ny,i.coordinateSystem,i.reversedDepth)}}class D1 extends Eo{constructor(e,n,i=0,s=2){super(e,n),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=s,this.shadow=new P1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class eu extends pg{constructor(e=-1,n=1,i=1,s=-1,o=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=o,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,o,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=o,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let o=i-e,a=i+e,l=s+n,c=s-n;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=u*this.view.offsetX,a=o+u*this.view.width,l-=h*this.view.offsetY,c=l-h*this.view.height}this.projectionMatrix.makeOrthographic(o,a,l,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}class L1 extends Sg{constructor(){super(new eu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Lb extends Eo{constructor(e,n){super(e,n),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(pn.DEFAULT_UP),this.updateMatrix(),this.target=new pn,this.shadow=new L1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Ib extends Eo{constructor(e,n){super(e,n),this.isAmbientLight=!0,this.type="AmbientLight"}}class I1 extends Eo{constructor(e,n,i=10,s=10){super(e,n),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=s}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}}class U1{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new L)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,s=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*s),n.addScaledVector(a[2],.488603*o),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*s)),n.addScaledVector(a[5],1.092548*(s*o)),n.addScaledVector(a[6],.315392*(3*o*o-1)),n.addScaledVector(a[7],1.092548*(i*o)),n.addScaledVector(a[8],.546274*(i*i-s*s)),n}getIrradianceAt(e,n){const i=e.x,s=e.y,o=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*s),n.addScaledVector(a[2],2*.511664*o),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*s),n.addScaledVector(a[5],2*.429043*s*o),n.addScaledVector(a[6],.743125*o*o-.247708),n.addScaledVector(a[7],2*.429043*i*o),n.addScaledVector(a[8],.429043*(i*i-s*s)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].fromArray(e,n+s*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].toArray(e,n+s*3);return e}static getBasisAt(e,n){const i=e.x,s=e.y,o=e.z;n[0]=.282095,n[1]=.488603*s,n[2]=.488603*o,n[3]=.488603*i,n[4]=1.092548*i*s,n[5]=1.092548*s*o,n[6]=.315392*(3*o*o-1),n[7]=1.092548*i*o,n[8]=.546274*(i*i-s*s)}}class F1 extends Eo{constructor(e=new U1,n=1){super(void 0,n),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}class Ub extends Rn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Fb{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=performance.now();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}class O1 extends mg{constructor(e,n,i=1){super(e,n),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}const Py=new bt;class Ob{constructor(e,n,i=0,s=1/0){this.ray=new ud(e,n),this.near=i,this.far=s,this.camera=null,this.layers=new hg,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,n){this.ray.set(e,n)}setFromCamera(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}setFromXRController(e){return Py.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Py),this}intersectObject(e,n=!0,i=[]){return Kp(e,this,i,n),i.sort(Dy),i}intersectObjects(e,n=!0,i=[]){for(let s=0,o=e.length;s<o;s++)Kp(e[s],this,i,n);return i.sort(Dy),i}}function Dy(r,e){return r.distance-e.distance}function Kp(r,e,n,i){let s=!0;if(r.layers.test(e.layers)&&r.raycast(e,n)===!1&&(s=!1),s===!0&&i===!0){const o=r.children;for(let a=0,l=o.length;a<l;a++)Kp(o[a],e,n,!0)}}class Ly{constructor(e=1,n=0,i=0){this.radius=e,this.phi=n,this.theta=i}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=mt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(mt(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class fd{constructor(e,n,i,s){fd.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,n,i,s)}identity(){return this.set(1,0,0,1),this}fromArray(e,n=0){for(let i=0;i<4;i++)this.elements[i]=e[i+n];return this}set(e,n,i,s){const o=this.elements;return o[0]=e,o[2]=n,o[1]=i,o[3]=s,this}}class pd extends ss{constructor(e,n=null){super(),this.object=e,this.domElement=n,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function Zp(r,e,n,i){const s=B1(i);switch(n){case eg:return r*e;case qc:return r*e/s.components*s.byteLength;case ll:return r*e/s.components*s.byteLength;case Kr:return r*e*2/s.components*s.byteLength;case cl:return r*e*2/s.components*s.byteLength;case jc:return r*e*3/s.components*s.byteLength;case cn:return r*e*4/s.components*s.byteLength;case ul:return r*e*4/s.components*s.byteLength;case Ts:case Ss:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Ms:case Es:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Pc:case Lc:return Math.max(r,16)*Math.max(e,8)/4;case Nc:case Dc:return Math.max(r,8)*Math.max(e,8)/2;case Ca:case Na:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Pa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Da:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case La:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Ia:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Ua:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Fa:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Oa:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Ba:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case ka:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case za:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Ga:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Va:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Ha:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Wa:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case $a:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case ja:case qp:case Xp:return Math.ceil(r/4)*Math.ceil(e/4)*16;case qa:case Xa:return Math.ceil(r/4)*Math.ceil(e/4)*8;case Ya:case Ka:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function B1(r){switch(r){case an:case ho:return{byteLength:1,components:1};case tr:case fo:case Cn:return{byteLength:2,components:1};case rd:case sd:return{byteLength:2,components:4};case Wt:case An:case hn:return{byteLength:4,components:1};case od:case ad:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:al}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=al);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Bb(){let r=null,e=!1,n=null,i=null;function s(o,a){n(o,a),i=r.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=r.requestAnimationFrame(s),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(o){n=o},setContext:function(o){r=o}}}function k1(r){const e=new WeakMap;function n(l,c){const u=l.array,h=l.usage,d=u.byteLength,f=r.createBuffer();r.bindBuffer(c,f),r.bufferData(c,u,h),l.onUploadCallback();let p;if(u instanceof Float32Array)p=r.FLOAT;else if(typeof Float16Array<"u"&&u instanceof Float16Array)p=r.HALF_FLOAT;else if(u instanceof Uint16Array)l.isFloat16BufferAttribute?p=r.HALF_FLOAT:p=r.UNSIGNED_SHORT;else if(u instanceof Int16Array)p=r.SHORT;else if(u instanceof Uint32Array)p=r.UNSIGNED_INT;else if(u instanceof Int32Array)p=r.INT;else if(u instanceof Int8Array)p=r.BYTE;else if(u instanceof Uint8Array)p=r.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)p=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:f,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:d}}function i(l,c,u){const h=c.array,d=c.updateRanges;if(r.bindBuffer(u,l),d.length===0)r.bufferSubData(u,0,h);else{d.sort((p,m)=>p.start-m.start);let f=0;for(let p=1;p<d.length;p++){const m=d[f],y=d[p];y.start<=m.start+m.count+1?m.count=Math.max(m.count,y.start+y.count-m.start):(++f,d[f]=y)}d.length=f+1;for(let p=0,m=d.length;p<m;p++){const y=d[p];r.bufferSubData(u,y.start*h.BYTES_PER_ELEMENT,h,y.start,y.count)}c.clearUpdateRanges()}c.onUploadCallback()}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),e.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const c=e.get(l);c&&(r.deleteBuffer(c.buffer),e.delete(l))}function a(l,c){if(l.isInterleavedBufferAttribute&&(l=l.data),l.isGLBufferAttribute){const h=e.get(l);(!h||h.version<l.version)&&e.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}const u=e.get(l);if(u===void 0)e.set(l,n(l,c));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(u.buffer,l,c),u.version=l.version}}return{get:s,remove:o,update:a}}var z1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,G1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,V1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,H1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,W1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,$1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,j1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,q1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,X1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Y1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,K1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Z1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Q1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,J1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,eN=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,tN=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,nN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,iN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,rN=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,sN=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,oN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,aN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,lN=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,cN=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,uN=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,hN=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,dN=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,fN=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,pN=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,mN=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,gN="gl_FragColor = linearToOutputTexel( gl_FragColor );",_N=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,yN=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,vN=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,xN=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bN=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,TN=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,SN=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,MN=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,EN=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,wN=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,AN=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,RN=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,CN=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,NN=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,PN=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,DN=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,LN=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,IN=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,UN=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,FN=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,ON=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,BN=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kN=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,zN=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,GN=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,VN=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,HN=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,WN=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,$N=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,jN=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qN=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,XN=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,YN=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,KN=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ZN=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,QN=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,JN=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,eP=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,tP=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,nP=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,iP=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,rP=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,sP=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,oP=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,aP=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,lP=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,cP=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,uP=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,hP=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,dP=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,fP=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,pP=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,mP=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,gP=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,_P=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,yP=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,vP=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,xP=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,bP=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,TP=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,SP=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,MP=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,EP=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wP=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,AP=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,RP=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,CP=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,NP=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,PP=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,DP=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,LP=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,IP=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,UP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,FP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,OP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,BP=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const kP=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zP=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,GP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,VP=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,WP=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$P=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,jP=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,qP=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,XP=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,YP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,KP=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZP=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,QP=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JP=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,eD=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tD=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nD=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iD=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,rD=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sD=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,oD=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,aD=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lD=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cD=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,uD=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hD=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dD=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fD=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,pD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,mD=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gD=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_D=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,yD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,vt={alphahash_fragment:z1,alphahash_pars_fragment:G1,alphamap_fragment:V1,alphamap_pars_fragment:H1,alphatest_fragment:W1,alphatest_pars_fragment:$1,aomap_fragment:j1,aomap_pars_fragment:q1,batching_pars_vertex:X1,batching_vertex:Y1,begin_vertex:K1,beginnormal_vertex:Z1,bsdfs:Q1,iridescence_fragment:J1,bumpmap_pars_fragment:eN,clipping_planes_fragment:tN,clipping_planes_pars_fragment:nN,clipping_planes_pars_vertex:iN,clipping_planes_vertex:rN,color_fragment:sN,color_pars_fragment:oN,color_pars_vertex:aN,color_vertex:lN,common:cN,cube_uv_reflection_fragment:uN,defaultnormal_vertex:hN,displacementmap_pars_vertex:dN,displacementmap_vertex:fN,emissivemap_fragment:pN,emissivemap_pars_fragment:mN,colorspace_fragment:gN,colorspace_pars_fragment:_N,envmap_fragment:yN,envmap_common_pars_fragment:vN,envmap_pars_fragment:xN,envmap_pars_vertex:bN,envmap_physical_pars_fragment:DN,envmap_vertex:TN,fog_vertex:SN,fog_pars_vertex:MN,fog_fragment:EN,fog_pars_fragment:wN,gradientmap_pars_fragment:AN,lightmap_pars_fragment:RN,lights_lambert_fragment:CN,lights_lambert_pars_fragment:NN,lights_pars_begin:PN,lights_toon_fragment:LN,lights_toon_pars_fragment:IN,lights_phong_fragment:UN,lights_phong_pars_fragment:FN,lights_physical_fragment:ON,lights_physical_pars_fragment:BN,lights_fragment_begin:kN,lights_fragment_maps:zN,lights_fragment_end:GN,logdepthbuf_fragment:VN,logdepthbuf_pars_fragment:HN,logdepthbuf_pars_vertex:WN,logdepthbuf_vertex:$N,map_fragment:jN,map_pars_fragment:qN,map_particle_fragment:XN,map_particle_pars_fragment:YN,metalnessmap_fragment:KN,metalnessmap_pars_fragment:ZN,morphinstance_vertex:QN,morphcolor_vertex:JN,morphnormal_vertex:eP,morphtarget_pars_vertex:tP,morphtarget_vertex:nP,normal_fragment_begin:iP,normal_fragment_maps:rP,normal_pars_fragment:sP,normal_pars_vertex:oP,normal_vertex:aP,normalmap_pars_fragment:lP,clearcoat_normal_fragment_begin:cP,clearcoat_normal_fragment_maps:uP,clearcoat_pars_fragment:hP,iridescence_pars_fragment:dP,opaque_fragment:fP,packing:pP,premultiplied_alpha_fragment:mP,project_vertex:gP,dithering_fragment:_P,dithering_pars_fragment:yP,roughnessmap_fragment:vP,roughnessmap_pars_fragment:xP,shadowmap_pars_fragment:bP,shadowmap_pars_vertex:TP,shadowmap_vertex:SP,shadowmask_pars_fragment:MP,skinbase_vertex:EP,skinning_pars_vertex:wP,skinning_vertex:AP,skinnormal_vertex:RP,specularmap_fragment:CP,specularmap_pars_fragment:NP,tonemapping_fragment:PP,tonemapping_pars_fragment:DP,transmission_fragment:LP,transmission_pars_fragment:IP,uv_pars_fragment:UP,uv_pars_vertex:FP,uv_vertex:OP,worldpos_vertex:BP,background_vert:kP,background_frag:zP,backgroundCube_vert:GP,backgroundCube_frag:VP,cube_vert:HP,cube_frag:WP,depth_vert:$P,depth_frag:jP,distanceRGBA_vert:qP,distanceRGBA_frag:XP,equirect_vert:YP,equirect_frag:KP,linedashed_vert:ZP,linedashed_frag:QP,meshbasic_vert:JP,meshbasic_frag:eD,meshlambert_vert:tD,meshlambert_frag:nD,meshmatcap_vert:iD,meshmatcap_frag:rD,meshnormal_vert:sD,meshnormal_frag:oD,meshphong_vert:aD,meshphong_frag:lD,meshphysical_vert:cD,meshphysical_frag:uD,meshtoon_vert:hD,meshtoon_frag:dD,points_vert:fD,points_frag:pD,shadow_vert:mD,shadow_frag:gD,sprite_vert:_D,sprite_frag:yD},Ae={common:{diffuse:{value:new We(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ut},alphaMap:{value:null},alphaMapTransform:{value:new ut},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ut}},envmap:{envMap:{value:null},envMapRotation:{value:new ut},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ut}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ut}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ut},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ut},normalScale:{value:new de(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ut},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ut}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ut}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ut}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new We(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new We(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ut},alphaTest:{value:0},uvTransform:{value:new ut}},sprite:{diffuse:{value:new We(16777215)},opacity:{value:1},center:{value:new de(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ut},alphaMap:{value:null},alphaMapTransform:{value:new ut},alphaTest:{value:0}}},fr={basic:{uniforms:Xn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:vt.meshbasic_vert,fragmentShader:vt.meshbasic_frag},lambert:{uniforms:Xn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new We(0)}}]),vertexShader:vt.meshlambert_vert,fragmentShader:vt.meshlambert_frag},phong:{uniforms:Xn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new We(0)},specular:{value:new We(1118481)},shininess:{value:30}}]),vertexShader:vt.meshphong_vert,fragmentShader:vt.meshphong_frag},standard:{uniforms:Xn([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new We(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:vt.meshphysical_vert,fragmentShader:vt.meshphysical_frag},toon:{uniforms:Xn([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new We(0)}}]),vertexShader:vt.meshtoon_vert,fragmentShader:vt.meshtoon_frag},matcap:{uniforms:Xn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:vt.meshmatcap_vert,fragmentShader:vt.meshmatcap_frag},points:{uniforms:Xn([Ae.points,Ae.fog]),vertexShader:vt.points_vert,fragmentShader:vt.points_frag},dashed:{uniforms:Xn([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:vt.linedashed_vert,fragmentShader:vt.linedashed_frag},depth:{uniforms:Xn([Ae.common,Ae.displacementmap]),vertexShader:vt.depth_vert,fragmentShader:vt.depth_frag},normal:{uniforms:Xn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:vt.meshnormal_vert,fragmentShader:vt.meshnormal_frag},sprite:{uniforms:Xn([Ae.sprite,Ae.fog]),vertexShader:vt.sprite_vert,fragmentShader:vt.sprite_frag},background:{uniforms:{uvTransform:{value:new ut},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:vt.background_vert,fragmentShader:vt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ut}},vertexShader:vt.backgroundCube_vert,fragmentShader:vt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:vt.cube_vert,fragmentShader:vt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:vt.equirect_vert,fragmentShader:vt.equirect_frag},distanceRGBA:{uniforms:Xn([Ae.common,Ae.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:vt.distanceRGBA_vert,fragmentShader:vt.distanceRGBA_frag},shadow:{uniforms:Xn([Ae.lights,Ae.fog,{color:{value:new We(0)},opacity:{value:1}}]),vertexShader:vt.shadow_vert,fragmentShader:vt.shadow_frag}};fr.physical={uniforms:Xn([fr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ut},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ut},clearcoatNormalScale:{value:new de(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ut},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ut},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ut},sheen:{value:0},sheenColor:{value:new We(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ut},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ut},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ut},transmissionSamplerSize:{value:new de},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ut},attenuationDistance:{value:0},attenuationColor:{value:new We(0)},specularColor:{value:new We(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ut},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ut},anisotropyVector:{value:new de},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ut}}]),vertexShader:vt.meshphysical_vert,fragmentShader:vt.meshphysical_frag};const Uu={r:0,b:0,g:0},js=new ui,vD=new bt;function xD(r,e,n,i,s,o,a){const l=new We(0);let c=o===!0?0:1,u,h,d=null,f=0,p=null;function m(x){let b=x.isScene===!0?x.background:null;return b&&b.isTexture&&(b=(x.backgroundBlurriness>0?n:e).get(b)),b}function y(x){let b=!1;const T=m(x);T===null?g(l,c):T&&T.isColor&&(g(T,1),b=!0);const S=r.xr.getEnvironmentBlendMode();S==="additive"?i.buffers.color.setClear(0,0,0,1,a):S==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(r.autoClear||b)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function _(x,b){const T=m(b);T&&(T.isCubeTexture||T.mapping===mo)?(h===void 0&&(h=new yn(new Mo(1,1,1),new Tr({name:"BackgroundCubeMaterial",uniforms:Qa(fr.backgroundCube.uniforms),vertexShader:fr.backgroundCube.vertexShader,fragmentShader:fr.backgroundCube.fragmentShader,side:kt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(S,M,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),js.copy(b.backgroundRotation),js.x*=-1,js.y*=-1,js.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(js.y*=-1,js.z*=-1),h.material.uniforms.envMap.value=T,h.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(vD.makeRotationFromEuler(js)),h.material.toneMapped=Je.getTransfer(T.colorSpace)!==Pe,(d!==T||f!==T.version||p!==r.toneMapping)&&(h.material.needsUpdate=!0,d=T,f=T.version,p=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):T&&T.isTexture&&(u===void 0&&(u=new yn(new Qc(2,2),new Tr({name:"BackgroundMaterial",uniforms:Qa(fr.background.uniforms),vertexShader:fr.background.vertexShader,fragmentShader:fr.background.fragmentShader,side:Si,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=T,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.toneMapped=Je.getTransfer(T.colorSpace)!==Pe,T.matrixAutoUpdate===!0&&T.updateMatrix(),u.material.uniforms.uvTransform.value.copy(T.matrix),(d!==T||f!==T.version||p!==r.toneMapping)&&(u.material.needsUpdate=!0,d=T,f=T.version,p=r.toneMapping),u.layers.enableAll(),x.unshift(u,u.geometry,u.material,0,0,null))}function g(x,b){x.getRGB(Uu,Sb(r)),i.buffers.color.setClear(Uu.r,Uu.g,Uu.b,b,a)}function v(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return l},setClearColor:function(x,b=1){l.set(x),c=b,g(l,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,g(l,c)},render:y,addToRenderList:_,dispose:v}}function bD(r,e){const n=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},s=f(null);let o=s,a=!1;function l(w,N,D,F,k){let j=!1;const $=d(F,D,N);o!==$&&(o=$,u(o.object)),j=p(w,F,D,k),j&&m(w,F,D,k),k!==null&&e.update(k,r.ELEMENT_ARRAY_BUFFER),(j||a)&&(a=!1,b(w,N,D,F),k!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(k).buffer))}function c(){return r.createVertexArray()}function u(w){return r.bindVertexArray(w)}function h(w){return r.deleteVertexArray(w)}function d(w,N,D){const F=D.wireframe===!0;let k=i[w.id];k===void 0&&(k={},i[w.id]=k);let j=k[N.id];j===void 0&&(j={},k[N.id]=j);let $=j[F];return $===void 0&&($=f(c()),j[F]=$),$}function f(w){const N=[],D=[],F=[];for(let k=0;k<n;k++)N[k]=0,D[k]=0,F[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:D,attributeDivisors:F,object:w,attributes:{},index:null}}function p(w,N,D,F){const k=o.attributes,j=N.attributes;let $=0;const G=D.getAttributes();for(const B in G)if(G[B].location>=0){const Y=k[B];let re=j[B];if(re===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(re=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(re=w.instanceColor)),Y===void 0||Y.attribute!==re||re&&Y.data!==re.data)return!0;$++}return o.attributesNum!==$||o.index!==F}function m(w,N,D,F){const k={},j=N.attributes;let $=0;const G=D.getAttributes();for(const B in G)if(G[B].location>=0){let Y=j[B];Y===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(Y=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(Y=w.instanceColor));const re={};re.attribute=Y,Y&&Y.data&&(re.data=Y.data),k[B]=re,$++}o.attributes=k,o.attributesNum=$,o.index=F}function y(){const w=o.newAttributes;for(let N=0,D=w.length;N<D;N++)w[N]=0}function _(w){g(w,0)}function g(w,N){const D=o.newAttributes,F=o.enabledAttributes,k=o.attributeDivisors;D[w]=1,F[w]===0&&(r.enableVertexAttribArray(w),F[w]=1),k[w]!==N&&(r.vertexAttribDivisor(w,N),k[w]=N)}function v(){const w=o.newAttributes,N=o.enabledAttributes;for(let D=0,F=N.length;D<F;D++)N[D]!==w[D]&&(r.disableVertexAttribArray(D),N[D]=0)}function x(w,N,D,F,k,j,$){$===!0?r.vertexAttribIPointer(w,N,D,k,j):r.vertexAttribPointer(w,N,D,F,k,j)}function b(w,N,D,F){y();const k=F.attributes,j=D.getAttributes(),$=N.defaultAttributeValues;for(const G in j){const B=j[G];if(B.location>=0){let J=k[G];if(J===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(J=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(J=w.instanceColor)),J!==void 0){const Y=J.normalized,re=J.itemSize,me=e.get(J);if(me===void 0)continue;const Re=me.buffer,tt=me.type,q=me.bytesPerElement,z=tt===r.INT||tt===r.UNSIGNED_INT||J.gpuType===An;if(J.isInterleavedBufferAttribute){const Q=J.data,ge=Q.stride,De=J.offset;if(Q.isInstancedInterleavedBuffer){for(let Me=0;Me<B.locationSize;Me++)g(B.location+Me,Q.meshPerAttribute);w.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let Me=0;Me<B.locationSize;Me++)_(B.location+Me);r.bindBuffer(r.ARRAY_BUFFER,Re);for(let Me=0;Me<B.locationSize;Me++)x(B.location+Me,re/B.locationSize,tt,Y,ge*q,(De+re/B.locationSize*Me)*q,z)}else{if(J.isInstancedBufferAttribute){for(let Q=0;Q<B.locationSize;Q++)g(B.location+Q,J.meshPerAttribute);w.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let Q=0;Q<B.locationSize;Q++)_(B.location+Q);r.bindBuffer(r.ARRAY_BUFFER,Re);for(let Q=0;Q<B.locationSize;Q++)x(B.location+Q,re/B.locationSize,tt,Y,re*q,re/B.locationSize*Q*q,z)}}else if($!==void 0){const Y=$[G];if(Y!==void 0)switch(Y.length){case 2:r.vertexAttrib2fv(B.location,Y);break;case 3:r.vertexAttrib3fv(B.location,Y);break;case 4:r.vertexAttrib4fv(B.location,Y);break;default:r.vertexAttrib1fv(B.location,Y)}}}}v()}function T(){A();for(const w in i){const N=i[w];for(const D in N){const F=N[D];for(const k in F)h(F[k].object),delete F[k];delete N[D]}delete i[w]}}function S(w){if(i[w.id]===void 0)return;const N=i[w.id];for(const D in N){const F=N[D];for(const k in F)h(F[k].object),delete F[k];delete N[D]}delete i[w.id]}function M(w){for(const N in i){const D=i[N];if(D[w.id]===void 0)continue;const F=D[w.id];for(const k in F)h(F[k].object),delete F[k];delete D[w.id]}}function A(){E(),a=!0,o!==s&&(o=s,u(o.object))}function E(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:l,reset:A,resetDefaultState:E,dispose:T,releaseStatesOfGeometry:S,releaseStatesOfProgram:M,initAttributes:y,enableAttribute:_,disableUnusedAttributes:v}}function TD(r,e,n){let i;function s(u){i=u}function o(u,h){r.drawArrays(i,u,h),n.update(h,i,1)}function a(u,h,d){d!==0&&(r.drawArraysInstanced(i,u,h,d),n.update(h,i,d))}function l(u,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,u,0,h,0,d);let p=0;for(let m=0;m<d;m++)p+=h[m];n.update(p,i,1)}function c(u,h,d,f){if(d===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<u.length;m++)a(u[m],h[m],f[m]);else{p.multiDrawArraysInstancedWEBGL(i,u,0,h,0,f,0,d);let m=0;for(let y=0;y<d;y++)m+=h[y]*f[y];n.update(m,i,1)}}this.setMode=s,this.render=o,this.renderInstances=a,this.renderMultiDraw=l,this.renderMultiDrawInstances=c}function SD(r,e,n,i){let s;function o(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");s=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function a(M){return!(M!==cn&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function l(M){const A=M===Cn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==an&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==hn&&!A)}function c(M){if(M==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=n.precision!==void 0?n.precision:"highp";const h=c(u);h!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",h,"instead."),u=h);const d=n.logarithmicDepthBuffer===!0,f=n.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),b=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),T=m>0,S=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:l,precision:u,logarithmicDepthBuffer:d,reversedDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:y,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:b,vertexTextures:T,maxSamples:S}}function MD(r){const e=this;let n=null,i=0,s=!1,o=!1;const a=new Ki,l=new ut,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f){const p=d.length!==0||f||i!==0||s;return s=f,i=d.length,p},this.beginShadows=function(){o=!0,h(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(d,f){n=h(d,f,0)},this.setState=function(d,f,p){const m=d.clippingPlanes,y=d.clipIntersection,_=d.clipShadows,g=r.get(d);if(!s||m===null||m.length===0||o&&!_)o?h(null):u();else{const v=o?0:i,x=v*4;let b=g.clippingState||null;c.value=b,b=h(m,f,x,p);for(let T=0;T!==x;++T)b[T]=n[T];g.clippingState=b,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=v}};function u(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,f,p,m){const y=d!==null?d.length:0;let _=null;if(y!==0){if(_=c.value,m!==!0||_===null){const g=p+y*4,v=f.matrixWorldInverse;l.getNormalMatrix(v),(_===null||_.length<g)&&(_=new Float32Array(g));for(let x=0,b=p;x!==y;++x,b+=4)a.copy(d[x]).applyMatrix4(v,l),a.normal.toArray(_,b),_[b+3]=a.constant}c.value=_,c.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,_}}function ED(r){let e=new WeakMap;function n(a,l){return l===Aa?a.mapping=xr:l===Ra&&(a.mapping=br),a}function i(a){if(a&&a.isTexture){const l=a.mapping;if(l===Aa||l===Ra)if(e.has(a)){const c=e.get(a).texture;return n(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const u=new wb(c.height);return u.fromEquirectangularTexture(r,a),e.set(a,u),a.addEventListener("dispose",s),n(u.texture,a.mapping)}else return null}}return a}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap}return{get:i,dispose:o}}const ca=4,Iy=[.125,.215,.35,.446,.526,.582],oo=20,vf=new eu,Uy=new We;let xf=null,bf=0,Tf=0,Sf=!1;const eo=(1+Math.sqrt(5))/2,qo=1/eo,Fy=[new L(-eo,qo,0),new L(eo,qo,0),new L(-qo,0,eo),new L(qo,0,eo),new L(0,eo,-qo),new L(0,eo,qo),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],wD=new L;let Oy=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100,o={}){const{size:a=256,position:l=wD}=o;xf=this._renderer.getRenderTarget(),bf=this._renderer.getActiveCubeFace(),Tf=this._renderer.getActiveMipmapLevel(),Sf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,i,s,c,l),n>0&&this._blur(c,0,0,n),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=zy(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ky(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(xf,bf,Tf),this._renderer.xr.enabled=Sf,e.scissorTest=!1,Fu(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===xr||e.mapping===br?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),xf=this._renderer.getRenderTarget(),bf=this._renderer.getActiveCubeFace(),Tf=this._renderer.getActiveMipmapLevel(),Sf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:Tn,minFilter:Tn,generateMipmaps:!1,type:Cn,format:cn,colorSpace:yo,depthBuffer:!1},s=By(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=By(e,n,i);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=AD(o)),this._blurMaterial=RD(o,e,n)}return s}_compileMaterial(e){const n=new yn(this._lodPlanes[0],e);this._renderer.compile(n,vf)}_sceneToCubeUV(e,n,i,s,o){const c=new Rn(90,1,n,i),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,f=d.autoClear,p=d.toneMapping;d.getClearColor(Uy),d.toneMapping=ci,d.autoClear=!1,d.state.buffers.depth.getReversed()&&(d.setRenderTarget(s),d.clearDepth(),d.setRenderTarget(null));const y=new pr({name:"PMREM.Background",side:kt,depthWrite:!1,depthTest:!1}),_=new yn(new Mo,y);let g=!1;const v=e.background;v?v.isColor&&(y.color.copy(v),e.background=null,g=!0):(y.color.copy(Uy),g=!0);for(let x=0;x<6;x++){const b=x%3;b===0?(c.up.set(0,u[x],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x+h[x],o.y,o.z)):b===1?(c.up.set(0,0,u[x]),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y+h[x],o.z)):(c.up.set(0,u[x],0),c.position.set(o.x,o.y,o.z),c.lookAt(o.x,o.y,o.z+h[x]));const T=this._cubeSize;Fu(s,b*T,x>2?T:0,T,T),d.setRenderTarget(s),g&&d.render(_,c),d.render(e,c)}_.geometry.dispose(),_.material.dispose(),d.toneMapping=p,d.autoClear=f,e.background=v}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===xr||e.mapping===br;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=zy()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ky());const o=s?this._cubemapMaterial:this._equirectMaterial,a=new yn(this._lodPlanes[0],o),l=o.uniforms;l.envMap.value=e;const c=this._cubeSize;Fu(n,0,0,3*c,2*c),i.setRenderTarget(n),i.render(a,vf)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let o=1;o<s;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),l=Fy[(s-o-1)%Fy.length];this._blur(e,o-1,o,a,l)}n.autoClear=i}_blur(e,n,i,s,o){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,s,"latitudinal",o),this._halfBlur(a,e,i,i,s,"longitudinal",o)}_halfBlur(e,n,i,s,o,a,l){const c=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new yn(this._lodPlanes[s],u),f=u.uniforms,p=this._sizeLods[i]-1,m=isFinite(o)?Math.PI/(2*p):2*Math.PI/(2*oo-1),y=o/m,_=isFinite(o)?1+Math.floor(h*y):oo;_>oo&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${oo}`);const g=[];let v=0;for(let M=0;M<oo;++M){const A=M/y,E=Math.exp(-A*A/2);g.push(E),M===0?v+=E:M<_&&(v+=2*E)}for(let M=0;M<g.length;M++)g[M]=g[M]/v;f.envMap.value=e.texture,f.samples.value=_,f.weights.value=g,f.latitudinal.value=a==="latitudinal",l&&(f.poleAxis.value=l);const{_lodMax:x}=this;f.dTheta.value=m,f.mipInt.value=x-i;const b=this._sizeLods[s],T=3*b*(s>x-ca?s-x+ca:0),S=4*(this._cubeSize-b);Fu(n,T,S,3*b,2*b),c.setRenderTarget(n),c.render(d,vf)}};function AD(r){const e=[],n=[],i=[];let s=r;const o=r-ca+1+Iy.length;for(let a=0;a<o;a++){const l=Math.pow(2,s);n.push(l);let c=1/l;a>r-ca?c=Iy[a-r+ca-1]:a===0&&(c=0),i.push(c);const u=1/(l-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,m=6,y=3,_=2,g=1,v=new Float32Array(y*m*p),x=new Float32Array(_*m*p),b=new Float32Array(g*m*p);for(let S=0;S<p;S++){const M=S%3*2/3-1,A=S>2?0:-1,E=[M,A,0,M+2/3,A,0,M+2/3,A+1,0,M,A,0,M+2/3,A+1,0,M,A+1,0];v.set(E,y*m*S),x.set(f,_*m*S);const w=[S,S,S,S,S,S];b.set(w,g*m*S)}const T=new $n;T.setAttribute("position",new Dn(v,y)),T.setAttribute("uv",new Dn(x,_)),T.setAttribute("faceIndex",new Dn(b,g)),e.push(T),s>ca&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function By(r,e,n){const i=new Ns(r,e,n);return i.texture.mapping=mo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Fu(r,e,n,i,s){r.viewport.set(e,n,i,s),r.scissor.set(e,n,i,s)}function RD(r,e,n){const i=new Float32Array(oo),s=new L(0,1,0);return new Tr({name:"SphericalGaussianBlur",defines:{n:oo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function ky(){return new Tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function zy(){return new Tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function Eg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function CD(r){let e=new WeakMap,n=null;function i(l){if(l&&l.isTexture){const c=l.mapping,u=c===Aa||c===Ra,h=c===xr||c===br;if(u||h){let d=e.get(l);const f=d!==void 0?d.texture.pmremVersion:0;if(l.isRenderTargetTexture&&l.pmremVersion!==f)return n===null&&(n=new Oy(r)),d=u?n.fromEquirectangular(l,d):n.fromCubemap(l,d),d.texture.pmremVersion=l.pmremVersion,e.set(l,d),d.texture;if(d!==void 0)return d.texture;{const p=l.image;return u&&p&&p.height>0||h&&p&&s(p)?(n===null&&(n=new Oy(r)),d=u?n.fromEquirectangular(l):n.fromCubemap(l),d.texture.pmremVersion=l.pmremVersion,e.set(l,d),l.addEventListener("dispose",o),d.texture):null}}}return l}function s(l){let c=0;const u=6;for(let h=0;h<u;h++)l[h]!==void 0&&c++;return c===u}function o(l){const c=l.target;c.removeEventListener("dispose",o);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function ND(r){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=r.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const s=n(i);return s===null&&Ri("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function PD(r,e,n,i){const s={},o=new WeakMap;function a(d){const f=d.target;f.index!==null&&e.remove(f.index);for(const m in f.attributes)e.remove(f.attributes[m]);f.removeEventListener("dispose",a),delete s[f.id];const p=o.get(f);p&&(e.remove(p),o.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function l(d,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,n.memory.geometries++),f}function c(d){const f=d.attributes;for(const p in f)e.update(f[p],r.ARRAY_BUFFER)}function u(d){const f=[],p=d.index,m=d.attributes.position;let y=0;if(p!==null){const v=p.array;y=p.version;for(let x=0,b=v.length;x<b;x+=3){const T=v[x+0],S=v[x+1],M=v[x+2];f.push(T,S,S,M,M,T)}}else if(m!==void 0){const v=m.array;y=m.version;for(let x=0,b=v.length/3-1;x<b;x+=3){const T=x+0,S=x+1,M=x+2;f.push(T,S,S,M,M,T)}}else return;const _=new(lg(f)?fg:dg)(f,1);_.version=y;const g=o.get(d);g&&e.remove(g),o.set(d,_)}function h(d){const f=o.get(d);if(f){const p=d.index;p!==null&&f.version<p.version&&u(d)}else u(d);return o.get(d)}return{get:l,update:c,getWireframeAttribute:h}}function DD(r,e,n){let i;function s(f){i=f}let o,a;function l(f){o=f.type,a=f.bytesPerElement}function c(f,p){r.drawElements(i,p,o,f*a),n.update(p,i,1)}function u(f,p,m){m!==0&&(r.drawElementsInstanced(i,p,o,f*a,m),n.update(p,i,m))}function h(f,p,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,p,0,o,f,0,m);let _=0;for(let g=0;g<m;g++)_+=p[g];n.update(_,i,1)}function d(f,p,m,y){if(m===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let g=0;g<f.length;g++)u(f[g]/a,p[g],y[g]);else{_.multiDrawElementsInstancedWEBGL(i,p,0,o,f,0,y,0,m);let g=0;for(let v=0;v<m;v++)g+=p[v]*y[v];n.update(g,i,1)}}this.setMode=s,this.setIndex=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function LD(r){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(o,a,l){switch(n.calls++,a){case r.TRIANGLES:n.triangles+=l*(o/3);break;case r.LINES:n.lines+=l*(o/2);break;case r.LINE_STRIP:n.lines+=l*(o-1);break;case r.LINE_LOOP:n.lines+=l*o;break;case r.POINTS:n.points+=l*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function ID(r,e,n){const i=new WeakMap,s=new et;function o(a,l,c){const u=a.morphTargetInfluences,h=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,d=h!==void 0?h.length:0;let f=i.get(l);if(f===void 0||f.count!==d){let E=function(){M.dispose(),i.delete(l),l.removeEventListener("dispose",E)};f!==void 0&&f.texture.dispose();const p=l.morphAttributes.position!==void 0,m=l.morphAttributes.normal!==void 0,y=l.morphAttributes.color!==void 0,_=l.morphAttributes.position||[],g=l.morphAttributes.normal||[],v=l.morphAttributes.color||[];let x=0;p===!0&&(x=1),m===!0&&(x=2),y===!0&&(x=3);let b=l.attributes.position.count*x,T=1;b>e.maxTextureSize&&(T=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const S=new Float32Array(b*T*4*d),M=new ug(S,b,T,d);M.type=hn,M.needsUpdate=!0;const A=x*4;for(let w=0;w<d;w++){const N=_[w],D=g[w],F=v[w],k=b*T*4*w;for(let j=0;j<N.count;j++){const $=j*A;p===!0&&(s.fromBufferAttribute(N,j),S[k+$+0]=s.x,S[k+$+1]=s.y,S[k+$+2]=s.z,S[k+$+3]=0),m===!0&&(s.fromBufferAttribute(D,j),S[k+$+4]=s.x,S[k+$+5]=s.y,S[k+$+6]=s.z,S[k+$+7]=0),y===!0&&(s.fromBufferAttribute(F,j),S[k+$+8]=s.x,S[k+$+9]=s.y,S[k+$+10]=s.z,S[k+$+11]=F.itemSize===4?s.w:1)}}f={count:d,texture:M,size:new de(b,T)},i.set(l,f),l.addEventListener("dispose",E)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(r,"morphTexture",a.morphTexture,n);else{let p=0;for(let y=0;y<u.length;y++)p+=u[y];const m=l.morphTargetsRelative?1:1-p;c.getUniforms().setValue(r,"morphTargetBaseInfluence",m),c.getUniforms().setValue(r,"morphTargetInfluences",u)}c.getUniforms().setValue(r,"morphTargetsTexture",f.texture,n),c.getUniforms().setValue(r,"morphTargetsTextureSize",f.size)}return{update:o}}function UD(r,e,n,i){let s=new WeakMap;function o(c){const u=i.render.frame,h=c.geometry,d=e.get(c,h);if(s.get(d)!==u&&(e.update(d),s.set(d,u)),c.isInstancedMesh&&(c.hasEventListener("dispose",l)===!1&&c.addEventListener("dispose",l),s.get(c)!==u&&(n.update(c.instanceMatrix,r.ARRAY_BUFFER),c.instanceColor!==null&&n.update(c.instanceColor,r.ARRAY_BUFFER),s.set(c,u))),c.isSkinnedMesh){const f=c.skeleton;s.get(f)!==u&&(f.update(),s.set(f,u))}return d}function a(){s=new WeakMap}function l(c){const u=c.target;u.removeEventListener("dispose",l),n.remove(u.instanceMatrix),u.instanceColor!==null&&n.remove(u.instanceColor)}return{update:o,dispose:a}}const kb=new fn,Gy=new zi(1,1),zb=new ug,Gb=new RC,Vb=new Yc,Vy=[],Hy=[],Wy=new Float32Array(16),$y=new Float32Array(9),jy=new Float32Array(4);function hl(r,e,n){const i=r[0];if(i<=0||i>0)return r;const s=e*n;let o=Vy[s];if(o===void 0&&(o=new Float32Array(s),Vy[s]=o),e!==0){i.toArray(o,0);for(let a=1,l=0;a!==e;++a)l+=n,r[a].toArray(o,l)}return o}function Sn(r,e){if(r.length!==e.length)return!1;for(let n=0,i=r.length;n<i;n++)if(r[n]!==e[n])return!1;return!0}function Mn(r,e){for(let n=0,i=e.length;n<i;n++)r[n]=e[n]}function md(r,e){let n=Hy[e];n===void 0&&(n=new Int32Array(e),Hy[e]=n);for(let i=0;i!==e;++i)n[i]=r.allocateTextureUnit();return n}function FD(r,e){const n=this.cache;n[0]!==e&&(r.uniform1f(this.addr,e),n[0]=e)}function OD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Sn(n,e))return;r.uniform2fv(this.addr,e),Mn(n,e)}}function BD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Sn(n,e))return;r.uniform3fv(this.addr,e),Mn(n,e)}}function kD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Sn(n,e))return;r.uniform4fv(this.addr,e),Mn(n,e)}}function zD(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;r.uniformMatrix2fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;jy.set(i),r.uniformMatrix2fv(this.addr,!1,jy),Mn(n,i)}}function GD(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;r.uniformMatrix3fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;$y.set(i),r.uniformMatrix3fv(this.addr,!1,$y),Mn(n,i)}}function VD(r,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;r.uniformMatrix4fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;Wy.set(i),r.uniformMatrix4fv(this.addr,!1,Wy),Mn(n,i)}}function HD(r,e){const n=this.cache;n[0]!==e&&(r.uniform1i(this.addr,e),n[0]=e)}function WD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Sn(n,e))return;r.uniform2iv(this.addr,e),Mn(n,e)}}function $D(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Sn(n,e))return;r.uniform3iv(this.addr,e),Mn(n,e)}}function jD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Sn(n,e))return;r.uniform4iv(this.addr,e),Mn(n,e)}}function qD(r,e){const n=this.cache;n[0]!==e&&(r.uniform1ui(this.addr,e),n[0]=e)}function XD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Sn(n,e))return;r.uniform2uiv(this.addr,e),Mn(n,e)}}function YD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Sn(n,e))return;r.uniform3uiv(this.addr,e),Mn(n,e)}}function KD(r,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Sn(n,e))return;r.uniform4uiv(this.addr,e),Mn(n,e)}}function ZD(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s);let o;this.type===r.SAMPLER_2D_SHADOW?(Gy.compareFunction=cd,o=Gy):o=kb,n.setTexture2D(e||o,s)}function QD(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||Gb,s)}function JD(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||Vb,s)}function e2(r,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(r.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||zb,s)}function t2(r){switch(r){case 5126:return FD;case 35664:return OD;case 35665:return BD;case 35666:return kD;case 35674:return zD;case 35675:return GD;case 35676:return VD;case 5124:case 35670:return HD;case 35667:case 35671:return WD;case 35668:case 35672:return $D;case 35669:case 35673:return jD;case 5125:return qD;case 36294:return XD;case 36295:return YD;case 36296:return KD;case 35678:case 36198:case 36298:case 36306:case 35682:return ZD;case 35679:case 36299:case 36307:return QD;case 35680:case 36300:case 36308:case 36293:return JD;case 36289:case 36303:case 36311:case 36292:return e2}}function n2(r,e){r.uniform1fv(this.addr,e)}function i2(r,e){const n=hl(e,this.size,2);r.uniform2fv(this.addr,n)}function r2(r,e){const n=hl(e,this.size,3);r.uniform3fv(this.addr,n)}function s2(r,e){const n=hl(e,this.size,4);r.uniform4fv(this.addr,n)}function o2(r,e){const n=hl(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,n)}function a2(r,e){const n=hl(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,n)}function l2(r,e){const n=hl(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,n)}function c2(r,e){r.uniform1iv(this.addr,e)}function u2(r,e){r.uniform2iv(this.addr,e)}function h2(r,e){r.uniform3iv(this.addr,e)}function d2(r,e){r.uniform4iv(this.addr,e)}function f2(r,e){r.uniform1uiv(this.addr,e)}function p2(r,e){r.uniform2uiv(this.addr,e)}function m2(r,e){r.uniform3uiv(this.addr,e)}function g2(r,e){r.uniform4uiv(this.addr,e)}function _2(r,e,n){const i=this.cache,s=e.length,o=md(n,s);Sn(i,o)||(r.uniform1iv(this.addr,o),Mn(i,o));for(let a=0;a!==s;++a)n.setTexture2D(e[a]||kb,o[a])}function y2(r,e,n){const i=this.cache,s=e.length,o=md(n,s);Sn(i,o)||(r.uniform1iv(this.addr,o),Mn(i,o));for(let a=0;a!==s;++a)n.setTexture3D(e[a]||Gb,o[a])}function v2(r,e,n){const i=this.cache,s=e.length,o=md(n,s);Sn(i,o)||(r.uniform1iv(this.addr,o),Mn(i,o));for(let a=0;a!==s;++a)n.setTextureCube(e[a]||Vb,o[a])}function x2(r,e,n){const i=this.cache,s=e.length,o=md(n,s);Sn(i,o)||(r.uniform1iv(this.addr,o),Mn(i,o));for(let a=0;a!==s;++a)n.setTexture2DArray(e[a]||zb,o[a])}function b2(r){switch(r){case 5126:return n2;case 35664:return i2;case 35665:return r2;case 35666:return s2;case 35674:return o2;case 35675:return a2;case 35676:return l2;case 5124:case 35670:return c2;case 35667:case 35671:return u2;case 35668:case 35672:return h2;case 35669:case 35673:return d2;case 5125:return f2;case 36294:return p2;case 36295:return m2;case 36296:return g2;case 35678:case 36198:case 36298:case 36306:case 35682:return _2;case 35679:case 36299:case 36307:return y2;case 35680:case 36300:case 36308:case 36293:return v2;case 36289:case 36303:case 36311:case 36292:return x2}}class T2{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=t2(n.type)}}class S2{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=b2(n.type)}}class M2{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let o=0,a=s.length;o!==a;++o){const l=s[o];l.setValue(e,n[l.id],i)}}}const Mf=/(\w+)(\])?(\[|\.)?/g;function qy(r,e){r.seq.push(e),r.map[e.id]=e}function E2(r,e,n){const i=r.name,s=i.length;for(Mf.lastIndex=0;;){const o=Mf.exec(i),a=Mf.lastIndex;let l=o[1];const c=o[2]==="]",u=o[3];if(c&&(l=l|0),u===void 0||u==="["&&a+2===s){qy(n,u===void 0?new T2(l,r,e):new S2(l,r,e));break}else{let d=n.map[l];d===void 0&&(d=new M2(l),qy(n,d)),n=d}}}class bh{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const o=e.getActiveUniform(n,s),a=e.getUniformLocation(n,o.name);E2(o,a,this)}}setValue(e,n,i,s){const o=this.map[n];o!==void 0&&o.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let o=0,a=n.length;o!==a;++o){const l=n[o],c=i[l.id];c.needsUpdate!==!1&&l.setValue(e,c.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,o=e.length;s!==o;++s){const a=e[s];a.id in n&&i.push(a)}return i}}function Xy(r,e,n){const i=r.createShader(e);return r.shaderSource(i,n),r.compileShader(i),i}const w2=37297;let A2=0;function R2(r,e){const n=r.split(`
`),i=[],s=Math.max(e-6,0),o=Math.min(e+6,n.length);for(let a=s;a<o;a++){const l=a+1;i.push(`${l===e?">":" "} ${l}: ${n[a]}`)}return i.join(`
`)}const Yy=new ut;function C2(r){Je._getMatrix(Yy,Je.workingColorSpace,r);const e=`mat3( ${Yy.elements.map(n=>n.toFixed(4))} )`;switch(Je.getTransfer(r)){case Za:return[e,"LinearTransferOETF"];case Pe:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function Ky(r,e,n){const i=r.getShaderParameter(e,r.COMPILE_STATUS),o=(r.getShaderInfoLog(e)||"").trim();if(i&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const l=parseInt(a[1]);return n.toUpperCase()+`

`+o+`

`+R2(r.getShaderSource(e),l)}else return o}function N2(r,e){const n=C2(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join(`
`)}function P2(r,e){let n;switch(e){case fb:n="Linear";break;case pb:n="Reinhard";break;case mb:n="Cineon";break;case gb:n="ACESFilmic";break;case _b:n="AgX";break;case yb:n="Neutral";break;case HR:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+r+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Ou=new L;function D2(){Je.getLuminanceCoefficients(Ou);const r=Ou.x.toFixed(4),e=Ou.y.toFixed(4),n=Ou.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${n} );`,"	return dot( weights, rgb );","}"].join(`
`)}function L2(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(nc).join(`
`)}function I2(r){const e=[];for(const n in r){const i=r[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function U2(r,e){const n={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const o=r.getActiveAttrib(e,s),a=o.name;let l=1;o.type===r.FLOAT_MAT2&&(l=2),o.type===r.FLOAT_MAT3&&(l=3),o.type===r.FLOAT_MAT4&&(l=4),n[a]={type:o.type,location:r.getAttribLocation(e,a),locationSize:l}}return n}function nc(r){return r!==""}function Zy(r,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qy(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const F2=/^[ \t]*#include +<([\w\d./]+)>/gm;function Qp(r){return r.replace(F2,B2)}const O2=new Map;function B2(r,e){let n=vt[e];if(n===void 0){const i=O2.get(e);if(i!==void 0)n=vt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Qp(n)}const k2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Jy(r){return r.replace(k2,z2)}function z2(r,e,n,i){let s="";for(let o=parseInt(e);o<parseInt(n);o++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return s}function ev(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function G2(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Gm?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===BR?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ti&&(e="SHADOWMAP_TYPE_VSM"),e}function V2(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case xr:case br:e="ENVMAP_TYPE_CUBE";break;case mo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function H2(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case br:e="ENVMAP_MODE_REFRACTION";break}return e}function W2(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case $c:e="ENVMAP_BLENDING_MULTIPLY";break;case hb:e="ENVMAP_BLENDING_MIX";break;case db:e="ENVMAP_BLENDING_ADD";break}return e}function $2(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function j2(r,e,n,i){const s=r.getContext(),o=n.defines;let a=n.vertexShader,l=n.fragmentShader;const c=G2(n),u=V2(n),h=H2(n),d=W2(n),f=$2(n),p=L2(n),m=I2(o),y=s.createProgram();let _,g,v=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(nc).join(`
`),_.length>0&&(_+=`
`),g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(nc).join(`
`),g.length>0&&(g+=`
`)):(_=[ev(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(nc).join(`
`),g=[ev(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ci?"#define TONE_MAPPING":"",n.toneMapping!==ci?vt.tonemapping_pars_fragment:"",n.toneMapping!==ci?P2("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",vt.colorspace_pars_fragment,N2("linearToOutputTexel",n.outputColorSpace),D2(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(nc).join(`
`)),a=Qp(a),a=Zy(a,n),a=Qy(a,n),l=Qp(l),l=Zy(l,n),l=Qy(l,n),a=Jy(a),l=Jy(l),n.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,_=[p,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,g=["#define varying in",n.glslVersion===ry?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ry?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=v+_+a,b=v+g+l,T=Xy(s,s.VERTEX_SHADER,x),S=Xy(s,s.FRAGMENT_SHADER,b);s.attachShader(y,T),s.attachShader(y,S),n.index0AttributeName!==void 0?s.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(y,0,"position"),s.linkProgram(y);function M(N){if(r.debug.checkShaderErrors){const D=s.getProgramInfoLog(y)||"",F=s.getShaderInfoLog(T)||"",k=s.getShaderInfoLog(S)||"",j=D.trim(),$=F.trim(),G=k.trim();let B=!0,J=!0;if(s.getProgramParameter(y,s.LINK_STATUS)===!1)if(B=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(s,y,T,S);else{const Y=Ky(s,T,"vertex"),re=Ky(s,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(y,s.VALIDATE_STATUS)+`

Material Name: `+N.name+`
Material Type: `+N.type+`

Program Info Log: `+j+`
`+Y+`
`+re)}else j!==""?console.warn("THREE.WebGLProgram: Program Info Log:",j):($===""||G==="")&&(J=!1);J&&(N.diagnostics={runnable:B,programLog:j,vertexShader:{log:$,prefix:_},fragmentShader:{log:G,prefix:g}})}s.deleteShader(T),s.deleteShader(S),A=new bh(s,y),E=U2(s,y)}let A;this.getUniforms=function(){return A===void 0&&M(this),A};let E;this.getAttributes=function(){return E===void 0&&M(this),E};let w=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=s.getProgramParameter(y,w2)),w},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(y),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=A2++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=T,this.fragmentShader=S,this}let q2=0;class X2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),o=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(o)===!1&&(a.add(o),o.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new Y2(e),n.set(e,i)),i}}class Y2{constructor(e){this.id=q2++,this.code=e,this.usedTimes=0}}function K2(r,e,n,i,s,o,a){const l=new hg,c=new X2,u=new Set,h=[],d=s.logarithmicDepthBuffer,f=s.vertexTextures;let p=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(E){return u.add(E),E===0?"uv":`uv${E}`}function _(E,w,N,D,F){const k=D.fog,j=F.geometry,$=E.isMeshStandardMaterial?D.environment:null,G=(E.isMeshStandardMaterial?n:e).get(E.envMap||$),B=G&&G.mapping===mo?G.image.height:null,J=m[E.type];E.precision!==null&&(p=s.getMaxPrecision(E.precision),p!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",p,"instead."));const Y=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,re=Y!==void 0?Y.length:0;let me=0;j.morphAttributes.position!==void 0&&(me=1),j.morphAttributes.normal!==void 0&&(me=2),j.morphAttributes.color!==void 0&&(me=3);let Re,tt,q,z;if(J){const Lt=fr[J];Re=Lt.vertexShader,tt=Lt.fragmentShader}else Re=E.vertexShader,tt=E.fragmentShader,c.update(E),q=c.getVertexShaderID(E),z=c.getFragmentShaderID(E);const Q=r.getRenderTarget(),ge=r.state.buffers.depth.getReversed(),De=F.isInstancedMesh===!0,Me=F.isBatchedMesh===!0,He=!!E.map,Dt=!!E.matcap,U=!!G,xt=!!E.aoMap,nt=!!E.lightMap,Z=!!E.bumpMap,ue=!!E.normalMap,ht=!!E.displacementMap,Fe=!!E.emissiveMap,Qe=!!E.metalnessMap,nn=!!E.roughnessMap,At=E.anisotropy>0,I=E.clearcoat>0,C=E.dispersion>0,K=E.iridescence>0,le=E.sheen>0,pe=E.transmission>0,oe=At&&!!E.anisotropyMap,Ye=I&&!!E.clearcoatMap,Ee=I&&!!E.clearcoatNormalMap,je=I&&!!E.clearcoatRoughnessMap,qe=K&&!!E.iridescenceMap,xe=K&&!!E.iridescenceThicknessMap,Ie=le&&!!E.sheenColorMap,lt=le&&!!E.sheenRoughnessMap,Xe=!!E.specularMap,Ce=!!E.specularColorMap,gt=!!E.specularIntensityMap,V=pe&&!!E.transmissionMap,be=pe&&!!E.thicknessMap,we=!!E.gradientMap,ke=!!E.alphaMap,_e=E.alphaTest>0,he=!!E.alphaHash,Ge=!!E.extensions;let ft=ci;E.toneMapped&&(Q===null||Q.isXRRenderTarget===!0)&&(ft=r.toneMapping);const $t={shaderID:J,shaderType:E.type,shaderName:E.name,vertexShader:Re,fragmentShader:tt,defines:E.defines,customVertexShaderID:q,customFragmentShaderID:z,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:p,batching:Me,batchingColor:Me&&F._colorsTexture!==null,instancing:De,instancingColor:De&&F.instanceColor!==null,instancingMorph:De&&F.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:Q===null?r.outputColorSpace:Q.isXRRenderTarget===!0?Q.texture.colorSpace:yo,alphaToCoverage:!!E.alphaToCoverage,map:He,matcap:Dt,envMap:U,envMapMode:U&&G.mapping,envMapCubeUVHeight:B,aoMap:xt,lightMap:nt,bumpMap:Z,normalMap:ue,displacementMap:f&&ht,emissiveMap:Fe,normalMapObjectSpace:ue&&E.normalMapType===vb,normalMapTangentSpace:ue&&E.normalMapType===is,metalnessMap:Qe,roughnessMap:nn,anisotropy:At,anisotropyMap:oe,clearcoat:I,clearcoatMap:Ye,clearcoatNormalMap:Ee,clearcoatRoughnessMap:je,dispersion:C,iridescence:K,iridescenceMap:qe,iridescenceThicknessMap:xe,sheen:le,sheenColorMap:Ie,sheenRoughnessMap:lt,specularMap:Xe,specularColorMap:Ce,specularIntensityMap:gt,transmission:pe,transmissionMap:V,thicknessMap:be,gradientMap:we,opaque:E.transparent===!1&&E.blending===Mi&&E.alphaToCoverage===!1,alphaMap:ke,alphaTest:_e,alphaHash:he,combine:E.combine,mapUv:He&&y(E.map.channel),aoMapUv:xt&&y(E.aoMap.channel),lightMapUv:nt&&y(E.lightMap.channel),bumpMapUv:Z&&y(E.bumpMap.channel),normalMapUv:ue&&y(E.normalMap.channel),displacementMapUv:ht&&y(E.displacementMap.channel),emissiveMapUv:Fe&&y(E.emissiveMap.channel),metalnessMapUv:Qe&&y(E.metalnessMap.channel),roughnessMapUv:nn&&y(E.roughnessMap.channel),anisotropyMapUv:oe&&y(E.anisotropyMap.channel),clearcoatMapUv:Ye&&y(E.clearcoatMap.channel),clearcoatNormalMapUv:Ee&&y(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:je&&y(E.clearcoatRoughnessMap.channel),iridescenceMapUv:qe&&y(E.iridescenceMap.channel),iridescenceThicknessMapUv:xe&&y(E.iridescenceThicknessMap.channel),sheenColorMapUv:Ie&&y(E.sheenColorMap.channel),sheenRoughnessMapUv:lt&&y(E.sheenRoughnessMap.channel),specularMapUv:Xe&&y(E.specularMap.channel),specularColorMapUv:Ce&&y(E.specularColorMap.channel),specularIntensityMapUv:gt&&y(E.specularIntensityMap.channel),transmissionMapUv:V&&y(E.transmissionMap.channel),thicknessMapUv:be&&y(E.thicknessMap.channel),alphaMapUv:ke&&y(E.alphaMap.channel),vertexTangents:!!j.attributes.tangent&&(ue||At),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!j.attributes.uv&&(He||ke),fog:!!k,useFog:E.fog===!0,fogExp2:!!k&&k.isFogExp2,flatShading:E.flatShading===!0&&E.wireframe===!1,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:d,reversedDepthBuffer:ge,skinning:F.isSkinnedMesh===!0,morphTargets:j.morphAttributes.position!==void 0,morphNormals:j.morphAttributes.normal!==void 0,morphColors:j.morphAttributes.color!==void 0,morphTargetsCount:re,morphTextureStride:me,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:E.dithering,shadowMapEnabled:r.shadowMap.enabled&&N.length>0,shadowMapType:r.shadowMap.type,toneMapping:ft,decodeVideoTexture:He&&E.map.isVideoTexture===!0&&Je.getTransfer(E.map.colorSpace)===Pe,decodeVideoTextureEmissive:Fe&&E.emissiveMap.isVideoTexture===!0&&Je.getTransfer(E.emissiveMap.colorSpace)===Pe,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===zn,flipSided:E.side===kt,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionClipCullDistance:Ge&&E.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ge&&E.extensions.multiDraw===!0||Me)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:E.customProgramCacheKey()};return $t.vertexUv1s=u.has(1),$t.vertexUv2s=u.has(2),$t.vertexUv3s=u.has(3),u.clear(),$t}function g(E){const w=[];if(E.shaderID?w.push(E.shaderID):(w.push(E.customVertexShaderID),w.push(E.customFragmentShaderID)),E.defines!==void 0)for(const N in E.defines)w.push(N),w.push(E.defines[N]);return E.isRawShaderMaterial===!1&&(v(w,E),x(w,E),w.push(r.outputColorSpace)),w.push(E.customProgramCacheKey),w.join()}function v(E,w){E.push(w.precision),E.push(w.outputColorSpace),E.push(w.envMapMode),E.push(w.envMapCubeUVHeight),E.push(w.mapUv),E.push(w.alphaMapUv),E.push(w.lightMapUv),E.push(w.aoMapUv),E.push(w.bumpMapUv),E.push(w.normalMapUv),E.push(w.displacementMapUv),E.push(w.emissiveMapUv),E.push(w.metalnessMapUv),E.push(w.roughnessMapUv),E.push(w.anisotropyMapUv),E.push(w.clearcoatMapUv),E.push(w.clearcoatNormalMapUv),E.push(w.clearcoatRoughnessMapUv),E.push(w.iridescenceMapUv),E.push(w.iridescenceThicknessMapUv),E.push(w.sheenColorMapUv),E.push(w.sheenRoughnessMapUv),E.push(w.specularMapUv),E.push(w.specularColorMapUv),E.push(w.specularIntensityMapUv),E.push(w.transmissionMapUv),E.push(w.thicknessMapUv),E.push(w.combine),E.push(w.fogExp2),E.push(w.sizeAttenuation),E.push(w.morphTargetsCount),E.push(w.morphAttributeCount),E.push(w.numDirLights),E.push(w.numPointLights),E.push(w.numSpotLights),E.push(w.numSpotLightMaps),E.push(w.numHemiLights),E.push(w.numRectAreaLights),E.push(w.numDirLightShadows),E.push(w.numPointLightShadows),E.push(w.numSpotLightShadows),E.push(w.numSpotLightShadowsWithMaps),E.push(w.numLightProbes),E.push(w.shadowMapType),E.push(w.toneMapping),E.push(w.numClippingPlanes),E.push(w.numClipIntersection),E.push(w.depthPacking)}function x(E,w){l.disableAll(),w.supportsVertexTextures&&l.enable(0),w.instancing&&l.enable(1),w.instancingColor&&l.enable(2),w.instancingMorph&&l.enable(3),w.matcap&&l.enable(4),w.envMap&&l.enable(5),w.normalMapObjectSpace&&l.enable(6),w.normalMapTangentSpace&&l.enable(7),w.clearcoat&&l.enable(8),w.iridescence&&l.enable(9),w.alphaTest&&l.enable(10),w.vertexColors&&l.enable(11),w.vertexAlphas&&l.enable(12),w.vertexUv1s&&l.enable(13),w.vertexUv2s&&l.enable(14),w.vertexUv3s&&l.enable(15),w.vertexTangents&&l.enable(16),w.anisotropy&&l.enable(17),w.alphaHash&&l.enable(18),w.batching&&l.enable(19),w.dispersion&&l.enable(20),w.batchingColor&&l.enable(21),w.gradientMap&&l.enable(22),E.push(l.mask),l.disableAll(),w.fog&&l.enable(0),w.useFog&&l.enable(1),w.flatShading&&l.enable(2),w.logarithmicDepthBuffer&&l.enable(3),w.reversedDepthBuffer&&l.enable(4),w.skinning&&l.enable(5),w.morphTargets&&l.enable(6),w.morphNormals&&l.enable(7),w.morphColors&&l.enable(8),w.premultipliedAlpha&&l.enable(9),w.shadowMapEnabled&&l.enable(10),w.doubleSided&&l.enable(11),w.flipSided&&l.enable(12),w.useDepthPacking&&l.enable(13),w.dithering&&l.enable(14),w.transmission&&l.enable(15),w.sheen&&l.enable(16),w.opaque&&l.enable(17),w.pointsUvs&&l.enable(18),w.decodeVideoTexture&&l.enable(19),w.decodeVideoTextureEmissive&&l.enable(20),w.alphaToCoverage&&l.enable(21),E.push(l.mask)}function b(E){const w=m[E.type];let N;if(w){const D=fr[w];N=Mb.clone(D.uniforms)}else N=E.uniforms;return N}function T(E,w){let N;for(let D=0,F=h.length;D<F;D++){const k=h[D];if(k.cacheKey===w){N=k,++N.usedTimes;break}}return N===void 0&&(N=new j2(r,w,E,o),h.push(N)),N}function S(E){if(--E.usedTimes===0){const w=h.indexOf(E);h[w]=h[h.length-1],h.pop(),E.destroy()}}function M(E){c.remove(E)}function A(){c.dispose()}return{getParameters:_,getProgramCacheKey:g,getUniforms:b,acquireProgram:T,releaseProgram:S,releaseShaderCache:M,programs:h,dispose:A}}function Z2(){let r=new WeakMap;function e(a){return r.has(a)}function n(a){let l=r.get(a);return l===void 0&&(l={},r.set(a,l)),l}function i(a){r.delete(a)}function s(a,l,c){r.get(a)[l]=c}function o(){r=new WeakMap}return{has:e,get:n,remove:i,update:s,dispose:o}}function Q2(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function tv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function nv(){const r=[];let e=0;const n=[],i=[],s=[];function o(){e=0,n.length=0,i.length=0,s.length=0}function a(d,f,p,m,y,_){let g=r[e];return g===void 0?(g={id:d.id,object:d,geometry:f,material:p,groupOrder:m,renderOrder:d.renderOrder,z:y,group:_},r[e]=g):(g.id=d.id,g.object=d,g.geometry=f,g.material=p,g.groupOrder=m,g.renderOrder=d.renderOrder,g.z=y,g.group=_),e++,g}function l(d,f,p,m,y,_){const g=a(d,f,p,m,y,_);p.transmission>0?i.push(g):p.transparent===!0?s.push(g):n.push(g)}function c(d,f,p,m,y,_){const g=a(d,f,p,m,y,_);p.transmission>0?i.unshift(g):p.transparent===!0?s.unshift(g):n.unshift(g)}function u(d,f){n.length>1&&n.sort(d||Q2),i.length>1&&i.sort(f||tv),s.length>1&&s.sort(f||tv)}function h(){for(let d=e,f=r.length;d<f;d++){const p=r[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:n,transmissive:i,transparent:s,init:o,push:l,unshift:c,finish:h,sort:u}}function J2(){let r=new WeakMap;function e(i,s){const o=r.get(i);let a;return o===void 0?(a=new nv,r.set(i,[a])):s>=o.length?(a=new nv,o.push(a)):a=o[s],a}function n(){r=new WeakMap}return{get:e,dispose:n}}function eL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new L,color:new We};break;case"SpotLight":n={position:new L,direction:new L,color:new We,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new L,color:new We,distance:0,decay:0};break;case"HemisphereLight":n={direction:new L,skyColor:new We,groundColor:new We};break;case"RectAreaLight":n={color:new We,position:new L,halfWidth:new L,halfHeight:new L};break}return r[e.id]=n,n}}}function tL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new de,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=n,n}}}let nL=0;function iL(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function rL(r){const e=new eL,n=tL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)i.probe.push(new L);const s=new L,o=new bt,a=new bt;function l(u){let h=0,d=0,f=0;for(let E=0;E<9;E++)i.probe[E].set(0,0,0);let p=0,m=0,y=0,_=0,g=0,v=0,x=0,b=0,T=0,S=0,M=0;u.sort(iL);for(let E=0,w=u.length;E<w;E++){const N=u[E],D=N.color,F=N.intensity,k=N.distance,j=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)h+=D.r*F,d+=D.g*F,f+=D.b*F;else if(N.isLightProbe){for(let $=0;$<9;$++)i.probe[$].addScaledVector(N.sh.coefficients[$],F);M++}else if(N.isDirectionalLight){const $=e.get(N);if($.color.copy(N.color).multiplyScalar(N.intensity),N.castShadow){const G=N.shadow,B=n.get(N);B.shadowIntensity=G.intensity,B.shadowBias=G.bias,B.shadowNormalBias=G.normalBias,B.shadowRadius=G.radius,B.shadowMapSize=G.mapSize,i.directionalShadow[p]=B,i.directionalShadowMap[p]=j,i.directionalShadowMatrix[p]=N.shadow.matrix,v++}i.directional[p]=$,p++}else if(N.isSpotLight){const $=e.get(N);$.position.setFromMatrixPosition(N.matrixWorld),$.color.copy(D).multiplyScalar(F),$.distance=k,$.coneCos=Math.cos(N.angle),$.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),$.decay=N.decay,i.spot[y]=$;const G=N.shadow;if(N.map&&(i.spotLightMap[T]=N.map,T++,G.updateMatrices(N),N.castShadow&&S++),i.spotLightMatrix[y]=G.matrix,N.castShadow){const B=n.get(N);B.shadowIntensity=G.intensity,B.shadowBias=G.bias,B.shadowNormalBias=G.normalBias,B.shadowRadius=G.radius,B.shadowMapSize=G.mapSize,i.spotShadow[y]=B,i.spotShadowMap[y]=j,b++}y++}else if(N.isRectAreaLight){const $=e.get(N);$.color.copy(D).multiplyScalar(F),$.halfWidth.set(N.width*.5,0,0),$.halfHeight.set(0,N.height*.5,0),i.rectArea[_]=$,_++}else if(N.isPointLight){const $=e.get(N);if($.color.copy(N.color).multiplyScalar(N.intensity),$.distance=N.distance,$.decay=N.decay,N.castShadow){const G=N.shadow,B=n.get(N);B.shadowIntensity=G.intensity,B.shadowBias=G.bias,B.shadowNormalBias=G.normalBias,B.shadowRadius=G.radius,B.shadowMapSize=G.mapSize,B.shadowCameraNear=G.camera.near,B.shadowCameraFar=G.camera.far,i.pointShadow[m]=B,i.pointShadowMap[m]=j,i.pointShadowMatrix[m]=N.shadow.matrix,x++}i.point[m]=$,m++}else if(N.isHemisphereLight){const $=e.get(N);$.skyColor.copy(N.color).multiplyScalar(F),$.groundColor.copy(N.groundColor).multiplyScalar(F),i.hemi[g]=$,g++}}_>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_FLOAT_1,i.rectAreaLTC2=Ae.LTC_FLOAT_2):(i.rectAreaLTC1=Ae.LTC_HALF_1,i.rectAreaLTC2=Ae.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=f;const A=i.hash;(A.directionalLength!==p||A.pointLength!==m||A.spotLength!==y||A.rectAreaLength!==_||A.hemiLength!==g||A.numDirectionalShadows!==v||A.numPointShadows!==x||A.numSpotShadows!==b||A.numSpotMaps!==T||A.numLightProbes!==M)&&(i.directional.length=p,i.spot.length=y,i.rectArea.length=_,i.point.length=m,i.hemi.length=g,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=b,i.spotShadowMap.length=b,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=b+T-S,i.spotLightMap.length=T,i.numSpotLightShadowsWithMaps=S,i.numLightProbes=M,A.directionalLength=p,A.pointLength=m,A.spotLength=y,A.rectAreaLength=_,A.hemiLength=g,A.numDirectionalShadows=v,A.numPointShadows=x,A.numSpotShadows=b,A.numSpotMaps=T,A.numLightProbes=M,i.version=nL++)}function c(u,h){let d=0,f=0,p=0,m=0,y=0;const _=h.matrixWorldInverse;for(let g=0,v=u.length;g<v;g++){const x=u[g];if(x.isDirectionalLight){const b=i.directional[d];b.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(_),d++}else if(x.isSpotLight){const b=i.spot[p];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(_),b.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(_),p++}else if(x.isRectAreaLight){const b=i.rectArea[m];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(_),a.identity(),o.copy(x.matrixWorld),o.premultiply(_),a.extractRotation(o),b.halfWidth.set(x.width*.5,0,0),b.halfHeight.set(0,x.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),m++}else if(x.isPointLight){const b=i.point[f];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(_),f++}else if(x.isHemisphereLight){const b=i.hemi[y];b.direction.setFromMatrixPosition(x.matrixWorld),b.direction.transformDirection(_),y++}}}return{setup:l,setupView:c,state:i}}function iv(r){const e=new rL(r),n=[],i=[];function s(h){u.camera=h,n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(){e.setup(n)}function c(h){e.setupView(n,h)}const u={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:u,setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function sL(r){let e=new WeakMap;function n(s,o=0){const a=e.get(s);let l;return a===void 0?(l=new iv(r),e.set(s,[l])):o>=a.length?(l=new iv(r),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}const oL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,aL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function lL(r,e,n){let i=new Kc;const s=new de,o=new de,a=new et,l=new b1({depthPacking:jR}),c=new T1,u={},h=n.maxTextureSize,d={[Si]:kt,[kt]:Si,[zn]:zn},f=new Tr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new de},radius:{value:4}},vertexShader:oL,fragmentShader:aL}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const m=new $n;m.setAttribute("position",new Dn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new yn(m,f),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Gm;let g=this.type;this.render=function(S,M,A){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||S.length===0)return;const E=r.getRenderTarget(),w=r.getActiveCubeFace(),N=r.getActiveMipmapLevel(),D=r.state;D.setBlending(li),D.buffers.depth.getReversed()===!0?D.buffers.color.setClear(0,0,0,0):D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const F=g!==Ti&&this.type===Ti,k=g===Ti&&this.type!==Ti;for(let j=0,$=S.length;j<$;j++){const G=S[j],B=G.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",G,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;s.copy(B.mapSize);const J=B.getFrameExtents();if(s.multiply(J),o.copy(B.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(o.x=Math.floor(h/J.x),s.x=o.x*J.x,B.mapSize.x=o.x),s.y>h&&(o.y=Math.floor(h/J.y),s.y=o.y*J.y,B.mapSize.y=o.y)),B.map===null||F===!0||k===!0){const re=this.type!==Ti?{minFilter:qt,magFilter:qt}:{};B.map!==null&&B.map.dispose(),B.map=new Ns(s.x,s.y,re),B.map.texture.name=G.name+".shadowMap",B.camera.updateProjectionMatrix()}r.setRenderTarget(B.map),r.clear();const Y=B.getViewportCount();for(let re=0;re<Y;re++){const me=B.getViewport(re);a.set(o.x*me.x,o.y*me.y,o.x*me.z,o.y*me.w),D.viewport(a),B.updateMatrices(G,re),i=B.getFrustum(),b(M,A,B.camera,G,this.type)}B.isPointLightShadow!==!0&&this.type===Ti&&v(B,A),B.needsUpdate=!1}g=this.type,_.needsUpdate=!1,r.setRenderTarget(E,w,N)};function v(S,M){const A=e.update(y);f.defines.VSM_SAMPLES!==S.blurSamples&&(f.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new Ns(s.x,s.y)),f.uniforms.shadow_pass.value=S.map.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(M,null,A,f,y,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(M,null,A,p,y,null)}function x(S,M,A,E){let w=null;const N=A.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(N!==void 0)w=N;else if(w=A.isPointLight===!0?c:l,r.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0||M.alphaToCoverage===!0){const D=w.uuid,F=M.uuid;let k=u[D];k===void 0&&(k={},u[D]=k);let j=k[F];j===void 0&&(j=w.clone(),k[F]=j,M.addEventListener("dispose",T)),w=j}if(w.visible=M.visible,w.wireframe=M.wireframe,E===Ti?w.side=M.shadowSide!==null?M.shadowSide:M.side:w.side=M.shadowSide!==null?M.shadowSide:d[M.side],w.alphaMap=M.alphaMap,w.alphaTest=M.alphaToCoverage===!0?.5:M.alphaTest,w.map=M.map,w.clipShadows=M.clipShadows,w.clippingPlanes=M.clippingPlanes,w.clipIntersection=M.clipIntersection,w.displacementMap=M.displacementMap,w.displacementScale=M.displacementScale,w.displacementBias=M.displacementBias,w.wireframeLinewidth=M.wireframeLinewidth,w.linewidth=M.linewidth,A.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const D=r.properties.get(w);D.light=A}return w}function b(S,M,A,E,w){if(S.visible===!1)return;if(S.layers.test(M.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&w===Ti)&&(!S.frustumCulled||i.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,S.matrixWorld);const F=e.update(S),k=S.material;if(Array.isArray(k)){const j=F.groups;for(let $=0,G=j.length;$<G;$++){const B=j[$],J=k[B.materialIndex];if(J&&J.visible){const Y=x(S,J,E,w);S.onBeforeShadow(r,S,M,A,F,Y,B),r.renderBufferDirect(A,null,F,Y,S,B),S.onAfterShadow(r,S,M,A,F,Y,B)}}}else if(k.visible){const j=x(S,k,E,w);S.onBeforeShadow(r,S,M,A,F,j,null),r.renderBufferDirect(A,null,F,j,S,null),S.onAfterShadow(r,S,M,A,F,j,null)}}const D=S.children;for(let F=0,k=D.length;F<k;F++)b(D[F],M,A,E,w)}function T(S){S.target.removeEventListener("dispose",T);for(const A in u){const E=u[A],w=S.target.uuid;w in E&&(E[w].dispose(),delete E[w])}}}const cL={[Sc]:Mc,[Ec]:Rc,[wc]:Cc,[Rs]:Ac,[Mc]:Sc,[Rc]:Ec,[Cc]:wc,[Ac]:Rs};function uL(r,e){function n(){let V=!1;const be=new et;let we=null;const ke=new et(0,0,0,0);return{setMask:function(_e){we!==_e&&!V&&(r.colorMask(_e,_e,_e,_e),we=_e)},setLocked:function(_e){V=_e},setClear:function(_e,he,Ge,ft,$t){$t===!0&&(_e*=ft,he*=ft,Ge*=ft),be.set(_e,he,Ge,ft),ke.equals(be)===!1&&(r.clearColor(_e,he,Ge,ft),ke.copy(be))},reset:function(){V=!1,we=null,ke.set(-1,0,0,0)}}}function i(){let V=!1,be=!1,we=null,ke=null,_e=null;return{setReversed:function(he){if(be!==he){const Ge=e.get("EXT_clip_control");he?Ge.clipControlEXT(Ge.LOWER_LEFT_EXT,Ge.ZERO_TO_ONE_EXT):Ge.clipControlEXT(Ge.LOWER_LEFT_EXT,Ge.NEGATIVE_ONE_TO_ONE_EXT),be=he;const ft=_e;_e=null,this.setClear(ft)}},getReversed:function(){return be},setTest:function(he){he?Q(r.DEPTH_TEST):ge(r.DEPTH_TEST)},setMask:function(he){we!==he&&!V&&(r.depthMask(he),we=he)},setFunc:function(he){if(be&&(he=cL[he]),ke!==he){switch(he){case Sc:r.depthFunc(r.NEVER);break;case Mc:r.depthFunc(r.ALWAYS);break;case Ec:r.depthFunc(r.LESS);break;case Rs:r.depthFunc(r.LEQUAL);break;case wc:r.depthFunc(r.EQUAL);break;case Ac:r.depthFunc(r.GEQUAL);break;case Rc:r.depthFunc(r.GREATER);break;case Cc:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ke=he}},setLocked:function(he){V=he},setClear:function(he){_e!==he&&(be&&(he=1-he),r.clearDepth(he),_e=he)},reset:function(){V=!1,we=null,ke=null,_e=null,be=!1}}}function s(){let V=!1,be=null,we=null,ke=null,_e=null,he=null,Ge=null,ft=null,$t=null;return{setTest:function(Lt){V||(Lt?Q(r.STENCIL_TEST):ge(r.STENCIL_TEST))},setMask:function(Lt){be!==Lt&&!V&&(r.stencilMask(Lt),be=Lt)},setFunc:function(Lt,Ar,rr){(we!==Lt||ke!==Ar||_e!==rr)&&(r.stencilFunc(Lt,Ar,rr),we=Lt,ke=Ar,_e=rr)},setOp:function(Lt,Ar,rr){(he!==Lt||Ge!==Ar||ft!==rr)&&(r.stencilOp(Lt,Ar,rr),he=Lt,Ge=Ar,ft=rr)},setLocked:function(Lt){V=Lt},setClear:function(Lt){$t!==Lt&&(r.clearStencil(Lt),$t=Lt)},reset:function(){V=!1,be=null,we=null,ke=null,_e=null,he=null,Ge=null,ft=null,$t=null}}}const o=new n,a=new i,l=new s,c=new WeakMap,u=new WeakMap;let h={},d={},f=new WeakMap,p=[],m=null,y=!1,_=null,g=null,v=null,x=null,b=null,T=null,S=null,M=new We(0,0,0),A=0,E=!1,w=null,N=null,D=null,F=null,k=null;const j=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let $=!1,G=0;const B=r.getParameter(r.VERSION);B.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(B)[1]),$=G>=1):B.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),$=G>=2);let J=null,Y={};const re=r.getParameter(r.SCISSOR_BOX),me=r.getParameter(r.VIEWPORT),Re=new et().fromArray(re),tt=new et().fromArray(me);function q(V,be,we,ke){const _e=new Uint8Array(4),he=r.createTexture();r.bindTexture(V,he),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ge=0;Ge<we;Ge++)V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY?r.texImage3D(be,0,r.RGBA,1,1,ke,0,r.RGBA,r.UNSIGNED_BYTE,_e):r.texImage2D(be+Ge,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,_e);return he}const z={};z[r.TEXTURE_2D]=q(r.TEXTURE_2D,r.TEXTURE_2D,1),z[r.TEXTURE_CUBE_MAP]=q(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),z[r.TEXTURE_2D_ARRAY]=q(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),z[r.TEXTURE_3D]=q(r.TEXTURE_3D,r.TEXTURE_3D,1,1),o.setClear(0,0,0,1),a.setClear(1),l.setClear(0),Q(r.DEPTH_TEST),a.setFunc(Rs),Z(!1),ue(jp),Q(r.CULL_FACE),xt(li);function Q(V){h[V]!==!0&&(r.enable(V),h[V]=!0)}function ge(V){h[V]!==!1&&(r.disable(V),h[V]=!1)}function De(V,be){return d[V]!==be?(r.bindFramebuffer(V,be),d[V]=be,V===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=be),V===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=be),!0):!1}function Me(V,be){let we=p,ke=!1;if(V){we=f.get(be),we===void 0&&(we=[],f.set(be,we));const _e=V.textures;if(we.length!==_e.length||we[0]!==r.COLOR_ATTACHMENT0){for(let he=0,Ge=_e.length;he<Ge;he++)we[he]=r.COLOR_ATTACHMENT0+he;we.length=_e.length,ke=!0}}else we[0]!==r.BACK&&(we[0]=r.BACK,ke=!0);ke&&r.drawBuffers(we)}function He(V){return m!==V?(r.useProgram(V),m=V,!0):!1}const Dt={[Gn]:r.FUNC_ADD,[Vm]:r.FUNC_SUBTRACT,[Hm]:r.FUNC_REVERSE_SUBTRACT};Dt[cb]=r.MIN,Dt[ub]=r.MAX;const U={[Gr]:r.ZERO,[Wm]:r.ONE,[$m]:r.SRC_COLOR,[bc]:r.SRC_ALPHA,[Zm]:r.SRC_ALPHA_SATURATE,[Ym]:r.DST_COLOR,[qm]:r.DST_ALPHA,[jm]:r.ONE_MINUS_SRC_COLOR,[Tc]:r.ONE_MINUS_SRC_ALPHA,[Km]:r.ONE_MINUS_DST_COLOR,[Xm]:r.ONE_MINUS_DST_ALPHA,[kR]:r.CONSTANT_COLOR,[zR]:r.ONE_MINUS_CONSTANT_COLOR,[GR]:r.CONSTANT_ALPHA,[VR]:r.ONE_MINUS_CONSTANT_ALPHA};function xt(V,be,we,ke,_e,he,Ge,ft,$t,Lt){if(V===li){y===!0&&(ge(r.BLEND),y=!1);return}if(y===!1&&(Q(r.BLEND),y=!0),V!==pa){if(V!==_||Lt!==E){if((g!==Gn||b!==Gn)&&(r.blendEquation(r.FUNC_ADD),g=Gn,b=Gn),Lt)switch(V){case Mi:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ma:r.blendFunc(r.ONE,r.ONE);break;case Ea:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case wa:r.blendFuncSeparate(r.DST_COLOR,r.ONE_MINUS_SRC_ALPHA,r.ZERO,r.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Mi:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ma:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE,r.ONE,r.ONE);break;case Ea:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case wa:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}v=null,x=null,T=null,S=null,M.set(0,0,0),A=0,_=V,E=Lt}return}_e=_e||be,he=he||we,Ge=Ge||ke,(be!==g||_e!==b)&&(r.blendEquationSeparate(Dt[be],Dt[_e]),g=be,b=_e),(we!==v||ke!==x||he!==T||Ge!==S)&&(r.blendFuncSeparate(U[we],U[ke],U[he],U[Ge]),v=we,x=ke,T=he,S=Ge),(ft.equals(M)===!1||$t!==A)&&(r.blendColor(ft.r,ft.g,ft.b,$t),M.copy(ft),A=$t),_=V,E=!1}function nt(V,be){V.side===zn?ge(r.CULL_FACE):Q(r.CULL_FACE);let we=V.side===kt;be&&(we=!we),Z(we),V.blending===Mi&&V.transparent===!1?xt(li):xt(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),a.setFunc(V.depthFunc),a.setTest(V.depthTest),a.setMask(V.depthWrite),o.setMask(V.colorWrite);const ke=V.stencilWrite;l.setTest(ke),ke&&(l.setMask(V.stencilWriteMask),l.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),l.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),Fe(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Q(r.SAMPLE_ALPHA_TO_COVERAGE):ge(r.SAMPLE_ALPHA_TO_COVERAGE)}function Z(V){w!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),w=V)}function ue(V){V!==ab?(Q(r.CULL_FACE),V!==N&&(V===jp?r.cullFace(r.BACK):V===lb?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ge(r.CULL_FACE),N=V}function ht(V){V!==D&&($&&r.lineWidth(V),D=V)}function Fe(V,be,we){V?(Q(r.POLYGON_OFFSET_FILL),(F!==be||k!==we)&&(r.polygonOffset(be,we),F=be,k=we)):ge(r.POLYGON_OFFSET_FILL)}function Qe(V){V?Q(r.SCISSOR_TEST):ge(r.SCISSOR_TEST)}function nn(V){V===void 0&&(V=r.TEXTURE0+j-1),J!==V&&(r.activeTexture(V),J=V)}function At(V,be,we){we===void 0&&(J===null?we=r.TEXTURE0+j-1:we=J);let ke=Y[we];ke===void 0&&(ke={type:void 0,texture:void 0},Y[we]=ke),(ke.type!==V||ke.texture!==be)&&(J!==we&&(r.activeTexture(we),J=we),r.bindTexture(V,be||z[V]),ke.type=V,ke.texture=be)}function I(){const V=Y[J];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function C(){try{r.compressedTexImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function K(){try{r.compressedTexImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function le(){try{r.texSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function pe(){try{r.texSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function oe(){try{r.compressedTexSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ye(){try{r.compressedTexSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ee(){try{r.texStorage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function je(){try{r.texStorage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function qe(){try{r.texImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function xe(){try{r.texImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ie(V){Re.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Re.copy(V))}function lt(V){tt.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),tt.copy(V))}function Xe(V,be){let we=u.get(be);we===void 0&&(we=new WeakMap,u.set(be,we));let ke=we.get(V);ke===void 0&&(ke=r.getUniformBlockIndex(be,V.name),we.set(V,ke))}function Ce(V,be){const ke=u.get(be).get(V);c.get(be)!==ke&&(r.uniformBlockBinding(be,ke,V.__bindingPointIndex),c.set(be,ke))}function gt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},J=null,Y={},d={},f=new WeakMap,p=[],m=null,y=!1,_=null,g=null,v=null,x=null,b=null,T=null,S=null,M=new We(0,0,0),A=0,E=!1,w=null,N=null,D=null,F=null,k=null,Re.set(0,0,r.canvas.width,r.canvas.height),tt.set(0,0,r.canvas.width,r.canvas.height),o.reset(),a.reset(),l.reset()}return{buffers:{color:o,depth:a,stencil:l},enable:Q,disable:ge,bindFramebuffer:De,drawBuffers:Me,useProgram:He,setBlending:xt,setMaterial:nt,setFlipSided:Z,setCullFace:ue,setLineWidth:ht,setPolygonOffset:Fe,setScissorTest:Qe,activeTexture:nn,bindTexture:At,unbindTexture:I,compressedTexImage2D:C,compressedTexImage3D:K,texImage2D:qe,texImage3D:xe,updateUBOMapping:Xe,uniformBlockBinding:Ce,texStorage2D:Ee,texStorage3D:je,texSubImage2D:le,texSubImage3D:pe,compressedTexSubImage2D:oe,compressedTexSubImage3D:Ye,scissor:Ie,viewport:lt,reset:gt}}function hL(r,e,n,i,s,o,a){const l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new de,h=new WeakMap;let d;const f=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(I,C){return p?new OffscreenCanvas(I,C):Ic("canvas")}function y(I,C,K){let le=1;const pe=At(I);if((pe.width>K||pe.height>K)&&(le=K/Math.max(pe.width,pe.height)),le<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const oe=Math.floor(le*pe.width),Ye=Math.floor(le*pe.height);d===void 0&&(d=m(oe,Ye));const Ee=C?m(oe,Ye):d;return Ee.width=oe,Ee.height=Ye,Ee.getContext("2d").drawImage(I,0,0,oe,Ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pe.width+"x"+pe.height+") to ("+oe+"x"+Ye+")."),Ee}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pe.width+"x"+pe.height+")."),I;return I}function _(I){return I.generateMipmaps}function g(I){r.generateMipmap(I)}function v(I){return I.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:I.isWebGL3DRenderTarget?r.TEXTURE_3D:I.isWebGLArrayRenderTarget||I.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function x(I,C,K,le,pe=!1){if(I!==null){if(r[I]!==void 0)return r[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let oe=C;if(C===r.RED&&(K===r.FLOAT&&(oe=r.R32F),K===r.HALF_FLOAT&&(oe=r.R16F),K===r.UNSIGNED_BYTE&&(oe=r.R8)),C===r.RED_INTEGER&&(K===r.UNSIGNED_BYTE&&(oe=r.R8UI),K===r.UNSIGNED_SHORT&&(oe=r.R16UI),K===r.UNSIGNED_INT&&(oe=r.R32UI),K===r.BYTE&&(oe=r.R8I),K===r.SHORT&&(oe=r.R16I),K===r.INT&&(oe=r.R32I)),C===r.RG&&(K===r.FLOAT&&(oe=r.RG32F),K===r.HALF_FLOAT&&(oe=r.RG16F),K===r.UNSIGNED_BYTE&&(oe=r.RG8)),C===r.RG_INTEGER&&(K===r.UNSIGNED_BYTE&&(oe=r.RG8UI),K===r.UNSIGNED_SHORT&&(oe=r.RG16UI),K===r.UNSIGNED_INT&&(oe=r.RG32UI),K===r.BYTE&&(oe=r.RG8I),K===r.SHORT&&(oe=r.RG16I),K===r.INT&&(oe=r.RG32I)),C===r.RGB_INTEGER&&(K===r.UNSIGNED_BYTE&&(oe=r.RGB8UI),K===r.UNSIGNED_SHORT&&(oe=r.RGB16UI),K===r.UNSIGNED_INT&&(oe=r.RGB32UI),K===r.BYTE&&(oe=r.RGB8I),K===r.SHORT&&(oe=r.RGB16I),K===r.INT&&(oe=r.RGB32I)),C===r.RGBA_INTEGER&&(K===r.UNSIGNED_BYTE&&(oe=r.RGBA8UI),K===r.UNSIGNED_SHORT&&(oe=r.RGBA16UI),K===r.UNSIGNED_INT&&(oe=r.RGBA32UI),K===r.BYTE&&(oe=r.RGBA8I),K===r.SHORT&&(oe=r.RGBA16I),K===r.INT&&(oe=r.RGBA32I)),C===r.RGB&&(K===r.UNSIGNED_INT_5_9_9_9_REV&&(oe=r.RGB9_E5),K===r.UNSIGNED_INT_10F_11F_11F_REV&&(oe=r.R11F_G11F_B10F)),C===r.RGBA){const Ye=pe?Za:Je.getTransfer(le);K===r.FLOAT&&(oe=r.RGBA32F),K===r.HALF_FLOAT&&(oe=r.RGBA16F),K===r.UNSIGNED_BYTE&&(oe=Ye===Pe?r.SRGB8_ALPHA8:r.RGBA8),K===r.UNSIGNED_SHORT_4_4_4_4&&(oe=r.RGBA4),K===r.UNSIGNED_SHORT_5_5_5_1&&(oe=r.RGB5_A1)}return(oe===r.R16F||oe===r.R32F||oe===r.RG16F||oe===r.RG32F||oe===r.RGBA16F||oe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),oe}function b(I,C){let K;return I?C===null||C===Wt||C===Ei?K=r.DEPTH24_STENCIL8:C===hn?K=r.DEPTH32F_STENCIL8:C===tr&&(K=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===Wt||C===Ei?K=r.DEPTH_COMPONENT24:C===hn?K=r.DEPTH_COMPONENT32F:C===tr&&(K=r.DEPTH_COMPONENT16),K}function T(I,C){return _(I)===!0||I.isFramebufferTexture&&I.minFilter!==qt&&I.minFilter!==Tn?Math.log2(Math.max(C.width,C.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?C.mipmaps.length:1}function S(I){const C=I.target;C.removeEventListener("dispose",S),A(C),C.isVideoTexture&&h.delete(C)}function M(I){const C=I.target;C.removeEventListener("dispose",M),w(C)}function A(I){const C=i.get(I);if(C.__webglInit===void 0)return;const K=I.source,le=f.get(K);if(le){const pe=le[C.__cacheKey];pe.usedTimes--,pe.usedTimes===0&&E(I),Object.keys(le).length===0&&f.delete(K)}i.remove(I)}function E(I){const C=i.get(I);r.deleteTexture(C.__webglTexture);const K=I.source,le=f.get(K);delete le[C.__cacheKey],a.memory.textures--}function w(I){const C=i.get(I);if(I.depthTexture&&(I.depthTexture.dispose(),i.remove(I.depthTexture)),I.isWebGLCubeRenderTarget)for(let le=0;le<6;le++){if(Array.isArray(C.__webglFramebuffer[le]))for(let pe=0;pe<C.__webglFramebuffer[le].length;pe++)r.deleteFramebuffer(C.__webglFramebuffer[le][pe]);else r.deleteFramebuffer(C.__webglFramebuffer[le]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[le])}else{if(Array.isArray(C.__webglFramebuffer))for(let le=0;le<C.__webglFramebuffer.length;le++)r.deleteFramebuffer(C.__webglFramebuffer[le]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let le=0;le<C.__webglColorRenderbuffer.length;le++)C.__webglColorRenderbuffer[le]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[le]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const K=I.textures;for(let le=0,pe=K.length;le<pe;le++){const oe=i.get(K[le]);oe.__webglTexture&&(r.deleteTexture(oe.__webglTexture),a.memory.textures--),i.remove(K[le])}i.remove(I)}let N=0;function D(){N=0}function F(){const I=N;return I>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+s.maxTextures),N+=1,I}function k(I){const C=[];return C.push(I.wrapS),C.push(I.wrapT),C.push(I.wrapR||0),C.push(I.magFilter),C.push(I.minFilter),C.push(I.anisotropy),C.push(I.internalFormat),C.push(I.format),C.push(I.type),C.push(I.generateMipmaps),C.push(I.premultiplyAlpha),C.push(I.flipY),C.push(I.unpackAlignment),C.push(I.colorSpace),C.join()}function j(I,C){const K=i.get(I);if(I.isVideoTexture&&Qe(I),I.isRenderTargetTexture===!1&&I.isExternalTexture!==!0&&I.version>0&&K.__version!==I.version){const le=I.image;if(le===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(le.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{z(K,I,C);return}}else I.isExternalTexture&&(K.__webglTexture=I.sourceTexture?I.sourceTexture:null);n.bindTexture(r.TEXTURE_2D,K.__webglTexture,r.TEXTURE0+C)}function $(I,C){const K=i.get(I);if(I.isRenderTargetTexture===!1&&I.version>0&&K.__version!==I.version){z(K,I,C);return}n.bindTexture(r.TEXTURE_2D_ARRAY,K.__webglTexture,r.TEXTURE0+C)}function G(I,C){const K=i.get(I);if(I.isRenderTargetTexture===!1&&I.version>0&&K.__version!==I.version){z(K,I,C);return}n.bindTexture(r.TEXTURE_3D,K.__webglTexture,r.TEXTURE0+C)}function B(I,C){const K=i.get(I);if(I.version>0&&K.__version!==I.version){Q(K,I,C);return}n.bindTexture(r.TEXTURE_CUBE_MAP,K.__webglTexture,r.TEXTURE0+C)}const J={[go]:r.REPEAT,[gr]:r.CLAMP_TO_EDGE,[_o]:r.MIRRORED_REPEAT},Y={[qt]:r.NEAREST,[Jm]:r.NEAREST_MIPMAP_NEAREST,[Yr]:r.NEAREST_MIPMAP_LINEAR,[Tn]:r.LINEAR,[ma]:r.LINEAR_MIPMAP_NEAREST,[si]:r.LINEAR_MIPMAP_LINEAR},re={[tg]:r.NEVER,[og]:r.ALWAYS,[ld]:r.LESS,[cd]:r.LEQUAL,[ng]:r.EQUAL,[sg]:r.GEQUAL,[ig]:r.GREATER,[rg]:r.NOTEQUAL};function me(I,C){if(C.type===hn&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===Tn||C.magFilter===ma||C.magFilter===Yr||C.magFilter===si||C.minFilter===Tn||C.minFilter===ma||C.minFilter===Yr||C.minFilter===si)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(I,r.TEXTURE_WRAP_S,J[C.wrapS]),r.texParameteri(I,r.TEXTURE_WRAP_T,J[C.wrapT]),(I===r.TEXTURE_3D||I===r.TEXTURE_2D_ARRAY)&&r.texParameteri(I,r.TEXTURE_WRAP_R,J[C.wrapR]),r.texParameteri(I,r.TEXTURE_MAG_FILTER,Y[C.magFilter]),r.texParameteri(I,r.TEXTURE_MIN_FILTER,Y[C.minFilter]),C.compareFunction&&(r.texParameteri(I,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(I,r.TEXTURE_COMPARE_FUNC,re[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===qt||C.minFilter!==Yr&&C.minFilter!==si||C.type===hn&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||i.get(C).__currentAnisotropy){const K=e.get("EXT_texture_filter_anisotropic");r.texParameterf(I,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,s.getMaxAnisotropy())),i.get(C).__currentAnisotropy=C.anisotropy}}}function Re(I,C){let K=!1;I.__webglInit===void 0&&(I.__webglInit=!0,C.addEventListener("dispose",S));const le=C.source;let pe=f.get(le);pe===void 0&&(pe={},f.set(le,pe));const oe=k(C);if(oe!==I.__cacheKey){pe[oe]===void 0&&(pe[oe]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,K=!0),pe[oe].usedTimes++;const Ye=pe[I.__cacheKey];Ye!==void 0&&(pe[I.__cacheKey].usedTimes--,Ye.usedTimes===0&&E(C)),I.__cacheKey=oe,I.__webglTexture=pe[oe].texture}return K}function tt(I,C,K){return Math.floor(Math.floor(I/K)/C)}function q(I,C,K,le){const oe=I.updateRanges;if(oe.length===0)n.texSubImage2D(r.TEXTURE_2D,0,0,0,C.width,C.height,K,le,C.data);else{oe.sort((xe,Ie)=>xe.start-Ie.start);let Ye=0;for(let xe=1;xe<oe.length;xe++){const Ie=oe[Ye],lt=oe[xe],Xe=Ie.start+Ie.count,Ce=tt(lt.start,C.width,4),gt=tt(Ie.start,C.width,4);lt.start<=Xe+1&&Ce===gt&&tt(lt.start+lt.count-1,C.width,4)===Ce?Ie.count=Math.max(Ie.count,lt.start+lt.count-Ie.start):(++Ye,oe[Ye]=lt)}oe.length=Ye+1;const Ee=r.getParameter(r.UNPACK_ROW_LENGTH),je=r.getParameter(r.UNPACK_SKIP_PIXELS),qe=r.getParameter(r.UNPACK_SKIP_ROWS);r.pixelStorei(r.UNPACK_ROW_LENGTH,C.width);for(let xe=0,Ie=oe.length;xe<Ie;xe++){const lt=oe[xe],Xe=Math.floor(lt.start/4),Ce=Math.ceil(lt.count/4),gt=Xe%C.width,V=Math.floor(Xe/C.width),be=Ce,we=1;r.pixelStorei(r.UNPACK_SKIP_PIXELS,gt),r.pixelStorei(r.UNPACK_SKIP_ROWS,V),n.texSubImage2D(r.TEXTURE_2D,0,gt,V,be,we,K,le,C.data)}I.clearUpdateRanges(),r.pixelStorei(r.UNPACK_ROW_LENGTH,Ee),r.pixelStorei(r.UNPACK_SKIP_PIXELS,je),r.pixelStorei(r.UNPACK_SKIP_ROWS,qe)}}function z(I,C,K){let le=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(le=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(le=r.TEXTURE_3D);const pe=Re(I,C),oe=C.source;n.bindTexture(le,I.__webglTexture,r.TEXTURE0+K);const Ye=i.get(oe);if(oe.version!==Ye.__version||pe===!0){n.activeTexture(r.TEXTURE0+K);const Ee=Je.getPrimaries(Je.workingColorSpace),je=C.colorSpace===ri?null:Je.getPrimaries(C.colorSpace),qe=C.colorSpace===ri||Ee===je?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);let xe=y(C.image,!1,s.maxTextureSize);xe=nn(C,xe);const Ie=o.convert(C.format,C.colorSpace),lt=o.convert(C.type);let Xe=x(C.internalFormat,Ie,lt,C.colorSpace,C.isVideoTexture);me(le,C);let Ce;const gt=C.mipmaps,V=C.isVideoTexture!==!0,be=Ye.__version===void 0||pe===!0,we=oe.dataReady,ke=T(C,xe);if(C.isDepthTexture)Xe=b(C.format===Ai,C.type),be&&(V?n.texStorage2D(r.TEXTURE_2D,1,Xe,xe.width,xe.height):n.texImage2D(r.TEXTURE_2D,0,Xe,xe.width,xe.height,0,Ie,lt,null));else if(C.isDataTexture)if(gt.length>0){V&&be&&n.texStorage2D(r.TEXTURE_2D,ke,Xe,gt[0].width,gt[0].height);for(let _e=0,he=gt.length;_e<he;_e++)Ce=gt[_e],V?we&&n.texSubImage2D(r.TEXTURE_2D,_e,0,0,Ce.width,Ce.height,Ie,lt,Ce.data):n.texImage2D(r.TEXTURE_2D,_e,Xe,Ce.width,Ce.height,0,Ie,lt,Ce.data);C.generateMipmaps=!1}else V?(be&&n.texStorage2D(r.TEXTURE_2D,ke,Xe,xe.width,xe.height),we&&q(C,xe,Ie,lt)):n.texImage2D(r.TEXTURE_2D,0,Xe,xe.width,xe.height,0,Ie,lt,xe.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){V&&be&&n.texStorage3D(r.TEXTURE_2D_ARRAY,ke,Xe,gt[0].width,gt[0].height,xe.depth);for(let _e=0,he=gt.length;_e<he;_e++)if(Ce=gt[_e],C.format!==cn)if(Ie!==null)if(V){if(we)if(C.layerUpdates.size>0){const Ge=Zp(Ce.width,Ce.height,C.format,C.type);for(const ft of C.layerUpdates){const $t=Ce.data.subarray(ft*Ge/Ce.data.BYTES_PER_ELEMENT,(ft+1)*Ge/Ce.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,ft,Ce.width,Ce.height,1,Ie,$t)}C.clearLayerUpdates()}else n.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,0,Ce.width,Ce.height,xe.depth,Ie,Ce.data)}else n.compressedTexImage3D(r.TEXTURE_2D_ARRAY,_e,Xe,Ce.width,Ce.height,xe.depth,0,Ce.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?we&&n.texSubImage3D(r.TEXTURE_2D_ARRAY,_e,0,0,0,Ce.width,Ce.height,xe.depth,Ie,lt,Ce.data):n.texImage3D(r.TEXTURE_2D_ARRAY,_e,Xe,Ce.width,Ce.height,xe.depth,0,Ie,lt,Ce.data)}else{V&&be&&n.texStorage2D(r.TEXTURE_2D,ke,Xe,gt[0].width,gt[0].height);for(let _e=0,he=gt.length;_e<he;_e++)Ce=gt[_e],C.format!==cn?Ie!==null?V?we&&n.compressedTexSubImage2D(r.TEXTURE_2D,_e,0,0,Ce.width,Ce.height,Ie,Ce.data):n.compressedTexImage2D(r.TEXTURE_2D,_e,Xe,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?we&&n.texSubImage2D(r.TEXTURE_2D,_e,0,0,Ce.width,Ce.height,Ie,lt,Ce.data):n.texImage2D(r.TEXTURE_2D,_e,Xe,Ce.width,Ce.height,0,Ie,lt,Ce.data)}else if(C.isDataArrayTexture)if(V){if(be&&n.texStorage3D(r.TEXTURE_2D_ARRAY,ke,Xe,xe.width,xe.height,xe.depth),we)if(C.layerUpdates.size>0){const _e=Zp(xe.width,xe.height,C.format,C.type);for(const he of C.layerUpdates){const Ge=xe.data.subarray(he*_e/xe.data.BYTES_PER_ELEMENT,(he+1)*_e/xe.data.BYTES_PER_ELEMENT);n.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,he,xe.width,xe.height,1,Ie,lt,Ge)}C.clearLayerUpdates()}else n.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,xe.width,xe.height,xe.depth,Ie,lt,xe.data)}else n.texImage3D(r.TEXTURE_2D_ARRAY,0,Xe,xe.width,xe.height,xe.depth,0,Ie,lt,xe.data);else if(C.isData3DTexture)V?(be&&n.texStorage3D(r.TEXTURE_3D,ke,Xe,xe.width,xe.height,xe.depth),we&&n.texSubImage3D(r.TEXTURE_3D,0,0,0,0,xe.width,xe.height,xe.depth,Ie,lt,xe.data)):n.texImage3D(r.TEXTURE_3D,0,Xe,xe.width,xe.height,xe.depth,0,Ie,lt,xe.data);else if(C.isFramebufferTexture){if(be)if(V)n.texStorage2D(r.TEXTURE_2D,ke,Xe,xe.width,xe.height);else{let _e=xe.width,he=xe.height;for(let Ge=0;Ge<ke;Ge++)n.texImage2D(r.TEXTURE_2D,Ge,Xe,_e,he,0,Ie,lt,null),_e>>=1,he>>=1}}else if(gt.length>0){if(V&&be){const _e=At(gt[0]);n.texStorage2D(r.TEXTURE_2D,ke,Xe,_e.width,_e.height)}for(let _e=0,he=gt.length;_e<he;_e++)Ce=gt[_e],V?we&&n.texSubImage2D(r.TEXTURE_2D,_e,0,0,Ie,lt,Ce):n.texImage2D(r.TEXTURE_2D,_e,Xe,Ie,lt,Ce);C.generateMipmaps=!1}else if(V){if(be){const _e=At(xe);n.texStorage2D(r.TEXTURE_2D,ke,Xe,_e.width,_e.height)}we&&n.texSubImage2D(r.TEXTURE_2D,0,0,0,Ie,lt,xe)}else n.texImage2D(r.TEXTURE_2D,0,Xe,Ie,lt,xe);_(C)&&g(le),Ye.__version=oe.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function Q(I,C,K){if(C.image.length!==6)return;const le=Re(I,C),pe=C.source;n.bindTexture(r.TEXTURE_CUBE_MAP,I.__webglTexture,r.TEXTURE0+K);const oe=i.get(pe);if(pe.version!==oe.__version||le===!0){n.activeTexture(r.TEXTURE0+K);const Ye=Je.getPrimaries(Je.workingColorSpace),Ee=C.colorSpace===ri?null:Je.getPrimaries(C.colorSpace),je=C.colorSpace===ri||Ye===Ee?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,je);const qe=C.isCompressedTexture||C.image[0].isCompressedTexture,xe=C.image[0]&&C.image[0].isDataTexture,Ie=[];for(let he=0;he<6;he++)!qe&&!xe?Ie[he]=y(C.image[he],!0,s.maxCubemapSize):Ie[he]=xe?C.image[he].image:C.image[he],Ie[he]=nn(C,Ie[he]);const lt=Ie[0],Xe=o.convert(C.format,C.colorSpace),Ce=o.convert(C.type),gt=x(C.internalFormat,Xe,Ce,C.colorSpace),V=C.isVideoTexture!==!0,be=oe.__version===void 0||le===!0,we=pe.dataReady;let ke=T(C,lt);me(r.TEXTURE_CUBE_MAP,C);let _e;if(qe){V&&be&&n.texStorage2D(r.TEXTURE_CUBE_MAP,ke,gt,lt.width,lt.height);for(let he=0;he<6;he++){_e=Ie[he].mipmaps;for(let Ge=0;Ge<_e.length;Ge++){const ft=_e[Ge];C.format!==cn?Xe!==null?V?we&&n.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge,0,0,ft.width,ft.height,Xe,ft.data):n.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge,gt,ft.width,ft.height,0,ft.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?we&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge,0,0,ft.width,ft.height,Xe,Ce,ft.data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge,gt,ft.width,ft.height,0,Xe,Ce,ft.data)}}}else{if(_e=C.mipmaps,V&&be){_e.length>0&&ke++;const he=At(Ie[0]);n.texStorage2D(r.TEXTURE_CUBE_MAP,ke,gt,he.width,he.height)}for(let he=0;he<6;he++)if(xe){V?we&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,Ie[he].width,Ie[he].height,Xe,Ce,Ie[he].data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,gt,Ie[he].width,Ie[he].height,0,Xe,Ce,Ie[he].data);for(let Ge=0;Ge<_e.length;Ge++){const $t=_e[Ge].image[he].image;V?we&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge+1,0,0,$t.width,$t.height,Xe,Ce,$t.data):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge+1,gt,$t.width,$t.height,0,Xe,Ce,$t.data)}}else{V?we&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,Xe,Ce,Ie[he]):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,gt,Xe,Ce,Ie[he]);for(let Ge=0;Ge<_e.length;Ge++){const ft=_e[Ge];V?we&&n.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge+1,0,0,Xe,Ce,ft.image[he]):n.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ge+1,gt,Xe,Ce,ft.image[he])}}}_(C)&&g(r.TEXTURE_CUBE_MAP),oe.__version=pe.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function ge(I,C,K,le,pe,oe){const Ye=o.convert(K.format,K.colorSpace),Ee=o.convert(K.type),je=x(K.internalFormat,Ye,Ee,K.colorSpace),qe=i.get(C),xe=i.get(K);if(xe.__renderTarget=C,!qe.__hasExternalTextures){const Ie=Math.max(1,C.width>>oe),lt=Math.max(1,C.height>>oe);pe===r.TEXTURE_3D||pe===r.TEXTURE_2D_ARRAY?n.texImage3D(pe,oe,je,Ie,lt,C.depth,0,Ye,Ee,null):n.texImage2D(pe,oe,je,Ie,lt,0,Ye,Ee,null)}n.bindFramebuffer(r.FRAMEBUFFER,I),Fe(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,le,pe,xe.__webglTexture,0,ht(C)):(pe===r.TEXTURE_2D||pe>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&pe<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,le,pe,xe.__webglTexture,oe),n.bindFramebuffer(r.FRAMEBUFFER,null)}function De(I,C,K){if(r.bindRenderbuffer(r.RENDERBUFFER,I),C.depthBuffer){const le=C.depthTexture,pe=le&&le.isDepthTexture?le.type:null,oe=b(C.stencilBuffer,pe),Ye=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ee=ht(C);Fe(C)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ee,oe,C.width,C.height):K?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,oe,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,oe,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Ye,r.RENDERBUFFER,I)}else{const le=C.textures;for(let pe=0;pe<le.length;pe++){const oe=le[pe],Ye=o.convert(oe.format,oe.colorSpace),Ee=o.convert(oe.type),je=x(oe.internalFormat,Ye,Ee,oe.colorSpace),qe=ht(C);K&&Fe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,qe,je,C.width,C.height):Fe(C)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,qe,je,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,je,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Me(I,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(r.FRAMEBUFFER,I),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const le=i.get(C.depthTexture);le.__renderTarget=C,(!le.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),j(C.depthTexture,0);const pe=le.__webglTexture,oe=ht(C);if(C.depthTexture.format===wi)Fe(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,pe,0,oe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,pe,0);else if(C.depthTexture.format===Ai)Fe(C)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,pe,0,oe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,pe,0);else throw new Error("Unknown depthTexture format")}function He(I){const C=i.get(I),K=I.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==I.depthTexture){const le=I.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),le){const pe=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,le.removeEventListener("dispose",pe)};le.addEventListener("dispose",pe),C.__depthDisposeCallback=pe}C.__boundDepthTexture=le}if(I.depthTexture&&!C.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");const le=I.texture.mipmaps;le&&le.length>0?Me(C.__webglFramebuffer[0],I):Me(C.__webglFramebuffer,I)}else if(K){C.__webglDepthbuffer=[];for(let le=0;le<6;le++)if(n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[le]),C.__webglDepthbuffer[le]===void 0)C.__webglDepthbuffer[le]=r.createRenderbuffer(),De(C.__webglDepthbuffer[le],I,!1);else{const pe=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,oe=C.__webglDepthbuffer[le];r.bindRenderbuffer(r.RENDERBUFFER,oe),r.framebufferRenderbuffer(r.FRAMEBUFFER,pe,r.RENDERBUFFER,oe)}}else{const le=I.texture.mipmaps;if(le&&le.length>0?n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[0]):n.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=r.createRenderbuffer(),De(C.__webglDepthbuffer,I,!1);else{const pe=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,oe=C.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,oe),r.framebufferRenderbuffer(r.FRAMEBUFFER,pe,r.RENDERBUFFER,oe)}}n.bindFramebuffer(r.FRAMEBUFFER,null)}function Dt(I,C,K){const le=i.get(I);C!==void 0&&ge(le.__webglFramebuffer,I,I.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),K!==void 0&&He(I)}function U(I){const C=I.texture,K=i.get(I),le=i.get(C);I.addEventListener("dispose",M);const pe=I.textures,oe=I.isWebGLCubeRenderTarget===!0,Ye=pe.length>1;if(Ye||(le.__webglTexture===void 0&&(le.__webglTexture=r.createTexture()),le.__version=C.version,a.memory.textures++),oe){K.__webglFramebuffer=[];for(let Ee=0;Ee<6;Ee++)if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer[Ee]=[];for(let je=0;je<C.mipmaps.length;je++)K.__webglFramebuffer[Ee][je]=r.createFramebuffer()}else K.__webglFramebuffer[Ee]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer=[];for(let Ee=0;Ee<C.mipmaps.length;Ee++)K.__webglFramebuffer[Ee]=r.createFramebuffer()}else K.__webglFramebuffer=r.createFramebuffer();if(Ye)for(let Ee=0,je=pe.length;Ee<je;Ee++){const qe=i.get(pe[Ee]);qe.__webglTexture===void 0&&(qe.__webglTexture=r.createTexture(),a.memory.textures++)}if(I.samples>0&&Fe(I)===!1){K.__webglMultisampledFramebuffer=r.createFramebuffer(),K.__webglColorRenderbuffer=[],n.bindFramebuffer(r.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Ee=0;Ee<pe.length;Ee++){const je=pe[Ee];K.__webglColorRenderbuffer[Ee]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,K.__webglColorRenderbuffer[Ee]);const qe=o.convert(je.format,je.colorSpace),xe=o.convert(je.type),Ie=x(je.internalFormat,qe,xe,je.colorSpace,I.isXRRenderTarget===!0),lt=ht(I);r.renderbufferStorageMultisample(r.RENDERBUFFER,lt,Ie,I.width,I.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ee,r.RENDERBUFFER,K.__webglColorRenderbuffer[Ee])}r.bindRenderbuffer(r.RENDERBUFFER,null),I.depthBuffer&&(K.__webglDepthRenderbuffer=r.createRenderbuffer(),De(K.__webglDepthRenderbuffer,I,!0)),n.bindFramebuffer(r.FRAMEBUFFER,null)}}if(oe){n.bindTexture(r.TEXTURE_CUBE_MAP,le.__webglTexture),me(r.TEXTURE_CUBE_MAP,C);for(let Ee=0;Ee<6;Ee++)if(C.mipmaps&&C.mipmaps.length>0)for(let je=0;je<C.mipmaps.length;je++)ge(K.__webglFramebuffer[Ee][je],I,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,je);else ge(K.__webglFramebuffer[Ee],I,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,0);_(C)&&g(r.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Ye){for(let Ee=0,je=pe.length;Ee<je;Ee++){const qe=pe[Ee],xe=i.get(qe);let Ie=r.TEXTURE_2D;(I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Ie=I.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),n.bindTexture(Ie,xe.__webglTexture),me(Ie,qe),ge(K.__webglFramebuffer,I,qe,r.COLOR_ATTACHMENT0+Ee,Ie,0),_(qe)&&g(Ie)}n.unbindTexture()}else{let Ee=r.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Ee=I.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),n.bindTexture(Ee,le.__webglTexture),me(Ee,C),C.mipmaps&&C.mipmaps.length>0)for(let je=0;je<C.mipmaps.length;je++)ge(K.__webglFramebuffer[je],I,C,r.COLOR_ATTACHMENT0,Ee,je);else ge(K.__webglFramebuffer,I,C,r.COLOR_ATTACHMENT0,Ee,0);_(C)&&g(Ee),n.unbindTexture()}I.depthBuffer&&He(I)}function xt(I){const C=I.textures;for(let K=0,le=C.length;K<le;K++){const pe=C[K];if(_(pe)){const oe=v(I),Ye=i.get(pe).__webglTexture;n.bindTexture(oe,Ye),g(oe),n.unbindTexture()}}}const nt=[],Z=[];function ue(I){if(I.samples>0){if(Fe(I)===!1){const C=I.textures,K=I.width,le=I.height;let pe=r.COLOR_BUFFER_BIT;const oe=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ye=i.get(I),Ee=C.length>1;if(Ee)for(let qe=0;qe<C.length;qe++)n.bindFramebuffer(r.FRAMEBUFFER,Ye.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,null),n.bindFramebuffer(r.FRAMEBUFFER,Ye.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,null,0);n.bindFramebuffer(r.READ_FRAMEBUFFER,Ye.__webglMultisampledFramebuffer);const je=I.texture.mipmaps;je&&je.length>0?n.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ye.__webglFramebuffer[0]):n.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ye.__webglFramebuffer);for(let qe=0;qe<C.length;qe++){if(I.resolveDepthBuffer&&(I.depthBuffer&&(pe|=r.DEPTH_BUFFER_BIT),I.stencilBuffer&&I.resolveStencilBuffer&&(pe|=r.STENCIL_BUFFER_BIT)),Ee){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ye.__webglColorRenderbuffer[qe]);const xe=i.get(C[qe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,xe,0)}r.blitFramebuffer(0,0,K,le,0,0,K,le,pe,r.NEAREST),c===!0&&(nt.length=0,Z.length=0,nt.push(r.COLOR_ATTACHMENT0+qe),I.depthBuffer&&I.resolveDepthBuffer===!1&&(nt.push(oe),Z.push(oe),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,Z)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,nt))}if(n.bindFramebuffer(r.READ_FRAMEBUFFER,null),n.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Ee)for(let qe=0;qe<C.length;qe++){n.bindFramebuffer(r.FRAMEBUFFER,Ye.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,Ye.__webglColorRenderbuffer[qe]);const xe=i.get(C[qe]).__webglTexture;n.bindFramebuffer(r.FRAMEBUFFER,Ye.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,xe,0)}n.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ye.__webglMultisampledFramebuffer)}else if(I.depthBuffer&&I.resolveDepthBuffer===!1&&c){const C=I.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[C])}}}function ht(I){return Math.min(s.maxSamples,I.samples)}function Fe(I){const C=i.get(I);return I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function Qe(I){const C=a.render.frame;h.get(I)!==C&&(h.set(I,C),I.update())}function nn(I,C){const K=I.colorSpace,le=I.format,pe=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||K!==yo&&K!==ri&&(Je.getTransfer(K)===Pe?(le!==cn||pe!==an)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),C}function At(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(u.width=I.naturalWidth||I.width,u.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(u.width=I.displayWidth,u.height=I.displayHeight):(u.width=I.width,u.height=I.height),u}this.allocateTextureUnit=F,this.resetTextureUnits=D,this.setTexture2D=j,this.setTexture2DArray=$,this.setTexture3D=G,this.setTextureCube=B,this.rebindTextures=Dt,this.setupRenderTarget=U,this.updateRenderTargetMipmap=xt,this.updateMultisampleRenderTarget=ue,this.setupDepthRenderbuffer=He,this.setupFrameBufferTexture=ge,this.useMultisampledRTT=Fe}function dL(r,e){function n(i,s=ri){let o;const a=Je.getTransfer(s);if(i===an)return r.UNSIGNED_BYTE;if(i===rd)return r.UNSIGNED_SHORT_4_4_4_4;if(i===sd)return r.UNSIGNED_SHORT_5_5_5_1;if(i===od)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===ad)return r.UNSIGNED_INT_10F_11F_11F_REV;if(i===ho)return r.BYTE;if(i===fo)return r.SHORT;if(i===tr)return r.UNSIGNED_SHORT;if(i===An)return r.INT;if(i===Wt)return r.UNSIGNED_INT;if(i===hn)return r.FLOAT;if(i===Cn)return r.HALF_FLOAT;if(i===eg)return r.ALPHA;if(i===jc)return r.RGB;if(i===cn)return r.RGBA;if(i===wi)return r.DEPTH_COMPONENT;if(i===Ai)return r.DEPTH_STENCIL;if(i===qc)return r.RED;if(i===ll)return r.RED_INTEGER;if(i===Kr)return r.RG;if(i===cl)return r.RG_INTEGER;if(i===ul)return r.RGBA_INTEGER;if(i===Ts||i===Ss||i===Ms||i===Es)if(a===Pe)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(i===Ts)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ss)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Ms)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Es)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(i===Ts)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ss)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ms)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Es)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Nc||i===Pc||i===Dc||i===Lc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(i===Nc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Pc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Dc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Lc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Ca||i===Na||i===Pa)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(i===Ca||i===Na)return a===Pe?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===Pa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Da||i===La||i===Ia||i===Ua||i===Fa||i===Oa||i===Ba||i===ka||i===za||i===Ga||i===Va||i===Ha||i===Wa||i===$a)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(i===Da)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===La)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Ia)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Ua)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Fa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Oa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ba)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===ka)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===za)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Ga)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Va)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ha)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Wa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===$a)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ja||i===qp||i===Xp)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(i===ja)return a===Pe?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===qp)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Xp)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===qa||i===Xa||i===Ya||i===Ka)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(i===qa)return o.COMPRESSED_RED_RGTC1_EXT;if(i===Xa)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Ya)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Ka)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Ei?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:n}}const fL=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,pL=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class mL{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n){if(this.texture===null){const i=new Rb(e.texture);(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const n=e.cameras[0].viewport,i=new Tr({vertexShader:fL,fragmentShader:pL,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new yn(new Qc(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class gL extends ss{constructor(e,n){super();const i=this;let s=null,o=1,a=null,l="local-floor",c=1,u=null,h=null,d=null,f=null,p=null,m=null;const y=typeof XRWebGLBinding<"u",_=new mL,g={},v=n.getContextAttributes();let x=null,b=null;const T=[],S=[],M=new de;let A=null;const E=new Rn;E.viewport=new et;const w=new Rn;w.viewport=new et;const N=[E,w],D=new Ub;let F=null,k=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let Q=T[z];return Q===void 0&&(Q=new xh,T[z]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(z){let Q=T[z];return Q===void 0&&(Q=new xh,T[z]=Q),Q.getGripSpace()},this.getHand=function(z){let Q=T[z];return Q===void 0&&(Q=new xh,T[z]=Q),Q.getHandSpace()};function j(z){const Q=S.indexOf(z.inputSource);if(Q===-1)return;const ge=T[Q];ge!==void 0&&(ge.update(z.inputSource,z.frame,u||a),ge.dispatchEvent({type:z.type,data:z.inputSource}))}function $(){s.removeEventListener("select",j),s.removeEventListener("selectstart",j),s.removeEventListener("selectend",j),s.removeEventListener("squeeze",j),s.removeEventListener("squeezestart",j),s.removeEventListener("squeezeend",j),s.removeEventListener("end",$),s.removeEventListener("inputsourceschange",G);for(let z=0;z<T.length;z++){const Q=S[z];Q!==null&&(S[z]=null,T[z].disconnect(Q))}F=null,k=null,_.reset();for(const z in g)delete g[z];e.setRenderTarget(x),p=null,f=null,d=null,s=null,b=null,q.stop(),i.isPresenting=!1,e.setPixelRatio(A),e.setSize(M.width,M.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(z){o=z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){l=z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(z){u=z},this.getBaseLayer=function(){return f!==null?f:p},this.getBinding=function(){return d===null&&y&&(d=new XRWebGLBinding(s,n)),d},this.getFrame=function(){return m},this.getSession=function(){return s},this.setSession=async function(z){if(s=z,s!==null){if(x=e.getRenderTarget(),s.addEventListener("select",j),s.addEventListener("selectstart",j),s.addEventListener("selectend",j),s.addEventListener("squeeze",j),s.addEventListener("squeezestart",j),s.addEventListener("squeezeend",j),s.addEventListener("end",$),s.addEventListener("inputsourceschange",G),v.xrCompatible!==!0&&await n.makeXRCompatible(),A=e.getPixelRatio(),e.getSize(M),y&&"createProjectionLayer"in XRWebGLBinding.prototype){let ge=null,De=null,Me=null;v.depth&&(Me=v.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,ge=v.stencil?Ai:wi,De=v.stencil?Ei:Wt);const He={colorFormat:n.RGBA8,depthFormat:Me,scaleFactor:o};d=this.getBinding(),f=d.createProjectionLayer(He),s.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),b=new Ns(f.textureWidth,f.textureHeight,{format:cn,type:an,depthTexture:new zi(f.textureWidth,f.textureHeight,De,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const ge={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:o};p=new XRWebGLLayer(s,n,ge),s.updateRenderState({baseLayer:p}),e.setPixelRatio(1),e.setSize(p.framebufferWidth,p.framebufferHeight,!1),b=new Ns(p.framebufferWidth,p.framebufferHeight,{format:cn,type:an,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil,resolveDepthBuffer:p.ignoreDepthValues===!1,resolveStencilBuffer:p.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(c),u=null,a=await s.requestReferenceSpace(l),q.setContext(s),q.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function G(z){for(let Q=0;Q<z.removed.length;Q++){const ge=z.removed[Q],De=S.indexOf(ge);De>=0&&(S[De]=null,T[De].disconnect(ge))}for(let Q=0;Q<z.added.length;Q++){const ge=z.added[Q];let De=S.indexOf(ge);if(De===-1){for(let He=0;He<T.length;He++)if(He>=S.length){S.push(ge),De=He;break}else if(S[He]===null){S[He]=ge,De=He;break}if(De===-1)break}const Me=T[De];Me&&Me.connect(ge)}}const B=new L,J=new L;function Y(z,Q,ge){B.setFromMatrixPosition(Q.matrixWorld),J.setFromMatrixPosition(ge.matrixWorld);const De=B.distanceTo(J),Me=Q.projectionMatrix.elements,He=ge.projectionMatrix.elements,Dt=Me[14]/(Me[10]-1),U=Me[14]/(Me[10]+1),xt=(Me[9]+1)/Me[5],nt=(Me[9]-1)/Me[5],Z=(Me[8]-1)/Me[0],ue=(He[8]+1)/He[0],ht=Dt*Z,Fe=Dt*ue,Qe=De/(-Z+ue),nn=Qe*-Z;if(Q.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(nn),z.translateZ(Qe),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert(),Me[10]===-1)z.projectionMatrix.copy(Q.projectionMatrix),z.projectionMatrixInverse.copy(Q.projectionMatrixInverse);else{const At=Dt+Qe,I=U+Qe,C=ht-nn,K=Fe+(De-nn),le=xt*U/I*At,pe=nt*U/I*At;z.projectionMatrix.makePerspective(C,K,le,pe,At,I),z.projectionMatrixInverse.copy(z.projectionMatrix).invert()}}function re(z,Q){Q===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(Q.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.updateCamera=function(z){if(s===null)return;let Q=z.near,ge=z.far;_.texture!==null&&(_.depthNear>0&&(Q=_.depthNear),_.depthFar>0&&(ge=_.depthFar)),D.near=w.near=E.near=Q,D.far=w.far=E.far=ge,(F!==D.near||k!==D.far)&&(s.updateRenderState({depthNear:D.near,depthFar:D.far}),F=D.near,k=D.far),D.layers.mask=z.layers.mask|6,E.layers.mask=D.layers.mask&3,w.layers.mask=D.layers.mask&5;const De=z.parent,Me=D.cameras;re(D,De);for(let He=0;He<Me.length;He++)re(Me[He],De);Me.length===2?Y(D,E,w):D.projectionMatrix.copy(E.projectionMatrix),me(z,D,De)};function me(z,Q,ge){ge===null?z.matrix.copy(Q.matrixWorld):(z.matrix.copy(ge.matrixWorld),z.matrix.invert(),z.matrix.multiply(Q.matrixWorld)),z.matrix.decompose(z.position,z.quaternion,z.scale),z.updateMatrixWorld(!0),z.projectionMatrix.copy(Q.projectionMatrix),z.projectionMatrixInverse.copy(Q.projectionMatrixInverse),z.isPerspectiveCamera&&(z.fov=vo*2*Math.atan(1/z.projectionMatrix.elements[5]),z.zoom=1)}this.getCamera=function(){return D},this.getFoveation=function(){if(!(f===null&&p===null))return c},this.setFoveation=function(z){c=z,f!==null&&(f.fixedFoveation=z),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=z)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(D)},this.getCameraTexture=function(z){return g[z]};let Re=null;function tt(z,Q){if(h=Q.getViewerPose(u||a),m=Q,h!==null){const ge=h.views;p!==null&&(e.setRenderTargetFramebuffer(b,p.framebuffer),e.setRenderTarget(b));let De=!1;ge.length!==D.cameras.length&&(D.cameras.length=0,De=!0);for(let U=0;U<ge.length;U++){const xt=ge[U];let nt=null;if(p!==null)nt=p.getViewport(xt);else{const ue=d.getViewSubImage(f,xt);nt=ue.viewport,U===0&&(e.setRenderTargetTextures(b,ue.colorTexture,ue.depthStencilTexture),e.setRenderTarget(b))}let Z=N[U];Z===void 0&&(Z=new Rn,Z.layers.enable(U),Z.viewport=new et,N[U]=Z),Z.matrix.fromArray(xt.transform.matrix),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.projectionMatrix.fromArray(xt.projectionMatrix),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert(),Z.viewport.set(nt.x,nt.y,nt.width,nt.height),U===0&&(D.matrix.copy(Z.matrix),D.matrix.decompose(D.position,D.quaternion,D.scale)),De===!0&&D.cameras.push(Z)}const Me=s.enabledFeatures;if(Me&&Me.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&y){d=i.getBinding();const U=d.getDepthInformation(ge[0]);U&&U.isValid&&U.texture&&_.init(U,s.renderState)}if(Me&&Me.includes("camera-access")&&y){e.state.unbindTexture(),d=i.getBinding();for(let U=0;U<ge.length;U++){const xt=ge[U].camera;if(xt){let nt=g[xt];nt||(nt=new Rb,g[xt]=nt);const Z=d.getCameraImage(xt);nt.sourceTexture=Z}}}}for(let ge=0;ge<T.length;ge++){const De=S[ge],Me=T[ge];De!==null&&Me!==void 0&&Me.update(De,Q,u||a)}Re&&Re(z,Q),Q.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:Q}),m=null}const q=new Bb;q.setAnimationLoop(tt),this.setAnimationLoop=function(z){Re=z},this.dispose=function(){}}}const qs=new ui,_L=new bt;function yL(r,e){function n(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function i(_,g){g.color.getRGB(_.fogColor.value,Sb(r)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function s(_,g,v,x,b){g.isMeshBasicMaterial||g.isMeshLambertMaterial?o(_,g):g.isMeshToonMaterial?(o(_,g),d(_,g)):g.isMeshPhongMaterial?(o(_,g),h(_,g)):g.isMeshStandardMaterial?(o(_,g),f(_,g),g.isMeshPhysicalMaterial&&p(_,g,b)):g.isMeshMatcapMaterial?(o(_,g),m(_,g)):g.isMeshDepthMaterial?o(_,g):g.isMeshDistanceMaterial?(o(_,g),y(_,g)):g.isMeshNormalMaterial?o(_,g):g.isLineBasicMaterial?(a(_,g),g.isLineDashedMaterial&&l(_,g)):g.isPointsMaterial?c(_,g,v,x):g.isSpriteMaterial?u(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function o(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,n(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,n(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===kt&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,n(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===kt&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,n(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,n(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,n(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const v=e.get(g),x=v.envMap,b=v.envMapRotation;x&&(_.envMap.value=x,qs.copy(b),qs.x*=-1,qs.y*=-1,qs.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(qs.y*=-1,qs.z*=-1),_.envMapRotation.value.setFromMatrix4(_L.makeRotationFromEuler(qs)),_.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap&&(_.lightMap.value=g.lightMap,_.lightMapIntensity.value=g.lightMapIntensity,n(g.lightMap,_.lightMapTransform)),g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,n(g.aoMap,_.aoMapTransform))}function a(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,n(g.map,_.mapTransform))}function l(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function c(_,g,v,x){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*v,_.scale.value=x*.5,g.map&&(_.map.value=g.map,n(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function u(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,n(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,n(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function d(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function f(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,n(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,n(g.roughnessMap,_.roughnessMapTransform)),g.envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function p(_,g,v){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,n(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,n(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,n(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,n(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,n(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===kt&&_.clearcoatNormalScale.value.negate())),g.dispersion>0&&(_.dispersion.value=g.dispersion),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,n(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,n(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=v.texture,_.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,n(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,n(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,n(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,n(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,n(g.specularIntensityMap,_.specularIntensityMapTransform))}function m(_,g){g.matcap&&(_.matcap.value=g.matcap)}function y(_,g){const v=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(v.matrixWorld),_.nearDistance.value=v.shadow.camera.near,_.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function vL(r,e,n,i){let s={},o={},a=[];const l=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function c(v,x){const b=x.program;i.uniformBlockBinding(v,b)}function u(v,x){let b=s[v.id];b===void 0&&(m(v),b=h(v),s[v.id]=b,v.addEventListener("dispose",_));const T=x.program;i.updateUBOMapping(v,T);const S=e.render.frame;o[v.id]!==S&&(f(v),o[v.id]=S)}function h(v){const x=d();v.__bindingPointIndex=x;const b=r.createBuffer(),T=v.__size,S=v.usage;return r.bindBuffer(r.UNIFORM_BUFFER,b),r.bufferData(r.UNIFORM_BUFFER,T,S),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,x,b),b}function d(){for(let v=0;v<l;v++)if(a.indexOf(v)===-1)return a.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(v){const x=s[v.id],b=v.uniforms,T=v.__cache;r.bindBuffer(r.UNIFORM_BUFFER,x);for(let S=0,M=b.length;S<M;S++){const A=Array.isArray(b[S])?b[S]:[b[S]];for(let E=0,w=A.length;E<w;E++){const N=A[E];if(p(N,S,E,T)===!0){const D=N.__offset,F=Array.isArray(N.value)?N.value:[N.value];let k=0;for(let j=0;j<F.length;j++){const $=F[j],G=y($);typeof $=="number"||typeof $=="boolean"?(N.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,D+k,N.__data)):$.isMatrix3?(N.__data[0]=$.elements[0],N.__data[1]=$.elements[1],N.__data[2]=$.elements[2],N.__data[3]=0,N.__data[4]=$.elements[3],N.__data[5]=$.elements[4],N.__data[6]=$.elements[5],N.__data[7]=0,N.__data[8]=$.elements[6],N.__data[9]=$.elements[7],N.__data[10]=$.elements[8],N.__data[11]=0):($.toArray(N.__data,k),k+=G.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,D,N.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function p(v,x,b,T){const S=v.value,M=x+"_"+b;if(T[M]===void 0)return typeof S=="number"||typeof S=="boolean"?T[M]=S:T[M]=S.clone(),!0;{const A=T[M];if(typeof S=="number"||typeof S=="boolean"){if(A!==S)return T[M]=S,!0}else if(A.equals(S)===!1)return A.copy(S),!0}return!1}function m(v){const x=v.uniforms;let b=0;const T=16;for(let M=0,A=x.length;M<A;M++){const E=Array.isArray(x[M])?x[M]:[x[M]];for(let w=0,N=E.length;w<N;w++){const D=E[w],F=Array.isArray(D.value)?D.value:[D.value];for(let k=0,j=F.length;k<j;k++){const $=F[k],G=y($),B=b%T,J=B%G.boundary,Y=B+J;b+=J,Y!==0&&T-Y<G.storage&&(b+=T-Y),D.__data=new Float32Array(G.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=b,b+=G.storage}}}const S=b%T;return S>0&&(b+=T-S),v.__size=b,v.__cache={},this}function y(v){const x={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(x.boundary=4,x.storage=4):v.isVector2?(x.boundary=8,x.storage=8):v.isVector3||v.isColor?(x.boundary=16,x.storage=12):v.isVector4?(x.boundary=16,x.storage=16):v.isMatrix3?(x.boundary=48,x.storage=48):v.isMatrix4?(x.boundary=64,x.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),x}function _(v){const x=v.target;x.removeEventListener("dispose",_);const b=a.indexOf(x.__bindingPointIndex);a.splice(b,1),r.deleteBuffer(s[x.id]),delete s[x.id],delete o[x.id]}function g(){for(const v in s)r.deleteBuffer(s[v]);a=[],s={},o={}}return{bind:c,update:u,dispose:g}}class xL{constructor(e={}){const{canvas:n=xb(),context:i=null,depth:s=!0,stencil:o=!1,alpha:a=!1,antialias:l=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:u=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reversedDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let p;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=a;const m=new Uint32Array(4),y=new Int32Array(4);let _=null,g=null;const v=[],x=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ci,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let T=!1;this._outputColorSpace=Bn;let S=0,M=0,A=null,E=-1,w=null;const N=new et,D=new et;let F=null;const k=new We(0);let j=0,$=n.width,G=n.height,B=1,J=null,Y=null;const re=new et(0,0,$,G),me=new et(0,0,$,G);let Re=!1;const tt=new Kc;let q=!1,z=!1;const Q=new bt,ge=new L,De=new et,Me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let He=!1;function Dt(){return A===null?B:1}let U=i;function xt(P,W){return n.getContext(P,W)}try{const P={alpha:!0,depth:s,stencil:o,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:u,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${al}`),n.addEventListener("webglcontextlost",we,!1),n.addEventListener("webglcontextrestored",ke,!1),n.addEventListener("webglcontextcreationerror",_e,!1),U===null){const W="webgl2";if(U=xt(W,P),U===null)throw xt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let nt,Z,ue,ht,Fe,Qe,nn,At,I,C,K,le,pe,oe,Ye,Ee,je,qe,xe,Ie,lt,Xe,Ce,gt;function V(){nt=new ND(U),nt.init(),Xe=new dL(U,nt),Z=new SD(U,nt,e,Xe),ue=new uL(U,nt),Z.reversedDepthBuffer&&f&&ue.buffers.depth.setReversed(!0),ht=new LD(U),Fe=new Z2,Qe=new hL(U,nt,ue,Fe,Z,Xe,ht),nn=new ED(b),At=new CD(b),I=new k1(U),Ce=new bD(U,I),C=new PD(U,I,ht,Ce),K=new UD(U,C,I,ht),xe=new ID(U,Z,Qe),Ee=new MD(Fe),le=new K2(b,nn,At,nt,Z,Ce,Ee),pe=new yL(b,Fe),oe=new J2,Ye=new sL(nt),qe=new xD(b,nn,At,ue,K,p,c),je=new lL(b,K,Z),gt=new vL(U,ht,Z,ue),Ie=new TD(U,nt,ht),lt=new DD(U,nt,ht),ht.programs=le.programs,b.capabilities=Z,b.extensions=nt,b.properties=Fe,b.renderLists=oe,b.shadowMap=je,b.state=ue,b.info=ht}V();const be=new gL(b,U);this.xr=be,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const P=nt.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=nt.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(P){P!==void 0&&(B=P,this.setSize($,G,!1))},this.getSize=function(P){return P.set($,G)},this.setSize=function(P,W,ee=!0){if(be.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=P,G=W,n.width=Math.floor(P*B),n.height=Math.floor(W*B),ee===!0&&(n.style.width=P+"px",n.style.height=W+"px"),this.setViewport(0,0,P,W)},this.getDrawingBufferSize=function(P){return P.set($*B,G*B).floor()},this.setDrawingBufferSize=function(P,W,ee){$=P,G=W,B=ee,n.width=Math.floor(P*ee),n.height=Math.floor(W*ee),this.setViewport(0,0,P,W)},this.getCurrentViewport=function(P){return P.copy(N)},this.getViewport=function(P){return P.copy(re)},this.setViewport=function(P,W,ee,te){P.isVector4?re.set(P.x,P.y,P.z,P.w):re.set(P,W,ee,te),ue.viewport(N.copy(re).multiplyScalar(B).round())},this.getScissor=function(P){return P.copy(me)},this.setScissor=function(P,W,ee,te){P.isVector4?me.set(P.x,P.y,P.z,P.w):me.set(P,W,ee,te),ue.scissor(D.copy(me).multiplyScalar(B).round())},this.getScissorTest=function(){return Re},this.setScissorTest=function(P){ue.setScissorTest(Re=P)},this.setOpaqueSort=function(P){J=P},this.setTransparentSort=function(P){Y=P},this.getClearColor=function(P){return P.copy(qe.getClearColor())},this.setClearColor=function(){qe.setClearColor(...arguments)},this.getClearAlpha=function(){return qe.getClearAlpha()},this.setClearAlpha=function(){qe.setClearAlpha(...arguments)},this.clear=function(P=!0,W=!0,ee=!0){let te=0;if(P){let X=!1;if(A!==null){const ye=A.texture.format;X=ye===ul||ye===cl||ye===ll}if(X){const ye=A.texture.type,Le=ye===an||ye===Wt||ye===tr||ye===Ei||ye===rd||ye===sd,ze=qe.getClearColor(),Be=qe.getClearAlpha(),at=ze.r,ct=ze.g,Ze=ze.b;Le?(m[0]=at,m[1]=ct,m[2]=Ze,m[3]=Be,U.clearBufferuiv(U.COLOR,0,m)):(y[0]=at,y[1]=ct,y[2]=Ze,y[3]=Be,U.clearBufferiv(U.COLOR,0,y))}else te|=U.COLOR_BUFFER_BIT}W&&(te|=U.DEPTH_BUFFER_BIT),ee&&(te|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",we,!1),n.removeEventListener("webglcontextrestored",ke,!1),n.removeEventListener("webglcontextcreationerror",_e,!1),qe.dispose(),oe.dispose(),Ye.dispose(),Fe.dispose(),nn.dispose(),At.dispose(),K.dispose(),Ce.dispose(),gt.dispose(),le.dispose(),be.dispose(),be.removeEventListener("sessionstart",rr),be.removeEventListener("sessionend",d_),ks.stop()};function we(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const P=ht.autoReset,W=je.enabled,ee=je.autoUpdate,te=je.needsUpdate,X=je.type;V(),ht.autoReset=P,je.enabled=W,je.autoUpdate=ee,je.needsUpdate=te,je.type=X}function _e(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function he(P){const W=P.target;W.removeEventListener("dispose",he),Ge(W)}function Ge(P){ft(P),Fe.remove(P)}function ft(P){const W=Fe.get(P).programs;W!==void 0&&(W.forEach(function(ee){le.releaseProgram(ee)}),P.isShaderMaterial&&le.releaseShaderCache(P))}this.renderBufferDirect=function(P,W,ee,te,X,ye){W===null&&(W=Me);const Le=X.isMesh&&X.matrixWorld.determinant()<0,ze=xM(P,W,ee,te,X);ue.setMaterial(te,Le);let Be=ee.index,at=1;if(te.wireframe===!0){if(Be=C.getWireframeAttribute(ee),Be===void 0)return;at=2}const ct=ee.drawRange,Ze=ee.attributes.position;let St=ct.start*at,Ft=(ct.start+ct.count)*at;ye!==null&&(St=Math.max(St,ye.start*at),Ft=Math.min(Ft,(ye.start+ye.count)*at)),Be!==null?(St=Math.max(St,0),Ft=Math.min(Ft,Be.count)):Ze!=null&&(St=Math.max(St,0),Ft=Math.min(Ft,Ze.count));const ln=Ft-St;if(ln<0||ln===1/0)return;Ce.setup(X,te,ze,ee,Be);let Xt,zt=Ie;if(Be!==null&&(Xt=I.get(Be),zt=lt,zt.setIndex(Xt)),X.isMesh)te.wireframe===!0?(ue.setLineWidth(te.wireframeLinewidth*Dt()),zt.setMode(U.LINES)):zt.setMode(U.TRIANGLES);else if(X.isLine){let it=te.linewidth;it===void 0&&(it=1),ue.setLineWidth(it*Dt()),X.isLineSegments?zt.setMode(U.LINES):X.isLineLoop?zt.setMode(U.LINE_LOOP):zt.setMode(U.LINE_STRIP)}else X.isPoints?zt.setMode(U.POINTS):X.isSprite&&zt.setMode(U.TRIANGLES);if(X.isBatchedMesh)if(X._multiDrawInstances!==null)Ri("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),zt.renderMultiDrawInstances(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount,X._multiDrawInstances);else if(nt.get("WEBGL_multi_draw"))zt.renderMultiDraw(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount);else{const it=X._multiDrawStarts,rn=X._multiDrawCounts,Rt=X._multiDrawCount,pi=Be?I.get(Be).bytesPerElement:1,Ao=Fe.get(te).currentProgram.getUniforms();for(let mi=0;mi<Rt;mi++)Ao.setValue(U,"_gl_DrawID",mi),zt.render(it[mi]/pi,rn[mi])}else if(X.isInstancedMesh)zt.renderInstances(St,ln,X.count);else if(ee.isInstancedBufferGeometry){const it=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,rn=Math.min(ee.instanceCount,it);zt.renderInstances(St,ln,rn)}else zt.render(St,ln)};function $t(P,W,ee){P.transparent===!0&&P.side===zn&&P.forceSinglePass===!1?(P.side=kt,P.needsUpdate=!0,lu(P,W,ee),P.side=Si,P.needsUpdate=!0,lu(P,W,ee),P.side=zn):lu(P,W,ee)}this.compile=function(P,W,ee=null){ee===null&&(ee=P),g=Ye.get(ee),g.init(W),x.push(g),ee.traverseVisible(function(X){X.isLight&&X.layers.test(W.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),P!==ee&&P.traverseVisible(function(X){X.isLight&&X.layers.test(W.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),g.setupLights();const te=new Set;return P.traverse(function(X){if(!(X.isMesh||X.isPoints||X.isLine||X.isSprite))return;const ye=X.material;if(ye)if(Array.isArray(ye))for(let Le=0;Le<ye.length;Le++){const ze=ye[Le];$t(ze,ee,X),te.add(ze)}else $t(ye,ee,X),te.add(ye)}),g=x.pop(),te},this.compileAsync=function(P,W,ee=null){const te=this.compile(P,W,ee);return new Promise(X=>{function ye(){if(te.forEach(function(Le){Fe.get(Le).currentProgram.isReady()&&te.delete(Le)}),te.size===0){X(P);return}setTimeout(ye,10)}nt.get("KHR_parallel_shader_compile")!==null?ye():setTimeout(ye,10)})};let Lt=null;function Ar(P){Lt&&Lt(P)}function rr(){ks.stop()}function d_(){ks.start()}const ks=new Bb;ks.setAnimationLoop(Ar),typeof self<"u"&&ks.setContext(self),this.setAnimationLoop=function(P){Lt=P,be.setAnimationLoop(P),P===null?ks.stop():ks.start()},be.addEventListener("sessionstart",rr),be.addEventListener("sessionend",d_),this.render=function(P,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;if(P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),be.enabled===!0&&be.isPresenting===!0&&(be.cameraAutoUpdate===!0&&be.updateCamera(W),W=be.getCamera()),P.isScene===!0&&P.onBeforeRender(b,P,W,A),g=Ye.get(P,x.length),g.init(W),x.push(g),Q.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),tt.setFromProjectionMatrix(Q,Jn,W.reversedDepth),z=this.localClippingEnabled,q=Ee.init(this.clippingPlanes,z),_=oe.get(P,v.length),_.init(),v.push(_),be.enabled===!0&&be.isPresenting===!0){const ye=b.xr.getDepthSensingMesh();ye!==null&&Ld(ye,W,-1/0,b.sortObjects)}Ld(P,W,0,b.sortObjects),_.finish(),b.sortObjects===!0&&_.sort(J,Y),He=be.enabled===!1||be.isPresenting===!1||be.hasDepthSensing()===!1,He&&qe.addToRenderList(_,P),this.info.render.frame++,q===!0&&Ee.beginShadows();const ee=g.state.shadowsArray;je.render(ee,P,W),q===!0&&Ee.endShadows(),this.info.autoReset===!0&&this.info.reset();const te=_.opaque,X=_.transmissive;if(g.setupLights(),W.isArrayCamera){const ye=W.cameras;if(X.length>0)for(let Le=0,ze=ye.length;Le<ze;Le++){const Be=ye[Le];p_(te,X,P,Be)}He&&qe.render(P);for(let Le=0,ze=ye.length;Le<ze;Le++){const Be=ye[Le];f_(_,P,Be,Be.viewport)}}else X.length>0&&p_(te,X,P,W),He&&qe.render(P),f_(_,P,W);A!==null&&M===0&&(Qe.updateMultisampleRenderTarget(A),Qe.updateRenderTargetMipmap(A)),P.isScene===!0&&P.onAfterRender(b,P,W),Ce.resetDefaultState(),E=-1,w=null,x.pop(),x.length>0?(g=x[x.length-1],q===!0&&Ee.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,v.pop(),v.length>0?_=v[v.length-1]:_=null};function Ld(P,W,ee,te){if(P.visible===!1)return;if(P.layers.test(W.layers)){if(P.isGroup)ee=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(W);else if(P.isLight)g.pushLight(P),P.castShadow&&g.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||tt.intersectsSprite(P)){te&&De.setFromMatrixPosition(P.matrixWorld).applyMatrix4(Q);const Le=K.update(P),ze=P.material;ze.visible&&_.push(P,Le,ze,ee,De.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||tt.intersectsObject(P))){const Le=K.update(P),ze=P.material;if(te&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),De.copy(P.boundingSphere.center)):(Le.boundingSphere===null&&Le.computeBoundingSphere(),De.copy(Le.boundingSphere.center)),De.applyMatrix4(P.matrixWorld).applyMatrix4(Q)),Array.isArray(ze)){const Be=Le.groups;for(let at=0,ct=Be.length;at<ct;at++){const Ze=Be[at],St=ze[Ze.materialIndex];St&&St.visible&&_.push(P,Le,St,ee,De.z,Ze)}}else ze.visible&&_.push(P,Le,ze,ee,De.z,null)}}const ye=P.children;for(let Le=0,ze=ye.length;Le<ze;Le++)Ld(ye[Le],W,ee,te)}function f_(P,W,ee,te){const X=P.opaque,ye=P.transmissive,Le=P.transparent;g.setupLightsView(ee),q===!0&&Ee.setGlobalState(b.clippingPlanes,ee),te&&ue.viewport(N.copy(te)),X.length>0&&au(X,W,ee),ye.length>0&&au(ye,W,ee),Le.length>0&&au(Le,W,ee),ue.buffers.depth.setTest(!0),ue.buffers.depth.setMask(!0),ue.buffers.color.setMask(!0),ue.setPolygonOffset(!1)}function p_(P,W,ee,te){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[te.id]===void 0&&(g.state.transmissionRenderTarget[te.id]=new Ns(1,1,{generateMipmaps:!0,type:nt.has("EXT_color_buffer_half_float")||nt.has("EXT_color_buffer_float")?Cn:an,minFilter:si,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Je.workingColorSpace}));const ye=g.state.transmissionRenderTarget[te.id],Le=te.viewport||N;ye.setSize(Le.z*b.transmissionResolutionScale,Le.w*b.transmissionResolutionScale);const ze=b.getRenderTarget(),Be=b.getActiveCubeFace(),at=b.getActiveMipmapLevel();b.setRenderTarget(ye),b.getClearColor(k),j=b.getClearAlpha(),j<1&&b.setClearColor(16777215,.5),b.clear(),He&&qe.render(ee);const ct=b.toneMapping;b.toneMapping=ci;const Ze=te.viewport;if(te.viewport!==void 0&&(te.viewport=void 0),g.setupLightsView(te),q===!0&&Ee.setGlobalState(b.clippingPlanes,te),au(P,ee,te),Qe.updateMultisampleRenderTarget(ye),Qe.updateRenderTargetMipmap(ye),nt.has("WEBGL_multisampled_render_to_texture")===!1){let St=!1;for(let Ft=0,ln=W.length;Ft<ln;Ft++){const Xt=W[Ft],zt=Xt.object,it=Xt.geometry,rn=Xt.material,Rt=Xt.group;if(rn.side===zn&&zt.layers.test(te.layers)){const pi=rn.side;rn.side=kt,rn.needsUpdate=!0,m_(zt,ee,te,it,rn,Rt),rn.side=pi,rn.needsUpdate=!0,St=!0}}St===!0&&(Qe.updateMultisampleRenderTarget(ye),Qe.updateRenderTargetMipmap(ye))}b.setRenderTarget(ze,Be,at),b.setClearColor(k,j),Ze!==void 0&&(te.viewport=Ze),b.toneMapping=ct}function au(P,W,ee){const te=W.isScene===!0?W.overrideMaterial:null;for(let X=0,ye=P.length;X<ye;X++){const Le=P[X],ze=Le.object,Be=Le.geometry,at=Le.group;let ct=Le.material;ct.allowOverride===!0&&te!==null&&(ct=te),ze.layers.test(ee.layers)&&m_(ze,W,ee,Be,ct,at)}}function m_(P,W,ee,te,X,ye){P.onBeforeRender(b,W,ee,te,X,ye),P.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),X.onBeforeRender(b,W,ee,te,P,ye),X.transparent===!0&&X.side===zn&&X.forceSinglePass===!1?(X.side=kt,X.needsUpdate=!0,b.renderBufferDirect(ee,W,te,X,P,ye),X.side=Si,X.needsUpdate=!0,b.renderBufferDirect(ee,W,te,X,P,ye),X.side=zn):b.renderBufferDirect(ee,W,te,X,P,ye),P.onAfterRender(b,W,ee,te,X,ye)}function lu(P,W,ee){W.isScene!==!0&&(W=Me);const te=Fe.get(P),X=g.state.lights,ye=g.state.shadowsArray,Le=X.state.version,ze=le.getParameters(P,X.state,ye,W,ee),Be=le.getProgramCacheKey(ze);let at=te.programs;te.environment=P.isMeshStandardMaterial?W.environment:null,te.fog=W.fog,te.envMap=(P.isMeshStandardMaterial?At:nn).get(P.envMap||te.environment),te.envMapRotation=te.environment!==null&&P.envMap===null?W.environmentRotation:P.envMapRotation,at===void 0&&(P.addEventListener("dispose",he),at=new Map,te.programs=at);let ct=at.get(Be);if(ct!==void 0){if(te.currentProgram===ct&&te.lightsStateVersion===Le)return __(P,ze),ct}else ze.uniforms=le.getUniforms(P),P.onBeforeCompile(ze,b),ct=le.acquireProgram(ze,Be),at.set(Be,ct),te.uniforms=ze.uniforms;const Ze=te.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(Ze.clippingPlanes=Ee.uniform),__(P,ze),te.needsLights=TM(P),te.lightsStateVersion=Le,te.needsLights&&(Ze.ambientLightColor.value=X.state.ambient,Ze.lightProbe.value=X.state.probe,Ze.directionalLights.value=X.state.directional,Ze.directionalLightShadows.value=X.state.directionalShadow,Ze.spotLights.value=X.state.spot,Ze.spotLightShadows.value=X.state.spotShadow,Ze.rectAreaLights.value=X.state.rectArea,Ze.ltc_1.value=X.state.rectAreaLTC1,Ze.ltc_2.value=X.state.rectAreaLTC2,Ze.pointLights.value=X.state.point,Ze.pointLightShadows.value=X.state.pointShadow,Ze.hemisphereLights.value=X.state.hemi,Ze.directionalShadowMap.value=X.state.directionalShadowMap,Ze.directionalShadowMatrix.value=X.state.directionalShadowMatrix,Ze.spotShadowMap.value=X.state.spotShadowMap,Ze.spotLightMatrix.value=X.state.spotLightMatrix,Ze.spotLightMap.value=X.state.spotLightMap,Ze.pointShadowMap.value=X.state.pointShadowMap,Ze.pointShadowMatrix.value=X.state.pointShadowMatrix),te.currentProgram=ct,te.uniformsList=null,ct}function g_(P){if(P.uniformsList===null){const W=P.currentProgram.getUniforms();P.uniformsList=bh.seqWithValue(W.seq,P.uniforms)}return P.uniformsList}function __(P,W){const ee=Fe.get(P);ee.outputColorSpace=W.outputColorSpace,ee.batching=W.batching,ee.batchingColor=W.batchingColor,ee.instancing=W.instancing,ee.instancingColor=W.instancingColor,ee.instancingMorph=W.instancingMorph,ee.skinning=W.skinning,ee.morphTargets=W.morphTargets,ee.morphNormals=W.morphNormals,ee.morphColors=W.morphColors,ee.morphTargetsCount=W.morphTargetsCount,ee.numClippingPlanes=W.numClippingPlanes,ee.numIntersection=W.numClipIntersection,ee.vertexAlphas=W.vertexAlphas,ee.vertexTangents=W.vertexTangents,ee.toneMapping=W.toneMapping}function xM(P,W,ee,te,X){W.isScene!==!0&&(W=Me),Qe.resetTextureUnits();const ye=W.fog,Le=te.isMeshStandardMaterial?W.environment:null,ze=A===null?b.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:yo,Be=(te.isMeshStandardMaterial?At:nn).get(te.envMap||Le),at=te.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,ct=!!ee.attributes.tangent&&(!!te.normalMap||te.anisotropy>0),Ze=!!ee.morphAttributes.position,St=!!ee.morphAttributes.normal,Ft=!!ee.morphAttributes.color;let ln=ci;te.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(ln=b.toneMapping);const Xt=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,zt=Xt!==void 0?Xt.length:0,it=Fe.get(te),rn=g.state.lights;if(q===!0&&(z===!0||P!==w)){const jn=P===w&&te.id===E;Ee.setState(te,P,jn)}let Rt=!1;te.version===it.__version?(it.needsLights&&it.lightsStateVersion!==rn.state.version||it.outputColorSpace!==ze||X.isBatchedMesh&&it.batching===!1||!X.isBatchedMesh&&it.batching===!0||X.isBatchedMesh&&it.batchingColor===!0&&X.colorTexture===null||X.isBatchedMesh&&it.batchingColor===!1&&X.colorTexture!==null||X.isInstancedMesh&&it.instancing===!1||!X.isInstancedMesh&&it.instancing===!0||X.isSkinnedMesh&&it.skinning===!1||!X.isSkinnedMesh&&it.skinning===!0||X.isInstancedMesh&&it.instancingColor===!0&&X.instanceColor===null||X.isInstancedMesh&&it.instancingColor===!1&&X.instanceColor!==null||X.isInstancedMesh&&it.instancingMorph===!0&&X.morphTexture===null||X.isInstancedMesh&&it.instancingMorph===!1&&X.morphTexture!==null||it.envMap!==Be||te.fog===!0&&it.fog!==ye||it.numClippingPlanes!==void 0&&(it.numClippingPlanes!==Ee.numPlanes||it.numIntersection!==Ee.numIntersection)||it.vertexAlphas!==at||it.vertexTangents!==ct||it.morphTargets!==Ze||it.morphNormals!==St||it.morphColors!==Ft||it.toneMapping!==ln||it.morphTargetsCount!==zt)&&(Rt=!0):(Rt=!0,it.__version=te.version);let pi=it.currentProgram;Rt===!0&&(pi=lu(te,W,X));let Ao=!1,mi=!1,yl=!1;const sn=pi.getUniforms(),Ni=it.uniforms;if(ue.useProgram(pi.program)&&(Ao=!0,mi=!0,yl=!0),te.id!==E&&(E=te.id,mi=!0),Ao||w!==P){ue.buffers.depth.getReversed()&&P.reversedDepth!==!0&&(P._reversedDepth=!0,P.updateProjectionMatrix()),sn.setValue(U,"projectionMatrix",P.projectionMatrix),sn.setValue(U,"viewMatrix",P.matrixWorldInverse);const ni=sn.map.cameraPosition;ni!==void 0&&ni.setValue(U,ge.setFromMatrixPosition(P.matrixWorld)),Z.logarithmicDepthBuffer&&sn.setValue(U,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial)&&sn.setValue(U,"isOrthographic",P.isOrthographicCamera===!0),w!==P&&(w=P,mi=!0,yl=!0)}if(X.isSkinnedMesh){sn.setOptional(U,X,"bindMatrix"),sn.setOptional(U,X,"bindMatrixInverse");const jn=X.skeleton;jn&&(jn.boneTexture===null&&jn.computeBoneTexture(),sn.setValue(U,"boneTexture",jn.boneTexture,Qe))}X.isBatchedMesh&&(sn.setOptional(U,X,"batchingTexture"),sn.setValue(U,"batchingTexture",X._matricesTexture,Qe),sn.setOptional(U,X,"batchingIdTexture"),sn.setValue(U,"batchingIdTexture",X._indirectTexture,Qe),sn.setOptional(U,X,"batchingColorTexture"),X._colorsTexture!==null&&sn.setValue(U,"batchingColorTexture",X._colorsTexture,Qe));const Pi=ee.morphAttributes;if((Pi.position!==void 0||Pi.normal!==void 0||Pi.color!==void 0)&&xe.update(X,ee,pi),(mi||it.receiveShadow!==X.receiveShadow)&&(it.receiveShadow=X.receiveShadow,sn.setValue(U,"receiveShadow",X.receiveShadow)),te.isMeshGouraudMaterial&&te.envMap!==null&&(Ni.envMap.value=Be,Ni.flipEnvMap.value=Be.isCubeTexture&&Be.isRenderTargetTexture===!1?-1:1),te.isMeshStandardMaterial&&te.envMap===null&&W.environment!==null&&(Ni.envMapIntensity.value=W.environmentIntensity),mi&&(sn.setValue(U,"toneMappingExposure",b.toneMappingExposure),it.needsLights&&bM(Ni,yl),ye&&te.fog===!0&&pe.refreshFogUniforms(Ni,ye),pe.refreshMaterialUniforms(Ni,te,B,G,g.state.transmissionRenderTarget[P.id]),bh.upload(U,g_(it),Ni,Qe)),te.isShaderMaterial&&te.uniformsNeedUpdate===!0&&(bh.upload(U,g_(it),Ni,Qe),te.uniformsNeedUpdate=!1),te.isSpriteMaterial&&sn.setValue(U,"center",X.center),sn.setValue(U,"modelViewMatrix",X.modelViewMatrix),sn.setValue(U,"normalMatrix",X.normalMatrix),sn.setValue(U,"modelMatrix",X.matrixWorld),te.isShaderMaterial||te.isRawShaderMaterial){const jn=te.uniformsGroups;for(let ni=0,Id=jn.length;ni<Id;ni++){const zs=jn[ni];gt.update(zs,pi),gt.bind(zs,pi)}}return pi}function bM(P,W){P.ambientLightColor.needsUpdate=W,P.lightProbe.needsUpdate=W,P.directionalLights.needsUpdate=W,P.directionalLightShadows.needsUpdate=W,P.pointLights.needsUpdate=W,P.pointLightShadows.needsUpdate=W,P.spotLights.needsUpdate=W,P.spotLightShadows.needsUpdate=W,P.rectAreaLights.needsUpdate=W,P.hemisphereLights.needsUpdate=W}function TM(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(P,W,ee){const te=Fe.get(P);te.__autoAllocateDepthBuffer=P.resolveDepthBuffer===!1,te.__autoAllocateDepthBuffer===!1&&(te.__useRenderToTexture=!1),Fe.get(P.texture).__webglTexture=W,Fe.get(P.depthTexture).__webglTexture=te.__autoAllocateDepthBuffer?void 0:ee,te.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(P,W){const ee=Fe.get(P);ee.__webglFramebuffer=W,ee.__useDefaultFramebuffer=W===void 0};const SM=U.createFramebuffer();this.setRenderTarget=function(P,W=0,ee=0){A=P,S=W,M=ee;let te=!0,X=null,ye=!1,Le=!1;if(P){const Be=Fe.get(P);if(Be.__useDefaultFramebuffer!==void 0)ue.bindFramebuffer(U.FRAMEBUFFER,null),te=!1;else if(Be.__webglFramebuffer===void 0)Qe.setupRenderTarget(P);else if(Be.__hasExternalTextures)Qe.rebindTextures(P,Fe.get(P.texture).__webglTexture,Fe.get(P.depthTexture).__webglTexture);else if(P.depthBuffer){const Ze=P.depthTexture;if(Be.__boundDepthTexture!==Ze){if(Ze!==null&&Fe.has(Ze)&&(P.width!==Ze.image.width||P.height!==Ze.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Qe.setupDepthRenderbuffer(P)}}const at=P.texture;(at.isData3DTexture||at.isDataArrayTexture||at.isCompressedArrayTexture)&&(Le=!0);const ct=Fe.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(ct[W])?X=ct[W][ee]:X=ct[W],ye=!0):P.samples>0&&Qe.useMultisampledRTT(P)===!1?X=Fe.get(P).__webglMultisampledFramebuffer:Array.isArray(ct)?X=ct[ee]:X=ct,N.copy(P.viewport),D.copy(P.scissor),F=P.scissorTest}else N.copy(re).multiplyScalar(B).floor(),D.copy(me).multiplyScalar(B).floor(),F=Re;if(ee!==0&&(X=SM),ue.bindFramebuffer(U.FRAMEBUFFER,X)&&te&&ue.drawBuffers(P,X),ue.viewport(N),ue.scissor(D),ue.setScissorTest(F),ye){const Be=Fe.get(P.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+W,Be.__webglTexture,ee)}else if(Le){const Be=W;for(let at=0;at<P.textures.length;at++){const ct=Fe.get(P.textures[at]);U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0+at,ct.__webglTexture,ee,Be)}}else if(P!==null&&ee!==0){const Be=Fe.get(P.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Be.__webglTexture,ee)}E=-1},this.readRenderTargetPixels=function(P,W,ee,te,X,ye,Le,ze=0){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=Fe.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Le!==void 0&&(Be=Be[Le]),Be){ue.bindFramebuffer(U.FRAMEBUFFER,Be);try{const at=P.textures[ze],ct=at.format,Ze=at.type;if(!Z.textureFormatReadable(ct)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Z.textureTypeReadable(Ze)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=P.width-te&&ee>=0&&ee<=P.height-X&&(P.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+ze),U.readPixels(W,ee,te,X,Xe.convert(ct),Xe.convert(Ze),ye))}finally{const at=A!==null?Fe.get(A).__webglFramebuffer:null;ue.bindFramebuffer(U.FRAMEBUFFER,at)}}},this.readRenderTargetPixelsAsync=async function(P,W,ee,te,X,ye,Le,ze=0){if(!(P&&P.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Be=Fe.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Le!==void 0&&(Be=Be[Le]),Be)if(W>=0&&W<=P.width-te&&ee>=0&&ee<=P.height-X){ue.bindFramebuffer(U.FRAMEBUFFER,Be);const at=P.textures[ze],ct=at.format,Ze=at.type;if(!Z.textureFormatReadable(ct))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Z.textureTypeReadable(Ze))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const St=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,St),U.bufferData(U.PIXEL_PACK_BUFFER,ye.byteLength,U.STREAM_READ),P.textures.length>1&&U.readBuffer(U.COLOR_ATTACHMENT0+ze),U.readPixels(W,ee,te,X,Xe.convert(ct),Xe.convert(Ze),0);const Ft=A!==null?Fe.get(A).__webglFramebuffer:null;ue.bindFramebuffer(U.FRAMEBUFFER,Ft);const ln=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);return U.flush(),await SC(U,ln,4),U.bindBuffer(U.PIXEL_PACK_BUFFER,St),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,ye),U.deleteBuffer(St),U.deleteSync(ln),ye}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(P,W=null,ee=0){const te=Math.pow(2,-ee),X=Math.floor(P.image.width*te),ye=Math.floor(P.image.height*te),Le=W!==null?W.x:0,ze=W!==null?W.y:0;Qe.setTexture2D(P,0),U.copyTexSubImage2D(U.TEXTURE_2D,ee,0,0,Le,ze,X,ye),ue.unbindTexture()};const MM=U.createFramebuffer(),EM=U.createFramebuffer();this.copyTextureToTexture=function(P,W,ee=null,te=null,X=0,ye=null){ye===null&&(X!==0?(Ri("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ye=X,X=0):ye=0);let Le,ze,Be,at,ct,Ze,St,Ft,ln;const Xt=P.isCompressedTexture?P.mipmaps[ye]:P.image;if(ee!==null)Le=ee.max.x-ee.min.x,ze=ee.max.y-ee.min.y,Be=ee.isBox3?ee.max.z-ee.min.z:1,at=ee.min.x,ct=ee.min.y,Ze=ee.isBox3?ee.min.z:0;else{const Pi=Math.pow(2,-X);Le=Math.floor(Xt.width*Pi),ze=Math.floor(Xt.height*Pi),P.isDataArrayTexture?Be=Xt.depth:P.isData3DTexture?Be=Math.floor(Xt.depth*Pi):Be=1,at=0,ct=0,Ze=0}te!==null?(St=te.x,Ft=te.y,ln=te.z):(St=0,Ft=0,ln=0);const zt=Xe.convert(W.format),it=Xe.convert(W.type);let rn;W.isData3DTexture?(Qe.setTexture3D(W,0),rn=U.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(Qe.setTexture2DArray(W,0),rn=U.TEXTURE_2D_ARRAY):(Qe.setTexture2D(W,0),rn=U.TEXTURE_2D),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,W.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,W.unpackAlignment);const Rt=U.getParameter(U.UNPACK_ROW_LENGTH),pi=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Ao=U.getParameter(U.UNPACK_SKIP_PIXELS),mi=U.getParameter(U.UNPACK_SKIP_ROWS),yl=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,Xt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Xt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,at),U.pixelStorei(U.UNPACK_SKIP_ROWS,ct),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Ze);const sn=P.isDataArrayTexture||P.isData3DTexture,Ni=W.isDataArrayTexture||W.isData3DTexture;if(P.isDepthTexture){const Pi=Fe.get(P),jn=Fe.get(W),ni=Fe.get(Pi.__renderTarget),Id=Fe.get(jn.__renderTarget);ue.bindFramebuffer(U.READ_FRAMEBUFFER,ni.__webglFramebuffer),ue.bindFramebuffer(U.DRAW_FRAMEBUFFER,Id.__webglFramebuffer);for(let zs=0;zs<Be;zs++)sn&&(U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Fe.get(P).__webglTexture,X,Ze+zs),U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Fe.get(W).__webglTexture,ye,ln+zs)),U.blitFramebuffer(at,ct,Le,ze,St,Ft,Le,ze,U.DEPTH_BUFFER_BIT,U.NEAREST);ue.bindFramebuffer(U.READ_FRAMEBUFFER,null),ue.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else if(X!==0||P.isRenderTargetTexture||Fe.has(P)){const Pi=Fe.get(P),jn=Fe.get(W);ue.bindFramebuffer(U.READ_FRAMEBUFFER,MM),ue.bindFramebuffer(U.DRAW_FRAMEBUFFER,EM);for(let ni=0;ni<Be;ni++)sn?U.framebufferTextureLayer(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,Pi.__webglTexture,X,Ze+ni):U.framebufferTexture2D(U.READ_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,Pi.__webglTexture,X),Ni?U.framebufferTextureLayer(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,jn.__webglTexture,ye,ln+ni):U.framebufferTexture2D(U.DRAW_FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_2D,jn.__webglTexture,ye),X!==0?U.blitFramebuffer(at,ct,Le,ze,St,Ft,Le,ze,U.COLOR_BUFFER_BIT,U.NEAREST):Ni?U.copyTexSubImage3D(rn,ye,St,Ft,ln+ni,at,ct,Le,ze):U.copyTexSubImage2D(rn,ye,St,Ft,at,ct,Le,ze);ue.bindFramebuffer(U.READ_FRAMEBUFFER,null),ue.bindFramebuffer(U.DRAW_FRAMEBUFFER,null)}else Ni?P.isDataTexture||P.isData3DTexture?U.texSubImage3D(rn,ye,St,Ft,ln,Le,ze,Be,zt,it,Xt.data):W.isCompressedArrayTexture?U.compressedTexSubImage3D(rn,ye,St,Ft,ln,Le,ze,Be,zt,Xt.data):U.texSubImage3D(rn,ye,St,Ft,ln,Le,ze,Be,zt,it,Xt):P.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,ye,St,Ft,Le,ze,zt,it,Xt.data):P.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,ye,St,Ft,Xt.width,Xt.height,zt,Xt.data):U.texSubImage2D(U.TEXTURE_2D,ye,St,Ft,Le,ze,zt,it,Xt);U.pixelStorei(U.UNPACK_ROW_LENGTH,Rt),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,pi),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Ao),U.pixelStorei(U.UNPACK_SKIP_ROWS,mi),U.pixelStorei(U.UNPACK_SKIP_IMAGES,yl),ye===0&&W.generateMipmaps&&U.generateMipmap(rn),ue.unbindTexture()},this.initRenderTarget=function(P){Fe.get(P).__webglFramebuffer===void 0&&Qe.setupRenderTarget(P)},this.initTexture=function(P){P.isCubeTexture?Qe.setTextureCube(P,0):P.isData3DTexture?Qe.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?Qe.setTexture2DArray(P,0):Qe.setTexture2D(P,0),ue.unbindTexture()},this.resetState=function(){S=0,M=0,A=null,ue.reset(),Ce.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Jn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorSpace=Je._getDrawingBufferColorSpace(e),n.unpackColorSpace=Je._getUnpackColorSpace()}}const _a=new Ki,Wr=new de,Hb=new L,Ef=new de,Th=new de,Gh=new L,Jp=new L,Wb=new bt,$b=new L,jb=new L;let kn=null,hr=null;const $r=[],ws={NONE:-1,PAN:0,ROTATE:1};class bL extends pd{constructor(e,n,i=null){super(n,i),this.objects=e,this.recursive=!0,this.transformGroup=!1,this.rotateSpeed=1,this.raycaster=new Ob,this.mouseButtons={LEFT:Pn.PAN,MIDDLE:Pn.PAN,RIGHT:Pn.ROTATE},this.touches={ONE:Xr.PAN},this._onPointerMove=TL.bind(this),this._onPointerDown=SL.bind(this),this._onPointerCancel=ML.bind(this),this._onContextMenu=EL.bind(this),i!==null&&this.connect(i)}connect(e){super.connect(e),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerCancel),this.domElement.addEventListener("pointerleave",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerCancel),this.domElement.removeEventListener("pointerleave",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto",this.domElement.style.cursor=""}dispose(){this.disconnect()}_updatePointer(e){const n=this.domElement.getBoundingClientRect();Wr.x=(e.clientX-n.left)/n.width*2-1,Wr.y=-(e.clientY-n.top)/n.height*2+1}_updateState(e){let n;if(e.pointerType==="touch")n=this.touches.ONE;else switch(e.button){case 0:n=this.mouseButtons.LEFT;break;case 1:n=this.mouseButtons.MIDDLE;break;case 2:n=this.mouseButtons.RIGHT;break;default:n=null}switch(n){case Pn.PAN:case Xr.PAN:this.state=ws.PAN;break;case Pn.ROTATE:case Xr.ROTATE:this.state=ws.ROTATE;break;default:this.state=ws.NONE}}}function TL(r){const e=this.object,n=this.domElement,i=this.raycaster;if(this.enabled!==!1){if(this._updatePointer(r),i.setFromCamera(Wr,e),kn)this.state===ws.PAN?i.ray.intersectPlane(_a,Gh)&&(kn.position.copy(Gh.sub(Hb).applyMatrix4(Wb)),this.dispatchEvent({type:"drag",object:kn})):this.state===ws.ROTATE&&(Ef.subVectors(Wr,Th).multiplyScalar(this.rotateSpeed),kn.rotateOnWorldAxis($b,Ef.x),kn.rotateOnWorldAxis(jb.normalize(),-Ef.y),this.dispatchEvent({type:"drag",object:kn})),Th.copy(Wr);else if(r.pointerType==="mouse"||r.pointerType==="pen")if($r.length=0,i.setFromCamera(Wr,e),i.intersectObjects(this.objects,this.recursive,$r),$r.length>0){const s=$r[0].object;_a.setFromNormalAndCoplanarPoint(e.getWorldDirection(_a.normal),Jp.setFromMatrixPosition(s.matrixWorld)),hr!==s&&hr!==null&&(this.dispatchEvent({type:"hoveroff",object:hr}),n.style.cursor="auto",hr=null),hr!==s&&(this.dispatchEvent({type:"hoveron",object:s}),n.style.cursor="pointer",hr=s)}else hr!==null&&(this.dispatchEvent({type:"hoveroff",object:hr}),n.style.cursor="auto",hr=null);Th.copy(Wr)}}function SL(r){const e=this.object,n=this.domElement,i=this.raycaster;this.enabled!==!1&&(this._updatePointer(r),this._updateState(r),$r.length=0,i.setFromCamera(Wr,e),i.intersectObjects(this.objects,this.recursive,$r),$r.length>0&&(this.transformGroup===!0?kn=qb($r[0].object):kn=$r[0].object,_a.setFromNormalAndCoplanarPoint(e.getWorldDirection(_a.normal),Jp.setFromMatrixPosition(kn.matrixWorld)),i.ray.intersectPlane(_a,Gh)&&(this.state===ws.PAN?(Wb.copy(kn.parent.matrixWorld).invert(),Hb.copy(Gh).sub(Jp.setFromMatrixPosition(kn.matrixWorld)),n.style.cursor="move",this.dispatchEvent({type:"dragstart",object:kn})):this.state===ws.ROTATE&&($b.set(0,1,0).applyQuaternion(e.quaternion).normalize(),jb.set(1,0,0).applyQuaternion(e.quaternion).normalize(),n.style.cursor="move",this.dispatchEvent({type:"dragstart",object:kn})))),Th.copy(Wr))}function ML(){this.enabled!==!1&&(kn&&(this.dispatchEvent({type:"dragend",object:kn}),kn=null),this.domElement.style.cursor=hr?"pointer":"auto",this.state=ws.NONE)}function EL(r){this.enabled!==!1&&r.preventDefault()}function qb(r,e=null){return r.isGroup&&(e=r),r.parent===null?e:qb(r.parent,e)}function wL(r){RL(r);const e=AL(r);return r.on=e.on,r.off=e.off,r.fire=e.fire,r}function AL(r){let e=Object.create(null);return{on:function(n,i,s){if(typeof i!="function")throw new Error("callback is expected to be a function");let o=e[n];return o||(o=e[n]=[]),o.push({callback:i,ctx:s}),r},off:function(n,i){if(typeof n>"u")return e=Object.create(null),r;if(e[n])if(typeof i!="function")delete e[n];else{const a=e[n];for(let l=0;l<a.length;++l)a[l].callback===i&&a.splice(l,1)}return r},fire:function(n){const i=e[n];if(!i)return r;let s;arguments.length>1&&(s=Array.prototype.slice.call(arguments,1));for(let o=0;o<i.length;++o){const a=i[o];a.callback.apply(a.ctx,s)}return r}}}function RL(r){if(!r)throw new Error("Eventify cannot use falsy object as events subject");const e=["on","fire","off"];for(let n=0;n<e.length;++n)if(r.hasOwnProperty(e[n]))throw new Error("Subject cannot be eventified, since it already has property '"+e[n]+"'")}function CL(r){if(r=r||{},"uniqueLinkId"in r&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n",`
`,`Note: there is also change in default behavior: From now on each graph
is considered to be not a multigraph by default (each edge is unique).`),r.multigraph=r.uniqueLinkId),r.multigraph===void 0&&(r.multigraph=!1),typeof Map!="function")throw new Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");var e=new Map,n=new Map,i={},s=0,o=r.multigraph?b:x,a=[],l=$,c=$,u=$,h=$,d={version:20,addNode:y,addLink:v,removeLink:A,removeNode:g,getNode:_,getNodeCount:T,getLinkCount:S,getEdgeCount:S,getLinksCount:S,getNodesCount:T,getLinks:M,forEachNode:J,forEachLinkedNode:F,forEachLink:D,beginUpdate:u,endUpdate:h,clear:N,hasLink:w,hasNode:_,getLink:w};return wL(d),f(),d;function f(){var Y=d.on;d.on=re;function re(){return d.beginUpdate=u=G,d.endUpdate=h=B,l=p,c=m,d.on=Y,Y.apply(d,arguments)}}function p(Y,re){a.push({link:Y,changeType:re})}function m(Y,re){a.push({node:Y,changeType:re})}function y(Y,re){if(Y===void 0)throw new Error("Invalid node identifier");u();var me=_(Y);return me?(me.data=re,c(me,"update")):(me=new NL(Y,re),c(me,"add")),e.set(Y,me),h(),me}function _(Y){return e.get(Y)}function g(Y){var re=_(Y);if(!re)return!1;u();var me=re.links;return me&&(me.forEach(E),re.links=null),e.delete(Y),c(re,"remove"),h(),!0}function v(Y,re,me){u();var Re=_(Y)||y(Y),tt=_(re)||y(re),q=o(Y,re,me),z=n.has(q.id);return n.set(q.id,q),rv(Re,q),Y!==re&&rv(tt,q),l(q,z?"update":"add"),h(),q}function x(Y,re,me){var Re=Bu(Y,re),tt=n.get(Re);return tt?(tt.data=me,tt):new sv(Y,re,me,Re)}function b(Y,re,me){var Re=Bu(Y,re),tt=i.hasOwnProperty(Re);if(tt||w(Y,re)){tt||(i[Re]=0);var q="@"+ ++i[Re];Re=Bu(Y+q,re+q)}return new sv(Y,re,me,Re)}function T(){return e.size}function S(){return n.size}function M(Y){var re=_(Y);return re?re.links:null}function A(Y,re){return re!==void 0&&(Y=w(Y,re)),E(Y)}function E(Y){if(!Y||!n.get(Y.id))return!1;u(),n.delete(Y.id);var re=_(Y.fromId),me=_(Y.toId);return re&&re.links.delete(Y),me&&me.links.delete(Y),l(Y,"remove"),h(),!0}function w(Y,re){if(!(Y===void 0||re===void 0))return n.get(Bu(Y,re))}function N(){u(),J(function(Y){g(Y.id)}),h()}function D(Y){if(typeof Y=="function")for(var re=n.values(),me=re.next();!me.done;){if(Y(me.value))return!0;me=re.next()}}function F(Y,re,me){var Re=_(Y);if(Re&&Re.links&&typeof re=="function")return me?j(Re.links,Y,re):k(Re.links,Y,re)}function k(Y,re,me){for(var Re,tt=Y.values(),q=tt.next();!q.done;){var z=q.value,Q=z.fromId===re?z.toId:z.fromId;if(Re=me(e.get(Q),z),Re)return!0;q=tt.next()}}function j(Y,re,me){for(var Re,tt=Y.values(),q=tt.next();!q.done;){var z=q.value;if(z.fromId===re&&(Re=me(e.get(z.toId),z),Re))return!0;q=tt.next()}}function $(){}function G(){s+=1}function B(){s-=1,s===0&&a.length>0&&(d.fire("changed",a),a.length=0)}function J(Y){if(typeof Y!="function")throw new Error("Function is expected to iterate over graph nodes. You passed "+Y);for(var re=e.values(),me=re.next();!me.done;){if(Y(me.value))return!0;me=re.next()}}}function NL(r,e){this.id=r,this.links=null,this.data=e}function rv(r,e){r.links?r.links.add(e):r.links=new Set([e])}function sv(r,e,n,i){this.fromId=r,this.toId=e,this.data=n,this.id=i}function Bu(r,e){return r.toString()+"👉 "+e.toString()}var ku={exports:{}},Xo={exports:{}},wf,ov;function Xb(){return ov||(ov=1,wf=function(e){return e===0?"x":e===1?"y":e===2?"z":"c"+(e+1)}),wf}var Af,av;function dl(){if(av)return Af;av=1;const r=Xb();return Af=function(n){return i;function i(s,o){let a=o&&o.indent||0,l=o&&o.join!==void 0?o.join:`
`,c=Array(a+1).join(" "),u=[];for(let h=0;h<n;++h){let d=r(h),f=h===0?"":c;u.push(f+s.replace(/{var}/g,d))}return u.join(l)}},Af}var lv;function PL(){if(lv)return Xo.exports;lv=1;const r=dl();Xo.exports=e,Xo.exports.generateCreateBodyFunctionBody=n,Xo.exports.getVectorCode=s,Xo.exports.getBodyCode=i;function e(o,a){let l=n(o,a),{Body:c}=new Function(l)();return c}function n(o,a){return`
${s(o,a)}
${i(o)}
return {Body: Body, Vector: Vector};
`}function i(o){let a=r(o),l=a("{var}",{join:", "});return`
function Body(${l}) {
  this.isPinned = false;
  this.pos = new Vector(${l});
  this.force = new Vector();
  this.velocity = new Vector();
  this.mass = 1;

  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.reset = function() {
  this.force.reset();
  this.springCount = 0;
  this.springLength = 0;
}

Body.prototype.setPosition = function (${l}) {
  ${a("this.pos.{var} = {var} || 0;",{indent:2})}
};`}function s(o,a){let l=r(o),c="";return a&&(c=`${l(`
	   var v{var};
	Object.defineProperty(this, '{var}', {
	  set: function(v) { 
	    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');
	    v{var} = v; 
	  },
	  get: function() { return v{var}; }
	});`)}`),`function Vector(${l("{var}",{join:", "})}) {
  ${c}
    if (typeof arguments[0] === 'object') {
      // could be another vector
      let v = arguments[0];
      ${l('if (!Number.isFinite(v.{var})) throw new Error("Expected value is not a finite number at Vector constructor ({var})");',{indent:4})}
      ${l("this.{var} = v.{var};",{indent:4})}
    } else {
      ${l('this.{var} = typeof {var} === "number" ? {var} : 0;',{indent:4})}
    }
  }
  
  Vector.prototype.reset = function () {
    ${l("this.{var} = ",{join:""})}0;
  };`}return Xo.exports}var Fr={exports:{}},cv;function DL(){if(cv)return Fr.exports;cv=1;const r=dl(),e=Xb();Fr.exports=n,Fr.exports.generateQuadTreeFunctionBody=i,Fr.exports.getInsertStackCode=c,Fr.exports.getQuadNodeCode=l,Fr.exports.isSamePosition=s,Fr.exports.getChildBodyCode=a,Fr.exports.setChildBodyCode=o;function n(u){let h=i(u);return new Function(h)()}function i(u){let h=r(u),d=Math.pow(2,u);return`
${c()}
${l(u)}
${s(u)}
${a(u)}
${o(u)}

function createQuadTree(options, random) {
  options = options || {};
  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;
  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;

  var gravity = options.gravity;
  var updateQueue = [];
  var insertStack = new InsertStack();
  var theta = options.theta;

  var nodesCache = [];
  var currentInCache = 0;
  var root = newNode();

  return {
    insertBodies: insertBodies,

    /**
     * Gets root node if it is present
     */
    getRoot: function() {
      return root;
    },

    updateBodyForce: update,

    options: function(newOptions) {
      if (newOptions) {
        if (typeof newOptions.gravity === 'number') {
          gravity = newOptions.gravity;
        }
        if (typeof newOptions.theta === 'number') {
          theta = newOptions.theta;
        }

        return this;
      }

      return {
        gravity: gravity,
        theta: theta
      };
    }
  };

  function newNode() {
    // To avoid pressure on GC we reuse nodes.
    var node = nodesCache[currentInCache];
    if (node) {
${y("      node.")}
      node.body = null;
      node.mass = ${h("node.mass_{var} = ",{join:""})}0;
      ${h("node.min_{var} = node.max_{var} = ",{join:""})}0;
    } else {
      node = new QuadNode();
      nodesCache[currentInCache] = node;
    }

    ++currentInCache;
    return node;
  }

  function update(sourceBody) {
    var queue = updateQueue;
    var v;
    ${h("var d{var};",{indent:4})}
    var r; 
    ${h("var f{var} = 0;",{indent:4})}
    var queueLength = 1;
    var shiftIdx = 0;
    var pushIdx = 1;

    queue[0] = root;

    while (queueLength) {
      var node = queue[shiftIdx];
      var body = node.body;

      queueLength -= 1;
      shiftIdx += 1;
      var differentBody = (body !== sourceBody);
      if (body && differentBody) {
        // If the current node is a leaf node (and it is not source body),
        // calculate the force exerted by the current node on body, and add this
        // amount to body's net force.
        ${h("d{var} = body.pos.{var} - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Poor man's protection against zero distance.
          ${h("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});
        }

        // This is standard gravitation force calculation but we divide
        // by r^3 to save two operations when normalizing force vector.
        v = gravity * body.mass * sourceBody.mass / (r * r * r);
        ${h("f{var} += v * d{var};",{indent:8})}
      } else if (differentBody) {
        // Otherwise, calculate the ratio s / r,  where s is the width of the region
        // represented by the internal node, and r is the distance between the body
        // and the node's center-of-mass
        ${h("d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};",{indent:8})}
        r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});

        if (r === 0) {
          // Sorry about code duplication. I don't want to create many functions
          // right away. Just want to see performance first.
          ${h("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:10})}
          r = Math.sqrt(${h("d{var} * d{var}",{join:" + "})});
        }
        // If s / r < θ, treat this internal node as a single body, and calculate the
        // force it exerts on sourceBody, and add this amount to sourceBody's net force.
        if ((node.max_${e(0)} - node.min_${e(0)}) / r < theta) {
          // in the if statement above we consider node's width only
          // because the region was made into square during tree creation.
          // Thus there is no difference between using width or height.
          v = gravity * node.mass * sourceBody.mass / (r * r * r);
          ${h("f{var} += v * d{var};",{indent:10})}
        } else {
          // Otherwise, run the procedure recursively on each of the current node's children.

          // I intentionally unfolded this loop, to save several CPU cycles.
${m()}
        }
      }
    }

    ${h("sourceBody.force.{var} += f{var};",{indent:4})}
  }

  function insertBodies(bodies) {
    ${h("var {var}min = Number.MAX_VALUE;",{indent:4})}
    ${h("var {var}max = Number.MIN_VALUE;",{indent:4})}
    var i = bodies.length;

    // To reduce quad tree depth we are looking for exact bounding box of all particles.
    while (i--) {
      var pos = bodies[i].pos;
      ${h("if (pos.{var} < {var}min) {var}min = pos.{var};",{indent:6})}
      ${h("if (pos.{var} > {var}max) {var}max = pos.{var};",{indent:6})}
    }

    // Makes the bounds square.
    var maxSideLength = -Infinity;
    ${h("if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;",{indent:4})}

    currentInCache = 0;
    root = newNode();
    ${h("root.min_{var} = {var}min;",{indent:4})}
    ${h("root.max_{var} = {var}min + maxSideLength;",{indent:4})}

    i = bodies.length - 1;
    if (i >= 0) {
      root.body = bodies[i];
    }
    while (i--) {
      insert(bodies[i], root);
    }
  }

  function insert(newBody) {
    insertStack.reset();
    insertStack.push(root, newBody);

    while (!insertStack.isEmpty()) {
      var stackItem = insertStack.pop();
      var node = stackItem.node;
      var body = stackItem.body;

      if (!node.body) {
        // This is internal node. Update the total mass of the node and center-of-mass.
        ${h("var {var} = body.pos.{var};",{indent:8})}
        node.mass += body.mass;
        ${h("node.mass_{var} += body.mass * {var};",{indent:8})}

        // Recursively insert the body in the appropriate quadrant.
        // But first find the appropriate quadrant.
        var quadIdx = 0; // Assume we are in the 0's quad.
        ${h("var min_{var} = node.min_{var};",{indent:8})}
        ${h("var max_{var} = (min_{var} + node.max_{var}) / 2;",{indent:8})}

${p(8)}

        var child = getChild(node, quadIdx);

        if (!child) {
          // The node is internal but this quadrant is not taken. Add
          // subnode to it.
          child = newNode();
          ${h("child.min_{var} = min_{var};",{indent:10})}
          ${h("child.max_{var} = max_{var};",{indent:10})}
          child.body = body;

          setChild(node, quadIdx, child);
        } else {
          // continue searching in this quadrant.
          insertStack.push(child, body);
        }
      } else {
        // We are trying to add to the leaf node.
        // We have to convert current leaf into internal node
        // and continue adding two nodes.
        var oldBody = node.body;
        node.body = null; // internal nodes do not cary bodies

        if (isSamePosition(oldBody.pos, body.pos)) {
          // Prevent infinite subdivision by bumping one node
          // anywhere in this quadrant
          var retriesCount = 3;
          do {
            var offset = random.nextDouble();
            ${h("var d{var} = (node.max_{var} - node.min_{var}) * offset;",{indent:12})}

            ${h("oldBody.pos.{var} = node.min_{var} + d{var};",{indent:12})}
            retriesCount -= 1;
            // Make sure we don't bump it out of the box. If we do, next iteration should fix it
          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));

          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {
            // This is very bad, we ran out of precision.
            // if we do not return from the method we'll get into
            // infinite loop here. So we sacrifice correctness of layout, and keep the app running
            // Next layout iteration should get larger bounding box in the first step and fix this
            return;
          }
        }
        // Next iteration should subdivide node further.
        insertStack.push(node, oldBody);
        insertStack.push(node, body);
      }
    }
  }
}
return createQuadTree;

`;function p(_){let g=[],v=Array(_+1).join(" ");for(let x=0;x<u;++x)g.push(v+`if (${e(x)} > max_${e(x)}) {`),g.push(v+`  quadIdx = quadIdx + ${Math.pow(2,x)};`),g.push(v+`  min_${e(x)} = max_${e(x)};`),g.push(v+`  max_${e(x)} = node.max_${e(x)};`),g.push(v+"}");return g.join(`
`)}function m(){let _=Array(11).join(" "),g=[];for(let v=0;v<d;++v)g.push(_+`if (node.quad${v}) {`),g.push(_+`  queue[pushIdx] = node.quad${v};`),g.push(_+"  queueLength += 1;"),g.push(_+"  pushIdx += 1;"),g.push(_+"}");return g.join(`
`)}function y(_){let g=[];for(let v=0;v<d;++v)g.push(`${_}quad${v} = null;`);return g.join(`
`)}}function s(u){let h=r(u);return`
  function isSamePosition(point1, point2) {
    ${h("var d{var} = Math.abs(point1.{var} - point2.{var});",{indent:2})}
  
    return ${h("d{var} < 1e-8",{join:" && "})};
  }  
`}function o(u){var h=Math.pow(2,u);return`
function setChild(node, idx, child) {
  ${d()}
}`;function d(){let f=[];for(let p=0;p<h;++p){let m=p===0?"  ":"  else ";f.push(`${m}if (idx === ${p}) node.quad${p} = child;`)}return f.join(`
`)}}function a(u){return`function getChild(node, idx) {
${h()}
  return null;
}`;function h(){let d=[],f=Math.pow(2,u);for(let p=0;p<f;++p)d.push(`  if (idx === ${p}) return node.quad${p};`);return d.join(`
`)}}function l(u){let h=r(u),d=Math.pow(2,u);var f=`
function QuadNode() {
  // body stored inside this node. In quad tree only leaf nodes (by construction)
  // contain bodies:
  this.body = null;

  // Child nodes are stored in quads. Each quad is presented by number:
  // 0 | 1
  // -----
  // 2 | 3
${p("  this.")}

  // Total mass of current node
  this.mass = 0;

  // Center of mass coordinates
  ${h("this.mass_{var} = 0;",{indent:2})}

  // bounding box coordinates
  ${h("this.min_{var} = 0;",{indent:2})}
  ${h("this.max_{var} = 0;",{indent:2})}
}
`;return f;function p(m){let y=[];for(let _=0;_<d;++_)y.push(`${m}quad${_} = null;`);return y.join(`
`)}}function c(){return`
/**
 * Our implementation of QuadTree is non-recursive to avoid GC hit
 * This data structure represent stack of elements
 * which we are trying to insert into quad tree.
 */
function InsertStack () {
    this.stack = [];
    this.popIdx = 0;
}

InsertStack.prototype = {
    isEmpty: function() {
        return this.popIdx === 0;
    },
    push: function (node, body) {
        var item = this.stack[this.popIdx];
        if (!item) {
            // we are trying to avoid memory pressure: create new element
            // only when absolutely necessary
            this.stack[this.popIdx] = new InsertStackElement(node, body);
        } else {
            item.node = node;
            item.body = body;
        }
        ++this.popIdx;
    },
    pop: function () {
        if (this.popIdx > 0) {
            return this.stack[--this.popIdx];
        }
    },
    reset: function () {
        this.popIdx = 0;
    }
};

function InsertStackElement(node, body) {
    this.node = node; // QuadTree node
    this.body = body; // physical body which needs to be inserted to node
}
`}return Fr.exports}var zu={exports:{}},uv;function LL(){if(uv)return zu.exports;uv=1,zu.exports=e,zu.exports.generateFunctionBody=n;const r=dl();function e(i){let s=n(i);return new Function("bodies","settings","random",s)}function n(i){let s=r(i);return`
  var boundingBox = {
    ${s("min_{var}: 0, max_{var}: 0,",{indent:4})}
  };

  return {
    box: boundingBox,

    update: updateBoundingBox,

    reset: resetBoundingBox,

    getBestNewPosition: function (neighbors) {
      var ${s("base_{var} = 0",{join:", "})};

      if (neighbors.length) {
        for (var i = 0; i < neighbors.length; ++i) {
          let neighborPos = neighbors[i].pos;
          ${s("base_{var} += neighborPos.{var};",{indent:10})}
        }

        ${s("base_{var} /= neighbors.length;",{indent:8})}
      } else {
        ${s("base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;",{indent:8})}
      }

      var springLength = settings.springLength;
      return {
        ${s("{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,",{indent:8})}
      };
    }
  };

  function updateBoundingBox() {
    var i = bodies.length;
    if (i === 0) return; // No bodies - no borders.

    ${s("var max_{var} = -Infinity;",{indent:4})}
    ${s("var min_{var} = Infinity;",{indent:4})}

    while(i--) {
      // this is O(n), it could be done faster with quadtree, if we check the root node bounds
      var bodyPos = bodies[i].pos;
      ${s("if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};",{indent:6})}
      ${s("if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};",{indent:6})}
    }

    ${s("boundingBox.min_{var} = min_{var};",{indent:4})}
    ${s("boundingBox.max_{var} = max_{var};",{indent:4})}
  }

  function resetBoundingBox() {
    ${s("boundingBox.min_{var} = boundingBox.max_{var} = 0;",{indent:4})}
  }
`}return zu.exports}var Gu={exports:{}},hv;function IL(){if(hv)return Gu.exports;hv=1;const r=dl();Gu.exports=e,Gu.exports.generateCreateDragForceFunctionBody=n;function e(i){let s=n(i);return new Function("options",s)}function n(i){return`
  if (!Number.isFinite(options.dragCoefficient)) throw new Error('dragCoefficient is not a finite number');

  return {
    update: function(body) {
      ${r(i)("body.force.{var} -= options.dragCoefficient * body.velocity.{var};",{indent:6})}
    }
  };
`}return Gu.exports}var Vu={exports:{}},dv;function UL(){if(dv)return Vu.exports;dv=1;const r=dl();Vu.exports=e,Vu.exports.generateCreateSpringForceFunctionBody=n;function e(i){let s=n(i);return new Function("options","random",s)}function n(i){let s=r(i);return`
  if (!Number.isFinite(options.springCoefficient)) throw new Error('Spring coefficient is not a number');
  if (!Number.isFinite(options.springLength)) throw new Error('Spring length is not a number');

  return {
    /**
     * Updates forces acting on a spring
     */
    update: function (spring) {
      var body1 = spring.from;
      var body2 = spring.to;
      var length = spring.length < 0 ? options.springLength : spring.length;
      ${s("var d{var} = body2.pos.{var} - body1.pos.{var};",{indent:6})}
      var r = Math.sqrt(${s("d{var} * d{var}",{join:" + "})});

      if (r === 0) {
        ${s("d{var} = (random.nextDouble() - 0.5) / 50;",{indent:8})}
        r = Math.sqrt(${s("d{var} * d{var}",{join:" + "})});
      }

      var d = r - length;
      var coefficient = ((spring.coefficient > 0) ? spring.coefficient : options.springCoefficient) * d / r;

      ${s("body1.force.{var} += coefficient * d{var}",{indent:6})};
      body1.springCount += 1;
      body1.springLength += r;

      ${s("body2.force.{var} -= coefficient * d{var}",{indent:6})};
      body2.springCount += 1;
      body2.springLength += r;
    }
  };
`}return Vu.exports}var Hu={exports:{}},fv;function FL(){if(fv)return Hu.exports;fv=1;const r=dl();Hu.exports=e,Hu.exports.generateIntegratorFunctionBody=n;function e(i){let s=n(i);return new Function("bodies","timeStep","adaptiveTimeStepWeight",s)}function n(i){let s=r(i);return`
  var length = bodies.length;
  if (length === 0) return 0;

  ${s("var d{var} = 0, t{var} = 0;",{indent:2})}

  for (var i = 0; i < length; ++i) {
    var body = bodies[i];
    if (body.isPinned) continue;

    if (adaptiveTimeStepWeight && body.springCount) {
      timeStep = (adaptiveTimeStepWeight * body.springLength/body.springCount);
    }

    var coeff = timeStep / body.mass;

    ${s("body.velocity.{var} += coeff * body.force.{var};",{indent:4})}
    ${s("var v{var} = body.velocity.{var};",{indent:4})}
    var v = Math.sqrt(${s("v{var} * v{var}",{join:" + "})});

    if (v > 1) {
      // We normalize it so that we move within timeStep range. 
      // for the case when v <= 1 - we let velocity to fade out.
      ${s("body.velocity.{var} = v{var} / v;",{indent:6})}
    }

    ${s("d{var} = timeStep * body.velocity.{var};",{indent:4})}

    ${s("body.pos.{var} += d{var};",{indent:4})}

    ${s("t{var} += Math.abs(d{var});",{indent:4})}
  }

  return (${s("t{var} * t{var}",{join:" + "})})/length;
`}return Hu.exports}var Rf,pv;function OL(){if(pv)return Rf;pv=1,Rf=r;function r(e,n,i,s){this.from=e,this.to=n,this.length=i,this.coefficient=s}return Rf}var Cf,mv;function BL(){if(mv)return Cf;mv=1,Cf=r;function r(e,n){var i;if(e||(e={}),n){for(i in n)if(n.hasOwnProperty(i)){var s=e.hasOwnProperty(i),o=typeof n[i],a=!s||typeof e[i]!==o;a?e[i]=n[i]:o==="object"&&(e[i]=r(e[i],n[i]))}}return e}return Cf}var Nf,gv;function Yb(){if(gv)return Nf;gv=1;function r(i){n(i);const s=e(i);return i.on=s.on,i.off=s.off,i.fire=s.fire,i}function e(i){let s=Object.create(null);return{on:function(o,a,l){if(typeof a!="function")throw new Error("callback is expected to be a function");let c=s[o];return c||(c=s[o]=[]),c.push({callback:a,ctx:l}),i},off:function(o,a){if(typeof o>"u")return s=Object.create(null),i;if(s[o])if(typeof a!="function")delete s[o];else{const l=s[o];for(let c=0;c<l.length;++c)l[c].callback===a&&l.splice(c,1)}return i},fire:function(o){const a=s[o];if(!a)return i;let l;arguments.length>1&&(l=Array.prototype.slice.call(arguments,1));for(let c=0;c<a.length;++c){const u=a[c];u.callback.apply(u.ctx,l)}return i}}}function n(i){if(!i)throw new Error("Eventify cannot use falsy object as events subject");const s=["on","fire","off"];for(let o=0;o<s.length;++o)if(i.hasOwnProperty(s[o]))throw new Error("Subject cannot be eventified, since it already has property '"+s[o]+"'")}return Nf=r,Nf}var Il={exports:{}},_v;function kL(){if(_v)return Il.exports;_v=1,Il.exports=r,Il.exports.random=r,Il.exports.randomIterator=l;function r(c){var u=typeof c=="number"?c:+new Date;return new e(u)}function e(c){this.seed=c}e.prototype.next=a,e.prototype.nextDouble=o,e.prototype.uniform=o,e.prototype.gaussian=n,e.prototype.random=o;function n(){var c,u,h;do u=this.nextDouble()*2-1,h=this.nextDouble()*2-1,c=u*u+h*h;while(c>=1||c===0);return u*Math.sqrt(-2*Math.log(c)/c)}e.prototype.levy=i;function i(){var c=1.5,u=Math.pow(s(1+c)*Math.sin(Math.PI*c/2)/(s((1+c)/2)*c*Math.pow(2,(c-1)/2)),1/c);return this.gaussian()*u/Math.pow(Math.abs(this.gaussian()),1/c)}function s(c){return Math.sqrt(2*Math.PI/c)*Math.pow(1/Math.E*(c+1/(12*c-1/(10*c))),c)}function o(){var c=this.seed;return c=c+2127912214+(c<<12)&4294967295,c=(c^3345072700^c>>>19)&4294967295,c=c+374761393+(c<<5)&4294967295,c=(c+3550635116^c<<9)&4294967295,c=c+4251993797+(c<<3)&4294967295,c=(c^3042594569^c>>>16)&4294967295,this.seed=c,(c&268435455)/268435456}function a(c){return Math.floor(this.nextDouble()*c)}function l(c,u){var h=u||r();if(typeof h.next!="function")throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:f,shuffle:d};function d(){var p,m,y;for(p=c.length-1;p>0;--p)m=h.next(p+1),y=c[m],c[m]=c[p],c[p]=y;return c}function f(p){var m,y,_;for(m=c.length-1;m>0;--m)y=h.next(m+1),_=c[y],c[y]=c[m],c[m]=_,p(_);c.length&&p(c[0])}}return Il.exports}var Pf,yv;function vv(){if(yv)return Pf;yv=1,Pf=l;var r=PL(),e=DL(),n=LL(),i=IL(),s=UL(),o=FL(),a={};function l(h){var d=OL(),f=BL(),p=Yb();if(h){if(h.springCoeff!==void 0)throw new Error("springCoeff was renamed to springCoefficient");if(h.dragCoeff!==void 0)throw new Error("dragCoeff was renamed to dragCoefficient")}h=f(h,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});var m=a[h.dimensions];if(!m){var y=h.dimensions;m={Body:r(y,h.debug),createQuadTree:e(y),createBounds:n(y),createDragForce:i(y),createSpringForce:s(y),integrate:o(y)},a[y]=m}var _=m.Body,g=m.createQuadTree,v=m.createBounds,x=m.createDragForce,b=m.createSpringForce,T=m.integrate,S=q=>new _(q),M=kL().random(42),A=[],E=[],w=g(h,M),N=v(A,h,M),D=b(h,M),F=x(h),k=0,j=[],$=new Map,G=0;Y("nbody",Re),Y("spring",tt);var B={bodies:A,quadTree:w,springs:E,settings:h,addForce:Y,removeForce:re,getForces:me,step:function(){for(var q=0;q<j.length;++q)j[q](G);var z=T(A,h.timeStep,h.adaptiveTimeStepWeight);return G+=1,z},addBody:function(q){if(!q)throw new Error("Body is required");return A.push(q),q},addBodyAt:function(q){if(!q)throw new Error("Body position is required");var z=S(q);return A.push(z),z},removeBody:function(q){if(q){var z=A.indexOf(q);if(!(z<0))return A.splice(z,1),A.length===0&&N.reset(),!0}},addSpring:function(q,z,Q,ge){if(!q||!z)throw new Error("Cannot add null spring to force simulator");typeof Q!="number"&&(Q=-1);var De=new d(q,z,Q,ge>=0?ge:-1);return E.push(De),De},getTotalMovement:function(){return k},removeSpring:function(q){if(q){var z=E.indexOf(q);if(z>-1)return E.splice(z,1),!0}},getBestNewBodyPosition:function(q){return N.getBestNewPosition(q)},getBBox:J,getBoundingBox:J,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(q){return q!==void 0?(h.gravity=q,w.options({gravity:q}),this):h.gravity},theta:function(q){return q!==void 0?(h.theta=q,w.options({theta:q}),this):h.theta},random:M};return c(h,B),p(B),B;function J(){return N.update(),N.box}function Y(q,z){if($.has(q))throw new Error("Force "+q+" is already added");$.set(q,z),j.push(z)}function re(q){var z=j.indexOf($.get(q));z<0||(j.splice(z,1),$.delete(q))}function me(){return $}function Re(){if(A.length!==0){w.insertBodies(A);for(var q=A.length;q--;){var z=A[q];z.isPinned||(z.reset(),w.updateBodyForce(z),F.update(z))}}}function tt(){for(var q=E.length;q--;)D.update(E[q])}}function c(h,d){for(var f in h)u(h,d,f)}function u(h,d,f){if(h.hasOwnProperty(f)&&typeof d[f]!="function"){var p=Number.isFinite(h[f]);p?d[f]=function(m){if(m!==void 0){if(!Number.isFinite(m))throw new Error("Value of "+f+" should be a valid number.");return h[f]=m,d}return h[f]}:d[f]=function(m){return m!==void 0?(h[f]=m,d):h[f]}}}return Pf}var xv;function zL(){if(xv)return ku.exports;xv=1,ku.exports=e,ku.exports.simulator=vv();var r=Yb();function e(i,s){if(!i)throw new Error("Graph structure cannot be undefined");var o=s&&s.createSimulator||vv(),a=o(s);if(Array.isArray(s))throw new Error("Physics settings is expected to be an object");var l=i.version>19?$:j;s&&typeof s.nodeMass=="function"&&(l=s.nodeMass);var c=new Map,u={},h=0,d=a.settings.springTransform||n;S(),x();var f=!1,p={step:function(){if(h===0)return m(!0),!0;var G=a.step();p.lastMove=G,p.fire("step");var B=G/h,J=B<=.01;return m(J),J},getNodePosition:function(G){return k(G).pos},setNodePosition:function(G){var B=k(G);B.setPosition.apply(B,Array.prototype.slice.call(arguments,1))},getLinkPosition:function(G){var B=u[G];if(B)return{from:B.from.pos,to:B.to.pos}},getGraphRect:function(){return a.getBBox()},forEachBody:y,pinNode:function(G,B){var J=k(G.id);J.isPinned=!!B},isNodePinned:function(G){return k(G.id).isPinned},dispose:function(){i.off("changed",T),p.fire("disposed")},getBody:v,getSpring:g,getForceVectorLength:_,simulator:a,graph:i,lastMove:0};return r(p),p;function m(G){f!==G&&(f=G,b(G))}function y(G){c.forEach(G)}function _(){var G=0,B=0;return y(function(J){G+=Math.abs(J.force.x),B+=Math.abs(J.force.y)}),Math.sqrt(G*G+B*B)}function g(G,B){var J;if(B===void 0)typeof G!="object"?J=G:J=G.id;else{var Y=i.hasLink(G,B);if(!Y)return;J=Y.id}return u[J]}function v(G){return c.get(G)}function x(){i.on("changed",T)}function b(G){p.fire("stable",G)}function T(G){for(var B=0;B<G.length;++B){var J=G[B];J.changeType==="add"?(J.node&&M(J.node.id),J.link&&E(J.link)):J.changeType==="remove"&&(J.node&&A(J.node),J.link&&w(J.link))}h=i.getNodesCount()}function S(){h=0,i.forEachNode(function(G){M(G.id),h+=1}),i.forEachLink(E)}function M(G){var B=c.get(G);if(!B){var J=i.getNode(G);if(!J)throw new Error("initBody() was called with unknown node id");var Y=J.position;if(!Y){var re=N(J);Y=a.getBestNewBodyPosition(re)}B=a.addBodyAt(Y),B.id=G,c.set(G,B),D(G),F(J)&&(B.isPinned=!0)}}function A(G){var B=G.id,J=c.get(B);J&&(c.delete(B),a.removeBody(J))}function E(G){D(G.fromId),D(G.toId);var B=c.get(G.fromId),J=c.get(G.toId),Y=a.addSpring(B,J,G.length);d(G,Y),u[G.id]=Y}function w(G){var B=u[G.id];if(B){var J=i.getNode(G.fromId),Y=i.getNode(G.toId);J&&D(J.id),Y&&D(Y.id),delete u[G.id],a.removeSpring(B)}}function N(G){var B=[];if(!G.links)return B;for(var J=Math.min(G.links.length,2),Y=0;Y<J;++Y){var re=G.links[Y],me=re.fromId!==G.id?c.get(re.fromId):c.get(re.toId);me&&me.pos&&B.push(me)}return B}function D(G){var B=c.get(G);if(B.mass=l(G),Number.isNaN(B.mass))throw new Error("Node mass should be a number")}function F(G){return G&&(G.isPinned||G.data&&G.data.isPinned)}function k(G){var B=c.get(G);return B||(M(G),B=c.get(G)),B}function j(G){var B=i.getLinks(G);return B?1+B.length/3:1}function $(G){var B=i.getLinks(G);return B?1+B.size/3:1}}function n(){}return ku.exports}var GL=zL();const VL=mx(GL);function em(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function HL(r){if(Array.isArray(r))return r}function WL(r){if(Array.isArray(r))return em(r)}function Kb(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function $L(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function jL(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function On(r,e){return r.get(Kb(r,e))}function Yo(r,e,n){$L(r,e),e.set(r,n)}function Wu(r,e,n){return r.set(Kb(r,e),n),n}function qL(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,nI(i.key),i)}}function XL(r,e,n){return e&&qL(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function YL(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function KL(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function ZL(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function QL(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function JL(r,e){return HL(r)||KL(r,e)||Zb(r,e)||ZL()}function eI(r){return WL(r)||YL(r)||Zb(r)||QL()}function tI(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function nI(r){var e=tI(r,"string");return typeof e=="symbol"?e:e+""}function Zb(r,e){if(r){if(typeof r=="string")return em(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?em(r,e):void 0}}var Ko=new WeakMap,Ul=new WeakMap,Zo=new WeakMap,Df=new WeakMap,Lf=new WeakMap,If=new WeakMap,iI=function(){function r(){jL(this,r),Yo(this,Ko,new Map),Yo(this,Ul,new Map),Yo(this,Zo,function(e){return e}),Yo(this,Df,function(){return{}}),Yo(this,Lf,function(){}),Yo(this,If,function(){})}return XL(r,[{key:"getObj",value:function(n){return On(Ko,this).get(On(Zo,this).call(this,n))}},{key:"getData",value:function(n){return On(Ul,this).get(n)}},{key:"entries",value:function(){return eI(On(Ul,this).entries()).map(function(n){var i=JL(n,2),s=i[0],o=i[1];return[o,s]})}},{key:"id",value:function(n){return Wu(Zo,this,Oe(n)),this}},{key:"onCreateObj",value:function(n){return Wu(Df,this,n),this}},{key:"onUpdateObj",value:function(n){return Wu(Lf,this,n),this}},{key:"onRemoveObj",value:function(n){return Wu(If,this,n),this}},{key:"digest",value:function(n){var i=this;n.filter(function(o){return!On(Ko,i).has(On(Zo,i).call(i,o))}).forEach(function(o){var a=On(Df,i).call(i,o);On(Ko,i).set(On(Zo,i).call(i,o),a),On(Ul,i).set(a,o)});var s=new Map(n.map(function(o){return[On(Zo,i).call(i,o),o]}));return On(Ko,this).forEach(function(o,a){s.has(a)?On(Lf,i).call(i,o,s.get(a)):(On(If,i).call(i,o,a),On(Ko,i).delete(a),On(Ul,i).delete(o))}),this}},{key:"clear",value:function(){return this.digest([]),this}}])}();function tm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function rI(r){if(Array.isArray(r))return r}function sI(r){if(Array.isArray(r))return tm(r)}function Qb(r,e,n){if(typeof r=="function"?r===e:r.has(e))return arguments.length<3?e:n;throw new TypeError("Private element is not present on this object")}function oI(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function Jb(r,e,n){return e=Ja(e),pI(r,wg()?Reflect.construct(e,n||[],Ja(r).constructor):e.apply(r,n))}function aI(r,e){if(e.has(r))throw new TypeError("Cannot initialize the same private elements twice on an object")}function eT(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function Uf(r,e){return r.get(Qb(r,e))}function bv(r,e,n){aI(r,e),e.set(r,n)}function Tv(r,e,n){return r.set(Qb(r,e),n),n}function tT(r,e,n){if(wg())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return s}function lI(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,rT(i.key),i)}}function nT(r,e,n){return e&&lI(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function gd(r,e,n){return(e=rT(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function nm(){return nm=typeof Reflect<"u"&&Reflect.get?Reflect.get.bind():function(r,e,n){var i=mI(r,e);if(i){var s=Object.getOwnPropertyDescriptor(i,e);return s.get?s.get.call(arguments.length<3?r:n):s.value}},nm.apply(null,arguments)}function Ja(r){return Ja=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ja(r)}function iT(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(e&&e.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,"prototype",{writable:!1}),e&&im(r,e)}function wg(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(wg=function(){return!!r})()}function cI(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function uI(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function hI(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function dI(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Sv(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function fI(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Sv(Object(n),!0).forEach(function(i){gd(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):Sv(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function pI(r,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return oI(r)}function im(r,e){return im=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},im(r,e)}function fc(r,e){return rI(r)||uI(r,e)||sT(r,e)||hI()}function mI(r,e){for(;!{}.hasOwnProperty.call(r,e)&&(r=Ja(r))!==null;);return r}function Ff(r,e,n,i){var s=nm(Ja(r.prototype),e,n);return typeof s=="function"?function(o){return s.apply(n,o)}:s}function Yi(r){return sI(r)||cI(r)||sT(r)||dI()}function gI(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function rT(r){var e=gI(r,"string");return typeof e=="symbol"?e:e+""}function rm(r){"@babel/helpers - typeof";return rm=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},rm(r)}function sT(r,e){if(r){if(typeof r=="string")return tm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?tm(r,e):void 0}}var oT=function(e){e instanceof Array?e.forEach(oT):(e.map&&e.map.dispose(),e.dispose())},aT=function(e){e.geometry&&e.geometry.dispose(),e.material&&oT(e.material),e.texture&&e.texture.dispose(),e.children&&e.children.forEach(aT)},sm=function(e){for(;e.children.length;){var n=e.children[0];e.remove(n),aT(n)}},Of=new WeakMap,$u=new WeakMap,Fl=function(r){function e(n){var i,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},o=s.dataBindAttr,a=o===void 0?"__data":o,l=s.objBindAttr,c=l===void 0?"__threeObj":l;return eT(this,e),i=Jb(this,e),gd(i,"scene",void 0),bv(i,Of,void 0),bv(i,$u,void 0),i.scene=n,Tv(Of,i,a),Tv($u,i,c),i.onRemoveObj(function(){}),i}return iT(e,r),nT(e,[{key:"onCreateObj",value:function(i){var s=this;return Ff(e,"onCreateObj",this)([function(o){var a=i(o);return o[Uf($u,s)]=a,a[Uf(Of,s)]=o,s.scene.add(a),a}]),this}},{key:"onRemoveObj",value:function(i){var s=this;return Ff(e,"onRemoveObj",this)([function(o,a){var l=Ff(e,"getData",s)([o]);i(o,a),s.scene.remove(o),sm(o),delete l[Uf($u,s)]}]),this}}])}(iI),Ol=function(e){return isNaN(e)?parseInt($e(e).toHex(),16):e},Bf=function(e){return isNaN(e)?$e(e).getAlpha():1},_I=Bm(_x);function Mv(r,e,n){!e||typeof n!="string"||r.filter(function(i){return!i[n]}).forEach(function(i){i[n]=_I(e(i))})}function yI(r,e){var n=r.nodes,i=r.links,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},o=s.nodeFilter,a=o===void 0?function(){return!0}:o,l=s.onLoopError,c=l===void 0?function(p){throw"Invalid DAG structure! Found cycle in node path: ".concat(p.join(" -> "),".")}:l,u={};n.forEach(function(p){return u[e(p)]={data:p,out:[],depth:-1,skip:!a(p)}}),i.forEach(function(p){var m=p.source,y=p.target,_=b(m),g=b(y);if(!u.hasOwnProperty(_))throw"Missing source node with id: ".concat(_);if(!u.hasOwnProperty(g))throw"Missing target node with id: ".concat(g);var v=u[_],x=u[g];v.out.push(x);function b(T){return rm(T)==="object"?e(T):T}});var h=[];f(Object.values(u));var d=Object.assign.apply(Object,[{}].concat(Yi(Object.entries(u).filter(function(p){var m=fc(p,2),y=m[1];return!y.skip}).map(function(p){var m=fc(p,2),y=m[0],_=m[1];return gd({},y,_.depth)}))));return d;function f(p){for(var m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],y=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,_=function(){var b=p[g];if(m.indexOf(b)!==-1){var T=[].concat(Yi(m.slice(m.indexOf(b))),[b]).map(function(S){return e(S.data)});return h.some(function(S){return S.length===T.length&&S.every(function(M,A){return M===T[A]})})||(h.push(T),c(T)),1}y>b.depth&&(b.depth=y,f(b.out,[].concat(Yi(m),[b]),y+(b.skip?0:1)))},g=0,v=p.length;g<v;g++)_()}}var rt=window.THREE?window.THREE:{Group:la,Mesh:yn,MeshLambertMaterial:Db,Color:We,BufferGeometry:$n,BufferAttribute:Dn,Matrix4:bt,Vector3:L,SphereGeometry:Jc,CylinderGeometry:Zc,TubeGeometry:bg,ConeGeometry:yg,Line:ZC,LineBasicMaterial:dd,QuadraticBezierCurve3:xg,CubicBezierCurve3:Nb,Box3:So},Ev={graph:CL,forcelayout:VL},vI=2,kf=new rt.BufferGeometry().setAttribute?"setAttribute":"addAttribute",ju=new rt.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",xI=ol({props:{jsonUrl:{onChange:function(e,n){var i=this;e&&!n.fetchingJson&&(n.fetchingJson=!0,n.onLoading(),fetch(e).then(function(s){return s.json()}).then(function(s){n.fetchingJson=!1,n.onFinishLoading(s),i.graphData(s)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,n){n.engineRunning=!1}},numDimensions:{default:3,onChange:function(e,n){var i=n.d3ForceLayout.force("charge");i&&i.strength(e>2?-60:-30),e<3&&s(n.graphData.nodes,"z"),e<2&&s(n.graphData.nodes,"y");function s(o,a){o.forEach(function(l){delete l[a],delete l["v".concat(a)]})}}},dagMode:{onChange:function(e,n){!e&&n.forceEngine==="d3"&&(n.graphData.nodes||[]).forEach(function(i){return i.fx=i.fy=i.fz=void 0})}},dagLevelDistance:{},dagNodeFilter:{default:function(e){return!0}},onDagError:{triggerUpdate:!1},nodeRelSize:{default:4},nodeId:{default:"id"},nodeVal:{default:"val"},nodeResolution:{default:8},nodeColor:{default:"color"},nodeAutoColorBy:{},nodeOpacity:{default:.75},nodeVisibility:{default:!0},nodeThreeObject:{},nodeThreeObjectExtend:{default:!1},nodePositionUpdate:{triggerUpdate:!1},linkSource:{default:"source"},linkTarget:{default:"target"},linkVisibility:{default:!0},linkColor:{default:"color"},linkAutoColorBy:{},linkOpacity:{default:.2},linkWidth:{},linkResolution:{default:6},linkCurvature:{default:0,triggerUpdate:!1},linkCurveRotation:{default:0,triggerUpdate:!1},linkMaterial:{},linkThreeObject:{},linkThreeObjectExtend:{default:!1},linkPositionUpdate:{triggerUpdate:!1},linkDirectionalArrowLength:{default:0},linkDirectionalArrowColor:{},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},linkDirectionalArrowResolution:{default:8},linkDirectionalParticles:{default:0},linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},linkDirectionalParticleOffset:{default:0,triggerUpdate:!1},linkDirectionalParticleWidth:{default:.5},linkDirectionalParticleColor:{},linkDirectionalParticleResolution:{default:4},linkDirectionalParticleThreeObject:{},forceEngine:{default:"d3"},d3AlphaMin:{default:0},d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,n){n.d3ForceLayout.velocityDecay(e)}},ngraphPhysics:{default:{timeStep:20,gravity:-1.2,theta:.8,springLength:30,springCoefficient:8e-4,dragCoefficient:.02}},warmupTicks:{default:0,triggerUpdate:!1},cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onUpdate:{default:function(){},triggerUpdate:!1},onFinishUpdate:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(e){return e._flushObjects=!0,e._rerender(),this},d3Force:function(e,n,i){return i===void 0?e.d3ForceLayout.force(n):(e.d3ForceLayout.force(n,i),this)},d3ReheatSimulation:function(e){return e.d3ForceLayout.alpha(1),this.resetCountdown(),this},resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},tickFrame:function(e){var n=e.forceEngine!=="ngraph";return e.engineRunning&&i(),s(),o(),this;function i(){++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime||n&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin?(e.engineRunning=!1,e.onEngineStop()):(e.layout[n?"tick":"step"](),e.onEngineTick());var a=Oe(e.nodeThreeObjectExtend);e.nodeDataMapper.entries().forEach(function(f){var p=fc(f,2),m=p[0],y=p[1];if(y){var _=n?m:e.layout.getNodePosition(m[e.nodeId]),g=a(m);(!e.nodePositionUpdate||!e.nodePositionUpdate(g?y.children[0]:y,{x:_.x,y:_.y,z:_.z},m)||g)&&(y.position.x=_.x,y.position.y=_.y||0,y.position.z=_.z||0)}});var l=Oe(e.linkWidth),c=Oe(e.linkCurvature),u=Oe(e.linkCurveRotation),h=Oe(e.linkThreeObjectExtend);e.linkDataMapper.entries().forEach(function(f){var p=fc(f,2),m=p[0],y=p[1];if(y){var _=n?m:e.layout.getLinkPosition(e.layout.graph.getLink(m.source,m.target).id),g=_[n?"source":"from"],v=_[n?"target":"to"];if(!(!g||!v||!g.hasOwnProperty("x")||!v.hasOwnProperty("x"))){d(m);var x=h(m);if(!(e.linkPositionUpdate&&e.linkPositionUpdate(x?y.children[1]:y,{start:{x:g.x,y:g.y,z:g.z},end:{x:v.x,y:v.y,z:v.z}},m)&&!x)){var b=30,T=m.__curve,S=y.children.length?y.children[0]:y;if(S.type==="Line"){if(T){var A=T.getPoints(b);S.geometry.getAttribute("position").array.length!==A.length*3&&S.geometry[kf]("position",new rt.BufferAttribute(new Float32Array(A.length*3),3)),S.geometry.setFromPoints(A)}else{var M=S.geometry.getAttribute("position");(!M||!M.array||M.array.length!==6)&&S.geometry[kf]("position",M=new rt.BufferAttribute(new Float32Array(2*3),3)),M.array[0]=g.x,M.array[1]=g.y||0,M.array[2]=g.z||0,M.array[3]=v.x,M.array[4]=v.y||0,M.array[5]=v.z||0,M.needsUpdate=!0}S.geometry.computeBoundingSphere()}else if(S.type==="Mesh")if(T){S.geometry.type.match(/^Tube(Buffer)?Geometry$/)||(S.position.set(0,0,0),S.rotation.set(0,0,0),S.scale.set(1,1,1));var j=Math.ceil(l(m)*10)/10,$=j/2,G=new rt.TubeGeometry(T,b,$,e.linkResolution,!1);S.geometry.dispose(),S.geometry=G}else{if(!S.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)){var E=Math.ceil(l(m)*10)/10,w=E/2,N=new rt.CylinderGeometry(w,w,1,e.linkResolution,1,!1);N[ju](new rt.Matrix4().makeTranslation(0,1/2,0)),N[ju](new rt.Matrix4().makeRotationX(Math.PI/2)),S.geometry.dispose(),S.geometry=N}var D=new rt.Vector3(g.x,g.y||0,g.z||0),F=new rt.Vector3(v.x,v.y||0,v.z||0),k=D.distanceTo(F);S.position.x=D.x,S.position.y=D.y,S.position.z=D.z,S.scale.z=k,S.parent.localToWorld(F),S.lookAt(F)}}}}});function d(f){var p=n?f:e.layout.getLinkPosition(e.layout.graph.getLink(f.source,f.target).id),m=p[n?"source":"from"],y=p[n?"target":"to"];if(!(!m||!y||!m.hasOwnProperty("x")||!y.hasOwnProperty("x"))){var _=c(f);if(!_)f.__curve=null;else{var g=new rt.Vector3(m.x,m.y||0,m.z||0),v=new rt.Vector3(y.x,y.y||0,y.z||0),x=g.distanceTo(v),b,T=u(f);if(x>0){var S=y.x-m.x,M=y.y-m.y||0,A=new rt.Vector3().subVectors(v,g),E=A.clone().multiplyScalar(_).cross(S!==0||M!==0?new rt.Vector3(0,0,1):new rt.Vector3(0,1,0)).applyAxisAngle(A.normalize(),T).add(new rt.Vector3().addVectors(g,v).divideScalar(2));b=new rt.QuadraticBezierCurve3(g,E,v)}else{var w=_*70,N=-T,D=N+Math.PI/2;b=new rt.CubicBezierCurve3(g,new rt.Vector3(w*Math.cos(D),w*Math.sin(D),0).add(g),new rt.Vector3(w*Math.cos(N),w*Math.sin(N),0).add(g),v)}f.__curve=b}}}}function s(){var a=Oe(e.linkDirectionalArrowRelPos),l=Oe(e.linkDirectionalArrowLength),c=Oe(e.nodeVal);e.arrowDataMapper.entries().forEach(function(u){var h=fc(u,2),d=h[0],f=h[1];if(f){var p=n?d:e.layout.getLinkPosition(e.layout.graph.getLink(d.source,d.target).id),m=p[n?"source":"from"],y=p[n?"target":"to"];if(!(!m||!y||!m.hasOwnProperty("x")||!y.hasOwnProperty("x"))){var _=Math.cbrt(Math.max(0,c(m)||1))*e.nodeRelSize,g=Math.cbrt(Math.max(0,c(y)||1))*e.nodeRelSize,v=l(d),x=a(d),b=d.__curve?function(w){return d.__curve.getPoint(w)}:function(w){var N=function(F,k,j,$){return k[F]+(j[F]-k[F])*$||0};return{x:N("x",m,y,w),y:N("y",m,y,w),z:N("z",m,y,w)}},T=d.__curve?d.__curve.getLength():Math.sqrt(["x","y","z"].map(function(w){return Math.pow((y[w]||0)-(m[w]||0),2)}).reduce(function(w,N){return w+N},0)),S=_+v+(T-_-g-v)*x,M=b(S/T),A=b((S-v)/T);["x","y","z"].forEach(function(w){return f.position[w]=A[w]});var E=tT(rt.Vector3,Yi(["x","y","z"].map(function(w){return M[w]})));f.parent.localToWorld(E),f.lookAt(E)}}})}function o(){var a=Oe(e.linkDirectionalParticleSpeed),l=Oe(e.linkDirectionalParticleOffset);e.graphData.links.forEach(function(c){var u=e.particlesDataMapper.getObj(c),h=u&&u.children,d=c.__singleHopPhotonsObj&&c.__singleHopPhotonsObj.children;if(!((!d||!d.length)&&(!h||!h.length))){var f=n?c:e.layout.getLinkPosition(e.layout.graph.getLink(c.source,c.target).id),p=f[n?"source":"from"],m=f[n?"target":"to"];if(!(!p||!m||!p.hasOwnProperty("x")||!m.hasOwnProperty("x"))){var y=a(c),_=Math.abs(l(c)),g=c.__curve?function(x){return c.__curve.getPoint(x)}:function(x){var b=function(S,M,A,E){return M[S]+(A[S]-M[S])*E||0};return{x:b("x",p,m,x),y:b("y",p,m,x),z:b("z",p,m,x)}},v=[].concat(Yi(h||[]),Yi(d||[]));v.forEach(function(x,b){var T=x.parent.__linkThreeObjType==="singleHopPhotons";if(x.hasOwnProperty("__progressRatio")||(x.__progressRatio=T?0:(b+_)/h.length),x.__progressRatio+=y,x.__progressRatio>=1)if(!T)x.__progressRatio=x.__progressRatio%1;else{x.parent.remove(x),sm(x);return}var S=x.__progressRatio,M=g(S);x.geometry.type!=="SphereGeometry"&&x.lookAt(M.x,M.y,M.z),["x","y","z"].forEach(function(A){return x.position[A]=M[A]})})}}})}},emitParticle:function(e,n){if(n&&e.graphData.links.includes(n)){if(!n.__singleHopPhotonsObj){var i=new rt.Group;i.__linkThreeObjType="singleHopPhotons",n.__singleHopPhotonsObj=i,e.graphScene.add(i)}var s=Oe(e.linkDirectionalParticleThreeObject)(n);if(s&&e.linkDirectionalParticleThreeObject===s&&(s=s.clone()),!s){var o=Oe(e.linkDirectionalParticleWidth),a=Math.ceil(o(n)*10)/10/2,l=e.linkDirectionalParticleResolution,c=new rt.SphereGeometry(a,l,l),u=Oe(e.linkColor),h=Oe(e.linkDirectionalParticleColor),d=h(n)||u(n)||"#f0f0f0",f=new rt.Color(Ol(d)),p=e.linkOpacity*3,m=new rt.MeshLambertMaterial({color:f,transparent:!0,opacity:p});s=new rt.Mesh(c,m)}n.__singleHopPhotonsObj.add(s)}return this},getGraphBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0};if(!e.initialised)return null;var i=function s(o){var a=[];if(o.geometry){o.geometry.computeBoundingBox();var l=new rt.Box3;l.copy(o.geometry.boundingBox).applyMatrix4(o.matrixWorld),a.push(l)}return a.concat.apply(a,Yi((o.children||[]).filter(function(c){return!c.hasOwnProperty("__graphObjType")||c.__graphObjType==="node"&&n(c.__data)}).map(s)))}(e.graphScene);return i.length?Object.assign.apply(Object,Yi(["x","y","z"].map(function(s){return gd({},s,[Pp(i,function(o){return o.min[s]}),Dp(i,function(o){return o.max[s]})])}))):null}},stateInit:function(){return{d3ForceLayout:Kx().force("link",Yx()).force("charge",Zx()).force("center",Wx()).force("dagRadial",null).stop(),engineRunning:!1}},init:function(e,n){n.graphScene=e,n.nodeDataMapper=new Fl(e,{objBindAttr:"__threeObj"}),n.linkDataMapper=new Fl(e,{objBindAttr:"__lineObj"}),n.arrowDataMapper=new Fl(e,{objBindAttr:"__arrowObj"}),n.particlesDataMapper=new Fl(e,{objBindAttr:"__photonsObj"})},update:function(e,n){var i=function(z){return z.some(function(Q){return n.hasOwnProperty(Q)})};if(e.engineRunning=!1,typeof e.onUpdate=="function"&&e.onUpdate(),e.nodeAutoColorBy!==null&&i(["nodeAutoColorBy","graphData","nodeColor"])&&Mv(e.graphData.nodes,Oe(e.nodeAutoColorBy),e.nodeColor),e.linkAutoColorBy!==null&&i(["linkAutoColorBy","graphData","linkColor"])&&Mv(e.graphData.links,Oe(e.linkAutoColorBy),e.linkColor),e._flushObjects||i(["graphData","nodeThreeObject","nodeThreeObjectExtend","nodeVal","nodeColor","nodeVisibility","nodeRelSize","nodeResolution","nodeOpacity"])){var s=Oe(e.nodeThreeObject),o=Oe(e.nodeThreeObjectExtend),a=Oe(e.nodeVal),l=Oe(e.nodeColor),c=Oe(e.nodeVisibility),u={},h={};(e._flushObjects||i(["nodeThreeObject","nodeThreeObjectExtend"]))&&e.nodeDataMapper.clear(),e.nodeDataMapper.onCreateObj(function(q){var z=s(q),Q=o(q);z&&e.nodeThreeObject===z&&(z=z.clone());var ge;return z&&!Q?ge=z:(ge=new rt.Mesh,ge.__graphDefaultObj=!0,z&&Q&&ge.add(z)),ge.__graphObjType="node",ge}).onUpdateObj(function(q,z){if(q.__graphDefaultObj){var Q=a(z)||1,ge=Math.cbrt(Q)*e.nodeRelSize,De=e.nodeResolution;(!q.geometry.type.match(/^Sphere(Buffer)?Geometry$/)||q.geometry.parameters.radius!==ge||q.geometry.parameters.widthSegments!==De)&&(u.hasOwnProperty(Q)||(u[Q]=new rt.SphereGeometry(ge,De,De)),q.geometry.dispose(),q.geometry=u[Q]);var Me=l(z),He=new rt.Color(Ol(Me||"#ffffaa")),Dt=e.nodeOpacity*Bf(Me);(q.material.type!=="MeshLambertMaterial"||!q.material.color.equals(He)||q.material.opacity!==Dt)&&(h.hasOwnProperty(Me)||(h[Me]=new rt.MeshLambertMaterial({color:He,transparent:!0,opacity:Dt})),q.material.dispose(),q.material=h[Me])}}).digest(e.graphData.nodes.filter(c))}if(e._flushObjects||i(["graphData","linkThreeObject","linkThreeObjectExtend","linkMaterial","linkColor","linkWidth","linkVisibility","linkResolution","linkOpacity","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","linkDirectionalParticleThreeObject"])){var d=Oe(e.linkThreeObject),f=Oe(e.linkThreeObjectExtend),p=Oe(e.linkMaterial),m=Oe(e.linkVisibility),y=Oe(e.linkColor),_=Oe(e.linkWidth),g={},v={},x={},b=e.graphData.links.filter(m);if((e._flushObjects||i(["linkThreeObject","linkThreeObjectExtend","linkWidth"]))&&e.linkDataMapper.clear(),e.linkDataMapper.onRemoveObj(function(q){var z=q.__data&&q.__data.__singleHopPhotonsObj;z&&(z.parent.remove(z),sm(z),delete q.__data.__singleHopPhotonsObj)}).onCreateObj(function(q){var z=d(q),Q=f(q);z&&e.linkThreeObject===z&&(z=z.clone());var ge;if(!z||Q){var De=!!_(q);if(De)ge=new rt.Mesh;else{var Me=new rt.BufferGeometry;Me[kf]("position",new rt.BufferAttribute(new Float32Array(2*3),3)),ge=new rt.Line(Me)}}var He;return z?Q?(He=new rt.Group,He.__graphDefaultObj=!0,He.add(ge),He.add(z)):He=z:(He=ge,He.__graphDefaultObj=!0),He.renderOrder=10,He.__graphObjType="link",He}).onUpdateObj(function(q,z){if(q.__graphDefaultObj){var Q=q.children.length?q.children[0]:q,ge=Math.ceil(_(z)*10)/10,De=!!ge;if(De){var Me=ge/2,He=e.linkResolution;if(!Q.geometry.type.match(/^Cylinder(Buffer)?Geometry$/)||Q.geometry.parameters.radiusTop!==Me||Q.geometry.parameters.radialSegments!==He){if(!g.hasOwnProperty(ge)){var Dt=new rt.CylinderGeometry(Me,Me,1,He,1,!1);Dt[ju](new rt.Matrix4().makeTranslation(0,1/2,0)),Dt[ju](new rt.Matrix4().makeRotationX(Math.PI/2)),g[ge]=Dt}Q.geometry.dispose(),Q.geometry=g[ge]}}var U=p(z);if(U)Q.material=U;else{var xt=y(z),nt=new rt.Color(Ol(xt||"#f0f0f0")),Z=e.linkOpacity*Bf(xt),ue=De?"MeshLambertMaterial":"LineBasicMaterial";if(Q.material.type!==ue||!Q.material.color.equals(nt)||Q.material.opacity!==Z){var ht=De?v:x;ht.hasOwnProperty(xt)||(ht[xt]=new rt[ue]({color:nt,transparent:Z<1,opacity:Z,depthWrite:Z>=1})),Q.material.dispose(),Q.material=ht[xt]}}}}).digest(b),e.linkDirectionalArrowLength||n.hasOwnProperty("linkDirectionalArrowLength")){var T=Oe(e.linkDirectionalArrowLength),S=Oe(e.linkDirectionalArrowColor);e.arrowDataMapper.onCreateObj(function(){var q=new rt.Mesh(void 0,new rt.MeshLambertMaterial({transparent:!0}));return q.__linkThreeObjType="arrow",q}).onUpdateObj(function(q,z){var Q=T(z),ge=e.linkDirectionalArrowResolution;if(!q.geometry.type.match(/^Cone(Buffer)?Geometry$/)||q.geometry.parameters.height!==Q||q.geometry.parameters.radialSegments!==ge){var De=new rt.ConeGeometry(Q*.25,Q,ge);De.translate(0,Q/2,0),De.rotateX(Math.PI/2),q.geometry.dispose(),q.geometry=De}var Me=S(z)||y(z)||"#f0f0f0";q.material.color=new rt.Color(Ol(Me)),q.material.opacity=e.linkOpacity*3*Bf(Me)}).digest(b.filter(T))}if(e.linkDirectionalParticles||n.hasOwnProperty("linkDirectionalParticles")){var M=Oe(e.linkDirectionalParticles),A=Oe(e.linkDirectionalParticleWidth),E=Oe(e.linkDirectionalParticleColor),w=Oe(e.linkDirectionalParticleThreeObject),N={},D={};e.particlesDataMapper.onCreateObj(function(){var q=new rt.Group;return q.__linkThreeObjType="photons",q.__photonDataMapper=new Fl(q),q}).onUpdateObj(function(q,z){var Q=!!q.children.length&&q.children[0],ge=w(z),De,Me;if(ge)De=ge.geometry,Me=ge.material;else{var He=Math.ceil(A(z)*10)/10/2,Dt=e.linkDirectionalParticleResolution;Q&&Q.geometry.parameters.radius===He&&Q.geometry.parameters.widthSegments===Dt?De=Q.geometry:(D.hasOwnProperty(He)||(D[He]=new rt.SphereGeometry(He,Dt,Dt)),De=D[He]);var U=E(z)||y(z)||"#f0f0f0",xt=new rt.Color(Ol(U)),nt=e.linkOpacity*3;Q&&Q.material.color.equals(xt)&&Q.material.opacity===nt?Me=Q.material:(N.hasOwnProperty(U)||(N[U]=new rt.MeshLambertMaterial({color:xt,transparent:!0,opacity:nt})),Me=N[U])}Q&&(Q.geometry!==De&&Q.geometry.dispose(),Q.material!==Me&&Q.material.dispose());var Z=Math.round(Math.abs(M(z)));q.__photonDataMapper.id(function(ue){return ue.idx}).onCreateObj(function(){return new rt.Mesh(De,Me)}).onUpdateObj(function(ue){ue.geometry=De,ue.material=Me}).digest(Yi(new Array(Z)).map(function(ue,ht){return{idx:ht}}))}).digest(b.filter(M))}}if(e._flushObjects=!1,i(["graphData","nodeId","linkSource","linkTarget","numDimensions","forceEngine","dagMode","dagNodeFilter","dagLevelDistance"])){e.engineRunning=!1,e.graphData.links.forEach(function(q){q.source=q[e.linkSource],q.target=q[e.linkTarget]});var F=e.forceEngine!=="ngraph",k;if(F){(k=e.d3ForceLayout).stop().alpha(1).numDimensions(e.numDimensions).nodes(e.graphData.nodes);var j=e.d3ForceLayout.force("link");j&&j.id(function(q){return q[e.nodeId]}).links(e.graphData.links);var $=e.dagMode&&yI(e.graphData,function(q){return q[e.nodeId]},{nodeFilter:e.dagNodeFilter,onLoopError:e.onDagError||void 0}),G=Math.max.apply(Math,Yi(Object.values($||[]))),B=e.dagLevelDistance||e.graphData.nodes.length/(G||1)*vI*(["radialin","radialout"].indexOf(e.dagMode)!==-1?.7:1);if(["lr","rl","td","bu","zin","zout"].includes(n.dagMode)){var J=["lr","rl"].includes(n.dagMode)?"fx":["td","bu"].includes(n.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(q){return delete q[J]})}if(["lr","rl","td","bu","zin","zout"].includes(e.dagMode)){var Y=["rl","td","zout"].includes(e.dagMode),re=function(z){return($[z[e.nodeId]]-G/2)*B*(Y?-1:1)},me=["lr","rl"].includes(e.dagMode)?"fx":["td","bu"].includes(e.dagMode)?"fy":"fz";e.graphData.nodes.filter(e.dagNodeFilter).forEach(function(q){return q[me]=re(q)})}e.d3ForceLayout.force("dagRadial",["radialin","radialout"].indexOf(e.dagMode)!==-1?Qx(function(q){var z=$[q[e.nodeId]]||-1;return(e.dagMode==="radialin"?G-z:z)*B}).strength(function(q){return e.dagNodeFilter(q)?1:0}):null)}else{var Re=Ev.graph();e.graphData.nodes.forEach(function(q){Re.addNode(q[e.nodeId])}),e.graphData.links.forEach(function(q){Re.addLink(q.source,q.target)}),k=Ev.forcelayout(Re,fI({dimensions:e.numDimensions},e.ngraphPhysics)),k.graph=Re}for(var tt=0;tt<e.warmupTicks&&!(F&&e.d3AlphaMin>0&&e.d3ForceLayout.alpha()<e.d3AlphaMin);tt++)k[F?"tick":"step"]();e.layout=k,this.resetCountdown()}e.engineRunning=!0,e.onFinishUpdate()}});function bI(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,i=function(s){function o(){var a;eT(this,o);for(var l=arguments.length,c=new Array(l),u=0;u<l;u++)c[u]=arguments[u];return a=Jb(this,o,[].concat(c)),a.__kapsuleInstance=tT(r,[].concat(Yi(n?[a]:[]),c)),a}return iT(o,s),nT(o)}(e);return Object.keys(r()).forEach(function(s){return i.prototype[s]=function(){var o,a=(o=this.__kapsuleInstance)[s].apply(o,arguments);return a===this.__kapsuleInstance?this:a}}),i}var TI=window.THREE?window.THREE:{Group:la},lT=bI(xI,TI.Group,!0);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const SI=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],zf=new WeakMap;class MI{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=SI,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const n=e.getMRT();return n!==null&&n.has("velocity")}getRenderObjectData(e){let n=this.renderObjects.get(e);if(n===void 0){const{geometry:i,material:s,object:o}=e;if(n={material:this.getMaterialData(s),geometry:{id:i.id,attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:o.matrixWorld.clone()},o.center&&(n.center=o.center.clone()),o.morphTargetInfluences&&(n.morphTargetInfluences=o.morphTargetInfluences.slice()),e.bundle!==null&&(n.version=e.bundle.version),n.material.transmission>0){const{width:a,height:l}=e.context;n.bufferWidth=a,n.bufferHeight=l}n.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,n)}return n}getAttributesData(e){const n={};for(const i in e){const s=e[i];n[i]={version:s.version}}return n}containsNode(e){const n=e.material;for(const i in n)if(n[i]&&n[i].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const n={};for(const i of this.refreshUniforms){const s=e[i];s!=null&&(typeof s=="object"&&s.clone!==void 0?s.isTexture===!0?n[i]={id:s.id,version:s.version}:n[i]=s.clone():n[i]=s)}return n}equals(e,n){const{object:i,material:s,geometry:o}=e,a=this.getRenderObjectData(e);if(a.worldMatrix.equals(i.matrixWorld)!==!0)return a.worldMatrix.copy(i.matrixWorld),!1;const l=a.material;for(const _ in l){const g=l[_],v=s[_];if(g.equals!==void 0){if(g.equals(v)===!1)return g.copy(v),!1}else if(v.isTexture===!0){if(g.id!==v.id||g.version!==v.version)return g.id=v.id,g.version=v.version,!1}else if(g!==v)return l[_]=v,!1}if(l.transmission>0){const{width:_,height:g}=e.context;if(a.bufferWidth!==_||a.bufferHeight!==g)return a.bufferWidth=_,a.bufferHeight=g,!1}const c=a.geometry,u=o.attributes,h=c.attributes,d=Object.keys(h),f=Object.keys(u);if(c.id!==o.id)return c.id=o.id,!1;if(d.length!==f.length)return a.geometry.attributes=this.getAttributesData(u),!1;for(const _ of d){const g=h[_],v=u[_];if(v===void 0)return delete h[_],!1;if(g.version!==v.version)return g.version=v.version,!1}const p=o.index,m=c.indexVersion,y=p?p.version:null;if(m!==y)return c.indexVersion=y,!1;if(c.drawRange.start!==o.drawRange.start||c.drawRange.count!==o.drawRange.count)return c.drawRange.start=o.drawRange.start,c.drawRange.count=o.drawRange.count,!1;if(a.morphTargetInfluences){let _=!1;for(let g=0;g<a.morphTargetInfluences.length;g++)a.morphTargetInfluences[g]!==i.morphTargetInfluences[g]&&(_=!0);if(_)return!0}if(a.lights){for(let _=0;_<n.length;_++)if(a.lights[_].map!==n[_].map)return!1}return a.center&&a.center.equals(i.center)===!1?(a.center.copy(i.center),!0):(e.bundle!==null&&(a.version=e.bundle.version),!0)}getLightsData(e){const n=[];for(const i of e)i.isSpotLight===!0&&i.map!==null&&n.push({map:i.map.version});return n}getLights(e,n){if(zf.has(e)){const s=zf.get(e);if(s.renderId===n)return s.lightsData}const i=this.getLightsData(e.getLights());return zf.set(e,{renderId:n,lightsData:i}),i}needsRefresh(e,n){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(n.renderer))return!0;const{renderId:i}=n;if(this.renderId!==i)return this.renderId=i,!0;const s=e.object.static===!0,o=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(s||o)return!1;const a=this.getLights(e.lightsNode,i);return this.equals(e,a)!==!0}}function Fc(r,e=0){let n=3735928559^e,i=1103547991^e;if(r instanceof Array)for(let s=0,o;s<r.length;s++)o=r[s],n=Math.imul(n^o,2654435761),i=Math.imul(i^o,1597334677);else for(let s=0,o;s<r.length;s++)o=r.charCodeAt(s),n=Math.imul(n^o,2654435761),i=Math.imul(i^o,1597334677);return n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)}const EI=r=>Fc(r),Ag=r=>Fc(r),Vh=(...r)=>Fc(r);function cT(r,e=!1){const n=[];r.isNode===!0&&n.push(r.id);for(const{property:i,childNode:s}of Hh(r))n.push(Fc(i.slice(0,-4)),s.getCacheKey(e));return Fc(n)}function*Hh(r,e=!1){for(const n of Object.getOwnPropertyNames(r)){if(n.startsWith("_")===!0)continue;const i=r[n];if(Array.isArray(i)===!0)for(let s=0;s<i.length;s++){const o=i[s];o&&(o.isNode===!0||e&&typeof o.toJSON=="function")&&(yield{property:n,index:s,childNode:o})}else if(i&&i.isNode===!0)yield{property:n,childNode:i};else if(i&&Object.getPrototypeOf(i)===Object.prototype)for(const s in i){if(s.startsWith("_")===!0)continue;const o=i[s];o&&(o.isNode===!0||e&&typeof o.toJSON=="function")&&(yield{property:n,index:s,childNode:o})}}}const wI=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),wv=new WeakMap;function AI(r){return wI.get(r)}function Wh(r){if(r==null)return null;const e=typeof r;return r.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":r.isVector2===!0?"vec2":r.isVector3===!0?"vec3":r.isVector4===!0?"vec4":r.isMatrix2===!0?"mat2":r.isMatrix3===!0?"mat3":r.isMatrix4===!0?"mat4":r.isColor===!0?"color":r instanceof ArrayBuffer?"ArrayBuffer":null}function Rg(r,...e){const n=r?r.slice(-4):void 0;return e.length===1&&(n==="vec2"?e=[e[0],e[0]]:n==="vec3"?e=[e[0],e[0],e[0]]:n==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),r==="color"?new We(...e):n==="vec2"?new de(...e):n==="vec3"?new L(...e):n==="vec4"?new et(...e):n==="mat2"?new fd(...e):n==="mat3"?new ut(...e):n==="mat4"?new bt(...e):r==="bool"?e[0]||!1:r==="float"||r==="int"||r==="uint"?e[0]||0:r==="string"?e[0]||"":r==="ArrayBuffer"?CI(e[0]):null}function uT(r){let e=wv.get(r);return e===void 0&&(e={},wv.set(r,e)),e}function RI(r){let e="";const n=new Uint8Array(r);for(let i=0;i<n.length;i++)e+=String.fromCharCode(n[i]);return btoa(e)}function CI(r){return Uint8Array.from(atob(r),e=>e.charCodeAt(0)).buffer}const qu={VERTEX:"vertex"},_t={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},_r={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},NI=["fragment","vertex"],Av=["setup","analyze","generate"],Rv=[...NI,"compute"],fl=["x","y","z","w"],PI={analyze:"setup",generate:"analyze"};let DI=0;class Ve extends ss{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=_t.NONE,this.updateBeforeType=_t.NONE,this.updateAfterType=_t.NONE,this.uuid=Bh.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:DI++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,n){return this.updateType=n,this.update=e.bind(this),this}onFrameUpdate(e){return this.onUpdate(e,_t.FRAME)}onRenderUpdate(e){return this.onUpdate(e,_t.RENDER)}onObjectUpdate(e){return this.onUpdate(e,_t.OBJECT)}onReference(e){return this.updateReference=e.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Hh(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const n of this.getChildren())n.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Vh(cT(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const n=this.getNodeType(e);return e.getElementType(n)}getMemberType(){return"void"}getNodeType(e){const n=e.getNodeProperties(this);return n.outputNode?n.outputNode.getNodeType(e):this.nodeType}getShared(e){const n=this.getHash(e);return e.getNodeFromHash(n)||this}getArrayCount(){return null}setup(e){const n=e.getNodeProperties(this);let i=0;for(const s of this.getChildren())n["node"+i++]=s;return n.outputNode||null}analyze(e,n=null){const i=e.increaseUsage(this);if(this.parents===!0){const s=e.getDataFromNode(this,"any");s.stages=s.stages||{},s.stages[e.shaderStage]=s.stages[e.shaderStage]||[],s.stages[e.shaderStage].push(n)}if(i===1){const s=e.getNodeProperties(this);for(const o of Object.values(s))o&&o.isNode===!0&&o.build(e,this)}}generate(e,n){const{outputNode:i}=e.getNodeProperties(this);if(i&&i.isNode===!0)return i.build(e,n)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,n=null){const i=this.getShared(e);if(this!==i)return i.build(e,n);const s=e.getDataFromNode(this);s.buildStages=s.buildStages||{},s.buildStages[e.buildStage]=!0;const o=PI[e.buildStage];if(o&&s.buildStages[o]!==!0){const c=e.getBuildStage();e.setBuildStage(o),this.build(e),e.setBuildStage(c)}e.addNode(this),e.addChain(this);let a=null;const l=e.getBuildStage();if(l==="setup"){this.updateReference(e);const c=e.getNodeProperties(this);if(c.initialized!==!0){c.initialized=!0,c.outputNode=this.setup(e)||c.outputNode||null;for(const u of Object.values(c))if(u&&u.isNode===!0){if(u.parents===!0){const h=e.getNodeProperties(u);h.parents=h.parents||[],h.parents.push(this)}u.build(e)}}a=c.outputNode}else if(l==="analyze")this.analyze(e,n);else if(l==="generate"){if(this.generate.length===1){const u=this.getNodeType(e),h=e.getDataFromNode(this);a=h.snippet,a===void 0?h.generated===void 0?(h.generated=!0,a=this.generate(e)||"",h.snippet=a):(console.warn("THREE.Node: Recursion detected.",this),a="/* Recursion detected. */"):h.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),a=e.format(a,u,n)}else a=this.generate(e,n)||"";a===""&&n!==null&&n!=="void"&&n!=="OutputType"&&(console.error(`THREE.TSL: Invalid generated code, expected a "${n}".`),a=e.generateConst(n))}return e.removeChain(this),e.addSequentialNode(this),a}getSerializeChildren(){return Hh(this)}serialize(e){const n=this.getSerializeChildren(),i={};for(const{property:s,index:o,childNode:a}of n)o!==void 0?(i[s]===void 0&&(i[s]=Number.isInteger(o)?[]:{}),i[s][o]=a.toJSON(e.meta).uuid):i[s]=a.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(e.inputNodes!==void 0){const n=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const s=[];for(const o of e.inputNodes[i])s.push(n[o]);this[i]=s}else if(typeof e.inputNodes[i]=="object"){const s={};for(const o in e.inputNodes[i]){const a=e.inputNodes[i][o];s[o]=n[a]}this[i]=s}else{const s=e.inputNodes[i];this[i]=n[s]}}}toJSON(e){const{uuid:n,type:i}=this,s=e===void 0||typeof e=="string";s&&(e={textures:{},images:{},nodes:{}});let o=e.nodes[n];o===void 0&&(o={uuid:n,type:i,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},s!==!0&&(e.nodes[o.uuid]=o),this.serialize(o),delete o.meta);function a(l){const c=[];for(const u in l){const h=l[u];delete h.metadata,c.push(h)}return c}if(s){const l=a(e.textures),c=a(e.images),u=a(e.nodes);l.length>0&&(o.textures=l),c.length>0&&(o.images=c),u.length>0&&(o.nodes=u)}return o}}class tu extends Ve{static get type(){return"ArrayElementNode"}constructor(e,n){super(),this.node=e,this.indexNode=n,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const n=this.indexNode.getNodeType(e),i=this.node.build(e),s=this.indexNode.build(e,!e.isVector(n)&&e.isInteger(n)?n:"uint");return`${i}[ ${s} ]`}}class hT extends Ve{static get type(){return"ConvertNode"}constructor(e,n){super(),this.node=e,this.convertTo=n}getNodeType(e){const n=this.node.getNodeType(e);let i=null;for(const s of this.convertTo.split("|"))(i===null||e.getTypeLength(n)===e.getTypeLength(s))&&(i=s);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,n){const i=this.node,s=this.getNodeType(e),o=i.build(e,s);return e.format(o,s,n)}}class En extends Ve{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,n){if(e.getBuildStage()==="generate"){const s=e.getVectorType(this.getNodeType(e,n)),o=e.getDataFromNode(this);if(o.propertyName!==void 0)return e.format(o.propertyName,s,n);if(s!=="void"&&n!=="void"&&this.hasDependencies(e)){const a=super.build(e,s),l=e.getVarFromNode(this,null,s),c=e.getPropertyName(l);return e.addLineFlowCode(`${c} = ${a}`,this),o.snippet=a,o.propertyName=c,e.format(o.propertyName,s,n)}}return super.build(e,n)}}class LI extends En{static get type(){return"JoinNode"}constructor(e=[],n=null){super(n),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((n,i)=>n+e.getTypeLength(i.getNodeType(e)),0))}generate(e,n){const i=this.getNodeType(e),s=e.getTypeLength(i),o=this.nodes,a=e.getComponentType(i),l=[];let c=0;for(const h of o){if(c>=s){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${i}()' type.`);break}let d=h.getNodeType(e),f=e.getTypeLength(d),p;if(c+f>s&&(console.error(`THREE.TSL: Length of '${i}()' data exceeds maximum length of output type.`),f=s-c,d=e.getTypeFromLength(f)),c+=f,p=h.build(e,d),e.getComponentType(d)!==a){const y=e.getTypeFromLength(f,a);p=e.format(p,d,y)}l.push(p)}const u=`${e.getType(i)}( ${l.join(", ")} )`;return e.format(u,i,n)}}const II=fl.join("");class UI extends Ve{static get type(){return"SplitNode"}constructor(e,n="x"){super(),this.node=e,this.components=n,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const n of this.components)e=Math.max(fl.indexOf(n)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}getScope(){return this.node.getScope()}generate(e,n){const i=this.node,s=e.getTypeLength(i.getNodeType(e));let o=null;if(s>1){let a=null;this.getVectorLength()>=s&&(a=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const c=i.build(e,a);this.components.length===s&&this.components===II.slice(0,this.components.length)?o=e.format(c,a,n):o=e.format(`${c}.${this.components}`,this.getNodeType(e),n)}else o=i.build(e,n);return o}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class FI extends En{static get type(){return"SetNode"}constructor(e,n,i){super(),this.sourceNode=e,this.components=n,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:n,components:i,targetNode:s}=this,o=this.getNodeType(e),a=e.getComponentType(s.getNodeType(e)),l=e.getTypeFromLength(i.length,a),c=s.build(e,l),u=n.build(e,o),h=e.getTypeLength(o),d=[];for(let f=0;f<h;f++){const p=fl[f];p===i[0]?(d.push(c),f+=i.length-1):d.push(u+"."+p)}return`${e.getType(o)}( ${d.join(", ")} )`}}class OI extends En{static get type(){return"FlipNode"}constructor(e,n){super(),this.sourceNode=e,this.components=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:n,sourceNode:i}=this,s=this.getNodeType(e),o=i.build(e),a=e.getVarFromNode(this),l=e.getPropertyName(a);e.addLineFlowCode(l+" = "+o,this);const c=e.getTypeLength(s),u=[];let h=0;for(let d=0;d<c;d++){const f=fl[d];f===n[h]?(u.push("1.0 - "+(l+"."+f)),h++):u.push(l+"."+f)}return`${e.getType(s)}( ${u.join(", ")} )`}}class Cg extends Ve{static get type(){return"InputNode"}constructor(e,n=null){super(n),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Wh(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Wh(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=RI(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Rg(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const Cv=/float|u?int/;class Er extends Cg{static get type(){return"ConstNode"}constructor(e,n=null){super(e,n),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,n){const i=this.getNodeType(e);return Cv.test(i)&&Cv.test(n)?e.generateConst(n,this.value):e.format(this.generateConst(e),i,n)}}class BI extends Ve{static get type(){return"MemberNode"}constructor(e,n){super(),this.structNode=e,this.property=n,this.isMemberNode=!0}hasMember(e){return this.structNode.isMemberNode&&this.structNode.hasMember(e)===!1?!1:this.structNode.getMemberType(e,this.property)!=="void"}getNodeType(e){return this.hasMember(e)===!1?"float":this.structNode.getMemberType(e,this.property)}getMemberType(e,n){if(this.hasMember(e)===!1)return"float";const i=this.getNodeType(e);return e.getStructTypeNode(i).getMemberType(e,n)}generate(e){if(this.hasMember(e)===!1){console.warn(`THREE.TSL: Member "${this.property}" does not exist in struct.`);const i=this.getNodeType(e);return e.generateConst(i)}return this.structNode.build(e)+"."+this.property}}let xo=null;const om=new Map;function ne(r,e){if(om.has(r)){console.warn(`THREE.TSL: Redefinition of method chaining '${r}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${r} is not a function`);om.set(r,e),r!=="assign"&&(Ve.prototype[r]=function(...n){return this.isStackNode?this.add(e(...n)):e(this,...n)},Ve.prototype[r+"Assign"]=function(...n){return this.isStackNode?this.assign(n[0],e(...n)):this.assign(e(this,...n))})}const kI=r=>r.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Nv=r=>kI(r).split("").sort().join("");Ve.prototype.assign=function(...r){if(this.isStackNode!==!0)return xo!==null?xo.assign(this,...r):console.error("THREE.TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const e=om.get("assign");return this.add(e(...r))}};Ve.prototype.toVarIntent=function(){return this};Ve.prototype.get=function(r){return new BI(this,r)};const pc={};function Xu(r,e,n){pc[r]=pc[e]=pc[n]={get(){this._cache=this._cache||{};let a=this._cache[r];return a===void 0&&(a=new UI(this,r),this._cache[r]=a),a},set(a){this[r].assign(fe(a))}};const i=r.toUpperCase(),s=e.toUpperCase(),o=n.toUpperCase();Ve.prototype["set"+i]=Ve.prototype["set"+s]=Ve.prototype["set"+o]=function(a){const l=Nv(r);return new FI(this,l,fe(a))},Ve.prototype["flip"+i]=Ve.prototype["flip"+s]=Ve.prototype["flip"+o]=function(){const a=Nv(r);return new OI(this,a)}}const ar=["x","y","z","w"],lr=["r","g","b","a"],cr=["s","t","p","q"];for(let r=0;r<4;r++){let e=ar[r],n=lr[r],i=cr[r];Xu(e,n,i);for(let s=0;s<4;s++){e=ar[r]+ar[s],n=lr[r]+lr[s],i=cr[r]+cr[s],Xu(e,n,i);for(let o=0;o<4;o++){e=ar[r]+ar[s]+ar[o],n=lr[r]+lr[s]+lr[o],i=cr[r]+cr[s]+cr[o],Xu(e,n,i);for(let a=0;a<4;a++)e=ar[r]+ar[s]+ar[o]+ar[a],n=lr[r]+lr[s]+lr[o]+lr[a],i=cr[r]+cr[s]+cr[o]+cr[a],Xu(e,n,i)}}}for(let r=0;r<32;r++)pc[r]={get(){this._cache=this._cache||{};let e=this._cache[r];return e===void 0&&(e=new tu(this,new Er(r,"uint")),this._cache[r]=e),e},set(e){this[r].assign(fe(e))}};Object.defineProperties(Ve.prototype,pc);const Pv=new WeakMap,zI=function(r,e=null){const n=Wh(r);return n==="node"?r:e===null&&(n==="float"||n==="boolean")||n&&n!=="shader"&&n!=="string"?fe(am(r,e)):n==="shader"?r.isFn?r:ce(r):r},GI=function(r,e=null){for(const n in r)r[n]=fe(r[n],e);return r},VI=function(r,e=null){const n=r.length;for(let i=0;i<n;i++)r[i]=fe(r[i],e);return r},dT=function(r,e=null,n=null,i=null){function s(h){return i!==null?(h=fe(Object.assign(h,i)),i.intent===!0&&(h=h.toVarIntent())):h=fe(h),h}let o,a=e,l,c;function u(h){let d;return a?d=/[a-z]/i.test(a)?a+"()":a:d=r.type,l!==void 0&&h.length<l?(console.error(`THREE.TSL: "${d}" parameter length is less than minimum required.`),h.concat(new Array(l-h.length).fill(0))):c!==void 0&&h.length>c?(console.error(`THREE.TSL: "${d}" parameter length exceeds limit.`),h.slice(0,c)):h}return e===null?o=(...h)=>s(new r(...ya(u(h)))):n!==null?(n=fe(n),o=(...h)=>s(new r(e,...ya(u(h)),n))):o=(...h)=>s(new r(e,...ya(u(h)))),o.setParameterLength=(...h)=>(h.length===1?l=c=h[0]:h.length===2&&([l,c]=h),o),o.setName=h=>(a=h,o),o},HI=function(r,...e){return fe(new r(...ya(e)))};class WI extends Ve{constructor(e,n){super(),this.shaderNode=e,this.rawInputs=n,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,n){return this.getOutputNode(e).getMemberType(e,n)}call(e){const{shaderNode:n,rawInputs:i}=this,s=e.getNodeProperties(n),o=e.getClosestSubBuild(n.subBuilds)||"",a=o||"default";if(s[a])return s[a];const l=e.subBuildFn;e.subBuildFn=o;let c=null;if(n.layout){let u=Pv.get(e.constructor);u===void 0&&(u=new WeakMap,Pv.set(e.constructor,u));let h=u.get(n);h===void 0&&(h=fe(e.buildFunctionNode(n)),u.set(n,h)),e.addInclude(h);const d=i?$I(i):null;c=fe(h.call(d))}else{const u=new Proxy(e,{get:(m,y,_)=>{let g;return Symbol.iterator===y?g=function*(){yield void 0}:g=Reflect.get(m,y,_),g}}),h=i?jI(i):null,d=Array.isArray(i)?i.length>0:i!==null,f=n.jsFunc,p=d||f.length>1?f(h,u):f(u);c=fe(p)}return e.subBuildFn=l,n.once&&(s[a]=c),c}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const n=e.getNodeProperties(this),i=e.getSubBuildOutput(this);return n[i]=n[i]||this.setupOutput(e),n[i].subBuild=e.getClosestSubBuild(this),n[i]}build(e,n=null){let i=null;const s=e.getBuildStage(),o=e.getNodeProperties(this),a=e.getSubBuildOutput(this),l=this.getOutputNode(e);if(s==="setup"){const c=e.getSubBuildProperty("initialized",this);if(o[c]!==!0&&(o[c]=!0,o[a]=this.getOutputNode(e),o[a].build(e),this.shaderNode.subBuilds))for(const u of e.chaining){const h=e.getDataFromNode(u,"any");h.subBuilds=h.subBuilds||new Set;for(const d of this.shaderNode.subBuilds)h.subBuilds.add(d)}i=o[a]}else s==="analyze"?l.build(e,n):s==="generate"&&(i=l.build(e,n)||"");return i}}function $I(r){let e;return Lg(r),r[0]&&(r[0].isNode||Object.getPrototypeOf(r[0])!==Object.prototype)?e=[...r]:e=r[0],e}function jI(r){let e=0;return Lg(r),new Proxy(r,{get:(n,i,s)=>{let o;if(i==="length")return o=r.length,o;if(Symbol.iterator===i)o=function*(){for(const a of r)yield fe(a)};else{if(r.length>0)if(Object.getPrototypeOf(r[0])===Object.prototype){const a=r[0];a[i]===void 0?o=a[e++]:o=Reflect.get(a,i,s)}else r[0]instanceof Ve&&(r[i]===void 0?o=r[e++]:o=Reflect.get(r,i,s));else o=Reflect.get(n,i,s);o=fe(o)}return o}})}class qI extends Ve{constructor(e,n){super(n),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return fe(new WI(this,e))}setup(){return this.call()}}const XI=[!1,!0],YI=[0,1,2,3],KI=[-1,-2],fT=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Ng=new Map;for(const r of XI)Ng.set(r,new Er(r));const Pg=new Map;for(const r of YI)Pg.set(r,new Er(r,"uint"));const Dg=new Map([...Pg].map(r=>new Er(r.value,"int")));for(const r of KI)Dg.set(r,new Er(r,"int"));const _d=new Map([...Dg].map(r=>new Er(r.value)));for(const r of fT)_d.set(r,new Er(r));for(const r of fT)_d.set(-r,new Er(-r));const yd={bool:Ng,uint:Pg,ints:Dg,float:_d},Dv=new Map([...Ng,..._d]),am=(r,e)=>Dv.has(r)?Dv.get(r):r.isNode===!0?r:new Er(r,e),xn=function(r,e=null){return(...n)=>{for(const s of n)if(s===void 0)return console.error(`THREE.TSL: Invalid parameter for the type "${r}".`),fe(new Er(0,r));if((n.length===0||!["bool","float","int","uint"].includes(r)&&n.every(s=>{const o=typeof s;return o!=="object"&&o!=="function"}))&&(n=[Rg(r,...n)]),n.length===1&&e!==null&&e.has(n[0]))return Yu(e.get(n[0]));if(n.length===1){const s=am(n[0],r);return s.nodeType===r?Yu(s):Yu(new hT(s,r))}const i=n.map(s=>am(s));return Yu(new LI(i,r))}},Lv=r=>typeof r=="object"&&r!==null?r.value:r,ZI=r=>r!=null?r.nodeType||r.convertTo||(typeof r=="string"?r:null):null;function ic(r,e){return new qI(r,e)}const fe=(r,e=null)=>zI(r,e),Yu=(r,e=null)=>fe(r,e).toVarIntent(),Lg=(r,e=null)=>new GI(r,e),ya=(r,e=null)=>new VI(r,e),wt=(r,e=null,n=null,i=null)=>new dT(r,e,n,i),Te=(r,...e)=>new HI(r,...e),Ue=(r,e=null,n=null,i={})=>new dT(r,e,n,{intent:!0,...i});let QI=0;class JI extends Ve{constructor(e,n=null){super();let i=null;n!==null&&(typeof n=="object"?i=n.return:(typeof n=="string"?i=n:console.error("THREE.TSL: Invalid layout type."),n=null)),this.shaderNode=new ic(e,i),n!==null&&this.setLayout(n),this.isFn=!0}setLayout(e){const n=this.shaderNode.nodeType;if(typeof e.inputs!="object"){const i={name:"fn"+QI++,type:n,inputs:[]};for(const s in e)s!=="return"&&i.inputs.push({name:s,type:e[s]});e=i}return this.shaderNode.setLayout(e),this}getNodeType(e){return this.shaderNode.getNodeType(e)||"float"}call(...e){const n=this.shaderNode.call(e);return this.shaderNode.nodeType==="void"&&n.toStack(),n.toVarIntent()}once(e=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=e,this}generate(e){const n=this.getNodeType(e);return console.error('THREE.TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),e.generateConst(n)}}function ce(r,e=null){const n=new JI(r,e);return new Proxy(()=>{},{apply(i,s,o){return n.call(...o)},get(i,s,o){return Reflect.get(n,s,o)},set(i,s,o,a){return Reflect.set(n,s,o,a)}})}const $h=r=>{xo=r},Ig=()=>xo,un=(...r)=>xo.If(...r);function pT(r){return xo&&xo.add(r),r}ne("toStack",pT);const eU=new xn("color"),se=new xn("float",yd.float),jt=new xn("int",yd.ints),tU=new xn("uint",yd.uint),Ug=new xn("bool",yd.bool),Se=new xn("vec2"),Vr=new xn("ivec2"),nU=new xn("uvec2"),iU=new xn("bvec2"),ae=new xn("vec3"),rU=new xn("ivec3"),sU=new xn("uvec3"),oU=new xn("bvec3"),dt=new xn("vec4"),aU=new xn("ivec4"),lU=new xn("uvec4"),cU=new xn("bvec4"),Fg=new xn("mat2"),ti=new xn("mat3"),va=new xn("mat4");ne("toColor",eU);ne("toFloat",se);ne("toInt",jt);ne("toUint",tU);ne("toBool",Ug);ne("toVec2",Se);ne("toIVec2",Vr);ne("toUVec2",nU);ne("toBVec2",iU);ne("toVec3",ae);ne("toIVec3",rU);ne("toUVec3",sU);ne("toBVec3",oU);ne("toVec4",dt);ne("toIVec4",aU);ne("toUVec4",lU);ne("toBVec4",cU);ne("toMat2",Fg);ne("toMat3",ti);ne("toMat4",va);const uU=wt(tu).setParameterLength(2),hU=(r,e)=>fe(new hT(fe(r),e));ne("element",uU);ne("convert",hU);ne("append",r=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),pT(r)));class It extends Ve{static get type(){return"PropertyNode"}constructor(e,n=null,i=!1){super(e),this.name=n,this.varying=i,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let n;return this.varying===!0?(n=e.getVaryingFromNode(this,this.name),n.needsInterpolation=!0):n=e.getVarFromNode(this,this.name),e.getPropertyName(n)}}const As=(r,e)=>fe(new It(r,e)),jh=(r,e)=>fe(new It(r,e,!0)),Ct=Te(It,"vec4","DiffuseColor"),Iv=Te(It,"vec3","EmissiveColor"),jr=Te(It,"float","Roughness"),qh=Te(It,"float","Metalness"),lm=Te(It,"float","Clearcoat"),Xh=Te(It,"float","ClearcoatRoughness"),ua=Te(It,"vec3","Sheen"),Og=Te(It,"float","SheenRoughness"),Bg=Te(It,"float","Iridescence"),mT=Te(It,"float","IridescenceIOR"),gT=Te(It,"float","IridescenceThickness"),cm=Te(It,"float","AlphaT"),to=Te(It,"float","Anisotropy"),Sh=Te(It,"vec3","AnisotropyT"),xa=Te(It,"vec3","AnisotropyB"),bi=Te(It,"color","SpecularColor"),Yh=Te(It,"float","SpecularF90"),um=Te(It,"float","Shininess"),mc=Te(It,"vec4","Output"),Gf=Te(It,"float","dashSize"),Uv=Te(It,"float","gapSize"),Mh=Te(It,"float","IOR"),hm=Te(It,"float","Transmission"),_T=Te(It,"float","Thickness"),yT=Te(It,"float","AttenuationDistance"),vT=Te(It,"color","AttenuationColor"),xT=Te(It,"float","Dispersion");class bT extends Ve{static get type(){return"UniformGroupNode"}constructor(e,n=!1,i=1){super("string"),this.name=e,this.shared=n,this.order=i,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const dU=r=>new bT(r),kg=(r,e=0)=>new bT(r,!0,e),fU=kg("frame"),Ke=kg("render"),TT=dU("object");class nu extends Cg{static get type(){return"UniformNode"}constructor(e,n=null){super(e,n),this.isUniformNode=!0,this.name="",this.groupNode=TT}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,n){return e=e.bind(this),super.onUpdate(i=>{const s=e(i,this);s!==void 0&&(this.value=s)},n)}getInputType(e){let n=super.getInputType(e);return n==="bool"&&(n="uint"),n}generate(e,n){const i=this.getNodeType(e),s=this.getUniformHash(e);let o=e.getNodeFromHash(s);o===void 0&&(e.setHashNode(this,s),o=this);const a=o.getInputType(e),l=e.getUniformFromNode(o,a,e.shaderStage,this.name||e.context.nodeName),c=e.getPropertyName(l);e.context.nodeName!==void 0&&delete e.context.nodeName;let u=c;if(i==="bool"){const h=e.getDataFromNode(this);let d=h.propertyName;if(d===void 0){const f=e.getVarFromNode(this,null,"bool");d=e.getPropertyName(f),h.propertyName=d,u=e.format(c,a,i),e.addLineFlowCode(`${d} = ${u}`,this)}u=d}return e.format(u,i,n)}}const ot=(r,e)=>{const n=ZI(e||r);return n===r&&(r=Rg(n)),r=r&&r.isNode===!0?r.node&&r.node.value||r.value:r,fe(new nu(r,n))};class Fv extends En{static get type(){return"ArrayNode"}constructor(e,n,i=null){super(e),this.count=n,this.values=i,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const n=this.getNodeType(e);return e.generateArray(n,this.count,this.values)}}const pU=(...r)=>{let e;if(r.length===1){const n=r[0];e=new Fv(null,n.length,n)}else{const n=r[0],i=r[1];e=new Fv(n,i)}return fe(e)};ne("toArray",(r,e)=>pU(Array(e).fill(r)));class mU extends En{static get type(){return"AssignNode"}constructor(e,n){super(),this.targetNode=e,this.sourceNode=n,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,n){return n!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:n}=this;if(e.isAvailable("swizzleAssign")===!1&&n.isSplitNode&&n.components.length>1){const i=e.getTypeLength(n.node.getNodeType(e));return fl.join("").slice(0,i)!==n.components}return!1}setup(e){const{targetNode:n,sourceNode:i}=this,s=n.getScope(),o=e.getNodeProperties(s);o.assign=!0;const a=e.getNodeProperties(this);a.sourceNode=i,a.targetNode=n.context({assign:!0})}generate(e,n){const{targetNode:i,sourceNode:s}=e.getNodeProperties(this),o=this.needsSplitAssign(e),a=i.build(e),l=i.getNodeType(e),c=s.build(e,l),u=s.getNodeType(e),h=e.getDataFromNode(this);let d;if(h.initialized===!0)n!=="void"&&(d=a);else if(o){const f=e.getVarFromNode(this,null,l),p=e.getPropertyName(f);e.addLineFlowCode(`${p} = ${c}`,this);const m=i.node,_=m.node.context({assign:!0}).build(e);for(let g=0;g<m.components.length;g++){const v=m.components[g];e.addLineFlowCode(`${_}.${v} = ${p}[ ${g} ]`,this)}n!=="void"&&(d=a)}else d=`${a} = ${c}`,(n==="void"||u==="void")&&(e.addLineFlowCode(d,this),n!=="void"&&(d=a));return h.initialized=!0,e.format(d,l,n)}}const gU=wt(mU).setParameterLength(2);ne("assign",gU);class _U extends En{static get type(){return"FunctionCallNode"}constructor(e=null,n={}){super(),this.functionNode=e,this.parameters=n}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}getMemberType(e,n){return this.functionNode.getMemberType(e,n)}generate(e){const n=[],i=this.functionNode,s=i.getInputs(e),o=this.parameters,a=(c,u)=>{const h=u.type,d=h==="pointer";let f;return d?f="&"+c.build(e):f=c.build(e,h),f};if(Array.isArray(o)){if(o.length>s.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),o.length=s.length;else if(o.length<s.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");o.length<s.length;)o.push(se(0));for(let c=0;c<o.length;c++)n.push(a(o[c],s[c]))}else for(const c of s){const u=o[c.name];u!==void 0?n.push(a(u,c)):(console.error(`THREE.TSL: Input '${c.name}' not found in 'Fn()'.`),n.push(a(se(0),c)))}return`${i.build(e,"property")}( ${n.join(", ")} )`}}const yU=(r,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?ya(e):Lg(e[0]),fe(new _U(fe(r),e)));ne("call",yU);const vU={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class tn extends En{static get type(){return"OperatorNode"}constructor(e,n,i,...s){if(super(),s.length>0){let o=new tn(e,n,i);for(let a=0;a<s.length-1;a++)o=new tn(e,o,s[a]);n=o,i=s[s.length-1]}this.op=e,this.aNode=n,this.bNode=i,this.isOperatorNode=!0}getOperatorMethod(e,n){return e.getMethod(vU[this.op],n)}getNodeType(e,n=null){const i=this.op,s=this.aNode,o=this.bNode,a=s.getNodeType(e),l=o?o.getNodeType(e):null;if(a==="void"||l==="void")return n||"void";if(i==="%")return a;if(i==="~"||i==="&"||i==="|"||i==="^"||i===">>"||i==="<<")return e.getIntegerType(a);if(i==="!"||i==="&&"||i==="||"||i==="^^")return"bool";if(i==="=="||i==="!="||i==="<"||i===">"||i==="<="||i===">="){const c=Math.max(e.getTypeLength(a),e.getTypeLength(l));return c>1?`bvec${c}`:"bool"}else{if(e.isMatrix(a)){if(l==="float")return a;if(e.isVector(l))return e.getVectorFromMatrix(a);if(e.isMatrix(l))return a}else if(e.isMatrix(l)){if(a==="float")return l;if(e.isVector(a))return e.getVectorFromMatrix(l)}return e.getTypeLength(l)>e.getTypeLength(a)?l:a}}generate(e,n){const i=this.op,{aNode:s,bNode:o}=this,a=this.getNodeType(e,n);let l=null,c=null;a!=="void"?(l=s.getNodeType(e),c=o?o.getNodeType(e):null,i==="<"||i===">"||i==="<="||i===">="||i==="=="||i==="!="?e.isVector(l)?c=l:e.isVector(c)?l=c:l!==c&&(l=c="float"):i===">>"||i==="<<"?(l=a,c=e.changeComponentType(c,"uint")):i==="%"?(l=a,c=e.isInteger(l)&&e.isInteger(c)?c:l):e.isMatrix(l)?c==="float"?c="float":e.isVector(c)?c=e.getVectorFromMatrix(l):e.isMatrix(c)||(l=c=a):e.isMatrix(c)?l==="float"?l="float":e.isVector(l)?l=e.getVectorFromMatrix(c):l=c=a:l=c=a):l=c=a;const u=s.build(e,l),h=o?o.build(e,c):null,d=e.getFunctionOperator(i);if(n!=="void"){const f=e.renderer.coordinateSystem===Jn;if(i==="=="||i==="!="||i==="<"||i===">"||i==="<="||i===">=")return f?e.isVector(l)?e.format(`${this.getOperatorMethod(e,n)}( ${u}, ${h} )`,a,n):e.format(`( ${u} ${i} ${h} )`,a,n):e.format(`( ${u} ${i} ${h} )`,a,n);if(i==="%")return e.isInteger(c)?e.format(`( ${u} % ${h} )`,a,n):e.format(`${this.getOperatorMethod(e,a)}( ${u}, ${h} )`,a,n);if(i==="!"||i==="~")return e.format(`(${i}${u})`,l,n);if(d)return e.format(`${d}( ${u}, ${h} )`,a,n);if(e.isMatrix(l)&&c==="float")return e.format(`( ${h} ${i} ${u} )`,a,n);if(l==="float"&&e.isMatrix(c))return e.format(`${u} ${i} ${h}`,a,n);{let p=`( ${u} ${i} ${h} )`;return!f&&a==="bool"&&e.isVector(l)&&e.isVector(c)&&(p=`all${p}`),e.format(p,a,n)}}else if(l!=="void")return d?e.format(`${d}( ${u}, ${h} )`,a,n):e.isMatrix(l)&&c==="float"?e.format(`${h} ${i} ${u}`,a,n):e.format(`${u} ${i} ${h}`,a,n)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const hi=Ue(tn,"+").setParameterLength(2,1/0).setName("add"),Zn=Ue(tn,"-").setParameterLength(2,1/0).setName("sub"),yt=Ue(tn,"*").setParameterLength(2,1/0).setName("mul"),Sr=Ue(tn,"/").setParameterLength(2,1/0).setName("div"),zg=Ue(tn,"%").setParameterLength(2).setName("mod"),ST=Ue(tn,"==").setParameterLength(2).setName("equal"),xU=Ue(tn,"!=").setParameterLength(2).setName("notEqual"),bU=Ue(tn,"<").setParameterLength(2).setName("lessThan"),TU=Ue(tn,">").setParameterLength(2).setName("greaterThan"),SU=Ue(tn,"<=").setParameterLength(2).setName("lessThanEqual"),MU=Ue(tn,">=").setParameterLength(2).setName("greaterThanEqual"),EU=Ue(tn,"&&").setParameterLength(2,1/0).setName("and"),wU=Ue(tn,"||").setParameterLength(2,1/0).setName("or"),AU=Ue(tn,"!").setParameterLength(1).setName("not"),RU=Ue(tn,"^^").setParameterLength(2).setName("xor"),CU=Ue(tn,"&").setParameterLength(2).setName("bitAnd"),NU=Ue(tn,"~").setParameterLength(2).setName("bitNot"),PU=Ue(tn,"|").setParameterLength(2).setName("bitOr"),DU=Ue(tn,"^").setParameterLength(2).setName("bitXor"),LU=Ue(tn,"<<").setParameterLength(2).setName("shiftLeft"),IU=Ue(tn,">>").setParameterLength(2).setName("shiftRight"),UU=ce(([r])=>(r.addAssign(1),r)),FU=ce(([r])=>(r.subAssign(1),r)),OU=ce(([r])=>{const e=jt(r).toConst();return r.addAssign(1),e}),BU=ce(([r])=>{const e=jt(r).toConst();return r.subAssign(1),e});ne("add",hi);ne("sub",Zn);ne("mul",yt);ne("div",Sr);ne("mod",zg);ne("equal",ST);ne("notEqual",xU);ne("lessThan",bU);ne("greaterThan",TU);ne("lessThanEqual",SU);ne("greaterThanEqual",MU);ne("and",EU);ne("or",wU);ne("not",AU);ne("xor",RU);ne("bitAnd",CU);ne("bitNot",NU);ne("bitOr",PU);ne("bitXor",DU);ne("shiftLeft",LU);ne("shiftRight",IU);ne("incrementBefore",UU);ne("decrementBefore",FU);ne("increment",OU);ne("decrement",BU);const kU=(r,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),zg(jt(r),jt(e)));ne("modInt",kU);class H extends En{static get type(){return"MathNode"}constructor(e,n,i=null,s=null){if(super(),(e===H.MAX||e===H.MIN)&&arguments.length>3){let o=new H(e,n,i);for(let a=2;a<arguments.length-1;a++)o=new H(e,o,arguments[a]);n=o,i=arguments[arguments.length-1],s=null}this.method=e,this.aNode=n,this.bNode=i,this.cNode=s,this.isMathNode=!0}getInputType(e){const n=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,s=this.cNode?this.cNode.getNodeType(e):null,o=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i),l=e.isMatrix(s)?0:e.getTypeLength(s);return o>a&&o>l?n:a>l?i:l>o?s:n}getNodeType(e){const n=this.method;return n===H.LENGTH||n===H.DISTANCE||n===H.DOT?"float":n===H.CROSS?"vec3":n===H.ALL||n===H.ANY?"bool":n===H.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:n,bNode:i,method:s}=this;let o=null;if(s===H.ONE_MINUS)o=Zn(1,n);else if(s===H.RECIPROCAL)o=Sr(1,n);else if(s===H.DIFFERENCE)o=Fi(Zn(n,i));else if(s===H.TRANSFORM_DIRECTION){let a=n,l=i;e.isMatrix(a.getNodeType(e))?l=dt(ae(l),0):a=dt(ae(a),0);const c=yt(a,l).xyz;o=Bc(c)}return o!==null?o:super.setup(e)}generate(e,n){if(e.getNodeProperties(this).outputNode)return super.generate(e,n);let s=this.method;const o=this.getNodeType(e),a=this.getInputType(e),l=this.aNode,c=this.bNode,u=this.cNode,h=e.renderer.coordinateSystem;if(s===H.NEGATE)return e.format("( - "+l.build(e,a)+" )",o,n);{const d=[];return s===H.CROSS?d.push(l.build(e,o),c.build(e,o)):h===Jn&&s===H.STEP?d.push(l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":a),c.build(e,a)):h===Jn&&(s===H.MIN||s===H.MAX)?d.push(l.build(e,a),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":a)):s===H.REFRACT?d.push(l.build(e,a),c.build(e,a),u.build(e,"float")):s===H.MIX?d.push(l.build(e,a),c.build(e,a),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":a)):(h===Cs&&s===H.ATAN&&c!==null&&(s="atan2"),e.shaderStage!=="fragment"&&(s===H.DFDX||s===H.DFDY)&&(console.warn(`THREE.TSL: '${s}' is not supported in the ${e.shaderStage} stage.`),s="/*"+s+"*/"),d.push(l.build(e,a)),c!==null&&d.push(c.build(e,a)),u!==null&&d.push(u.build(e,a))),e.format(`${e.getMethod(s,o)}( ${d.join(", ")} )`,o,n)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}H.ALL="all";H.ANY="any";H.RADIANS="radians";H.DEGREES="degrees";H.EXP="exp";H.EXP2="exp2";H.LOG="log";H.LOG2="log2";H.SQRT="sqrt";H.INVERSE_SQRT="inversesqrt";H.FLOOR="floor";H.CEIL="ceil";H.NORMALIZE="normalize";H.FRACT="fract";H.SIN="sin";H.COS="cos";H.TAN="tan";H.ASIN="asin";H.ACOS="acos";H.ATAN="atan";H.ABS="abs";H.SIGN="sign";H.LENGTH="length";H.NEGATE="negate";H.ONE_MINUS="oneMinus";H.DFDX="dFdx";H.DFDY="dFdy";H.ROUND="round";H.RECIPROCAL="reciprocal";H.TRUNC="trunc";H.FWIDTH="fwidth";H.TRANSPOSE="transpose";H.DETERMINANT="determinant";H.INVERSE="inverse";H.EQUALS="equals";H.MIN="min";H.MAX="max";H.STEP="step";H.REFLECT="reflect";H.DISTANCE="distance";H.DIFFERENCE="difference";H.DOT="dot";H.CROSS="cross";H.POW="pow";H.TRANSFORM_DIRECTION="transformDirection";H.MIX="mix";H.CLAMP="clamp";H.REFRACT="refract";H.SMOOTHSTEP="smoothstep";H.FACEFORWARD="faceforward";const zU=se(1e-6),GU=se(Math.PI),VU=Ue(H,H.ALL).setParameterLength(1),HU=Ue(H,H.ANY).setParameterLength(1),WU=Ue(H,H.RADIANS).setParameterLength(1),$U=Ue(H,H.DEGREES).setParameterLength(1),MT=Ue(H,H.EXP).setParameterLength(1),Oc=Ue(H,H.EXP2).setParameterLength(1),ET=Ue(H,H.LOG).setParameterLength(1),ts=Ue(H,H.LOG2).setParameterLength(1),Gg=Ue(H,H.SQRT).setParameterLength(1),jU=Ue(H,H.INVERSE_SQRT).setParameterLength(1),po=Ue(H,H.FLOOR).setParameterLength(1),Vg=Ue(H,H.CEIL).setParameterLength(1),Bc=Ue(H,H.NORMALIZE).setParameterLength(1),Ls=Ue(H,H.FRACT).setParameterLength(1),Zi=Ue(H,H.SIN).setParameterLength(1),vs=Ue(H,H.COS).setParameterLength(1),qU=Ue(H,H.TAN).setParameterLength(1),XU=Ue(H,H.ASIN).setParameterLength(1),wT=Ue(H,H.ACOS).setParameterLength(1),AT=Ue(H,H.ATAN).setParameterLength(1,2),Fi=Ue(H,H.ABS).setParameterLength(1),Kh=Ue(H,H.SIGN).setParameterLength(1),ns=Ue(H,H.LENGTH).setParameterLength(1),YU=Ue(H,H.NEGATE).setParameterLength(1),KU=Ue(H,H.ONE_MINUS).setParameterLength(1),RT=Ue(H,H.DFDX).setParameterLength(1),CT=Ue(H,H.DFDY).setParameterLength(1),ZU=Ue(H,H.ROUND).setParameterLength(1),QU=Ue(H,H.RECIPROCAL).setParameterLength(1),JU=Ue(H,H.TRUNC).setParameterLength(1),eF=Ue(H,H.FWIDTH).setParameterLength(1),tF=Ue(H,H.TRANSPOSE).setParameterLength(1),nF=Ue(H,H.DETERMINANT).setParameterLength(1),iF=Ue(H,H.INVERSE).setParameterLength(1),rF=(r,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),ST(r,e)),el=Ue(H,H.MIN).setParameterLength(2,1/0),Wn=Ue(H,H.MAX).setParameterLength(2,1/0),NT=Ue(H,H.STEP).setParameterLength(2),sF=Ue(H,H.REFLECT).setParameterLength(2),oF=Ue(H,H.DISTANCE).setParameterLength(2),aF=Ue(H,H.DIFFERENCE).setParameterLength(2),Hg=Ue(H,H.DOT).setParameterLength(2),PT=Ue(H,H.CROSS).setParameterLength(2),vd=Ue(H,H.POW).setParameterLength(2),DT=r=>yt(r,r),lF=r=>yt(r,r,r),cF=r=>yt(r,r,r,r),uF=Ue(H,H.TRANSFORM_DIRECTION).setParameterLength(2),hF=r=>yt(Kh(r),vd(Fi(r),1/3)),LT=r=>Hg(r,r),Kt=Ue(H,H.MIX).setParameterLength(3),rs=(r,e=0,n=1)=>fe(new H(H.CLAMP,fe(r),fe(e),fe(n))),IT=r=>rs(r),UT=Ue(H,H.REFRACT).setParameterLength(3),Ps=Ue(H,H.SMOOTHSTEP).setParameterLength(3),dF=Ue(H,H.FACEFORWARD).setParameterLength(3),fF=ce(([r])=>{const i=43758.5453,s=Hg(r.xy,Se(12.9898,78.233)),o=zg(s,GU);return Ls(Zi(o).mul(i))}),pF=(r,e,n)=>Kt(e,n,r),mF=(r,e,n)=>Ps(e,n,r),gF=(r,e)=>NT(e,r),_F=(r,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),AT(r,e));ne("all",VU);ne("any",HU);ne("equals",rF);ne("radians",WU);ne("degrees",$U);ne("exp",MT);ne("exp2",Oc);ne("log",ET);ne("log2",ts);ne("sqrt",Gg);ne("inverseSqrt",jU);ne("floor",po);ne("ceil",Vg);ne("normalize",Bc);ne("fract",Ls);ne("sin",Zi);ne("cos",vs);ne("tan",qU);ne("asin",XU);ne("acos",wT);ne("atan",AT);ne("abs",Fi);ne("sign",Kh);ne("length",ns);ne("lengthSq",LT);ne("negate",YU);ne("oneMinus",KU);ne("dFdx",RT);ne("dFdy",CT);ne("round",ZU);ne("reciprocal",QU);ne("trunc",JU);ne("fwidth",eF);ne("atan2",_F);ne("min",el);ne("max",Wn);ne("step",gF);ne("reflect",sF);ne("distance",oF);ne("dot",Hg);ne("cross",PT);ne("pow",vd);ne("pow2",DT);ne("pow3",lF);ne("pow4",cF);ne("transformDirection",uF);ne("mix",pF);ne("clamp",rs);ne("refract",UT);ne("smoothstep",mF);ne("faceForward",dF);ne("difference",aF);ne("saturate",IT);ne("cbrt",hF);ne("transpose",tF);ne("determinant",nF);ne("inverse",iF);ne("rand",fF);class yF extends Ve{static get type(){return"ConditionalNode"}constructor(e,n,i=null){super(),this.condNode=e,this.ifNode=n,this.elseNode=i}getNodeType(e){const{ifNode:n,elseNode:i}=e.getNodeProperties(this);if(n===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const s=n.getNodeType(e);if(i!==null){const o=i.getNodeType(e);if(e.getTypeLength(o)>e.getTypeLength(s))return o}return s}setup(e){const n=this.condNode.cache(),i=this.ifNode.cache(),s=this.elseNode?this.elseNode.cache():null,o=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=o,s!==null&&(e.getDataFromNode(s).parentNodeBlock=o);const a=e.context.uniformFlow,l=e.getNodeProperties(this);l.condNode=n,l.ifNode=a?i:i.context({nodeBlock:i}),l.elseNode=s?a?s:s.context({nodeBlock:s}):null}generate(e,n){const i=this.getNodeType(e),s=e.getDataFromNode(this);if(s.nodeProperty!==void 0)return s.nodeProperty;const{condNode:o,ifNode:a,elseNode:l}=e.getNodeProperties(this),c=e.currentFunctionNode,u=n!=="void",h=u?As(i).build(e):"";s.nodeProperty=h;const d=o.build(e,"bool");if(e.context.uniformFlow&&l!==null){const m=a.build(e,i),y=l.build(e,i),_=e.getTernary(d,m,y);return e.format(_,i,n)}e.addFlowCode(`
${e.tab}if ( ${d} ) {

`).addFlowTab();let p=a.build(e,i);if(p&&(u?p=h+" = "+p+";":(p="return "+p+";",c===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),p="// "+p))),e.removeFlowTab().addFlowCode(e.tab+"	"+p+`

`+e.tab+"}"),l!==null){e.addFlowCode(` else {

`).addFlowTab();let m=l.build(e,i);m&&(u?m=h+" = "+m+";":(m="return "+m+";",c===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),m="// "+m))),e.removeFlowTab().addFlowCode(e.tab+"	"+m+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(h,i,n)}}const ei=wt(yF).setParameterLength(2,3);ne("select",ei);class FT extends Ve{static get type(){return"ContextNode"}constructor(e,n={}){super(),this.isContextNode=!0,this.node=e,this.value=n}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}getMemberType(e,n){return this.node.getMemberType(e,n)}analyze(e){const n=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(n)}setup(e){const n=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(n)}generate(e,n){const i=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e,n);return e.setContext(i),s}}const xd=wt(FT).setParameterLength(1,2),vF=r=>xd(r,{uniformFlow:!0}),OT=(r,e)=>xd(r,{nodeName:e});function xF(r,e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),OT(r,e)}ne("context",xd);ne("label",xF);ne("uniformFlow",vF);ne("setName",OT);class Eh extends Ve{static get type(){return"VarNode"}constructor(e,n=null,i=!1){super(),this.node=e,this.name=n,this.global=!0,this.isVarNode=!0,this.readOnly=i,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,n){return this.node.getMemberType(e,n)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){return this.intent===!0&&e[0].getNodeProperties(this).assign!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:n,name:i,readOnly:s}=this,{renderer:o}=e,a=o.backend.isWebGPUBackend===!0;let l=!1,c=!1;s&&(l=e.isDeterministic(n),c=a?s:l);const u=e.getVectorType(this.getNodeType(e)),h=n.build(e,u),d=e.getVarFromNode(this,i,u,void 0,c),f=e.getPropertyName(d);let p=f;if(c)if(a)p=l?`const ${f}`:`let ${f}`;else{const m=n.getArrayCount(e);p=`const ${e.getVar(d.type,f,m)}`}return e.addLineFlowCode(`${p} = ${h}`,this),f}}const Wg=wt(Eh),bF=(r,e=null)=>Wg(r,e).toStack(),TF=(r,e=null)=>Wg(r,e,!0).toStack(),SF=r=>Ig()===null?r:Wg(r).setIntent(!0).toStack();ne("toVar",bF);ne("toConst",TF);ne("toVarIntent",SF);class MF extends Ve{static get type(){return"SubBuild"}constructor(e,n,i=null){super(i),this.node=e,this.name=n,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const n=this.node.getNodeType(e);return e.removeSubBuild(),n}build(e,...n){e.addSubBuild(this.name);const i=this.node.build(e,...n);return e.removeSubBuild(),i}}const gc=(r,e,n=null)=>fe(new MF(fe(r),e,n));class EF extends Ve{static get type(){return"VaryingNode"}constructor(e,n=null){super(),this.node=e,this.name=n,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,n=null){return this.interpolationType=e,this.interpolationSampling=n,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const n=e.getNodeProperties(this);let i=n.varying;if(i===void 0){const s=this.name,o=this.getNodeType(e),a=this.interpolationType,l=this.interpolationSampling;n.varying=i=e.getVaryingFromNode(this,s,o,a,l),n.node=gc(this.node,"VERTEX")}return i.needsInterpolation||(i.needsInterpolation=e.shaderStage==="fragment"),i}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(qu.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(qu.VERTEX,this.node)}generate(e){const n=e.getSubBuildProperty("property",e.currentStack),i=e.getNodeProperties(this),s=this.setupVarying(e);if(i[n]===void 0){const o=this.getNodeType(e),a=e.getPropertyName(s,qu.VERTEX);e.flowNodeFromShaderStage(qu.VERTEX,i.node,o,a),i[n]=a}return e.getPropertyName(s)}}const Is=wt(EF).setParameterLength(1,2),wF=r=>Is(r);ne("toVarying",Is);ne("toVertexStage",wF);ne("varying",(...r)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),Is(...r)));ne("vertexStage",(...r)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),Is(...r)));const AF=ce(([r])=>{const e=r.mul(.9478672986).add(.0521327014).pow(2.4),n=r.mul(.0773993808),i=r.lessThanEqual(.04045);return Kt(e,n,i)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),RF=ce(([r])=>{const e=r.pow(.41666).mul(1.055).sub(.055),n=r.mul(12.92),i=r.lessThanEqual(.0031308);return Kt(e,n,i)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),$g="WorkingColorSpace",CF="OutputColorSpace";class BT extends En{static get type(){return"ColorSpaceNode"}constructor(e,n,i){super("vec4"),this.colorNode=e,this.source=n,this.target=i}resolveColorSpace(e,n){return n===$g?Je.workingColorSpace:n===CF?e.context.outputColorSpace||e.renderer.outputColorSpace:n}setup(e){const{colorNode:n}=this,i=this.resolveColorSpace(e,this.source),s=this.resolveColorSpace(e,this.target);let o=n;return Je.enabled===!1||i===s||!i||!s||(Je.getTransfer(i)===Pe&&(o=dt(AF(o.rgb),o.a)),Je.getPrimaries(i)!==Je.getPrimaries(s)&&(o=dt(ti(Je._getMatrix(new ut,i,s)).mul(o.rgb),o.a)),Je.getTransfer(s)===Pe&&(o=dt(RF(o.rgb),o.a))),o}}const NF=(r,e)=>fe(new BT(fe(r),$g,e)),jg=(r,e)=>fe(new BT(fe(r),e,$g));ne("workingToColorSpace",NF);ne("colorSpaceToWorking",jg);let PF=class extends tu{static get type(){return"ReferenceElementNode"}constructor(e,n){super(e,n),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const n=super.generate(e),i=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(n,i,s)}};class kT extends Ve{static get type(){return"ReferenceBaseNode"}constructor(e,n,i=null,s=null){super(),this.property=e,this.uniformType=n,this.object=i,this.count=s,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=_t.OBJECT}setGroup(e){return this.group=e,this}element(e){return fe(new PF(this,fe(e)))}setNodeType(e){const n=ot(null,e);this.group!==null&&n.setGroup(this.group),this.node=n}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:n}=this;let i=e[n[0]];for(let s=1;s<n.length;s++)i=i[n[s]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const DF=(r,e,n)=>fe(new kT(r,e,n));class LF extends kT{static get type(){return"RendererReferenceNode"}constructor(e,n,i=null){super(e,n,i),this.renderer=i,this.setGroup(Ke)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const IF=(r,e,n=null)=>fe(new LF(r,e,n));class UF extends En{static get type(){return"ToneMappingNode"}constructor(e,n=OF,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=n,this.colorNode=i}customCacheKey(){return Vh(this.toneMapping)}setup(e){const n=this.colorNode||e.context.color,i=this.toneMapping;if(i===ci)return n;let s=null;const o=e.renderer.library.getToneMappingFunction(i);return o!==null?s=dt(o(n.rgb,this.exposureNode),n.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),s=n),s}}const FF=(r,e,n)=>fe(new UF(r,fe(e),fe(n))),OF=IF("toneMappingExposure","float");ne("toneMapping",(r,e,n)=>FF(e,n,r));class BF extends Cg{static get type(){return"BufferAttributeNode"}constructor(e,n=null,i=0,s=0){super(e,n),this.isBufferNode=!0,this.bufferType=n,this.bufferStride=i,this.bufferOffset=s,this.usage=Oh,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let n=e.globalCache.getData(this.value);return n===void 0&&(n={node:this},e.globalCache.setData(this.value,n)),n.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const n=this.getNodeType(e),i=this.value,s=e.getTypeLength(n),o=this.bufferStride||s,a=this.bufferOffset,l=i.isInterleavedBuffer===!0?i:new mg(i,o),c=new Uc(l,s,a);l.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const n=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,n),s=e.getPropertyName(i);let o=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=s,o=s):o=Is(this).build(e,n),o}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const qg=(r,e=null,n=0,i=0)=>fe(new BF(r,e,n,i)),kF=(r,e=null,n=0,i=0)=>qg(r,e,n,i).setUsage(oa),Ov=(r,e=null,n=0,i=0)=>qg(r,e,n,i).setInstanced(!0),Bv=(r,e=null,n=0,i=0)=>kF(r,e,n,i).setInstanced(!0);ne("toAttribute",r=>qg(r.value));class zF extends Ve{static get type(){return"ComputeNode"}constructor(e,n){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=n,this.count=null,this.version=1,this.name="",this.updateBeforeType=_t.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const n=this.computeNode.build(e);if(n){const i=e.getNodeProperties(this);i.outputComputeNode=n.outputNode,n.outputNode=null}return n}generate(e,n){const{shaderStage:i}=e;if(i==="compute"){const s=this.computeNode.build(e,"void");s!==""&&e.addLineFlowCode(s,this)}else{const o=e.getNodeProperties(this).outputComputeNode;if(o)return o.build(e,n)}}}const zT=(r,e=[64])=>{(e.length===0||e.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let n=0;n<e.length;n++){const i=e[n];(typeof i!="number"||i<=0||!Number.isInteger(i))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${n} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return fe(new zF(fe(r),e))},GF=(r,e,n)=>zT(r,n).setCount(e);ne("compute",GF);ne("computeKernel",zT);class VF extends Ve{static get type(){return"CacheNode"}constructor(e,n=!0){super(),this.node=e,this.parent=n,this.isCacheNode=!0}getNodeType(e){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const s=this.node.getNodeType(e);return e.setCache(n),s}build(e,...n){const i=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const o=this.node.build(e,...n);return e.setCache(i),o}}const wh=(r,e)=>fe(new VF(fe(r),e));ne("cache",wh);class HF extends Ve{static get type(){return"BypassNode"}constructor(e,n){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=n}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const n=this.callNode.build(e,"void");return n!==""&&e.addLineFlowCode(n,this),this.outputNode.build(e)}}const WF=wt(HF).setParameterLength(2);ne("bypass",WF);class GT extends Ve{static get type(){return"RemapNode"}constructor(e,n,i,s=se(0),o=se(1)){super(),this.node=e,this.inLowNode=n,this.inHighNode=i,this.outLowNode=s,this.outHighNode=o,this.doClamp=!0}setup(){const{node:e,inLowNode:n,inHighNode:i,outLowNode:s,outHighNode:o,doClamp:a}=this;let l=e.sub(n).div(i.sub(n));return a===!0&&(l=l.clamp()),l.mul(o.sub(s)).add(s)}}const $F=wt(GT,null,null,{doClamp:!1}).setParameterLength(3,5),jF=wt(GT).setParameterLength(3,5);ne("remap",$F);ne("remapClamp",jF);class Ah extends Ve{static get type(){return"ExpressionNode"}constructor(e="",n="void"){super(n),this.snippet=e}generate(e,n){const i=this.getNodeType(e),s=this.snippet;if(i==="void")e.addLineFlowCode(s,this);else return e.format(s,i,n)}}const tl=wt(Ah).setParameterLength(1,2),qF=r=>(r?ei(r,tl("discard")):tl("discard")).toStack();ne("discard",qF);class XF extends En{static get type(){return"RenderOutputNode"}constructor(e,n,i){super("vec4"),this.colorNode=e,this.toneMapping=n,this.outputColorSpace=i,this.isRenderOutputNode=!0}setup({context:e}){let n=this.colorNode||e.color;const i=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||ci,s=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||ri;return i!==ci&&(n=n.toneMapping(i)),s!==ri&&s!==Je.workingColorSpace&&(n=n.workingToColorSpace(s)),n}}const YF=(r,e=null,n=null)=>fe(new XF(fe(r),e,n));ne("renderOutput",YF);class KF extends En{static get type(){return"DebugNode"}constructor(e,n=null){super(),this.node=e,this.callback=n}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const n=this.callback,i=this.node.build(e),s="--- TSL debug - "+e.shaderStage+" shader ---",o="-".repeat(s.length);let a="";return a+="// #"+s+`#
`,a+=e.flow.code.replace(/^\t/mg,"")+`
`,a+="/* ... */ "+i+` /* ... */
`,a+="// #"+o+`#
`,n!==null?n(e,a):console.log(a),i}}const ZF=(r,e=null)=>fe(new KF(fe(r),e)).toStack();ne("debug",ZF);class VT extends Ve{static get type(){return"AttributeNode"}constructor(e,n=null){super(n),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let n=this.nodeType;if(n===null){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const s=e.geometry.getAttribute(i);n=e.getTypeFromAttribute(s)}else n="float"}return n}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const n=this.getAttributeName(e),i=this.getNodeType(e);if(e.hasGeometryAttribute(n)===!0){const o=e.geometry.getAttribute(n),a=e.getTypeFromAttribute(o),l=e.getAttribute(n,a);return e.shaderStage==="vertex"?e.format(l.name,a,i):Is(this).build(e,i)}else return console.warn(`AttributeNode: Vertex attribute "${n}" not found on geometry.`),e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Ds=(r,e=null)=>fe(new VT(r,e)),iu=(r=0)=>Ds("uv"+(r>0?r:""),"vec2");class QF extends Ve{static get type(){return"TextureSizeNode"}constructor(e,n=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=n}generate(e,n){const i=this.textureNode.build(e,"property"),s=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${s} )`,this.getNodeType(e),n)}}const ba=wt(QF).setParameterLength(1,2);class JF extends nu{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=_t.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,n=e.images,i=n&&n.length>0?n[0]&&n[0].image||n[0]:e.image;if(i&&i.width!==void 0){const{width:s,height:o}=i;this.value=Math.log2(Math.max(s,o))}}}const eO=wt(JF).setParameterLength(1),HT=new fn;class pl extends nu{static get type(){return"TextureNode"}constructor(e=HT,n=null,i=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=n,this.levelNode=i,this.biasNode=s,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=_t.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(n===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Wt?"uvec4":this.value.type===An?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return iu(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=ot(this.value.matrix)),this._matrixUniform.mul(ae(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?_t.OBJECT:_t.NONE,this}setupUV(e,n){const i=this.value;return e.isFlipY()&&(i.image instanceof ImageBitmap&&i.flipY===!0||i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0||i.isDepthTexture===!0)&&(this.sampler?n=n.flipY():n=n.setY(jt(ba(this,this.levelNode).y).sub(n.y).sub(1))),n}setup(e){const n=e.getNodeProperties(this);n.referenceNode=this.referenceNode;const i=this.value;if(!i||i.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let s=this.uvNode;(s===null||e.context.forceUVContext===!0)&&e.context.getUV&&(s=e.context.getUV(this,e)),s||(s=this.getDefaultUV()),this.updateMatrix===!0&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let o=this.levelNode;o===null&&e.context.getTextureLevel&&(o=e.context.getTextureLevel(this)),n.uvNode=s,n.levelNode=o,n.biasNode=this.biasNode,n.compareNode=this.compareNode,n.gradNode=this.gradNode,n.depthNode=this.depthNode,n.offsetNode=this.offsetNode}generateUV(e,n){return n.build(e,this.sampler===!0?"vec2":"ivec2")}generateOffset(e,n){return n.build(e,"ivec2")}generateSnippet(e,n,i,s,o,a,l,c,u){const h=this.value;let d;return s?d=e.generateTextureLevel(h,n,i,s,a,u):o?d=e.generateTextureBias(h,n,i,o,a,u):c?d=e.generateTextureGrad(h,n,i,c,a,u):l?d=e.generateTextureCompare(h,n,i,l,a,u):this.sampler===!1?d=e.generateTextureLoad(h,n,i,a,u):d=e.generateTexture(h,n,i,a,u),d}generate(e,n){const i=this.value,s=e.getNodeProperties(this),o=super.generate(e,"property");if(/^sampler/.test(n))return o+"_sampler";if(e.isReference(n))return o;{const a=e.getDataFromNode(this);let l=a.propertyName;if(l===void 0){const{uvNode:h,levelNode:d,biasNode:f,compareNode:p,depthNode:m,gradNode:y,offsetNode:_}=s,g=this.generateUV(e,h),v=d?d.build(e,"float"):null,x=f?f.build(e,"float"):null,b=m?m.build(e,"int"):null,T=p?p.build(e,"float"):null,S=y?[y[0].build(e,"vec2"),y[1].build(e,"vec2")]:null,M=_?this.generateOffset(e,_):null,A=e.getVarFromNode(this);l=e.getPropertyName(A);const E=this.generateSnippet(e,o,g,v,x,b,T,S,M);e.addLineFlowCode(`${l} = ${E}`,this),a.snippet=E,a.propertyName=l}let c=l;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(c=jg(tl(c,u),i.colorSpace).setup(e).build(e,u)),e.format(c,u,n)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const n=this.clone();return n.uvNode=fe(e),n.referenceNode=this.getBase(),fe(n)}load(e){return this.sample(e).setSampler(!1)}blur(e){const n=this.clone();n.biasNode=fe(e).mul(eO(n)),n.referenceNode=this.getBase();const i=n.value;return n.generateMipmaps===!1&&(i&&i.generateMipmaps===!1||i.minFilter===qt||i.magFilter===qt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),n.biasNode=null),fe(n)}level(e){const n=this.clone();return n.levelNode=fe(e),n.referenceNode=this.getBase(),fe(n)}size(e){return ba(this,e)}bias(e){const n=this.clone();return n.biasNode=fe(e),n.referenceNode=this.getBase(),fe(n)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(e){const n=this.clone();return n.compareNode=fe(e),n.referenceNode=this.getBase(),fe(n)}grad(e,n){const i=this.clone();return i.gradNode=[fe(e),fe(n)],i.referenceNode=this.getBase(),fe(i)}depth(e){const n=this.clone();return n.depthNode=fe(e),n.referenceNode=this.getBase(),fe(n)}offset(e){const n=this.clone();return n.offsetNode=fe(e),n.referenceNode=this.getBase(),fe(n)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,n=this._matrixUniform;n!==null&&(n.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}const tO=wt(pl).setParameterLength(1,4).setName("texture"),Et=(r=HT,e=null,n=null,i=null)=>{let s;return r&&r.isTextureNode===!0?(s=fe(r.clone()),s.referenceNode=r.getBase(),e!==null&&(s.uvNode=fe(e)),n!==null&&(s.levelNode=fe(n)),i!==null&&(s.biasNode=fe(i))):s=tO(r,e,n,i),s},Xi=(...r)=>Et(...r).setSampler(!1);class WT extends nu{static get type(){return"BufferNode"}constructor(e,n,i=0){super(e,n),this.isBufferNode=!0,this.bufferType=n,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const $T=(r,e,n)=>fe(new WT(r,e,n));class nO extends tu{static get type(){return"UniformArrayElementNode"}constructor(e,n){super(e,n),this.isArrayBufferElementNode=!0}generate(e){const n=super.generate(e),i=this.getNodeType(),s=this.node.getPaddedType();return e.format(n,s,i)}}class iO extends WT{static get type(){return"UniformArrayNode"}constructor(e,n=null){super(null),this.array=e,this.elementType=n===null?Wh(e[0]):n,this.paddedType=this.getPaddedType(),this.updateType=_t.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let n="vec4";return e==="mat2"?n="mat2":/mat/.test(e)===!0?n="mat4":e.charAt(0)==="i"?n="ivec4":e.charAt(0)==="u"&&(n="uvec4"),n}update(){const{array:e,value:n}=this,i=this.elementType;if(i==="float"||i==="int"||i==="uint")for(let s=0;s<e.length;s++){const o=s*4;n[o]=e[s]}else if(i==="color")for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.r,n[o+1]=a.g,n[o+2]=a.b||0}else if(i==="mat2")for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.elements[0],n[o+1]=a.elements[1],n[o+2]=a.elements[2],n[o+3]=a.elements[3]}else if(i==="mat3")for(let s=0;s<e.length;s++){const o=s*16,a=e[s];n[o]=a.elements[0],n[o+1]=a.elements[1],n[o+2]=a.elements[2],n[o+4]=a.elements[3],n[o+5]=a.elements[4],n[o+6]=a.elements[5],n[o+8]=a.elements[6],n[o+9]=a.elements[7],n[o+10]=a.elements[8],n[o+15]=1}else if(i==="mat4")for(let s=0;s<e.length;s++){const o=s*16,a=e[s];for(let l=0;l<a.elements.length;l++)n[o+l]=a.elements[l]}else for(let s=0;s<e.length;s++){const o=s*4,a=e[s];n[o]=a.x,n[o+1]=a.y,n[o+2]=a.z||0,n[o+3]=a.w||0}}setup(e){const n=this.array.length,i=this.elementType;let s=Float32Array;const o=this.paddedType,a=e.getTypeLength(o);return i.charAt(0)==="i"&&(s=Int32Array),i.charAt(0)==="u"&&(s=Uint32Array),this.value=new s(n*a),this.bufferCount=n,this.bufferType=o,super.setup(e)}element(e){return fe(new nO(this,fe(e)))}}const Qi=(r,e)=>fe(new iO(r,e));class rO extends Ve{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const ru=wt(rO).setParameterLength(1);let Bl,kl;class Gt extends Ve{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===Gt.DPR?"float":this.scope===Gt.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=_t.NONE;return(this.scope===Gt.SIZE||this.scope===Gt.VIEWPORT||this.scope===Gt.DPR)&&(e=_t.RENDER),this.updateType=e,e}update({renderer:e}){const n=e.getRenderTarget();this.scope===Gt.VIEWPORT?n!==null?kl.copy(n.viewport):(e.getViewport(kl),kl.multiplyScalar(e.getPixelRatio())):this.scope===Gt.DPR?this._output.value=e.getPixelRatio():n!==null?(Bl.width=n.width,Bl.height=n.height):e.getDrawingBufferSize(Bl)}setup(){const e=this.scope;let n=null;return e===Gt.SIZE?n=ot(Bl||(Bl=new de)):e===Gt.VIEWPORT?n=ot(kl||(kl=new et)):e===Gt.DPR?n=ot(1):n=Se(bd.div(dm)),this._output=n,n}generate(e){if(this.scope===Gt.COORDINATE){let n=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(dm).outputNode.build(e);n=`${e.getType("vec2")}( ${n}.x, ${i}.y - ${n}.y )`}return n}return super.generate(e)}}Gt.COORDINATE="coordinate";Gt.VIEWPORT="viewport";Gt.SIZE="size";Gt.UV="uv";Gt.DPR="dpr";const sO=Te(Gt,Gt.DPR),Ta=Te(Gt,Gt.UV),dm=Te(Gt,Gt.SIZE),bd=Te(Gt,Gt.COORDINATE),jT=Te(Gt,Gt.VIEWPORT),oO=jT.zw;jT.xy;const Xg=ot(0,"uint").setName("u_cameraIndex").setGroup(kg("cameraIndex")).toVarying("v_cameraIndex"),ao=ot("float").setName("cameraNear").setGroup(Ke).onRenderUpdate(({camera:r})=>r.near),lo=ot("float").setName("cameraFar").setGroup(Ke).onRenderUpdate(({camera:r})=>r.far),qT=ce(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(const s of r.cameras)n.push(s.projectionMatrix);e=Qi(n).setGroup(Ke).setName("cameraProjectionMatrices").element(r.isMultiViewCamera?ru("gl_ViewID_OVR"):Xg).toConst("cameraProjectionMatrix")}else e=ot("mat4").setName("cameraProjectionMatrix").setGroup(Ke).onRenderUpdate(({camera:n})=>n.projectionMatrix);return e}).once()(),as=ce(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(const s of r.cameras)n.push(s.matrixWorldInverse);e=Qi(n).setGroup(Ke).setName("cameraViewMatrices").element(r.isMultiViewCamera?ru("gl_ViewID_OVR"):Xg).toConst("cameraViewMatrix")}else e=ot("mat4").setName("cameraViewMatrix").setGroup(Ke).onRenderUpdate(({camera:n})=>n.matrixWorldInverse);return e}).once()(),aO=ce(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const n=[];for(let s=0,o=r.cameras.length;s<o;s++)n.push(new L);e=Qi(n).setGroup(Ke).setName("cameraPositions").onRenderUpdate(({camera:s},o)=>{const a=s.cameras,l=o.array;for(let c=0,u=a.length;c<u;c++)l[c].setFromMatrixPosition(a[c].matrixWorld)}).element(r.isMultiViewCamera?ru("gl_ViewID_OVR"):Xg).toConst("cameraPosition")}else e=ot(new L).setName("cameraPosition").setGroup(Ke).onRenderUpdate(({camera:n},i)=>i.value.setFromMatrixPosition(n.matrixWorld));return e}).once()(),kv=new Xc;class Ot extends Ve{static get type(){return"Object3DNode"}constructor(e,n=null){super(),this.scope=e,this.object3d=n,this.updateType=_t.OBJECT,this.uniformNode=new nu(null)}getNodeType(){const e=this.scope;if(e===Ot.WORLD_MATRIX)return"mat4";if(e===Ot.POSITION||e===Ot.VIEW_POSITION||e===Ot.DIRECTION||e===Ot.SCALE)return"vec3";if(e===Ot.RADIUS)return"float"}update(e){const n=this.object3d,i=this.uniformNode,s=this.scope;if(s===Ot.WORLD_MATRIX)i.value=n.matrixWorld;else if(s===Ot.POSITION)i.value=i.value||new L,i.value.setFromMatrixPosition(n.matrixWorld);else if(s===Ot.SCALE)i.value=i.value||new L,i.value.setFromMatrixScale(n.matrixWorld);else if(s===Ot.DIRECTION)i.value=i.value||new L,n.getWorldDirection(i.value);else if(s===Ot.VIEW_POSITION){const o=e.camera;i.value=i.value||new L,i.value.setFromMatrixPosition(n.matrixWorld),i.value.applyMatrix4(o.matrixWorldInverse)}else if(s===Ot.RADIUS){const o=e.object.geometry;o.boundingSphere===null&&o.computeBoundingSphere(),kv.copy(o.boundingSphere).applyMatrix4(n.matrixWorld),i.value=kv.radius}}generate(e){const n=this.scope;return n===Ot.WORLD_MATRIX?this.uniformNode.nodeType="mat4":n===Ot.POSITION||n===Ot.VIEW_POSITION||n===Ot.DIRECTION||n===Ot.SCALE?this.uniformNode.nodeType="vec3":n===Ot.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Ot.WORLD_MATRIX="worldMatrix";Ot.POSITION="position";Ot.SCALE="scale";Ot.VIEW_POSITION="viewPosition";Ot.DIRECTION="direction";Ot.RADIUS="radius";const lO=wt(Ot,Ot.POSITION).setParameterLength(1);class Vi extends Ot{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}Vi.DIRECTION;const bo=Te(Vi,Vi.WORLD_MATRIX);Vi.POSITION;Vi.SCALE;Vi.VIEW_POSITION;Vi.RADIUS;const cO=ot(new ut).onObjectUpdate(({object:r},e)=>e.value.getNormalMatrix(r.matrixWorld)),Td=ce(r=>r.renderer.overrideNodes.modelViewMatrix||uO).once()().toVar("modelViewMatrix"),uO=as.mul(bo),zv=ce(r=>(r.context.isHighPrecisionModelViewMatrix=!0,ot("mat4").onObjectUpdate(({object:e,camera:n})=>e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),Gv=ce(r=>{const e=r.context.isHighPrecisionModelViewMatrix;return ot("mat3").onObjectUpdate(({object:n,camera:i})=>(e!==!0&&n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld),n.normalMatrix.getNormalMatrix(n.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Sd=Ds("position","vec3"),Vn=Sd.toVarying("positionLocal"),Vv=Sd.toVarying("positionPrevious"),nl=ce(r=>bo.mul(Vn).xyz.toVarying(r.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),XT=ce(()=>Vn.transformDirection(bo).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),dn=ce(r=>r.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),on=dn.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class hO extends Ve{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{material:n}=e;return n.side===kt?"false":e.getFrontFacing()}}const dO=Te(hO),YT=se(dO).mul(2).sub(1),su=ce(([r],{material:e})=>{const n=e.side;return n===kt?r=r.mul(-1):n===zn&&(r=r.mul(YT)),r}),KT=Ds("normal","vec3"),Mr=ce(r=>r.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),ae(0,1,0)):KT,"vec3").once()().toVar("normalLocal"),fO=dn.dFdx().cross(dn.dFdy()).normalize().toVar("normalFlat"),kc=ce(r=>{let e;return r.material.flatShading===!0?e=fO:e=ZT(Mr).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),pO=ce(r=>{let e=kc.transformDirection(as);return r.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),Ut=ce(({subBuildFn:r,material:e,context:n})=>{let i;return r==="NORMAL"||r==="VERTEX"?(i=kc,e.flatShading!==!0&&(i=su(i))):i=n.setupNormal().context({getUV:null}),i},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),ml=Ut.transformDirection(as).toVar("normalWorld"),ha=ce(({subBuildFn:r,context:e})=>{let n;return r==="NORMAL"||r==="VERTEX"?n=Ut:n=e.setupClearcoatNormal().context({getUV:null}),n},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),mO=ce(([r,e=bo])=>{const n=ti(e),i=r.div(ae(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2])));return n.mul(i).xyz}),ZT=ce(([r],e)=>{const n=e.renderer.overrideNodes.modelNormalViewMatrix;if(n!==null)return n.transformDirection(r);const i=cO.mul(r);return as.transformDirection(i)});ce(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),Ut)).once(["NORMAL","VERTEX"])();ce(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),ml)).once(["NORMAL","VERTEX"])();ce(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),ha)).once(["NORMAL","VERTEX"])();const Hv=new ui,Vf=new bt,gO=ot(0).onReference(({material:r})=>r).onObjectUpdate(({material:r})=>r.refractionRatio),Hf=ot(1).onReference(({material:r})=>r).onObjectUpdate(function({material:r,scene:e}){return r.envMap?r.envMapIntensity:e.environmentIntensity}),QT=ot(new bt).onReference(function(r){return r.material}).onObjectUpdate(function({material:r,scene:e}){const n=e.environment!==null&&r.envMap===null?e.environmentRotation:r.envMapRotation;return n?(Hv.copy(n),Vf.makeRotationFromEuler(Hv)):Vf.identity(),Vf}),_O=on.negate().reflect(Ut),yO=on.negate().refract(Ut,gO),vO=_O.transformDirection(as).toVar("reflectVector"),xO=yO.transformDirection(as).toVar("reflectVector"),bO=new Yc;class TO extends pl{static get type(){return"CubeTextureNode"}constructor(e,n=null,i=null,s=null){super(e,n,i,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===xr?vO:e.mapping===br?xO:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),ae(0,0,0))}setUpdateMatrix(){}setupUV(e,n){const i=this.value;return(e.renderer.coordinateSystem===Cs||!i.isRenderTargetTexture)&&(n=ae(n.x.negate(),n.yz)),QT.mul(n)}generateUV(e,n){return n.build(e,"vec3")}}const SO=wt(TO).setParameterLength(1,4).setName("cubeTexture"),zc=(r=bO,e=null,n=null,i=null)=>{let s;return r&&r.isCubeTextureNode===!0?(s=fe(r.clone()),s.referenceNode=r,e!==null&&(s.uvNode=fe(e)),n!==null&&(s.levelNode=fe(n)),i!==null&&(s.biasNode=fe(i))):s=SO(r,e,n,i),s};class MO extends tu{static get type(){return"ReferenceElementNode"}constructor(e,n){super(e,n),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const n=super.generate(e),i=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(n,i,s)}}class Yg extends Ve{static get type(){return"ReferenceNode"}constructor(e,n,i=null,s=null){super(),this.property=e,this.uniformType=n,this.object=i,this.count=s,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=_t.OBJECT}element(e){return fe(new MO(this,fe(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let n=null;this.count!==null?n=$T(null,e,this.count):Array.isArray(this.getValueFromReference())?n=Qi(null,e):e==="texture"?n=Et(null):e==="cubeTexture"?n=zc(null):n=ot(null,e),this.group!==null&&n.setGroup(this.group),this.name!==null&&n.setName(this.name),this.node=n}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:n}=this;let i=e[n[0]];for(let s=1;s<n.length;s++)i=i[n[s]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Ht=(r,e,n)=>fe(new Yg(r,e,n)),Wv=(r,e,n,i)=>fe(new Yg(r,e,i,n));class EO extends Yg{static get type(){return"MaterialReferenceNode"}constructor(e,n,i=null){super(e,n,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const xs=(r,e,n=null)=>fe(new EO(r,e,n)),JT=iu(),wO=dn.dFdx(),AO=dn.dFdy(),eS=JT.dFdx(),tS=JT.dFdy(),nS=Ut,iS=AO.cross(nS),rS=nS.cross(wO),fm=iS.mul(eS.x).add(rS.mul(tS.x)),pm=iS.mul(eS.y).add(rS.mul(tS.y)),$v=fm.dot(fm).max(pm.dot(pm)),sS=$v.equal(0).select(0,$v.inverseSqrt()),RO=fm.mul(sS).toVar("tangentViewFrame"),CO=pm.mul(sS).toVar("bitangentViewFrame"),oS=ce(r=>(r.geometry.hasAttribute("tangent")===!1&&r.geometry.computeTangents(),Ds("tangent","vec4")))(),Kg=oS.xyz.toVar("tangentLocal"),aS=ce(({subBuildFn:r,geometry:e,material:n})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=Td.mul(dt(Kg,0)).xyz.toVarying("v_tangentView").normalize():i=RO,n.flatShading!==!0&&(i=su(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),NO=ce(([r,e],{subBuildFn:n,material:i})=>{let s=r.mul(oS.w).xyz;return n==="NORMAL"&&i.flatShading!==!0&&(s=s.toVarying(e)),s}).once(["NORMAL"]),PO=ce(({subBuildFn:r,geometry:e,material:n})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=NO(Ut.cross(aS),"v_bitangentView").normalize():i=CO,n.flatShading!==!0&&(i=su(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),rc=ti(aS,PO,Ut).toVar("TBNViewMatrix"),DO=ce(()=>{let r=xa.cross(on);return r=r.cross(xa).normalize(),r=Kt(r,Ut,to.mul(jr.oneMinus()).oneMinus().pow2().pow2()).normalize(),r}).once()();class LO extends En{static get type(){return"NormalMapNode"}constructor(e,n=null){super("vec3"),this.node=e,this.scaleNode=n,this.normalMapType=is}setup({material:e}){const{normalMapType:n,scaleNode:i}=this;let s=this.node.mul(2).sub(1);if(i!==null){let a=i;e.flatShading===!0&&(a=su(a)),s=ae(s.xy.mul(a),s.z)}let o=null;return n===vb?o=ZT(s):n===is?o=rc.mul(s).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${n}`),o=Ut),o}}const jv=wt(LO).setParameterLength(1,2),IO=ce(({textureNode:r,bumpScale:e})=>{const n=s=>r.cache().context({getUV:o=>s(o.uvNode||iu()),forceUVContext:!0}),i=se(n(s=>s));return Se(se(n(s=>s.add(s.dFdx()))).sub(i),se(n(s=>s.add(s.dFdy()))).sub(i)).mul(e)}),UO=ce(r=>{const{surf_pos:e,surf_norm:n,dHdxy:i}=r,s=e.dFdx().normalize(),o=e.dFdy().normalize(),a=n,l=o.cross(a),c=a.cross(s),u=s.dot(l).mul(YT),h=u.sign().mul(i.x.mul(l).add(i.y.mul(c)));return u.abs().mul(n).sub(h).normalize()});class FO extends En{static get type(){return"BumpMapNode"}constructor(e,n=null){super("vec3"),this.textureNode=e,this.scaleNode=n}setup(){const e=this.scaleNode!==null?this.scaleNode:1,n=IO({textureNode:this.textureNode,bumpScale:e});return UO({surf_pos:dn,surf_norm:Ut,dHdxy:n})}}const OO=wt(FO).setParameterLength(1,2),qv=new Map;class ie extends Ve{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,n){let i=qv.get(e);return i===void 0&&(i=xs(e,n),qv.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const n=e.context.material,i=this.scope;let s=null;if(i===ie.COLOR){const o=n.color!==void 0?this.getColor(i):ae();n.map&&n.map.isTexture===!0?s=o.mul(this.getTexture("map")):s=o}else if(i===ie.OPACITY){const o=this.getFloat(i);n.alphaMap&&n.alphaMap.isTexture===!0?s=o.mul(this.getTexture("alpha")):s=o}else if(i===ie.SPECULAR_STRENGTH)n.specularMap&&n.specularMap.isTexture===!0?s=this.getTexture("specular").r:s=se(1);else if(i===ie.SPECULAR_INTENSITY){const o=this.getFloat(i);n.specularIntensityMap&&n.specularIntensityMap.isTexture===!0?s=o.mul(this.getTexture(i).a):s=o}else if(i===ie.SPECULAR_COLOR){const o=this.getColor(i);n.specularColorMap&&n.specularColorMap.isTexture===!0?s=o.mul(this.getTexture(i).rgb):s=o}else if(i===ie.ROUGHNESS){const o=this.getFloat(i);n.roughnessMap&&n.roughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).g):s=o}else if(i===ie.METALNESS){const o=this.getFloat(i);n.metalnessMap&&n.metalnessMap.isTexture===!0?s=o.mul(this.getTexture(i).b):s=o}else if(i===ie.EMISSIVE){const o=this.getFloat("emissiveIntensity"),a=this.getColor(i).mul(o);n.emissiveMap&&n.emissiveMap.isTexture===!0?s=a.mul(this.getTexture(i)):s=a}else if(i===ie.NORMAL)n.normalMap?(s=jv(this.getTexture("normal"),this.getCache("normalScale","vec2")),s.normalMapType=n.normalMapType):n.bumpMap?s=OO(this.getTexture("bump").r,this.getFloat("bumpScale")):s=Ut;else if(i===ie.CLEARCOAT){const o=this.getFloat(i);n.clearcoatMap&&n.clearcoatMap.isTexture===!0?s=o.mul(this.getTexture(i).r):s=o}else if(i===ie.CLEARCOAT_ROUGHNESS){const o=this.getFloat(i);n.clearcoatRoughnessMap&&n.clearcoatRoughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).r):s=o}else if(i===ie.CLEARCOAT_NORMAL)n.clearcoatNormalMap?s=jv(this.getTexture(i),this.getCache(i+"Scale","vec2")):s=Ut;else if(i===ie.SHEEN){const o=this.getColor("sheenColor").mul(this.getFloat("sheen"));n.sheenColorMap&&n.sheenColorMap.isTexture===!0?s=o.mul(this.getTexture("sheenColor").rgb):s=o}else if(i===ie.SHEEN_ROUGHNESS){const o=this.getFloat(i);n.sheenRoughnessMap&&n.sheenRoughnessMap.isTexture===!0?s=o.mul(this.getTexture(i).a):s=o,s=s.clamp(.07,1)}else if(i===ie.ANISOTROPY)if(n.anisotropyMap&&n.anisotropyMap.isTexture===!0){const o=this.getTexture(i);s=Fg(zl.x,zl.y,zl.y.negate(),zl.x).mul(o.rg.mul(2).sub(Se(1)).normalize().mul(o.b))}else s=zl;else if(i===ie.IRIDESCENCE_THICKNESS){const o=Ht("1","float",n.iridescenceThicknessRange);if(n.iridescenceThicknessMap){const a=Ht("0","float",n.iridescenceThicknessRange);s=o.sub(a).mul(this.getTexture(i).g).add(a)}else s=o}else if(i===ie.TRANSMISSION){const o=this.getFloat(i);n.transmissionMap?s=o.mul(this.getTexture(i).r):s=o}else if(i===ie.THICKNESS){const o=this.getFloat(i);n.thicknessMap?s=o.mul(this.getTexture(i).g):s=o}else if(i===ie.IOR)s=this.getFloat(i);else if(i===ie.LIGHT_MAP)s=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===ie.AO)s=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(i===ie.LINE_DASH_OFFSET)s=n.dashOffset?this.getFloat(i):se(0);else{const o=this.getNodeType(e);s=this.getCache(i,o)}return s}}ie.ALPHA_TEST="alphaTest";ie.COLOR="color";ie.OPACITY="opacity";ie.SHININESS="shininess";ie.SPECULAR="specular";ie.SPECULAR_STRENGTH="specularStrength";ie.SPECULAR_INTENSITY="specularIntensity";ie.SPECULAR_COLOR="specularColor";ie.REFLECTIVITY="reflectivity";ie.ROUGHNESS="roughness";ie.METALNESS="metalness";ie.NORMAL="normal";ie.CLEARCOAT="clearcoat";ie.CLEARCOAT_ROUGHNESS="clearcoatRoughness";ie.CLEARCOAT_NORMAL="clearcoatNormal";ie.EMISSIVE="emissive";ie.ROTATION="rotation";ie.SHEEN="sheen";ie.SHEEN_ROUGHNESS="sheenRoughness";ie.ANISOTROPY="anisotropy";ie.IRIDESCENCE="iridescence";ie.IRIDESCENCE_IOR="iridescenceIOR";ie.IRIDESCENCE_THICKNESS="iridescenceThickness";ie.IOR="ior";ie.TRANSMISSION="transmission";ie.THICKNESS="thickness";ie.ATTENUATION_DISTANCE="attenuationDistance";ie.ATTENUATION_COLOR="attenuationColor";ie.LINE_SCALE="scale";ie.LINE_DASH_SIZE="dashSize";ie.LINE_GAP_SIZE="gapSize";ie.LINE_WIDTH="linewidth";ie.LINE_DASH_OFFSET="dashOffset";ie.POINT_SIZE="size";ie.DISPERSION="dispersion";ie.LIGHT_MAP="light";ie.AO="ao";const BO=Te(ie,ie.ALPHA_TEST),kO=Te(ie,ie.COLOR),zO=Te(ie,ie.SHININESS),GO=Te(ie,ie.EMISSIVE),lS=Te(ie,ie.OPACITY),VO=Te(ie,ie.SPECULAR),Xv=Te(ie,ie.SPECULAR_INTENSITY),HO=Te(ie,ie.SPECULAR_COLOR),Rh=Te(ie,ie.SPECULAR_STRENGTH),Wf=Te(ie,ie.REFLECTIVITY),WO=Te(ie,ie.ROUGHNESS),$O=Te(ie,ie.METALNESS),jO=Te(ie,ie.NORMAL),qO=Te(ie,ie.CLEARCOAT),XO=Te(ie,ie.CLEARCOAT_ROUGHNESS),YO=Te(ie,ie.CLEARCOAT_NORMAL),KO=Te(ie,ie.ROTATION),ZO=Te(ie,ie.SHEEN),QO=Te(ie,ie.SHEEN_ROUGHNESS),JO=Te(ie,ie.ANISOTROPY),eB=Te(ie,ie.IRIDESCENCE),tB=Te(ie,ie.IRIDESCENCE_IOR),nB=Te(ie,ie.IRIDESCENCE_THICKNESS),iB=Te(ie,ie.TRANSMISSION),rB=Te(ie,ie.THICKNESS),sB=Te(ie,ie.IOR),oB=Te(ie,ie.ATTENUATION_DISTANCE),aB=Te(ie,ie.ATTENUATION_COLOR),lB=Te(ie,ie.LINE_SCALE),cB=Te(ie,ie.LINE_DASH_SIZE),uB=Te(ie,ie.LINE_GAP_SIZE);ie.LINE_WIDTH;const hB=Te(ie,ie.LINE_DASH_OFFSET),dB=Te(ie,ie.POINT_SIZE),fB=Te(ie,ie.DISPERSION),cS=Te(ie,ie.LIGHT_MAP),pB=Te(ie,ie.AO),zl=ot(new de).onReference(function(r){return r.material}).onRenderUpdate(function({material:r}){this.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation))}),uS=ce(r=>r.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class Zt extends Ve{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const n=this.getNodeType(e),i=this.scope;let s;if(i===Zt.VERTEX)s=e.getVertexIndex();else if(i===Zt.INSTANCE)s=e.getInstanceIndex();else if(i===Zt.DRAW)s=e.getDrawIndex();else if(i===Zt.INVOCATION_LOCAL)s=e.getInvocationLocalIndex();else if(i===Zt.INVOCATION_SUBGROUP)s=e.getInvocationSubgroupIndex();else if(i===Zt.SUBGROUP)s=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+i);let o;return e.shaderStage==="vertex"||e.shaderStage==="compute"?o=s:o=Is(this).build(e,n),o}}Zt.VERTEX="vertex";Zt.INSTANCE="instance";Zt.SUBGROUP="subgroup";Zt.INVOCATION_LOCAL="invocationLocal";Zt.INVOCATION_SUBGROUP="invocationSubgroup";Zt.DRAW="draw";const mB=Te(Zt,Zt.VERTEX),Zg=Te(Zt,Zt.INSTANCE);Zt.SUBGROUP;Zt.INVOCATION_SUBGROUP;Zt.INVOCATION_LOCAL;const gB=Te(Zt,Zt.DRAW);class _B extends Ve{static get type(){return"InstanceNode"}constructor(e,n,i=null){super("void"),this.count=e,this.instanceMatrix=n,this.instanceColor=i,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=_t.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{instanceMatrix:n,instanceColor:i}=this,{count:s}=n;let{instanceMatrixNode:o,instanceColorNode:a}=this;if(o===null){if(s<=1e3)o=$T(n.array,"mat4",Math.max(s,1)).element(Zg);else{const c=new O1(n.array,16,1);this.buffer=c;const u=n.usage===oa?Bv:Ov,h=[u(c,"vec4",16,0),u(c,"vec4",16,4),u(c,"vec4",16,8),u(c,"vec4",16,12)];o=va(...h)}this.instanceMatrixNode=o}if(i&&a===null){const c=new qC(i.array,3),u=i.usage===oa?Bv:Ov;this.bufferColor=c,a=ae(u(c,"vec3",3,0)),this.instanceColorNode=a}const l=o.mul(Vn).xyz;if(Vn.assign(l),e.hasGeometryAttribute("normal")){const c=mO(Mr,o);Mr.assign(c)}this.instanceColorNode!==null&&jh("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==oa&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==oa&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}class yB extends _B{static get type(){return"InstancedMeshNode"}constructor(e){const{count:n,instanceMatrix:i,instanceColor:s}=e;super(n,i,s),this.instancedMesh=e}}const vB=wt(yB).setParameterLength(1);class xB extends Ve{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Zg:this.batchingIdNode=gB);const i=ce(([m])=>{const y=jt(ba(Xi(this.batchMesh._indirectTexture),0).x),_=jt(m).mod(y),g=jt(m).div(y);return Xi(this.batchMesh._indirectTexture,Vr(_,g)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(jt(this.batchingIdNode)),s=this.batchMesh._matricesTexture,o=jt(ba(Xi(s),0).x),a=se(i).mul(4).toInt().toVar(),l=a.mod(o),c=a.div(o),u=va(Xi(s,Vr(l,c)),Xi(s,Vr(l.add(1),c)),Xi(s,Vr(l.add(2),c)),Xi(s,Vr(l.add(3),c))),h=this.batchMesh._colorsTexture;if(h!==null){const y=ce(([_])=>{const g=jt(ba(Xi(h),0).x),v=_,x=v.mod(g),b=v.div(g);return Xi(h,Vr(x,b)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(i);jh("vec3","vBatchColor").assign(y)}const d=ti(u);Vn.assign(u.mul(Vn));const f=Mr.div(ae(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),p=d.mul(f).xyz;Mr.assign(p),e.hasGeometryAttribute("tangent")&&Kg.mulAssign(d)}}const bB=wt(xB).setParameterLength(1),Yv=new WeakMap;class TB extends Ve{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=_t.OBJECT,this.skinIndexNode=Ds("skinIndex","uvec4"),this.skinWeightNode=Ds("skinWeight","vec4"),this.bindMatrixNode=Ht("bindMatrix","mat4"),this.bindMatrixInverseNode=Ht("bindMatrixInverse","mat4"),this.boneMatricesNode=Wv("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=Vn,this.toPositionNode=Vn,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,n=this.positionNode){const{skinIndexNode:i,skinWeightNode:s,bindMatrixNode:o,bindMatrixInverseNode:a}=this,l=e.element(i.x),c=e.element(i.y),u=e.element(i.z),h=e.element(i.w),d=o.mul(n),f=hi(l.mul(s.x).mul(d),c.mul(s.y).mul(d),u.mul(s.z).mul(d),h.mul(s.w).mul(d));return a.mul(f).xyz}getSkinnedNormal(e=this.boneMatricesNode,n=Mr){const{skinIndexNode:i,skinWeightNode:s,bindMatrixNode:o,bindMatrixInverseNode:a}=this,l=e.element(i.x),c=e.element(i.y),u=e.element(i.z),h=e.element(i.w);let d=hi(s.x.mul(l),s.y.mul(c),s.z.mul(u),s.w.mul(h));return d=a.mul(d).mul(o),d.transformDirection(n).xyz}getPreviousSkinnedPosition(e){const n=e.object;return this.previousBoneMatricesNode===null&&(n.skeleton.previousBoneMatrices=new Float32Array(n.skeleton.boneMatrices),this.previousBoneMatricesNode=Wv("skeleton.previousBoneMatrices","mat4",n.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Vv)}needsPreviousBoneMatrices(e){const n=e.renderer.getMRT();return n&&n.has("velocity")||uT(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Vv.assign(this.getPreviousSkinnedPosition(e));const n=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(n),e.hasGeometryAttribute("normal")){const i=this.getSkinnedNormal();Mr.assign(i),e.hasGeometryAttribute("tangent")&&Kg.assign(i)}return n}generate(e,n){if(n!=="void")return super.generate(e,n)}update(e){const n=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;Yv.get(n)!==e.frameId&&(Yv.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const SB=r=>fe(new TB(r));class MB extends Ve{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const n=e.getNodeProperties(this);if(n.stackNode!==void 0)return n;const i={};for(let a=0,l=this.params.length-1;a<l;a++){const c=this.params[a],u=c.isNode!==!0&&c.name||this.getVarName(a),h=c.isNode!==!0&&c.type||"int";i[u]=tl(u,h)}const s=e.addStack();n.returnsNode=this.params[this.params.length-1](i,e),n.stackNode=s;const o=this.params[0];return o.isNode!==!0&&typeof o.update=="function"&&(n.updateNode=ce(this.params[0].update)(i)),e.removeStack(),n}getNodeType(e){const{returnsNode:n}=this.getProperties(e);return n?n.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const n=this.getProperties(e),i=this.params,s=n.stackNode;for(let l=0,c=i.length-1;l<c;l++){const u=i[l];let h=!1,d=null,f=null,p=null,m=null,y=null,_=null;u.isNode?u.getNodeType(e)==="bool"?(h=!0,m="bool",f=u.build(e,m)):(m="int",p=this.getVarName(l),d="0",f=u.build(e,m),y="<"):(m=u.type||"int",p=u.name||this.getVarName(l),d=u.start,f=u.end,y=u.condition,_=u.update,typeof d=="number"?d=e.generateConst(m,d):d&&d.isNode&&(d=d.build(e,m)),typeof f=="number"?f=e.generateConst(m,f):f&&f.isNode&&(f=f.build(e,m)),d!==void 0&&f===void 0?(d=d+" - 1",f="0",y=">="):f!==void 0&&d===void 0&&(d="0",y="<"),y===void 0&&(Number(d)>Number(f)?y=">=":y="<"));let g;if(h)g=`while ( ${f} )`;else{const v={start:d,end:f},x=v.start,b=v.end;let T;const S=()=>y.includes("<")?"+=":"-=";if(_!=null)switch(typeof _){case"function":T=e.flowStagesNode(n.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":T=p+" "+S()+" "+e.generateConst(m,_);break;case"string":T=p+" "+_;break;default:_.isNode?T=p+" "+S()+" "+_.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),T="break /* invalid update */")}else m==="int"||m==="uint"?_=y.includes("<")?"++":"--":_=S()+" 1.",T=p+" "+_;const M=e.getVar(m,p)+" = "+x,A=p+" "+y+" "+b;g=`for ( ${M}; ${A}; ${T} )`}e.addFlowCode((l===0?`
`:"")+e.tab+g+` {

`).addFlowTab()}const o=s.build(e,"void"),a=n.returnsNode?n.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+o);for(let l=0,c=this.params.length-1;l<c;l++)e.addFlowCode((l===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),a}}const Ji=(...r)=>fe(new MB(ya(r,"int"))).toStack(),EB=()=>tl("break").toStack(),$f=new WeakMap,vi=new et,Kv=ce(({bufferMap:r,influence:e,stride:n,width:i,depth:s,offset:o})=>{const a=jt(mB).mul(n).add(o),l=a.div(i),c=a.sub(l.mul(i));return Xi(r,Vr(c,l)).depth(s).xyz.mul(e)});function wB(r){const e=r.morphAttributes.position!==void 0,n=r.morphAttributes.normal!==void 0,i=r.morphAttributes.color!==void 0,s=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,o=s!==void 0?s.length:0;let a=$f.get(r);if(a===void 0||a.count!==o){let g=function(){y.dispose(),$f.delete(r),r.removeEventListener("dispose",g)};a!==void 0&&a.texture.dispose();const l=r.morphAttributes.position||[],c=r.morphAttributes.normal||[],u=r.morphAttributes.color||[];let h=0;e===!0&&(h=1),n===!0&&(h=2),i===!0&&(h=3);let d=r.attributes.position.count*h,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const m=new Float32Array(d*f*4*o),y=new ug(m,d,f,o);y.type=hn,y.needsUpdate=!0;const _=h*4;for(let v=0;v<o;v++){const x=l[v],b=c[v],T=u[v],S=d*f*4*v;for(let M=0;M<x.count;M++){const A=M*_;e===!0&&(vi.fromBufferAttribute(x,M),m[S+A+0]=vi.x,m[S+A+1]=vi.y,m[S+A+2]=vi.z,m[S+A+3]=0),n===!0&&(vi.fromBufferAttribute(b,M),m[S+A+4]=vi.x,m[S+A+5]=vi.y,m[S+A+6]=vi.z,m[S+A+7]=0),i===!0&&(vi.fromBufferAttribute(T,M),m[S+A+8]=vi.x,m[S+A+9]=vi.y,m[S+A+10]=vi.z,m[S+A+11]=T.itemSize===4?vi.w:1)}}a={count:o,texture:y,stride:h,size:new de(d,f)},$f.set(r,a),r.addEventListener("dispose",g)}return a}class AB extends Ve{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=ot(1),this.updateType=_t.OBJECT}setup(e){const{geometry:n}=e,i=n.morphAttributes.position!==void 0,s=n.hasAttribute("normal")&&n.morphAttributes.normal!==void 0,o=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,a=o!==void 0?o.length:0,{texture:l,stride:c,size:u}=wB(n);i===!0&&Vn.mulAssign(this.morphBaseInfluence),s===!0&&Mr.mulAssign(this.morphBaseInfluence);const h=jt(u.width);Ji(a,({i:d})=>{const f=se(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?f.assign(Xi(this.mesh.morphTexture,Vr(jt(d).add(1),jt(Zg))).r):f.assign(Ht("morphTargetInfluences","float").element(d).toVar()),un(f.notEqual(0),()=>{i===!0&&Vn.addAssign(Kv({bufferMap:l,influence:f,stride:c,width:h,depth:d,offset:jt(0)})),s===!0&&Mr.addAssign(Kv({bufferMap:l,influence:f,stride:c,width:h,depth:d,offset:jt(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((n,i)=>n+i,0)}}const RB=wt(AB).setParameterLength(1);class gl extends Ve{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class CB extends gl{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class NB extends FT{static get type(){return"LightingContextNode"}constructor(e,n=null,i=null,s=null){super(e),this.lightingModel=n,this.backdropNode=i,this.backdropAlphaNode=s,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:n}=this,i=ae().toVar("directDiffuse"),s=ae().toVar("directSpecular"),o=ae().toVar("indirectDiffuse"),a=ae().toVar("indirectSpecular"),l={directDiffuse:i,directSpecular:s,indirectDiffuse:o,indirectSpecular:a};return{radiance:ae().toVar("radiance"),irradiance:ae().toVar("irradiance"),iblIrradiance:ae().toVar("iblIrradiance"),ambientOcclusion:se(1).toVar("ambientOcclusion"),reflectedLight:l,backdrop:e,backdropAlpha:n}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const PB=wt(NB);class DB extends gl{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}const Qo=new de;class hS extends pl{static get type(){return"ViewportTextureNode"}constructor(e=Ta,n=null,i=null){let s=null;i===null?(s=new JC,s.minFilter=si,i=s):s=i,super(i,e,n),this.generateMipmaps=!1,this.defaultFramebuffer=s,this.isOutputTextureNode=!0,this.updateBeforeType=_t.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(e=null){let n,i;if(this.referenceNode?(n=this.referenceNode.defaultFramebuffer,i=this.referenceNode._cacheTextures):(n=this.defaultFramebuffer,i=this._cacheTextures),e===null)return n;if(i.has(e)===!1){const s=n.clone();i.set(e,s)}return i.get(e)}updateReference(e){const n=e.renderer.getRenderTarget();return this.value=this.getTextureForReference(n),this.value}updateBefore(e){const n=e.renderer,i=n.getRenderTarget();i===null?n.getDrawingBufferSize(Qo):Qo.set(i.width,i.height);const s=this.getTextureForReference(i);(s.image.width!==Qo.width||s.image.height!==Qo.height)&&(s.image.width=Qo.width,s.image.height=Qo.height,s.needsUpdate=!0);const o=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,n.copyFramebufferToTexture(s),s.generateMipmaps=o}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const dS=wt(hS,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let Ku=null;class LB extends hS{static get type(){return"ViewportDepthTextureNode"}constructor(e=Ta,n=null){Ku===null&&(Ku=new zi),super(e,n,Ku)}getTextureForReference(){return Ku}}const IB=wt(LB).setParameterLength(0,2);class oi extends Ve{static get type(){return"ViewportDepthNode"}constructor(e,n=null){super("float"),this.scope=e,this.valueNode=n,this.isViewportDepthNode=!0}generate(e){const{scope:n}=this;return n===oi.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:n}=this,i=this.valueNode;let s=null;if(n===oi.DEPTH_BASE)i!==null&&(s=mS().assign(i));else if(n===oi.DEPTH)e.isPerspectiveCamera?s=UB(dn.z,ao,lo):s=_c(dn.z,ao,lo);else if(n===oi.LINEAR_DEPTH)if(i!==null)if(e.isPerspectiveCamera){const o=fS(i,ao,lo);s=_c(o,ao,lo)}else s=i;else s=_c(dn.z,ao,lo);return s}}oi.DEPTH_BASE="depthBase";oi.DEPTH="depth";oi.LINEAR_DEPTH="linearDepth";const _c=(r,e,n)=>r.add(e).div(e.sub(n)),UB=(r,e,n)=>e.add(r).mul(n).div(n.sub(e).mul(r)),fS=(r,e,n)=>e.mul(n).div(n.sub(e).mul(r).sub(n)),pS=(r,e,n)=>{e=e.max(1e-6).toVar();const i=ts(r.negate().div(e)),s=ts(n.div(e));return i.div(s)},mS=wt(oi,oi.DEPTH_BASE),gS=Te(oi,oi.DEPTH),FB=wt(oi,oi.LINEAR_DEPTH).setParameterLength(0,1);IB();gS.assign=r=>mS(r);class Gi extends Ve{static get type(){return"ClippingNode"}constructor(e=Gi.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const n=e.clippingContext,{intersectionPlanes:i,unionPlanes:s}=n;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Gi.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(i,s):this.scope===Gi.HARDWARE?this.setupHardwareClipping(s,e):this.setupDefault(i,s)}setupAlphaToCoverage(e,n){return ce(()=>{const i=se().toVar("distanceToPlane"),s=se().toVar("distanceToGradient"),o=se(1).toVar("clipOpacity"),a=n.length;if(this.hardwareClipping===!1&&a>0){const c=Qi(n).setGroup(Ke);Ji(a,({i:u})=>{const h=c.element(u);i.assign(dn.dot(h.xyz).negate().add(h.w)),s.assign(i.fwidth().div(2)),o.mulAssign(Ps(s.negate(),s,i))})}const l=e.length;if(l>0){const c=Qi(e).setGroup(Ke),u=se(1).toVar("intersectionClipOpacity");Ji(l,({i:h})=>{const d=c.element(h);i.assign(dn.dot(d.xyz).negate().add(d.w)),s.assign(i.fwidth().div(2)),u.mulAssign(Ps(s.negate(),s,i).oneMinus())}),o.mulAssign(u.oneMinus())}Ct.a.mulAssign(o),Ct.a.equal(0).discard()})()}setupDefault(e,n){return ce(()=>{const i=n.length;if(this.hardwareClipping===!1&&i>0){const o=Qi(n).setGroup(Ke);Ji(i,({i:a})=>{const l=o.element(a);dn.dot(l.xyz).greaterThan(l.w).discard()})}const s=e.length;if(s>0){const o=Qi(e).setGroup(Ke),a=Ug(!0).toVar("clipped");Ji(s,({i:l})=>{const c=o.element(l);a.assign(dn.dot(c.xyz).greaterThan(c.w).and(a))}),a.discard()}})()}setupHardwareClipping(e,n){const i=e.length;return n.enableHardwareClipping(i),ce(()=>{const s=Qi(e).setGroup(Ke),o=ru(n.getClipDistance());Ji(i,({i:a})=>{const l=s.element(a),c=dn.dot(l.xyz).sub(l.w).negate();o.element(a).assign(c)})})()}}Gi.ALPHA_TO_COVERAGE="alphaToCoverage";Gi.DEFAULT="default";Gi.HARDWARE="hardware";const OB=()=>fe(new Gi),BB=()=>fe(new Gi(Gi.ALPHA_TO_COVERAGE)),kB=()=>fe(new Gi(Gi.HARDWARE)),zB=.05,Zv=ce(([r])=>Ls(yt(1e4,Zi(yt(17,r.x).add(yt(.1,r.y)))).mul(hi(.1,Fi(Zi(yt(13,r.y).add(r.x))))))),Qv=ce(([r])=>Zv(Se(Zv(r.xy),r.z))),GB=ce(([r])=>{const e=Wn(ns(RT(r.xyz)),ns(CT(r.xyz))),n=se(1).div(se(zB).mul(e)).toVar("pixScale"),i=Se(Oc(po(ts(n))),Oc(Vg(ts(n)))),s=Se(Qv(po(i.x.mul(r.xyz))),Qv(po(i.y.mul(r.xyz)))),o=Ls(ts(n)),a=hi(yt(o.oneMinus(),s.x),yt(o,s.y)),l=el(o,o.oneMinus()),c=ae(a.mul(a).div(yt(2,l).mul(Zn(1,l))),a.sub(yt(.5,l)).div(Zn(1,l)),Zn(1,Zn(1,a).mul(Zn(1,a)).div(yt(2,l).mul(Zn(1,l))))),u=a.lessThan(l.oneMinus()).select(a.lessThan(l).select(c.x,c.y),c.z);return rs(u,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class VB extends VT{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const n=this.getAttributeName(e),i=e.hasGeometryAttribute(n);let s;return i===!0?s=super.generate(e):s=e.generateConst(this.nodeType,new et(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const HB=(r=0)=>fe(new VB(r)),WB=ce(([r])=>dt(r.rgb.mul(r.a),r.a),{color:"vec4",return:"vec4"});class vn extends Hn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+cT(this)}build(e){this.setup(e)}setupObserver(e){return new MI(e)}setup(e){e.context.setupNormal=()=>gc(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const n=e.renderer,i=n.getRenderTarget();e.addStack();const s=gc(this.setupVertex(e),"VERTEX"),o=this.vertexNode||s;e.stack.outputNode=o,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let a;const l=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(i!==null?i.depthBuffer===!0&&this.setupDepth(e):n.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const c=this.setupLighting(e);l!==null&&e.stack.add(l);const u=dt(c,Ct.a).max(0);a=this.setupOutput(e,u),mc.assign(a);const h=this.outputNode!==null;if(h&&(a=this.outputNode),i!==null){const d=n.getMRT(),f=this.mrtNode;d!==null?(h&&mc.assign(a),a=d,f!==null&&(a=d.merge(f))):f!==null&&(a=f)}}else{let c=this.fragmentNode;c.isOutputStructNode!==!0&&(c=dt(c)),a=this.setupOutput(e,c)}e.stack.outputNode=a,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:n,intersectionPlanes:i}=e.clippingContext;let s=null;if(n.length>0||i.length>0){const o=e.renderer.samples;this.alphaToCoverage&&o>1?s=BB():e.stack.add(OB())}return s}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const n=e.clippingContext.unionPlanes.length;n>0&&n<=8&&e.isAvailable("clipDistance")&&(e.stack.add(kB()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:n,camera:i}=e;let s=this.depthNode;if(s===null){const o=n.getMRT();o&&o.has("depth")?s=o.get("depth"):n.logarithmicDepthBuffer===!0&&(i.isPerspectiveCamera?s=pS(dn.z,ao,lo):s=_c(dn.z,ao,lo))}s!==null&&gS.assign(s).toStack()}setupPositionView(){return Td.mul(Vn).xyz}setupModelViewProjection(){return qT.mul(dn)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),uS}setupPosition(e){const{object:n,geometry:i}=e;if((i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&RB(n).toStack(),n.isSkinnedMesh===!0&&SB(n).toStack(),this.displacementMap){const s=xs("displacementMap","texture"),o=xs("displacementScale","float"),a=xs("displacementBias","float");Vn.addAssign(Mr.normalize().mul(s.x.mul(o).add(a)))}return n.isBatchedMesh&&bB(n).toStack(),n.isInstancedMesh&&n.instanceMatrix&&n.instanceMatrix.isInstancedBufferAttribute===!0&&vB(n).toStack(),this.positionNode!==null&&Vn.assign(gc(this.positionNode,"POSITION","vec3")),Vn}setupDiffuseColor({object:e,geometry:n}){this.maskNode!==null&&Ug(this.maskNode).not().discard();let i=this.colorNode?dt(this.colorNode):kO;this.vertexColors===!0&&n.hasAttribute("color")&&(i=i.mul(HB())),e.instanceColor&&(i=jh("vec3","vInstanceColor").mul(i)),e.isBatchedMesh&&e._colorsTexture&&(i=jh("vec3","vBatchColor").mul(i)),Ct.assign(i);const s=this.opacityNode?se(this.opacityNode):lS;Ct.a.assign(Ct.a.mul(s));let o=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(o=this.alphaTestNode!==null?se(this.alphaTestNode):BO,Ct.a.lessThanEqual(o).discard()),this.alphaHash===!0&&Ct.a.lessThan(GB(Vn)).discard(),this.transparent===!1&&this.blending===Mi&&this.alphaToCoverage===!1?Ct.a.assign(1):o===null&&Ct.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return this.lights===!0?ae(0):Ct.rgb}setupNormal(){return this.normalNode?ae(this.normalNode):jO}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?xs("envMap","cubeTexture"):xs("envMap","texture")),e}setupLightMap(e){let n=null;return e.material.lightMap&&(n=new DB(cS)),n}setupLights(e){const n=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&n.push(i);const s=this.setupLightMap(e);if(s&&s.isLightingNode&&n.push(s),this.aoNode!==null||e.material.aoMap){const a=this.aoNode!==null?this.aoNode:pB;n.push(new CB(a))}let o=this.lightsNode||e.lightsNode;return n.length>0&&(o=e.renderer.lighting.createNode([...o.getLights(),...n])),o}setupLightingModel(){}setupLighting(e){const{material:n}=e,{backdropNode:i,backdropAlphaNode:s,emissiveNode:o}=this,l=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let c=this.setupOutgoingLight(e);if(l&&l.getScope().hasLights){const u=this.setupLightingModel(e)||null;c=PB(l,u,i,s)}else i!==null&&(c=ae(s!==null?Kt(c,i,s):i));return(o&&o.isNode===!0||n.emissive&&n.emissive.isColor===!0)&&(Iv.assign(ae(o||GO)),c=c.add(Iv)),c}setupFog(e,n){const i=e.fogNode;return i&&(mc.assign(n),n=dt(i.toVar())),n}setupPremultipliedAlpha(e,n){return WB(n)}setupOutput(e,n){return this.fog===!0&&(n=this.setupFog(e,n)),this.premultipliedAlpha===!0&&(n=this.setupPremultipliedAlpha(e,n)),n}setDefaultValues(e){for(const i in e){const s=e[i];this[i]===void 0&&(this[i]=s,s&&s.clone&&(this[i]=s.clone()))}const n=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in n)Object.getOwnPropertyDescriptor(this.constructor.prototype,i)===void 0&&n[i].get!==void 0&&Object.defineProperty(this.constructor.prototype,i,n[i])}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});const i=Hn.prototype.toJSON.call(this,e),s=Hh(this);i.inputNodes={};for(const{property:a,childNode:l}of s)i.inputNodes[a]=l.toJSON(e).uuid;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(n){const a=o(e.textures),l=o(e.images),c=o(e.nodes);a.length>0&&(i.textures=a),l.length>0&&(i.images=l),c.length>0&&(i.nodes=c)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const $B=new dd;class jB extends vn{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues($B),this.setValues(e)}}const qB=new M1;class XB extends vn{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(qB),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?se(this.offsetNode):hB,n=this.dashScaleNode?se(this.dashScaleNode):lB,i=this.dashSizeNode?se(this.dashSizeNode):cB,s=this.gapSizeNode?se(this.gapSizeNode):uB;Gf.assign(i),Uv.assign(s);const o=Is(Ds("lineDistance").mul(n));(e?o.add(e):o).mod(Gf.add(Uv)).greaterThan(Gf).discard()}}const YB=r=>fe(r).mul(.5).add(.5),KB=new x1;class ZB extends vn{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(KB),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?se(this.opacityNode):lS;Ct.assign(jg(dt(YB(Ut),e),Bn))}}const _S=ce(([r=XT])=>{const e=r.z.atan(r.x).mul(1/(Math.PI*2)).add(.5),n=r.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Se(e,n)});class yS extends wb{constructor(e=1,n={}){super(e,n),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,n){const i=n.minFilter,s=n.generateMipmaps;n.generateMipmaps=!0,this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const o=new Mo(5,5,5),a=_S(XT),l=new vn;l.colorNode=Et(n,a,0),l.side=kt,l.blending=li;const c=new yn(o,l),u=new hd;u.add(c),n.minFilter===si&&(n.minFilter=Tn);const h=new Eb(1,10,this),d=e.getMRT();return e.setMRT(null),h.update(e,u),e.setMRT(d),n.minFilter=i,n.currentGenerateMipmaps=s,c.geometry.dispose(),c.material.dispose(),this}}const yc=new WeakMap;class QB extends En{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=zc(null);const n=new Yc;n.isRenderTargetTexture=!0,this._defaultTexture=n,this.updateBeforeType=_t.RENDER}updateBefore(e){const{renderer:n,material:i}=e,s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const o=s.isTextureNode?s.value:i[s.property];if(o&&o.isTexture){const a=o.mapping;if(a===Aa||a===Ra){if(yc.has(o)){const l=yc.get(o);Jv(l,o.mapping),this._cubeTexture=l}else{const l=o.image;if(JB(l)){const c=new yS(l.height);c.fromEquirectangularTexture(n,o),Jv(c.texture,o.mapping),this._cubeTexture=c.texture,yc.set(o,c.texture),o.addEventListener("dispose",vS)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function JB(r){return r==null?!1:r.height>0}function vS(r){const e=r.target;e.removeEventListener("dispose",vS);const n=yc.get(e);n!==void 0&&(yc.delete(e),n.dispose())}function Jv(r,e){e===Aa?r.mapping=xr:e===Ra&&(r.mapping=br)}const xS=wt(QB).setParameterLength(1);class Qg extends gl{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=xS(this.envNode)}}class e3 extends gl{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const n=se(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(n)}}class Md{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class bS extends Md{constructor(){super()}indirect({context:e}){const n=e.ambientOcclusion,i=e.reflectedLight,s=e.irradianceLightMap;i.indirectDiffuse.assign(dt(0)),s?i.indirectDiffuse.addAssign(s):i.indirectDiffuse.addAssign(dt(1,1,1,0)),i.indirectDiffuse.mulAssign(n),i.indirectDiffuse.mulAssign(Ct.rgb)}finish(e){const{material:n,context:i}=e,s=i.outgoingLight,o=e.context.environment;if(o)switch(n.combine){case $c:s.rgb.assign(Kt(s.rgb,s.rgb.mul(o.rgb),Rh.mul(Wf)));break;case hb:s.rgb.assign(Kt(s.rgb,o.rgb,Rh.mul(Wf)));break;case db:s.rgb.addAssign(o.rgb.mul(Rh.mul(Wf)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine);break}}}const t3=new pr;class n3 extends vn{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(t3),this.setValues(e)}setupNormal(){return su(kc)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Qg(n):null}setupLightMap(e){let n=null;return e.material.lightMap&&(n=new e3(cS)),n}setupOutgoingLight(){return Ct.rgb}setupLightingModel(){return new bS}}const Gc=ce(({f0:r,f90:e,dotVH:n})=>{const i=n.mul(-5.55473).sub(6.98316).mul(n).exp2();return r.mul(i.oneMinus()).add(e.mul(i))}),il=ce(r=>r.diffuseColor.mul(1/Math.PI)),i3=()=>se(.25),r3=ce(({dotNH:r})=>um.mul(se(.5)).add(1).mul(se(1/Math.PI)).mul(r.pow(um))),s3=ce(({lightDirection:r})=>{const e=r.add(on).normalize(),n=Ut.dot(e).clamp(),i=on.dot(e).clamp(),s=Gc({f0:bi,f90:1,dotVH:i}),o=i3(),a=r3({dotNH:n});return s.mul(o).mul(a)});class TS extends bS{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:n,reflectedLight:i}){const o=Ut.dot(e).clamp().mul(n);i.directDiffuse.addAssign(o.mul(il({diffuseColor:Ct.rgb}))),this.specular===!0&&i.directSpecular.addAssign(o.mul(s3({lightDirection:e})).mul(Rh))}indirect(e){const{ambientOcclusion:n,irradiance:i,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(i.mul(il({diffuseColor:Ct}))),s.indirectDiffuse.mulAssign(n)}}const o3=new Db;class a3 extends vn{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(o3),this.setValues(e)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Qg(n):null}setupLightingModel(){return new TS(!1)}}const l3=new y1;class c3 extends vn{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(l3),this.setValues(e)}setupEnvironment(e){const n=super.setupEnvironment(e);return n?new Qg(n):null}setupLightingModel(){return new TS}setupVariants(){const e=(this.shininessNode?se(this.shininessNode):zO).max(1e-4);um.assign(e);const n=this.specularNode||VO;bi.assign(n)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const u3=ce(r=>{if(r.geometry.hasAttribute("normal")===!1)return se(0);const e=kc.dFdx().abs().max(kc.dFdy().abs());return e.x.max(e.y).max(e.z)}),SS=ce(r=>{const{roughness:e}=r,n=u3();let i=e.max(.0525);return i=i.add(n),i=i.min(1),i}),h3=ce(({alpha:r,dotNL:e,dotNV:n})=>{const i=r.pow2(),s=e.mul(i.add(i.oneMinus().mul(n.pow2())).sqrt()),o=n.mul(i.add(i.oneMinus().mul(e.pow2())).sqrt());return Sr(.5,s.add(o).max(zU))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),d3=ce(({alphaT:r,alphaB:e,dotTV:n,dotBV:i,dotTL:s,dotBL:o,dotNV:a,dotNL:l})=>{const c=l.mul(ae(r.mul(n),e.mul(i),a).length()),u=a.mul(ae(r.mul(s),e.mul(o),l).length());return Sr(.5,c.add(u)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),f3=ce(({alpha:r,dotNH:e})=>{const n=r.pow2(),i=e.pow2().mul(n.oneMinus()).oneMinus();return n.div(i.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),p3=se(1/Math.PI),m3=ce(({alphaT:r,alphaB:e,dotNH:n,dotTH:i,dotBH:s})=>{const o=r.mul(e),a=ae(e.mul(i),r.mul(s),o.mul(n)),l=a.dot(a),c=o.div(l);return p3.mul(o.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),e0=ce(({lightDirection:r,f0:e,f90:n,roughness:i,f:s,normalView:o=Ut,USE_IRIDESCENCE:a,USE_ANISOTROPY:l})=>{const c=i.pow2(),u=r.add(on).normalize(),h=o.dot(r).clamp(),d=o.dot(on).clamp(),f=o.dot(u).clamp(),p=on.dot(u).clamp();let m=Gc({f0:e,f90:n,dotVH:p}),y,_;if(Lv(a)&&(m=Bg.mix(m,s)),Lv(l)){const g=Sh.dot(r),v=Sh.dot(on),x=Sh.dot(u),b=xa.dot(r),T=xa.dot(on),S=xa.dot(u);y=d3({alphaT:cm,alphaB:c,dotTV:v,dotBV:T,dotTL:g,dotBL:b,dotNV:d,dotNL:h}),_=m3({alphaT:cm,alphaB:c,dotNH:f,dotTH:x,dotBH:S})}else y=h3({alpha:c,dotNL:h,dotNV:d}),_=f3({alpha:c,dotNH:f});return m.mul(y).mul(_)}),MS=ce(({roughness:r,dotNV:e})=>{const n=dt(-1,-.0275,-.572,.022),i=dt(1,.0425,1.04,-.04),s=r.mul(n).add(i),o=s.x.mul(s.x).min(e.mul(-9.28).exp2()).mul(s.x).add(s.y);return Se(-1.04,1.04).mul(o).add(s.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),ES=ce(r=>{const{dotNV:e,specularColor:n,specularF90:i,roughness:s}=r,o=MS({dotNV:e,roughness:s});return n.mul(o.x).add(i.mul(o.y))}),g3=ce(({f:r,f90:e,dotVH:n})=>{const i=n.oneMinus().saturate(),s=i.mul(i),o=i.mul(s,s).clamp(0,.9999);return r.sub(ae(e).mul(o)).div(o.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),_3=ce(({roughness:r,dotNH:e})=>{const n=r.pow2(),i=se(1).div(n),o=e.pow2().oneMinus().max(.0078125);return se(2).add(i).mul(o.pow(i.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),y3=ce(({dotNV:r,dotNL:e})=>se(1).div(se(4).mul(e.add(r).sub(e.mul(r))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),v3=ce(({lightDirection:r})=>{const e=r.add(on).normalize(),n=Ut.dot(r).clamp(),i=Ut.dot(on).clamp(),s=Ut.dot(e).clamp(),o=_3({roughness:Og,dotNH:s}),a=y3({dotNV:i,dotNL:n});return ua.mul(o).mul(a)}),x3=ce(({N:r,V:e,roughness:n})=>{const o=.0078125,a=r.dot(e).saturate(),l=Se(n,a.oneMinus().sqrt());return l.assign(l.mul(.984375).add(o)),l}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),b3=ce(({f:r})=>{const e=r.length();return Wn(e.mul(e).add(r.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Zu=ce(({v1:r,v2:e})=>{const n=r.dot(e),i=n.abs().toVar(),s=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),o=i.add(4.1616724).mul(i).add(3.417594).toVar(),a=s.div(o),l=n.greaterThan(0).select(a,Wn(n.mul(n).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return r.cross(e).mul(l)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),t0=ce(({N:r,V:e,P:n,mInv:i,p0:s,p1:o,p2:a,p3:l})=>{const c=o.sub(s).toVar(),u=l.sub(s).toVar(),h=c.cross(u),d=ae().toVar();return un(h.dot(n.sub(s)).greaterThanEqual(0),()=>{const f=e.sub(r.mul(e.dot(r))).normalize(),p=r.cross(f).negate(),m=i.mul(ti(f,p,r).transpose()).toVar(),y=m.mul(s.sub(n)).normalize().toVar(),_=m.mul(o.sub(n)).normalize().toVar(),g=m.mul(a.sub(n)).normalize().toVar(),v=m.mul(l.sub(n)).normalize().toVar(),x=ae(0).toVar();x.addAssign(Zu({v1:y,v2:_})),x.addAssign(Zu({v1:_,v2:g})),x.addAssign(Zu({v1:g,v2:v})),x.addAssign(Zu({v1:v,v2:y})),d.assign(ae(b3({f:x})))}),d}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Ed=1/6,wS=r=>yt(Ed,yt(r,yt(r,r.negate().add(3)).sub(3)).add(1)),mm=r=>yt(Ed,yt(r,yt(r,yt(3,r).sub(6))).add(4)),AS=r=>yt(Ed,yt(r,yt(r,yt(-3,r).add(3)).add(3)).add(1)),gm=r=>yt(Ed,vd(r,3)),n0=r=>wS(r).add(mm(r)),i0=r=>AS(r).add(gm(r)),r0=r=>hi(-1,mm(r).div(wS(r).add(mm(r)))),s0=r=>hi(1,gm(r).div(AS(r).add(gm(r)))),o0=(r,e,n)=>{const i=r.uvNode,s=yt(i,e.zw).add(.5),o=po(s),a=Ls(s),l=n0(a.x),c=i0(a.x),u=r0(a.x),h=s0(a.x),d=r0(a.y),f=s0(a.y),p=Se(o.x.add(u),o.y.add(d)).sub(.5).mul(e.xy),m=Se(o.x.add(h),o.y.add(d)).sub(.5).mul(e.xy),y=Se(o.x.add(u),o.y.add(f)).sub(.5).mul(e.xy),_=Se(o.x.add(h),o.y.add(f)).sub(.5).mul(e.xy),g=n0(a.y).mul(hi(l.mul(r.sample(p).level(n)),c.mul(r.sample(m).level(n)))),v=i0(a.y).mul(hi(l.mul(r.sample(y).level(n)),c.mul(r.sample(_).level(n))));return g.add(v)},T3=ce(([r,e])=>{const n=Se(r.size(jt(e))),i=Se(r.size(jt(e.add(1)))),s=Sr(1,n),o=Sr(1,i),a=o0(r,dt(s,n),po(e)),l=o0(r,dt(o,i),Vg(e));return Ls(e).mix(a,l)}),a0=ce(([r,e,n,i,s])=>{const o=ae(UT(e.negate(),Bc(r),Sr(1,i))),a=ae(ns(s[0].xyz),ns(s[1].xyz),ns(s[2].xyz));return Bc(o).mul(n.mul(a))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),S3=ce(([r,e])=>r.mul(rs(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),M3=dS(),E3=dS(),l0=ce(([r,e,n],{material:i})=>{const o=(i.side===kt?M3:E3).sample(r),a=ts(dm.x).mul(S3(e,n));return T3(o,a)}),c0=ce(([r,e,n])=>(un(n.notEqual(0),()=>{const i=ET(e).negate().div(n);return MT(i.negate().mul(r))}),ae(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),w3=ce(([r,e,n,i,s,o,a,l,c,u,h,d,f,p,m])=>{let y,_;if(m){y=dt().toVar(),_=ae().toVar();const T=h.sub(1).mul(m.mul(.025)),S=ae(h.sub(T),h,h.add(T));Ji({start:0,end:3},({i:M})=>{const A=S.element(M),E=a0(r,e,d,A,l),w=a.add(E),N=u.mul(c.mul(dt(w,1))),D=Se(N.xy.div(N.w)).toVar();D.addAssign(1),D.divAssign(2),D.assign(Se(D.x,D.y.oneMinus()));const F=l0(D,n,A);y.element(M).assign(F.element(M)),y.a.addAssign(F.a),_.element(M).assign(i.element(M).mul(c0(ns(E),f,p).element(M)))}),y.a.divAssign(3)}else{const T=a0(r,e,d,h,l),S=a.add(T),M=u.mul(c.mul(dt(S,1))),A=Se(M.xy.div(M.w)).toVar();A.addAssign(1),A.divAssign(2),A.assign(Se(A.x,A.y.oneMinus())),y=l0(A,n,h),_=i.mul(c0(ns(T),f,p))}const g=_.rgb.mul(y.rgb),v=r.dot(e).clamp(),x=ae(ES({dotNV:v,specularColor:s,specularF90:o,roughness:n})),b=_.r.add(_.g,_.b).div(3);return dt(x.oneMinus().mul(g),y.a.oneMinus().mul(b).oneMinus())}),A3=ti(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),R3=r=>{const e=r.sqrt();return ae(1).add(e).div(ae(1).sub(e))},u0=(r,e)=>r.sub(e).div(r.add(e)).pow2(),C3=(r,e)=>{const n=r.mul(2*Math.PI*1e-9),i=ae(54856e-17,44201e-17,52481e-17),s=ae(1681e3,1795300,2208400),o=ae(43278e5,93046e5,66121e5),a=se(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(n.mul(2239900).add(e.x).cos()).mul(n.pow2().mul(-45282e5).exp());let l=i.mul(o.mul(2*Math.PI).sqrt()).mul(s.mul(n).add(e).cos()).mul(n.pow2().negate().mul(o).exp());return l=ae(l.x.add(a),l.y,l.z).div(10685e-11),A3.mul(l)},N3=ce(({outsideIOR:r,eta2:e,cosTheta1:n,thinFilmThickness:i,baseF0:s})=>{const o=Kt(r,e,Ps(0,.03,i)),l=r.div(o).pow2().mul(n.pow2().oneMinus()).oneMinus();un(l.lessThan(0),()=>ae(1));const c=l.sqrt(),u=u0(o,r),h=Gc({f0:u,f90:1,dotVH:n}),d=h.oneMinus(),f=o.lessThan(r).select(Math.PI,0),p=se(Math.PI).sub(f),m=R3(s.clamp(0,.9999)),y=u0(m,o.toVec3()),_=Gc({f0:y,f90:1,dotVH:c}),g=ae(m.x.lessThan(o).select(Math.PI,0),m.y.lessThan(o).select(Math.PI,0),m.z.lessThan(o).select(Math.PI,0)),v=o.mul(i,c,2),x=ae(p).add(g),b=h.mul(_).clamp(1e-5,.9999),T=b.sqrt(),S=d.pow2().mul(_).div(ae(1).sub(b)),A=h.add(S).toVar(),E=S.sub(d).toVar();return Ji({start:1,end:2,condition:"<=",name:"m"},({m:w})=>{E.mulAssign(T);const N=C3(se(w).mul(v),se(w).mul(x)).mul(2);A.addAssign(E.mul(N))}),A.max(ae(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),P3=ce(({normal:r,viewDir:e,roughness:n})=>{const i=r.dot(e).saturate(),s=n.pow2(),o=ei(n.lessThan(.25),se(-339.2).mul(s).add(se(161.4).mul(n)).sub(25.9),se(-8.48).mul(s).add(se(14.3).mul(n)).sub(9.95)),a=ei(n.lessThan(.25),se(44).mul(s).sub(se(23.7).mul(n)).add(3.26),se(1.97).mul(s).sub(se(3.27).mul(n)).add(.72));return ei(n.lessThan(.25),0,se(.1).mul(n).sub(.025)).add(o.mul(i).add(a).exp()).mul(1/Math.PI).saturate()}),jf=ae(.04),qf=se(1);class RS extends Md{constructor(e=!1,n=!1,i=!1,s=!1,o=!1,a=!1){super(),this.clearcoat=e,this.sheen=n,this.iridescence=i,this.anisotropy=s,this.transmission=o,this.dispersion=a,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=ae().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=ae().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=ae().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=ae().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=ae().toVar("sheenSpecularIndirect")),this.iridescence===!0){const n=Ut.dot(on).clamp();this.iridescenceFresnel=N3({outsideIOR:se(1),eta2:mT,cosTheta1:n,thinFilmThickness:gT,baseF0:bi}),this.iridescenceF0=g3({f:this.iridescenceFresnel,f90:1,dotVH:n})}if(this.transmission===!0){const n=nl,i=aO.sub(nl).normalize(),s=ml,o=e.context;o.backdrop=w3(s,i,jr,Ct,bi,Yh,n,bo,as,qT,Mh,_T,vT,yT,this.dispersion?xT:null),o.backdropAlpha=hm,Ct.a.mulAssign(Kt(1,o.backdrop.a,hm))}super.start(e)}computeMultiscattering(e,n,i){const s=Ut.dot(on).clamp(),o=MS({roughness:jr,dotNV:s}),l=(this.iridescenceF0?Bg.mix(bi,this.iridescenceF0):bi).mul(o.x).add(i.mul(o.y)),u=o.x.add(o.y).oneMinus(),h=bi.add(bi.oneMinus().mul(.047619)),d=l.mul(h).div(u.mul(h).oneMinus());e.addAssign(l),n.addAssign(d.mul(u))}direct({lightDirection:e,lightColor:n,reflectedLight:i}){const o=Ut.dot(e).clamp().mul(n);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(o.mul(v3({lightDirection:e}))),this.clearcoat===!0){const l=ha.dot(e).clamp().mul(n);this.clearcoatSpecularDirect.addAssign(l.mul(e0({lightDirection:e,f0:jf,f90:qf,roughness:Xh,normalView:ha})))}i.directDiffuse.addAssign(o.mul(il({diffuseColor:Ct.rgb}))),i.directSpecular.addAssign(o.mul(e0({lightDirection:e,f0:bi,f90:1,roughness:jr,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:n,halfWidth:i,halfHeight:s,reflectedLight:o,ltc_1:a,ltc_2:l}){const c=n.add(i).sub(s),u=n.sub(i).sub(s),h=n.sub(i).add(s),d=n.add(i).add(s),f=Ut,p=on,m=dn.toVar(),y=x3({N:f,V:p,roughness:jr}),_=a.sample(y).toVar(),g=l.sample(y).toVar(),v=ti(ae(_.x,0,_.y),ae(0,1,0),ae(_.z,0,_.w)).toVar(),x=bi.mul(g.x).add(bi.oneMinus().mul(g.y)).toVar();o.directSpecular.addAssign(e.mul(x).mul(t0({N:f,V:p,P:m,mInv:v,p0:c,p1:u,p2:h,p3:d}))),o.directDiffuse.addAssign(e.mul(Ct).mul(t0({N:f,V:p,P:m,mInv:ti(1,0,0,0,1,0,0,0,1),p0:c,p1:u,p2:h,p3:d})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(il({diffuseColor:Ct})))}indirectSpecular(e){const{radiance:n,iblIrradiance:i,reflectedLight:s}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(i.mul(ua,P3({normal:Ut,viewDir:on,roughness:Og}))),this.clearcoat===!0){const h=ha.dot(on).clamp(),d=ES({dotNV:h,specularColor:jf,specularF90:qf,roughness:Xh});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(d))}const o=ae().toVar("singleScattering"),a=ae().toVar("multiScattering"),l=i.mul(1/Math.PI);this.computeMultiscattering(o,a,Yh);const c=o.add(a),u=Ct.mul(c.r.max(c.g).max(c.b).oneMinus());s.indirectSpecular.addAssign(n.mul(o)),s.indirectSpecular.addAssign(a.mul(l)),s.indirectDiffuse.addAssign(u.mul(l))}ambientOcclusion(e){const{ambientOcclusion:n,reflectedLight:i}=e.context,o=Ut.dot(on).clamp().add(n),a=jr.mul(-16).oneMinus().negate().exp2(),l=n.sub(o.pow(a).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(n),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(n),i.indirectDiffuse.mulAssign(n),i.indirectSpecular.mulAssign(l)}finish({context:e}){const{outgoingLight:n}=e;if(this.clearcoat===!0){const i=ha.dot(on).clamp(),s=Gc({dotVH:i,f0:jf,f90:qf}),o=n.mul(lm.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(lm));n.assign(o)}if(this.sheen===!0){const i=ua.r.max(ua.g).max(ua.b).mul(.157).oneMinus(),s=n.mul(i).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);n.assign(s)}}}const h0=se(1),_m=se(-2),Qu=se(.8),Xf=se(-1),Ju=se(.4),Yf=se(2),eh=se(.305),Kf=se(3),d0=se(.21),D3=se(4),f0=se(4),L3=se(16),I3=ce(([r])=>{const e=ae(Fi(r)).toVar(),n=se(-1).toVar();return un(e.x.greaterThan(e.z),()=>{un(e.x.greaterThan(e.y),()=>{n.assign(ei(r.x.greaterThan(0),0,3))}).Else(()=>{n.assign(ei(r.y.greaterThan(0),1,4))})}).Else(()=>{un(e.z.greaterThan(e.y),()=>{n.assign(ei(r.z.greaterThan(0),2,5))}).Else(()=>{n.assign(ei(r.y.greaterThan(0),1,4))})}),n}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),U3=ce(([r,e])=>{const n=Se().toVar();return un(e.equal(0),()=>{n.assign(Se(r.z,r.y).div(Fi(r.x)))}).ElseIf(e.equal(1),()=>{n.assign(Se(r.x.negate(),r.z.negate()).div(Fi(r.y)))}).ElseIf(e.equal(2),()=>{n.assign(Se(r.x.negate(),r.y).div(Fi(r.z)))}).ElseIf(e.equal(3),()=>{n.assign(Se(r.z.negate(),r.y).div(Fi(r.x)))}).ElseIf(e.equal(4),()=>{n.assign(Se(r.x.negate(),r.z).div(Fi(r.y)))}).Else(()=>{n.assign(Se(r.x,r.y).div(Fi(r.z)))}),yt(.5,n.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),F3=ce(([r])=>{const e=se(0).toVar();return un(r.greaterThanEqual(Qu),()=>{e.assign(h0.sub(r).mul(Xf.sub(_m)).div(h0.sub(Qu)).add(_m))}).ElseIf(r.greaterThanEqual(Ju),()=>{e.assign(Qu.sub(r).mul(Yf.sub(Xf)).div(Qu.sub(Ju)).add(Xf))}).ElseIf(r.greaterThanEqual(eh),()=>{e.assign(Ju.sub(r).mul(Kf.sub(Yf)).div(Ju.sub(eh)).add(Yf))}).ElseIf(r.greaterThanEqual(d0),()=>{e.assign(eh.sub(r).mul(D3.sub(Kf)).div(eh.sub(d0)).add(Kf))}).Else(()=>{e.assign(se(-2).mul(ts(yt(1.16,r))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),O3=ce(([r,e])=>{const n=r.toVar();n.assign(yt(2,n).sub(1));const i=ae(n,1).toVar();return un(e.equal(0),()=>{i.assign(i.zyx)}).ElseIf(e.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),B3=ce(([r,e,n,i,s,o])=>{const a=se(n),l=ae(e),c=rs(F3(a),_m,o),u=Ls(c),h=po(c),d=ae(ym(r,l,h,i,s,o)).toVar();return un(u.notEqual(0),()=>{const f=ae(ym(r,l,h.add(1),i,s,o)).toVar();d.assign(Kt(d,f,u))}),d}),ym=ce(([r,e,n,i,s,o])=>{const a=se(n).toVar(),l=ae(e),c=se(I3(l)).toVar(),u=se(Wn(f0.sub(a),0)).toVar();a.assign(Wn(a,f0));const h=se(Oc(a)).toVar(),d=Se(U3(l,c).mul(h.sub(2)).add(1)).toVar();return un(c.greaterThan(2),()=>{d.y.addAssign(h),c.subAssign(3)}),d.x.addAssign(c.mul(h)),d.x.addAssign(u.mul(yt(3,L3))),d.y.addAssign(yt(4,Oc(o).sub(h))),d.x.mulAssign(i),d.y.mulAssign(s),r.sample(d).grad(Se(),Se())}),Zf=ce(({envMap:r,mipInt:e,outputDirection:n,theta:i,axis:s,CUBEUV_TEXEL_WIDTH:o,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:l})=>{const c=vs(i),u=n.mul(c).add(s.cross(n).mul(Zi(i))).add(s.mul(s.dot(n).mul(c.oneMinus())));return ym(r,u,e,o,a,l)}),k3=ce(({n:r,latitudinal:e,poleAxis:n,outputDirection:i,weights:s,samples:o,dTheta:a,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d})=>{const f=ae(ei(e,n,PT(n,i))).toVar();un(f.equal(ae(0)),()=>{f.assign(ae(i.z,0,i.x.negate()))}),f.assign(Bc(f));const p=ae().toVar();return p.addAssign(s.element(0).mul(Zf({theta:0,axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d}))),Ji({start:jt(1),end:r},({i:m})=>{un(m.greaterThanEqual(o),()=>{EB()});const y=se(a.mul(se(m))).toVar();p.addAssign(s.element(m).mul(Zf({theta:y.mul(-1),axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d}))),p.addAssign(s.element(m).mul(Zf({theta:y,axis:f,outputDirection:i,mipInt:l,envMap:c,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:d})))}),dt(p,1)}),da=4,p0=[.125,.215,.35,.446,.526,.582],co=20,Qf=new eu(-1,1,1,-1,0,1),z3=new Rn(90,1),m0=new We;let Jf=null,ep=0,tp=0;const no=(1+Math.sqrt(5))/2,Jo=1/no,g0=[new L(-no,Jo,0),new L(no,Jo,0),new L(-Jo,0,no),new L(Jo,0,no),new L(0,no,-Jo),new L(0,no,Jo),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],G3=new L,CS=new WeakMap,V3=[3,1,5,0,4,2],np=O3(iu(),Ds("faceIndex")).normalize(),Jg=ae(np.x,np.y,np.z);class H3{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,n=0,i=.1,s=100,o={}){const{size:a=256,position:l=G3,renderTarget:c=null}=o;if(this._setSize(a),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const h=c||this._allocateTarget();return o.renderTarget=h,this.fromSceneAsync(e,n,i,s,o),h}Jf=this._renderer.getRenderTarget(),ep=this._renderer.getActiveCubeFace(),tp=this._renderer.getActiveMipmapLevel();const u=c||this._allocateTarget();return u.depthBuffer=!0,this._init(u),this._sceneToCubeUV(e,i,s,u,l),n>0&&this._blur(u,0,0,n),this._applyPMREM(u),this._cleanup(u),u}async fromSceneAsync(e,n=0,i=.1,s=100,o={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,n,i,s,o)}fromEquirectangular(e,n=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const i=n||this._allocateTarget();return this.fromEquirectangularAsync(e,i),i}return this._fromTexture(e,n)}async fromEquirectangularAsync(e,n=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,n)}fromCubemap(e,n=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const i=n||this._allocateTarget();return this.fromCubemapAsync(e,n),i}return this._fromTexture(e,n)}async fromCubemapAsync(e,n=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,n)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=y0(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=v0(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===xr||e.mapping===br?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Jf,ep,tp),e.scissorTest=!1,th(e,0,0,e.width,e.height)}_fromTexture(e,n){this._setSizeFromTexture(e),Jf=this._renderer.getRenderTarget(),ep=this._renderer.getActiveCubeFace(),tp=this._renderer.getActiveMipmapLevel();const i=n||this._allocateTarget();return this._init(i),this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize;return _0(e,n)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=_0(e.width,e.height);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=W3(n)),this._blurMaterial=$3(n,e.width,e.height)}}async _compileMaterial(e){const n=new yn(this._lodPlanes[0],e);await this._renderer.compile(n,Qf)}_sceneToCubeUV(e,n,i,s,o){const a=z3;a.near=n,a.far=i;const l=[1,1,1,1,-1,1],c=[1,-1,1,-1,1,-1],u=this._renderer,h=u.autoClear;u.getClearColor(m0),u.autoClear=!1;let d=this._backgroundBox;if(d===null){const m=new pr({name:"PMREM.Background",side:kt,depthWrite:!1,depthTest:!1});d=new yn(new Mo,m)}let f=!1;const p=e.background;p?p.isColor&&(d.material.color.copy(p),e.background=null,f=!0):(d.material.color.copy(m0),f=!0),u.setRenderTarget(s),u.clear(),f&&u.render(d,a);for(let m=0;m<6;m++){const y=m%3;y===0?(a.up.set(0,l[m],0),a.position.set(o.x,o.y,o.z),a.lookAt(o.x+c[m],o.y,o.z)):y===1?(a.up.set(0,0,l[m]),a.position.set(o.x,o.y,o.z),a.lookAt(o.x,o.y+c[m],o.z)):(a.up.set(0,l[m],0),a.position.set(o.x,o.y,o.z),a.lookAt(o.x,o.y,o.z+c[m]));const _=this._cubeSize;th(s,y*_,m>2?_:0,_,_),u.render(e,a)}u.autoClear=h,e.background=p}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===xr||e.mapping===br;s?this._cubemapMaterial===null&&(this._cubemapMaterial=y0(e)):this._equirectMaterial===null&&(this._equirectMaterial=v0(e));const o=s?this._cubemapMaterial:this._equirectMaterial;o.fragmentNode.value=e;const a=this._lodMeshes[0];a.material=o;const l=this._cubeSize;th(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(a,Qf)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let o=1;o<s;o++){const a=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),l=g0[(s-o-1)%g0.length];this._blur(e,o-1,o,a,l)}n.autoClear=i}_blur(e,n,i,s,o){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,s,"latitudinal",o),this._halfBlur(a,e,i,i,s,"longitudinal",o)}_halfBlur(e,n,i,s,o,a,l){const c=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=this._lodMeshes[s];d.material=u;const f=CS.get(u),p=this._sizeLods[i]-1,m=isFinite(o)?Math.PI/(2*p):2*Math.PI/(2*co-1),y=o/m,_=isFinite(o)?1+Math.floor(h*y):co;_>co&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${co}`);const g=[];let v=0;for(let M=0;M<co;++M){const A=M/y,E=Math.exp(-A*A/2);g.push(E),M===0?v+=E:M<_&&(v+=2*E)}for(let M=0;M<g.length;M++)g[M]=g[M]/v;e.texture.frame=(e.texture.frame||0)+1,f.envMap.value=e.texture,f.samples.value=_,f.weights.array=g,f.latitudinal.value=a==="latitudinal"?1:0,l&&(f.poleAxis.value=l);const{_lodMax:x}=this;f.dTheta.value=m,f.mipInt.value=x-i;const b=this._sizeLods[s],T=3*b*(s>x-da?s-x+da:0),S=4*(this._cubeSize-b);th(n,T,S,3*b,2*b),c.setRenderTarget(n),c.render(d,Qf)}}function W3(r){const e=[],n=[],i=[],s=[];let o=r;const a=r-da+1+p0.length;for(let l=0;l<a;l++){const c=Math.pow(2,o);n.push(c);let u=1/c;l>r-da?u=p0[l-r+da-1]:l===0&&(u=0),i.push(u);const h=1/(c-2),d=-h,f=1+h,p=[d,d,f,d,f,f,d,d,f,f,d,f],m=6,y=6,_=3,g=2,v=1,x=new Float32Array(_*y*m),b=new Float32Array(g*y*m),T=new Float32Array(v*y*m);for(let M=0;M<m;M++){const A=M%3*2/3-1,E=M>2?0:-1,w=[A,E,0,A+2/3,E,0,A+2/3,E+1,0,A,E,0,A+2/3,E+1,0,A,E+1,0],N=V3[M];x.set(w,_*y*N),b.set(p,g*y*N);const D=[N,N,N,N,N,N];T.set(D,v*y*N)}const S=new $n;S.setAttribute("position",new Dn(x,_)),S.setAttribute("uv",new Dn(b,g)),S.setAttribute("faceIndex",new Dn(T,v)),e.push(S),s.push(new yn(S,null)),o>da&&o--}return{lodPlanes:e,sizeLods:n,sigmas:i,lodMeshes:s}}function _0(r,e){const n={magFilter:Tn,minFilter:Tn,generateMipmaps:!1,type:Cn,format:cn,colorSpace:yo},i=new To(r,e,n);return i.texture.mapping=mo,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function th(r,e,n,i,s){r.viewport.set(e,n,i,s),r.scissor.set(e,n,i,s)}function e_(r){const e=new vn;return e.depthTest=!1,e.depthWrite=!1,e.blending=li,e.name=`PMREM_${r}`,e}function $3(r,e,n){const i=Qi(new Array(co).fill(0)),s=ot(new L(0,1,0)),o=ot(0),a=se(co),l=ot(0),c=ot(1),u=Et(null),h=ot(0),d=se(1/e),f=se(1/n),p=se(r),m={n:a,latitudinal:l,weights:i,poleAxis:s,outputDirection:Jg,dTheta:o,samples:c,envMap:u,mipInt:h,CUBEUV_TEXEL_WIDTH:d,CUBEUV_TEXEL_HEIGHT:f,CUBEUV_MAX_MIP:p},y=e_("blur");return y.fragmentNode=k3({...m,latitudinal:l.equal(1)}),CS.set(y,m),y}function y0(r){const e=e_("cubemap");return e.fragmentNode=zc(r,Jg),e}function v0(r){const e=e_("equirect");return e.fragmentNode=Et(r,_S(Jg),0),e}const x0=new WeakMap;function j3(r){const e=Math.log2(r)-2,n=1/r;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function q3(r,e,n){const i=X3(e);let s=i.get(r);if((s!==void 0?s.pmremVersion:-1)!==r.pmremVersion){const a=r.image;if(r.isCubeTexture)if(K3(a))s=n.fromCubemap(r,s);else return null;else if(Z3(a))s=n.fromEquirectangular(r,s);else return null;s.pmremVersion=r.pmremVersion,i.set(r,s)}return s.texture}function X3(r){let e=x0.get(r);return e===void 0&&(e=new WeakMap,x0.set(r,e)),e}class Y3 extends En{static get type(){return"PMREMNode"}constructor(e,n=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=n,this.levelNode=i,this._generator=null;const s=new fn;s.isRenderTargetTexture=!0,this._texture=Et(s),this._width=ot(0),this._height=ot(0),this._maxMip=ot(0),this.updateBeforeType=_t.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const n=j3(e.image.height);this._texture.value=e,this._width.value=n.texelWidth,this._height.value=n.texelHeight,this._maxMip.value=n.maxMip}updateBefore(e){let n=this._pmrem;const i=n?n.pmremVersion:-1,s=this._value;i!==s.pmremVersion&&(s.isPMREMTexture===!0?n=s:n=q3(s,e.renderer,this._generator),n!==null&&(this._pmrem=n,this.updateFromTexture(n)))}setup(e){this._generator===null&&(this._generator=new H3(e.renderer)),this.updateBefore(e);let n=this.uvNode;n===null&&e.context.getUV&&(n=e.context.getUV(this)),n=QT.mul(ae(n.x,n.y.negate(),n.z));let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),B3(this._texture,n,i,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function K3(r){if(r==null)return!1;let e=0;const n=6;for(let i=0;i<n;i++)r[i]!==void 0&&e++;return e===n}function Z3(r){return r==null?!1:r.height>0}const NS=wt(Y3).setParameterLength(1,3),b0=new WeakMap;class Q3 extends gl{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:n}=e;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const d=i.isTextureNode?i.value:n[i.property];let f=b0.get(d);f===void 0&&(f=NS(d),b0.set(d,f)),i=f}const o=n.useAnisotropy===!0||n.anisotropy>0?DO:Ut,a=i.context(T0(jr,o)).mul(Hf),l=i.context(J3(ml)).mul(Math.PI).mul(Hf),c=wh(a),u=wh(l);e.context.radiance.addAssign(c),e.context.iblIrradiance.addAssign(u);const h=e.context.lightingModel.clearcoatRadiance;if(h){const d=i.context(T0(Xh,ha)).mul(Hf),f=wh(d);h.addAssign(f)}}}const T0=(r,e)=>{let n=null;return{getUV:()=>(n===null&&(n=on.negate().reflect(e),n=r.mul(r).mix(n,e).normalize(),n=n.transformDirection(as)),n),getTextureLevel:()=>r}},J3=r=>({getUV:()=>r,getTextureLevel:()=>se(1)}),ek=new Pb;class PS extends vn{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(ek),this.setValues(e)}setupEnvironment(e){let n=super.setupEnvironment(e);return n===null&&e.environmentNode&&(n=e.environmentNode),n?new Q3(n):null}setupLightingModel(){return new RS}setupSpecular(){const e=Kt(ae(.04),Ct.rgb,qh);bi.assign(e),Yh.assign(1)}setupVariants(){const e=this.metalnessNode?se(this.metalnessNode):$O;qh.assign(e);let n=this.roughnessNode?se(this.roughnessNode):WO;n=SS({roughness:n}),jr.assign(n),this.setupSpecular(),Ct.assign(dt(Ct.rgb.mul(e.oneMinus()),Ct.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const tk=new _1;class nk extends PS{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(tk),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?se(this.iorNode):sB;Mh.assign(e),bi.assign(Kt(el(DT(Mh.sub(1).div(Mh.add(1))).mul(HO),ae(1)).mul(Xv),Ct.rgb,qh)),Yh.assign(Kt(Xv,1,qh))}setupLightingModel(){return new RS(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const n=this.clearcoatNode?se(this.clearcoatNode):qO,i=this.clearcoatRoughnessNode?se(this.clearcoatRoughnessNode):XO;lm.assign(n),Xh.assign(SS({roughness:i}))}if(this.useSheen){const n=this.sheenNode?ae(this.sheenNode):ZO,i=this.sheenRoughnessNode?se(this.sheenRoughnessNode):QO;ua.assign(n),Og.assign(i)}if(this.useIridescence){const n=this.iridescenceNode?se(this.iridescenceNode):eB,i=this.iridescenceIORNode?se(this.iridescenceIORNode):tB,s=this.iridescenceThicknessNode?se(this.iridescenceThicknessNode):nB;Bg.assign(n),mT.assign(i),gT.assign(s)}if(this.useAnisotropy){const n=(this.anisotropyNode?Se(this.anisotropyNode):JO).toVar();to.assign(n.length()),un(to.equal(0),()=>{n.assign(Se(1,0))}).Else(()=>{n.divAssign(Se(to)),to.assign(to.saturate())}),cm.assign(to.pow2().mix(jr.pow2(),1)),Sh.assign(rc[0].mul(n.x).add(rc[1].mul(n.y))),xa.assign(rc[1].mul(n.x).sub(rc[0].mul(n.y)))}if(this.useTransmission){const n=this.transmissionNode?se(this.transmissionNode):iB,i=this.thicknessNode?se(this.thicknessNode):rB,s=this.attenuationDistanceNode?se(this.attenuationDistanceNode):oB,o=this.attenuationColorNode?ae(this.attenuationColorNode):aB;if(hm.assign(n),_T.assign(i),yT.assign(s),vT.assign(o),this.useDispersion){const a=this.dispersionNode?se(this.dispersionNode):fB;xT.assign(a)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?ae(this.clearcoatNormalNode):YO}setup(e){e.context.setupClearcoatNormal=()=>gc(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const ik=ce(({normal:r,lightDirection:e,builder:n})=>{const i=r.dot(e),s=Se(i.mul(.5).add(.5),0);if(n.material.gradientMap){const o=xs("gradientMap","texture").context({getUV:()=>s});return ae(o.r)}else{const o=s.fwidth().mul(.5);return Kt(ae(.7),ae(1),Ps(se(.7).sub(o.x),se(.7).add(o.x),s.x))}});class rk extends Md{direct({lightDirection:e,lightColor:n,reflectedLight:i},s){const o=ik({normal:KT,lightDirection:e,builder:s}).mul(n);i.directDiffuse.addAssign(o.mul(il({diffuseColor:Ct.rgb})))}indirect(e){const{ambientOcclusion:n,irradiance:i,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(i.mul(il({diffuseColor:Ct}))),s.indirectDiffuse.mulAssign(n)}}const sk=new v1;class ok extends vn{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(sk),this.setValues(e)}setupLightingModel(){return new rk}}const ak=ce(()=>{const r=ae(on.z,0,on.x.negate()).normalize(),e=on.cross(r);return Se(r.dot(Ut),e.dot(Ut)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),lk=new S1;class ck extends vn{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(lk),this.setValues(e)}setupVariants(e){const n=ak;let i;e.material.matcap?i=xs("matcap","texture").context({getUV:()=>n}):i=ae(Kt(.2,.8,n.y)),Ct.rgb.mulAssign(i.rgb)}}class uk extends En{static get type(){return"RotateNode"}constructor(e,n){super(),this.positionNode=e,this.rotationNode=n}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:n,positionNode:i}=this;if(this.getNodeType(e)==="vec2"){const o=n.cos(),a=n.sin();return Fg(o,a,a.negate(),o).mul(i)}else{const o=n,a=va(dt(1,0,0,0),dt(0,vs(o.x),Zi(o.x).negate(),0),dt(0,Zi(o.x),vs(o.x),0),dt(0,0,0,1)),l=va(dt(vs(o.y),0,Zi(o.y),0),dt(0,1,0,0),dt(Zi(o.y).negate(),0,vs(o.y),0),dt(0,0,0,1)),c=va(dt(vs(o.z),Zi(o.z).negate(),0,0),dt(Zi(o.z),vs(o.z),0,0),dt(0,0,1,0),dt(0,0,0,1));return a.mul(l).mul(c).mul(dt(i,1)).xyz}}}const DS=wt(uk).setParameterLength(2),hk=new gg;class LS extends vn{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(hk),this.setValues(e)}setupPositionView(e){const{object:n,camera:i}=e,{positionNode:s,rotationNode:o,scaleNode:a,sizeAttenuation:l}=this,c=Td.mul(ae(s||0));let u=Se(bo[0].xyz.length(),bo[1].xyz.length());a!==null&&(u=u.mul(Se(a))),i.isPerspectiveCamera&&l===!1&&(u=u.mul(c.z.negate()));let h=Sd.xy;if(n.center&&n.center.isVector2===!0){const p=DF("center","vec2",n);h=h.sub(p.sub(.5))}h=h.mul(u);const d=se(o||KO),f=DS(h,d);return dt(c.xy.add(f),c.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const dk=new QC,fk=new de;class pk extends LS{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(dk),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return Td.mul(ae(e||Vn)).xyz}setupVertexSprite(e){const{material:n,camera:i}=e,{rotationNode:s,scaleNode:o,sizeNode:a,sizeAttenuation:l}=this;let c=super.setupVertex(e);if(n.isNodeMaterial!==!0)return c;let u=a!==null?Se(a):dB;u=u.mul(sO),i.isPerspectiveCamera&&l===!0&&(u=u.mul(mk.div(dn.z.negate()))),o&&o.isNode&&(u=u.mul(Se(o)));let h=Sd.xy;if(s&&s.isNode){const d=se(s);h=DS(h,d)}return h=h.mul(u),h=h.div(oO.div(2)),h=h.mul(c.w),c=c.add(dt(h,0,0)),c}setupVertex(e){return e.object.isPoints?super.setupVertex(e):this.setupVertexSprite(e)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const mk=ot(1).onFrameUpdate(function({renderer:r}){const e=r.getSize(fk);this.value=.5*e.y});class gk extends Md{constructor(){super(),this.shadowNode=se(1).toVar("shadowMask")}direct({lightNode:e}){e.shadowNode!==null&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){Ct.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(Ct.rgb)}}const _k=new g1;class yk extends vn{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(_k),this.setValues(e)}setupLightingModel(){return new gk}}As("vec3");As("vec3");As("vec3");class vk{constructor(e,n){this.nodes=e,this.info=n,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(n,i)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(n,i)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class ir{constructor(){this.weakMap=new WeakMap}get(e){let n=this.weakMap;for(let i=0;i<e.length-1;i++)if(n=n.get(e[i]),n===void 0)return;return n.get(e[e.length-1])}set(e,n){let i=this.weakMap;for(let s=0;s<e.length-1;s++){const o=e[s];i.has(o)===!1&&i.set(o,new WeakMap),i=i.get(o)}return i.set(e[e.length-1],n),this}delete(e){let n=this.weakMap;for(let i=0;i<e.length-1;i++)if(n=n.get(e[i]),n===void 0)return!1;return n.delete(e[e.length-1])}}let xk=0;function bk(r){const e=Object.keys(r);let n=Object.getPrototypeOf(r);for(;n;){const i=Object.getOwnPropertyDescriptors(n);for(const s in i)if(i[s]!==void 0){const o=i[s];o&&typeof o.get=="function"&&e.push(s)}n=Object.getPrototypeOf(n)}return e}class Tk{constructor(e,n,i,s,o,a,l,c,u,h){this.id=xk++,this._nodes=e,this._geometries=n,this.renderer=i,this.object=s,this.material=o,this.scene=a,this.camera=l,this.lightsNode=c,this.context=u,this.geometry=s.geometry,this.version=o.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=h,this.clippingContextCacheKey=h!==null?h.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const n of this.getBindings())if(n.name===e)return n}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,n=this.geometry,i=[],s=new Set,o={};for(const a of e){let l;if(a.node&&a.node.attribute?l=a.node.attribute:(l=n.getAttribute(a.name),o[a.name]=l.version),l===void 0)continue;i.push(l);const c=l.isInterleavedBufferAttribute?l.data:l;s.add(c)}return this.attributes=i,this.attributesId=o,this.vertexBuffers=Array.from(s.values()),i}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:n,geometry:i,group:s,drawRange:o}=this,a=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),l=this.getIndex(),c=l!==null;let u=1;if(i.isInstancedBufferGeometry===!0?u=i.instanceCount:e.count!==void 0&&(u=Math.max(0,e.count)),u===0)return null;if(a.instanceCount=u,e.isBatchedMesh===!0)return a;let h=1;n.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(h=2);let d=o.start*h,f=(o.start+o.count)*h;s!==null&&(d=Math.max(d,s.start*h),f=Math.min(f,(s.start+s.count)*h));const p=i.attributes.position;let m=1/0;c?m=l.count:p!=null&&(m=p.count),d=Math.max(d,0),f=Math.min(f,m);const y=f-d;return y<0||y===1/0?null:(a.vertexCount=y,a.firstVertex=d,a)}getGeometryCacheKey(){const{geometry:e}=this;let n="";for(const i of Object.keys(e.attributes).sort()){const s=e.attributes[i];n+=i+",",s.data&&(n+=s.data.stride+","),s.offset&&(n+=s.offset+","),s.itemSize&&(n+=s.itemSize+","),s.normalized&&(n+="n,")}for(const i of Object.keys(e.morphAttributes).sort()){const s=e.morphAttributes[i];n+="morph-"+i+",";for(let o=0,a=s.length;o<a;o++){const l=s[o];n+=l.id+","}}return e.index&&(n+="index,"),n}getMaterialCacheKey(){const{object:e,material:n,renderer:i}=this;let s=n.customProgramCacheKey();for(const o of bk(n)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(o))continue;const a=n[o];let l;if(a!==null){const c=typeof a;c==="number"?l=a!==0?"1":"0":c==="object"?(l="{",a.isTexture&&(l+=a.mapping,i.backend.isWebGPUBackend===!0&&(l+=a.magFilter,l+=a.minFilter,l+=a.wrapS,l+=a.wrapT,l+=a.wrapR)),l+="}"):l=String(a)}else l=String(a);s+=l+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(s+=e._colorsTexture.uuid+",")),(e.isInstancedMesh||e.count>1)&&(s+=e.uuid+","),s+=e.receiveShadow+",",EI(s)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const n in e){const i=this.geometry.getAttribute(n);if(i===void 0||e[n]!==i.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Vh(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Vh(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const Xs=[];class Sk{constructor(e,n,i,s,o,a){this.renderer=e,this.nodes=n,this.geometries=i,this.pipelines=s,this.bindings=o,this.info=a,this.chainMaps={}}get(e,n,i,s,o,a,l,c){const u=this.getChainMap(c);Xs[0]=e,Xs[1]=n,Xs[2]=a,Xs[3]=o;let h=u.get(Xs);return h===void 0?(h=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,n,i,s,o,a,l,c),u.set(Xs,h)):(h.updateClipping(l),h.needsGeometryUpdate&&h.setGeometry(e.geometry),(h.version!==n.version||h.needsUpdate)&&(h.initialCacheKey!==h.getCacheKey()?(h.dispose(),h=this.get(e,n,i,s,o,a,l,c)):h.version=n.version)),Xs.length=0,h}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new ir)}dispose(){this.chainMaps={}}createRenderObject(e,n,i,s,o,a,l,c,u,h,d){const f=this.getChainMap(d),p=new Tk(e,n,i,s,o,a,l,c,u,h);return p.onDispose=()=>{this.pipelines.delete(p),this.bindings.delete(p),this.nodes.delete(p),f.delete(p.getChainArray())},p}}class Us{constructor(){this.data=new WeakMap}get(e){let n=this.data.get(e);return n===void 0&&(n={},this.data.set(e,n)),n}delete(e){let n=null;return this.data.has(e)&&(n=this.data.get(e),this.data.delete(e)),n}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const ki={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},bs=16,Mk=211,Ek=212;class wk extends Us{constructor(e){super(),this.backend=e}delete(e){const n=super.delete(e);return n!==null&&this.backend.destroyAttribute(e),n}update(e,n){const i=this.get(e);if(i.version===void 0)n===ki.VERTEX?this.backend.createAttribute(e):n===ki.INDEX?this.backend.createIndexAttribute(e):n===ki.STORAGE?this.backend.createStorageAttribute(e):n===ki.INDIRECT&&this.backend.createIndirectStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const s=this._getBufferAttribute(e);(i.version<s.version||s.usage===oa)&&(this.backend.updateAttribute(e),i.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function IS(r){return r.index!==null?r.index.version:r.attributes.position.version}function S0(r){const e=[],n=r.index,i=r.attributes.position;if(n!==null){const o=n.array;for(let a=0,l=o.length;a<l;a+=3){const c=o[a+0],u=o[a+1],h=o[a+2];e.push(c,u,u,h,h,c)}}else{const o=i.array;for(let a=0,l=o.length/3-1;a<l;a+=3){const c=a+0,u=a+1,h=a+2;e.push(c,u,u,h,h,c)}}const s=new(lg(e)?fg:dg)(e,1);return s.version=IS(r),s}class Ak extends Us{constructor(e,n){super(),this.attributes=e,this.info=n,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const n=e.geometry;return super.has(n)&&this.get(n).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const n=e.geometry,i=this.get(n);i.initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const o=n.index,a=e.getAttributes();o!==null&&this.attributes.delete(o);for(const c of a)this.attributes.delete(c);const l=this.wireframes.get(n);l!==void 0&&this.attributes.delete(l),n.removeEventListener("dispose",s)};n.addEventListener("dispose",s)}updateAttributes(e){const n=e.getAttributes();for(const o of n)o.isStorageBufferAttribute||o.isStorageInstancedBufferAttribute?this.updateAttribute(o,ki.STORAGE):this.updateAttribute(o,ki.VERTEX);const i=this.getIndex(e);i!==null&&this.updateAttribute(i,ki.INDEX);const s=e.geometry.indirect;s!==null&&this.updateAttribute(s,ki.INDIRECT)}updateAttribute(e,n){const i=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,n),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,n),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,n),this.attributeCall.set(e,i))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:n,material:i}=e;let s=n.index;if(i.wireframe===!0){const o=this.wireframes;let a=o.get(n);a===void 0?(a=S0(n),o.set(n,a)):a.version!==IS(n)&&(this.attributes.delete(a),a=S0(n),o.set(n,a)),s=a}return s}}class Rk{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,n,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(n/3):e.isPoints?this.render.points+=i*n:e.isLineSegments?this.render.lines+=i*(n/2):e.isLine?this.render.lines+=i*(n-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class US{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Ck extends US{constructor(e,n,i){super(e),this.vertexProgram=n,this.fragmentProgram=i}}class Nk extends US{constructor(e,n){super(e),this.computeProgram=n,this.isComputePipeline=!0}}let Pk=0;class ip{constructor(e,n,i,s=null,o=null){this.id=Pk++,this.code=e,this.stage=n,this.name=i,this.transforms=s,this.attributes=o,this.usedTimes=0}}class Dk extends Us{constructor(e,n){super(),this.backend=e,this.nodes=n,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,n){const{backend:i}=this,s=this.get(e);if(this._needsComputeUpdate(e)){const o=s.pipeline;o&&(o.usedTimes--,o.computeProgram.usedTimes--);const a=this.nodes.getForCompute(e);let l=this.programs.compute.get(a.computeShader);l===void 0&&(o&&o.computeProgram.usedTimes===0&&this._releaseProgram(o.computeProgram),l=new ip(a.computeShader,"compute",e.name,a.transforms,a.nodeAttributes),this.programs.compute.set(a.computeShader,l),i.createProgram(l));const c=this._getComputeCacheKey(e,l);let u=this.caches.get(c);u===void 0&&(o&&o.usedTimes===0&&this._releasePipeline(o),u=this._getComputePipeline(e,l,c,n)),u.usedTimes++,l.usedTimes++,s.version=e.version,s.pipeline=u}return s.pipeline}getForRender(e,n=null){const{backend:i}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const o=s.pipeline;o&&(o.usedTimes--,o.vertexProgram.usedTimes--,o.fragmentProgram.usedTimes--);const a=e.getNodeBuilderState(),l=e.material?e.material.name:"";let c=this.programs.vertex.get(a.vertexShader);c===void 0&&(o&&o.vertexProgram.usedTimes===0&&this._releaseProgram(o.vertexProgram),c=new ip(a.vertexShader,"vertex",l),this.programs.vertex.set(a.vertexShader,c),i.createProgram(c));let u=this.programs.fragment.get(a.fragmentShader);u===void 0&&(o&&o.fragmentProgram.usedTimes===0&&this._releaseProgram(o.fragmentProgram),u=new ip(a.fragmentShader,"fragment",l),this.programs.fragment.set(a.fragmentShader,u),i.createProgram(u));const h=this._getRenderCacheKey(e,c,u);let d=this.caches.get(h);d===void 0?(o&&o.usedTimes===0&&this._releasePipeline(o),d=this._getRenderPipeline(e,c,u,h,n)):e.pipeline=d,d.usedTimes++,c.usedTimes++,u.usedTimes++,s.pipeline=d}return s.pipeline}delete(e){const n=this.get(e).pipeline;return n&&(n.usedTimes--,n.usedTimes===0&&this._releasePipeline(n),n.isComputePipeline?(n.computeProgram.usedTimes--,n.computeProgram.usedTimes===0&&this._releaseProgram(n.computeProgram)):(n.fragmentProgram.usedTimes--,n.vertexProgram.usedTimes--,n.vertexProgram.usedTimes===0&&this._releaseProgram(n.vertexProgram),n.fragmentProgram.usedTimes===0&&this._releaseProgram(n.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,n,i,s){i=i||this._getComputeCacheKey(e,n);let o=this.caches.get(i);return o===void 0&&(o=new Nk(i,n),this.caches.set(i,o),this.backend.createComputePipeline(o,s)),o}_getRenderPipeline(e,n,i,s,o){s=s||this._getRenderCacheKey(e,n,i);let a=this.caches.get(s);return a===void 0&&(a=new Ck(s,n,i),this.caches.set(s,a),e.pipeline=a,this.backend.createRenderPipeline(e,o)),a}_getComputeCacheKey(e,n){return e.id+","+n.id}_getRenderCacheKey(e,n,i){return n.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const n=e.code,i=e.stage;this.programs[i].delete(n)}_needsComputeUpdate(e){const n=this.get(e);return n.pipeline===void 0||n.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class Lk extends Us{constructor(e,n,i,s,o,a){super(),this.backend=e,this.textures=i,this.pipelines=o,this.attributes=s,this.nodes=n,this.info=a,this.pipelines.bindings=this}getForRender(e){const n=e.getBindings();for(const i of n){const s=this.get(i);s.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,n,0),s.bindGroup=i)}return n}getForCompute(e){const n=this.nodes.getForCompute(e).bindings;for(const i of n){const s=this.get(i);s.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,n,0),s.bindGroup=i)}return n}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const n of e)this._update(n,e)}_init(e){for(const n of e.bindings)if(n.isSampledTexture)this.textures.updateTexture(n.texture);else if(n.isStorageBuffer){const i=n.attribute,s=i.isIndirectStorageBufferAttribute?ki.INDIRECT:ki.STORAGE;this.attributes.update(i,s)}}_update(e,n){const{backend:i}=this;let s=!1,o=!0,a=0,l=0;for(const c of e.bindings)if(!(c.isNodeUniformsGroup&&this.nodes.updateGroup(c)===!1)){if(c.isStorageBuffer){const u=c.attribute,h=u.isIndirectStorageBufferAttribute?ki.INDIRECT:ki.STORAGE;this.attributes.update(u,h)}if(c.isUniformBuffer)c.update()&&i.updateBinding(c);else if(c.isSampledTexture){const u=c.update(),h=c.texture,d=this.textures.get(h);if(u&&(this.textures.updateTexture(h),c.generation!==d.generation&&(c.generation=d.generation,s=!0,o=!1)),i.get(h).externalTexture!==void 0||d.isDefaultTexture?o=!1:(a=a*10+h.id,l+=h.version),h.isStorageTexture===!0){const p=this.get(h);c.store===!0?p.needsMipmap=!0:this.textures.needsMipmaps(h)&&p.needsMipmap===!0&&(this.backend.generateMipmaps(h),p.needsMipmap=!1)}}else c.isSampler&&c.update()}s===!0&&this.backend.updateBindings(e,n,o?a:0,l)}}function Ik(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?r.z-e.z:r.id-e.id}function M0(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function E0(r){return(r.transmission>0||r.transmissionNode)&&r.side===zn&&r.forceSinglePass===!1}class Uk{constructor(e,n,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(n,i),this.lightsArray=[],this.scene=n,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,n,i,s,o,a,l){let c=this.renderItems[this.renderItemsIndex];return c===void 0?(c={id:e.id,object:e,geometry:n,material:i,groupOrder:s,renderOrder:e.renderOrder,z:o,group:a,clippingContext:l},this.renderItems[this.renderItemsIndex]=c):(c.id=e.id,c.object=e,c.geometry=n,c.material=i,c.groupOrder=s,c.renderOrder=e.renderOrder,c.z=o,c.group=a,c.clippingContext=l),this.renderItemsIndex++,c}push(e,n,i,s,o,a,l){const c=this.getNextRenderItem(e,n,i,s,o,a,l);e.occlusionTest===!0&&this.occlusionQueryCount++,i.transparent===!0||i.transmission>0?(E0(i)&&this.transparentDoublePass.push(c),this.transparent.push(c)):this.opaque.push(c)}unshift(e,n,i,s,o,a,l){const c=this.getNextRenderItem(e,n,i,s,o,a,l);i.transparent===!0||i.transmission>0?(E0(i)&&this.transparentDoublePass.unshift(c),this.transparent.unshift(c)):this.opaque.unshift(c)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,n){this.opaque.length>1&&this.opaque.sort(e||Ik),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(n||M0),this.transparent.length>1&&this.transparent.sort(n||M0)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,n=this.renderItems.length;e<n;e++){const i=this.renderItems[e];if(i.id===null)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.groupOrder=null,i.renderOrder=null,i.z=null,i.group=null,i.clippingContext=null}}}const Gl=[];class Fk{constructor(e){this.lighting=e,this.lists=new ir}get(e,n){const i=this.lists;Gl[0]=e,Gl[1]=n;let s=i.get(Gl);return s===void 0&&(s=new Uk(this.lighting,e,n),i.set(Gl,s)),Gl.length=0,s}dispose(){this.lists=new ir}}let Ok=0;class Bk{constructor(){this.id=Ok++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new et,this.scissor=!1,this.scissorValue=new et,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return FS(this)}}function FS(r){const{textures:e,activeCubeFace:n,activeMipmapLevel:i}=r,s=[n,i];for(const o of e)s.push(o.id);return Ag(s)}const Vl=[],kk=new hd,zk=new pg;class Gk{constructor(){this.chainMaps={}}get(e,n,i=null){Vl[0]=e,Vl[1]=n;let s;if(i===null)s="default";else{const l=i.texture.format;s=`${i.textures.length}:${l}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const o=this._getChainMap(s);let a=o.get(Vl);return a===void 0&&(a=new Bk,o.set(Vl,a)),Vl.length=0,i!==null&&(a.sampleCount=i.samples===0?1:i.samples),a}getForClear(e=null){return this.get(kk,zk,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new ir)}dispose(){this.chainMaps={}}}const Vk=new L;class Hk extends Us{constructor(e,n,i){super(),this.renderer=e,this.backend=n,this.info=i}updateRenderTarget(e,n=0){const i=this.get(e),s=e.samples===0?1:e.samples,o=i.depthTextureMips||(i.depthTextureMips={}),a=e.textures,l=this.getSize(a[0]),c=l.width>>n,u=l.height>>n;let h=e.depthTexture||o[n];const d=e.depthBuffer===!0||e.stencilBuffer===!0;let f=!1;h===void 0&&d&&(h=new zi,h.format=e.stencilBuffer?Ai:wi,h.type=e.stencilBuffer?Ei:Wt,h.image.width=c,h.image.height=u,h.image.depth=l.depth,h.isArrayTexture=e.multiview===!0&&l.depth>1,o[n]=h),(i.width!==l.width||l.height!==i.height)&&(f=!0,h&&(h.needsUpdate=!0,h.image.width=c,h.image.height=u,h.image.depth=h.isArrayTexture?h.image.depth:1)),i.width=l.width,i.height=l.height,i.textures=a,i.depthTexture=h||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==s&&(f=!0,h&&(h.needsUpdate=!0),i.sampleCount=s);const p={sampleCount:s};if(e.isXRRenderTarget!==!0){for(let m=0;m<a.length;m++){const y=a[m];f&&(y.needsUpdate=!0),this.updateTexture(y,p)}h&&this.updateTexture(h,p)}if(i.initialized!==!0){i.initialized=!0;const m=()=>{e.removeEventListener("dispose",m);for(let y=0;y<a.length;y++)this._destroyTexture(a[y]);h&&this._destroyTexture(h),this.delete(e),this.backend.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,n={}){const i=this.get(e);if(i.initialized===!0&&i.version===e.version)return;const s=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,o=this.backend;if(s&&i.initialized===!0&&(o.destroySampler(e),o.destroyTexture(e)),e.isFramebufferTexture){const u=this.renderer.getRenderTarget();u?e.type=u.texture.type:e.type=an}const{width:a,height:l,depth:c}=this.getSize(e);if(n.width=a,n.height=l,n.depth=c,n.needsMipmaps=this.needsMipmaps(e),n.levels=n.needsMipmaps?this.getMipLevels(e,a,l):1,e.isCubeTexture&&e.mipmaps.length>0&&n.levels++,s||e.isStorageTexture===!0||e.isExternalTexture===!0)o.createSampler(e),o.createTexture(e,n),i.generation=e.version;else if(i.initialized!==!0&&o.createSampler(e),e.version>0){const h=e.image;if(h===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(h.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const d=[];for(const f of e.images)d.push(f);n.images=d}else n.image=h;(i.isDefaultTexture===void 0||i.isDefaultTexture===!0)&&(o.createTexture(e,n),i.isDefaultTexture=!1,i.generation=e.version),e.source.dataReady===!0&&o.updateTexture(e,n),n.needsMipmaps&&e.mipmaps.length===0&&o.generateMipmaps(e),e.onUpdate&&e.onUpdate(e)}}else o.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version;if(i.initialized!==!0){i.initialized=!0,i.generation=e.version,this.info.memory.textures++,e.isVideoTexture&&Je.getTransfer(e.colorSpace)!==Pe&&console.warn("WebGPURenderer: Video textures must use a color space with a sRGB transfer function, e.g. SRGBColorSpace.");const u=()=>{e.removeEventListener("dispose",u),this._destroyTexture(e)};e.addEventListener("dispose",u)}i.version=e.version}getSize(e,n=Vk){let i=e.images?e.images[0]:e.image;return i?(i.image!==void 0&&(i=i.image),typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement?(n.width=i.videoWidth||1,n.height=i.videoHeight||1,n.depth=1):i instanceof VideoFrame?(n.width=i.displayWidth||1,n.height=i.displayHeight||1,n.depth=1):(n.width=i.width||1,n.height=i.height||1,n.depth=e.isCubeTexture?6:i.depth||1)):n.width=n.height=n.depth=1,n}getMipLevels(e,n,i){let s;return e.mipmaps.length>0?s=e.mipmaps.length:e.isCompressedTexture===!0?s=1:s=Math.floor(Math.log2(Math.max(n,i)))+1,s}needsMipmaps(e){return e.generateMipmaps===!0||e.mipmaps.length>0}_destroyTexture(e){this.has(e)===!0&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class t_ extends We{constructor(e,n,i,s=1){super(e,n,i),this.a=s}set(e,n,i,s=1){return this.a=s,super.set(e,n,i)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class Wk extends It{static get type(){return"ParameterNode"}constructor(e,n=null){super(e,n),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class $k extends Ve{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.hasOutput?this.outputNode.getNodeType(e):"void"}getMemberType(e,n){return this.hasOutput?this.outputNode.getMemberType(e,n):"void"}add(e){return e.isNode!==!0?(console.error("THREE.TSL: Invalid node added to stack."),this):(this.nodes.push(e),this)}If(e,n){const i=new ic(n);return this._currentCond=ei(e,i),this.add(this._currentCond)}ElseIf(e,n){const i=new ic(n),s=ei(e,i);return this._currentCond.elseNode=s,this._currentCond=s,this}Else(e){return this._currentCond.elseNode=new ic(e),this}Switch(e){return this._expressionNode=fe(e),this}Case(...e){const n=[];if(e.length>=2)for(let l=0;l<e.length-1;l++)n.push(this._expressionNode.equal(fe(e[l])));else console.error("THREE.TSL: Invalid parameter length. Case() requires at least two parameters.");const i=e[e.length-1],s=new ic(i);let o=n[0];for(let l=1;l<n.length;l++)o=o.or(n[l]);const a=ei(o,s);return this._currentCond===null?(this._currentCond=a,this.add(this._currentCond)):(this._currentCond.elseNode=a,this._currentCond=a,this)}Default(e){return this.Else(e),this}setup(e){const n=e.getNodeProperties(this);let i=0;for(const s of this.getChildren())s.isVarNode&&s.intent===!0&&e.getNodeProperties(s).assign!==!0||(n["node"+i++]=s);return n.outputNode||null}get hasOutput(){return this.outputNode&&this.outputNode.isNode}build(e,...n){const i=e.currentStack,s=Ig();$h(this),e.currentStack=this;const o=e.buildStage;for(const l of this.nodes)if(!(l.isVarNode&&l.intent===!0&&e.getNodeProperties(l).assign!==!0)){if(o==="setup")l.build(e);else if(o==="analyze")l.build(e,this);else if(o==="generate"){const c=e.getDataFromNode(l,"any").stages,u=c&&c[e.shaderStage];if(l.isVarNode&&u&&u.length===1&&u[0]&&u[0].isStackNode)continue;l.build(e,"void")}}let a;return this.hasOutput?a=this.outputNode.build(e,...n):a=super.build(e,...n),$h(s),e.currentStack=i,a}}const rp=wt($k).setParameterLength(0,1);new Ki;new L;new L;new L;new bt;new L(0,0,-1);new et;new L;new L;new et;new de;const jk=new To;Ta.flipX();jk.depthTexture=new zi(1,1);const sp=new eu(-1,1,1,-1,0,1);class qk extends $n{constructor(e=!1){super();const n=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new mn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new mn(n,2))}}const Xk=new qk;class n_ extends yn{constructor(e=null){super(Xk,e),this.camera=sp,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,sp)}render(e){e.render(this,sp)}}class Vc extends Ve{static get type(){return"EventNode"}constructor(e,n){super("void"),this.eventType=e,this.callback=n,e===Vc.OBJECT?this.updateType=_t.OBJECT:e===Vc.MATERIAL&&(this.updateType=_t.RENDER)}update(e){this.callback(e)}}Vc.OBJECT="object";Vc.MATERIAL="material";const Hl=new ui,op=new bt;class ai extends Ve{static get type(){return"SceneNode"}constructor(e=ai.BACKGROUND_BLURRINESS,n=null){super(),this.scope=e,this.scene=n}setup(e){const n=this.scope,i=this.scene!==null?this.scene:e.scene;let s;return n===ai.BACKGROUND_BLURRINESS?s=Ht("backgroundBlurriness","float",i):n===ai.BACKGROUND_INTENSITY?s=Ht("backgroundIntensity","float",i):n===ai.BACKGROUND_ROTATION?s=ot("mat4").setName("backgroundRotation").setGroup(Ke).onRenderUpdate(()=>{const o=i.background;return o!==null&&o.isTexture&&o.mapping!==Qm?(Hl.copy(i.backgroundRotation),Hl.x*=-1,Hl.y*=-1,Hl.z*=-1,op.makeRotationFromEuler(Hl)):op.identity(),op}):console.error("THREE.SceneNode: Unknown scope:",n),s}}ai.BACKGROUND_BLURRINESS="backgroundBlurriness";ai.BACKGROUND_INTENSITY="backgroundIntensity";ai.BACKGROUND_ROTATION="backgroundRotation";const Yk=Te(ai,ai.BACKGROUND_BLURRINESS),w0=Te(ai,ai.BACKGROUND_INTENSITY),Kk=Te(ai,ai.BACKGROUND_ROTATION),Zk=ce(({texture:r,uv:e})=>{const i=ae().toVar();return un(e.x.lessThan(1e-4),()=>{i.assign(ae(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{i.assign(ae(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{i.assign(ae(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{i.assign(ae(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{i.assign(ae(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{i.assign(ae(0,0,-1))}).Else(()=>{const o=r.sample(e.add(ae(-.01,0,0))).r.sub(r.sample(e.add(ae(.01,0,0))).r),a=r.sample(e.add(ae(0,-.01,0))).r.sub(r.sample(e.add(ae(0,.01,0))).r),l=r.sample(e.add(ae(0,0,-.01))).r.sub(r.sample(e.add(ae(0,0,.01))).r);i.assign(ae(o,a,l))}),i.normalize()});class Qk extends pl{static get type(){return"Texture3DNode"}constructor(e,n=null,i=null){super(e,n,i),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return ae(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,n){const i=this.value;return e.isFlipY()&&(i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0)&&(this.sampler?n=n.flipY():n=n.setY(jt(ba(this,this.levelNode).y).sub(n.y).sub(1))),n}generateUV(e,n){return n.build(e,"vec3")}generateOffset(e,n){return n.build(e,"ivec3")}normal(e){return Zk({texture:this,uv:e})}}const Jk=wt(Qk).setParameterLength(1,3),nh=new de;class ez extends pl{static get type(){return"PassTextureNode"}constructor(e,n){super(n),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class A0 extends ez{static get type(){return"PassMultipleTextureNode"}constructor(e,n,i=!1){super(e,null),this.textureName=n,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class wd extends En{static get type(){return"PassNode"}constructor(e,n,i,s={}){super("vec4"),this.scope=e,this.scene=n,this.camera=i,this.options=s,this._pixelRatio=1,this._width=1,this._height=1;const o=new zi;o.isRenderTargetTexture=!0,o.name="depth";const a=new To(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Cn,...s});a.texture.name="output",a.depthTexture=o,this.renderTarget=a,this._textures={output:a.texture,depth:o},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=ot(0),this._cameraFar=ot(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=_t.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let n=this._textures[e];return n===void 0&&(n=this.renderTarget.texture.clone(),n.name=e,this._textures[e]=n,this.renderTarget.textures.push(n)),n}getPreviousTexture(e){let n=this._previousTextures[e];return n===void 0&&(n=this.getTexture(e).clone(),this._previousTextures[e]=n),n}toggleTexture(e){const n=this._previousTextures[e];if(n!==void 0){const i=this._textures[e],s=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[s]=n,this._textures[e]=n,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let n=this._textureNodes[e];return n===void 0&&(n=fe(new A0(this,e)),n.updateTexture(),this._textureNodes[e]=n),n}getPreviousTextureNode(e="output"){let n=this._previousTextureNodes[e];return n===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),n=fe(new A0(this,e,!0)),n.updateTexture(),this._previousTextureNodes[e]=n),n}getViewZNode(e="depth"){let n=this._viewZNodes[e];if(n===void 0){const i=this._cameraNear,s=this._cameraFar;this._viewZNodes[e]=n=fS(this.getTextureNode(e),i,s)}return n}getLinearDepthNode(e="depth"){let n=this._linearDepthNodes[e];if(n===void 0){const i=this._cameraNear,s=this._cameraFar,o=this.getViewZNode(e);this._linearDepthNodes[e]=n=_c(o,i,s)}return n}async compileAsync(e){const n=e.getRenderTarget(),i=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(n),e.setMRT(i)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===wd.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:n}=e,{scene:i}=this;let s,o;const a=n.getOutputRenderTarget();a&&a.isXRRenderTarget===!0?(o=1,s=n.xr.getCamera(),n.xr.updateCamera(s),nh.set(a.width,a.height)):(s=this.camera,o=n.getPixelRatio(),n.getSize(nh)),this._pixelRatio=o,this.setSize(nh.width,nh.height);const l=n.getRenderTarget(),c=n.getMRT(),u=s.layers.mask;this._cameraNear.value=s.near,this._cameraFar.value=s.far,this._layers!==null&&(s.layers.mask=this._layers.mask);for(const h in this._previousTextures)this.toggleTexture(h);n.setRenderTarget(this.renderTarget),n.setMRT(this._mrt),n.render(i,s),n.setRenderTarget(l),n.setMRT(c),s.layers.mask=u}setSize(e,n){this._width=e,this._height=n;const i=this._width*this._pixelRatio*this._resolution,s=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(i,s),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,n,i,s){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new et),e.isVector4?this._scissor.copy(e):this._scissor.set(e,n,i,s),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,n,i,s){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new et),e.isVector4?this._viewport.copy(e):this._viewport.set(e,n,i,s),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}wd.COLOR="color";wd.DEPTH="depth";const tz=ce(([r,e])=>r.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),nz=ce(([r,e])=>(r=r.mul(e),r.div(r.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),iz=ce(([r,e])=>{r=r.mul(e),r=r.sub(.004).max(0);const n=r.mul(r.mul(6.2).add(.5)),i=r.mul(r.mul(6.2).add(1.7)).add(.06);return n.div(i).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),rz=ce(([r])=>{const e=r.mul(r.add(.0245786)).sub(90537e-9),n=r.mul(r.add(.432951).mul(.983729)).add(.238081);return e.div(n)}),sz=ce(([r,e])=>{const n=ti(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=ti(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return r=r.mul(e).div(.6),r=n.mul(r),r=rz(r),r=i.mul(r),r.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),oz=ti(ae(1.6605,-.1246,-.0182),ae(-.5876,1.1329,-.1006),ae(-.0728,-.0083,1.1187)),az=ti(ae(.6274,.0691,.0164),ae(.3293,.9195,.088),ae(.0433,.0113,.8956)),lz=ce(([r])=>{const e=ae(r).toVar(),n=ae(e.mul(e)).toVar(),i=ae(n.mul(n)).toVar();return se(15.5).mul(i.mul(n)).sub(yt(40.14,i.mul(e))).add(yt(31.96,i).sub(yt(6.868,n.mul(e))).add(yt(.4298,n).add(yt(.1191,e).sub(.00232))))}),cz=ce(([r,e])=>{const n=ae(r).toVar(),i=ti(ae(.856627153315983,.137318972929847,.11189821299995),ae(.0951212405381588,.761241990602591,.0767994186031903),ae(.0482516061458583,.101439036467562,.811302368396859)),s=ti(ae(1.1271005818144368,-.1413297634984383,-.14132976349843826),ae(-.11060664309660323,1.157823702216272,-.11060664309660294),ae(-.016493938717834573,-.016493938717834257,1.2519364065950405)),o=se(-12.47393),a=se(4.026069);return n.mulAssign(e),n.assign(az.mul(n)),n.assign(i.mul(n)),n.assign(Wn(n,1e-10)),n.assign(ts(n)),n.assign(n.sub(o).div(a.sub(o))),n.assign(rs(n,0,1)),n.assign(lz(n)),n.assign(s.mul(n)),n.assign(vd(Wn(ae(0),n),ae(2.2))),n.assign(oz.mul(n)),n.assign(rs(n,0,1)),n}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),uz=ce(([r,e])=>{const n=se(.76),i=se(.15);r=r.mul(e);const s=el(r.r,el(r.g,r.b)),o=ei(s.lessThan(.08),s.sub(yt(6.25,s.mul(s))),.04);r.subAssign(o);const a=Wn(r.r,Wn(r.g,r.b));un(a.lessThan(n),()=>r);const l=Zn(1,n),c=Zn(1,l.mul(l).div(a.add(l.sub(n))));r.mulAssign(c.div(a));const u=Zn(1,Sr(1,i.mul(a.sub(c)).add(1)));return Kt(r,ae(c),u)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Yn extends Ve{static get type(){return"CodeNode"}constructor(e="",n=[],i=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=n,this.language=i}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const n=this.getIncludes(e);for(const s of n)s.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class hz extends Yn{static get type(){return"FunctionNode"}constructor(e="",n=[],i=""){super(e,n,i)}getNodeType(e){return this.getNodeFunction(e).type}getMemberType(e,n){const i=this.getNodeType(e);return e.getStructTypeNode(i).getMemberType(e,n)}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const n=e.getDataFromNode(this);let i=n.nodeFunction;return i===void 0&&(i=e.parser.parseFunction(this.code),n.nodeFunction=i),i}generate(e,n){super.generate(e);const i=this.getNodeFunction(e),s=i.name,o=i.type,a=e.getCodeFromNode(this,o);s!==""&&(a.name=s);const l=e.getPropertyName(a),c=this.getNodeFunction(e).getCode(l);return a.code=c+`
`,n==="property"?l:e.format(`${l}()`,o,n)}}function OS(r){let e;const n=r.context.getViewZ;return n!==void 0&&(e=n(this)),(e||dn.z).negate()}const dz=ce(([r,e],n)=>{const i=OS(n);return Ps(r,e,i)}),fz=ce(([r],e)=>{const n=OS(e);return r.mul(r,n,n).negate().exp().oneMinus()}),R0=ce(([r,e])=>dt(e.toFloat().mix(mc.rgb,r.toVec3()),mc.a));class pz extends Ve{constructor(e){super(),this.scope=e}generate(e){const{scope:n}=this,{renderer:i}=e;i.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${n}Barrier 
`):e.addLineFlowCode(`${n}Barrier()`,this)}}wt(pz);class wr extends Ve{static get type(){return"AtomicFunctionNode"}constructor(e,n,i){super("uint"),this.method=e,this.pointerNode=n,this.valueNode=i,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const n=e.getNodeProperties(this),i=n.parents,s=this.method,o=this.getNodeType(e),a=this.getInputType(e),l=this.pointerNode,c=this.valueNode,u=[];u.push(`&${l.build(e,a)}`),c!==null&&u.push(c.build(e,a));const h=`${e.getMethod(s,o)}( ${u.join(", ")} )`;if(i?i.length===1&&i[0].isStackNode===!0:!1)e.addLineFlowCode(h,this);else return n.constNode===void 0&&(n.constNode=tl(h,o).toConst()),n.constNode.build(e)}}wr.ATOMIC_LOAD="atomicLoad";wr.ATOMIC_STORE="atomicStore";wr.ATOMIC_ADD="atomicAdd";wr.ATOMIC_SUB="atomicSub";wr.ATOMIC_MAX="atomicMax";wr.ATOMIC_MIN="atomicMin";wr.ATOMIC_AND="atomicAnd";wr.ATOMIC_OR="atomicOr";wr.ATOMIC_XOR="atomicXor";wt(wr);class Mt extends En{static get type(){return"SubgroupFunctionNode"}constructor(e,n=null,i=null){super(),this.method=e,this.aNode=n,this.bNode=i}getInputType(e){const n=this.aNode?this.aNode.getNodeType(e):null,i=this.bNode?this.bNode.getNodeType(e):null,s=e.isMatrix(n)?0:e.getTypeLength(n),o=e.isMatrix(i)?0:e.getTypeLength(i);return s>o?n:i}getNodeType(e){const n=this.method;return n===Mt.SUBGROUP_ELECT?"bool":n===Mt.SUBGROUP_BALLOT?"uvec4":this.getInputType(e)}generate(e,n){const i=this.method,s=this.getNodeType(e),o=this.getInputType(e),a=this.aNode,l=this.bNode,c=[];if(i===Mt.SUBGROUP_BROADCAST||i===Mt.SUBGROUP_SHUFFLE||i===Mt.QUAD_BROADCAST){const h=l.getNodeType(e);c.push(a.build(e,s),l.build(e,h==="float"?"int":s))}else i===Mt.SUBGROUP_SHUFFLE_XOR||i===Mt.SUBGROUP_SHUFFLE_DOWN||i===Mt.SUBGROUP_SHUFFLE_UP?c.push(a.build(e,s),l.build(e,"uint")):(a!==null&&c.push(a.build(e,o)),l!==null&&c.push(l.build(e,o)));const u=c.length===0?"()":`( ${c.join(", ")} )`;return e.format(`${e.getMethod(i,s)}${u}`,s,n)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Mt.SUBGROUP_ELECT="subgroupElect";Mt.SUBGROUP_BALLOT="subgroupBallot";Mt.SUBGROUP_ADD="subgroupAdd";Mt.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd";Mt.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd";Mt.SUBGROUP_MUL="subgroupMul";Mt.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul";Mt.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul";Mt.SUBGROUP_AND="subgroupAnd";Mt.SUBGROUP_OR="subgroupOr";Mt.SUBGROUP_XOR="subgroupXor";Mt.SUBGROUP_MIN="subgroupMin";Mt.SUBGROUP_MAX="subgroupMax";Mt.SUBGROUP_ALL="subgroupAll";Mt.SUBGROUP_ANY="subgroupAny";Mt.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst";Mt.QUAD_SWAP_X="quadSwapX";Mt.QUAD_SWAP_Y="quadSwapY";Mt.QUAD_SWAP_DIAGONAL="quadSwapDiagonal";Mt.SUBGROUP_BROADCAST="subgroupBroadcast";Mt.SUBGROUP_SHUFFLE="subgroupShuffle";Mt.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor";Mt.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp";Mt.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown";Mt.QUAD_BROADCAST="quadBroadcast";let ih;function Ad(r){ih=ih||new WeakMap;let e=ih.get(r);return e===void 0&&ih.set(r,e={}),e}function i_(r){const e=Ad(r);return e.shadowMatrix||(e.shadowMatrix=ot("mat4").setGroup(Ke).onRenderUpdate(n=>((r.castShadow!==!0||n.renderer.shadowMap.enabled===!1)&&r.shadow.updateMatrices(r),r.shadow.matrix)))}function mz(r,e=nl){const n=i_(r).mul(e);return n.xyz.div(n.w)}function BS(r){const e=Ad(r);return e.position||(e.position=ot(new L).setGroup(Ke).onRenderUpdate((n,i)=>i.value.setFromMatrixPosition(r.matrixWorld)))}function gz(r){const e=Ad(r);return e.targetPosition||(e.targetPosition=ot(new L).setGroup(Ke).onRenderUpdate((n,i)=>i.value.setFromMatrixPosition(r.target.matrixWorld)))}function kS(r){const e=Ad(r);return e.viewPosition||(e.viewPosition=ot(new L).setGroup(Ke).onRenderUpdate(({camera:n},i)=>{i.value=i.value||new L,i.value.setFromMatrixPosition(r.matrixWorld),i.value.applyMatrix4(n.matrixWorldInverse)}))}const zS=r=>as.transformDirection(BS(r).sub(gz(r))),_z=r=>r.sort((e,n)=>e.id-n.id),yz=(r,e)=>{for(const n of e)if(n.isAnalyticLightNode&&n.light.id===r)return n;return null},ap=new WeakMap,Wl=[];class GS extends Ve{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=As("vec3","totalDiffuse"),this.totalSpecularNode=As("vec3","totalSpecular"),this.outgoingLightNode=As("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let i=0;i<e.length;i++){const s=e[i];if(Wl.push(s.id),Wl.push(s.castShadow?1:0),s.isSpotLight===!0){const o=s.map!==null?s.map.id:-1,a=s.colorNode?s.colorNode.getCacheKey():-1;Wl.push(o,a)}}const n=Ag(Wl);return Wl.length=0,n}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const n=[];for(const i of this._lightNodes)n.push(i.getHash());this._lightNodesHash="lights-"+n.join(",")}return this._lightNodesHash}analyze(e){const n=e.getNodeProperties(this);for(const i of n.nodes)i.build(e);n.outputNode.build(e)}setupLightsNode(e){const n=[],i=this._lightNodes,s=_z(this._lights),o=e.renderer.library;for(const a of s)if(a.isNode)n.push(fe(a));else{let l=null;if(i!==null&&(l=yz(a.id,i)),l===null){const c=o.getLightNodeClass(a.constructor);if(c===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${a.constructor.name}`);continue}let u=null;ap.has(a)?u=ap.get(a):(u=fe(new c(a)),ap.set(a,u)),n.push(u)}}this._lightNodes=n}setupDirectLight(e,n,i){const{lightingModel:s,reflectedLight:o}=e.context;s.direct({...i,lightNode:n,reflectedLight:o},e)}setupDirectRectAreaLight(e,n,i){const{lightingModel:s,reflectedLight:o}=e.context;s.directRectArea({...i,lightNode:n,reflectedLight:o},e)}setupLights(e,n){for(const i of n)i.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const n=e.lightsNode;e.lightsNode=this;let i=this.outgoingLightNode;const s=e.context,o=s.lightingModel,a=e.getNodeProperties(this);if(o){const{totalDiffuseNode:l,totalSpecularNode:c}=this;s.outgoingLight=i;const u=e.addStack();a.nodes=u.nodes,o.start(e);const{backdrop:h,backdropAlpha:d}=s,{directDiffuse:f,directSpecular:p,indirectDiffuse:m,indirectSpecular:y}=s.reflectedLight;let _=f.add(m);h!==null&&(d!==null?_=ae(d.mix(_,h)):_=ae(h),s.material.transparent=!0),l.assign(_),c.assign(p.add(y)),i.assign(l.add(c)),o.finish(e),i=i.bypass(e.removeStack())}else a.nodes=[];return e.lightsNode=n,i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class vz extends Ve{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=_t.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:n}){VS.assign(n.receivedShadowPositionNode||e.shadowPositionWorld||nl)}}const VS=As("vec3","shadowPositionWorld");function xz(r,e={}){return e.toneMapping=r.toneMapping,e.toneMappingExposure=r.toneMappingExposure,e.outputColorSpace=r.outputColorSpace,e.renderTarget=r.getRenderTarget(),e.activeCubeFace=r.getActiveCubeFace(),e.activeMipmapLevel=r.getActiveMipmapLevel(),e.renderObjectFunction=r.getRenderObjectFunction(),e.pixelRatio=r.getPixelRatio(),e.mrt=r.getMRT(),e.clearColor=r.getClearColor(e.clearColor||new We),e.clearAlpha=r.getClearAlpha(),e.autoClear=r.autoClear,e.scissorTest=r.getScissorTest(),e}function bz(r,e){return e=xz(r,e),r.setMRT(null),r.setRenderObjectFunction(null),r.setClearColor(0,1),r.autoClear=!0,e}function Tz(r,e){r.toneMapping=e.toneMapping,r.toneMappingExposure=e.toneMappingExposure,r.outputColorSpace=e.outputColorSpace,r.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),r.setRenderObjectFunction(e.renderObjectFunction),r.setPixelRatio(e.pixelRatio),r.setMRT(e.mrt),r.setClearColor(e.clearColor,e.clearAlpha),r.autoClear=e.autoClear,r.setScissorTest(e.scissorTest)}function Sz(r,e={}){return e.background=r.background,e.backgroundNode=r.backgroundNode,e.overrideMaterial=r.overrideMaterial,e}function Mz(r,e){return e=Sz(r,e),r.background=null,r.backgroundNode=null,r.overrideMaterial=null,e}function Ez(r,e){r.background=e.background,r.backgroundNode=e.backgroundNode,r.overrideMaterial=e.overrideMaterial}function wz(r,e,n){return n=bz(r,n),n=Mz(e,n),n}function Az(r,e,n){Tz(r,n),Ez(e,n)}const C0=new WeakMap,Rz=ce(({depthTexture:r,shadowCoord:e,depthLayer:n})=>{let i=Et(r,e.xy).setName("t_basic");return r.isArrayTexture&&(i=i.depth(n)),i.compare(e.z)}),Cz=ce(({depthTexture:r,shadowCoord:e,shadow:n,depthLayer:i})=>{const s=(_,g)=>{let v=Et(r,_);return r.isArrayTexture&&(v=v.depth(i)),v.compare(g)},o=Ht("mapSize","vec2",n).setGroup(Ke),a=Ht("radius","float",n).setGroup(Ke),l=Se(1).div(o),c=l.x.negate().mul(a),u=l.y.negate().mul(a),h=l.x.mul(a),d=l.y.mul(a),f=c.div(2),p=u.div(2),m=h.div(2),y=d.div(2);return hi(s(e.xy.add(Se(c,u)),e.z),s(e.xy.add(Se(0,u)),e.z),s(e.xy.add(Se(h,u)),e.z),s(e.xy.add(Se(f,p)),e.z),s(e.xy.add(Se(0,p)),e.z),s(e.xy.add(Se(m,p)),e.z),s(e.xy.add(Se(c,0)),e.z),s(e.xy.add(Se(f,0)),e.z),s(e.xy,e.z),s(e.xy.add(Se(m,0)),e.z),s(e.xy.add(Se(h,0)),e.z),s(e.xy.add(Se(f,y)),e.z),s(e.xy.add(Se(0,y)),e.z),s(e.xy.add(Se(m,y)),e.z),s(e.xy.add(Se(c,d)),e.z),s(e.xy.add(Se(0,d)),e.z),s(e.xy.add(Se(h,d)),e.z)).mul(1/17)}),Nz=ce(({depthTexture:r,shadowCoord:e,shadow:n,depthLayer:i})=>{const s=(d,f)=>{let p=Et(r,d);return r.isArrayTexture&&(p=p.depth(i)),p.compare(f)},o=Ht("mapSize","vec2",n).setGroup(Ke),a=Se(1).div(o),l=a.x,c=a.y,u=e.xy,h=Ls(u.mul(o).add(.5));return u.subAssign(h.mul(a)),hi(s(u,e.z),s(u.add(Se(l,0)),e.z),s(u.add(Se(0,c)),e.z),s(u.add(a),e.z),Kt(s(u.add(Se(l.negate(),0)),e.z),s(u.add(Se(l.mul(2),0)),e.z),h.x),Kt(s(u.add(Se(l.negate(),c)),e.z),s(u.add(Se(l.mul(2),c)),e.z),h.x),Kt(s(u.add(Se(0,c.negate())),e.z),s(u.add(Se(0,c.mul(2))),e.z),h.y),Kt(s(u.add(Se(l,c.negate())),e.z),s(u.add(Se(l,c.mul(2))),e.z),h.y),Kt(Kt(s(u.add(Se(l.negate(),c.negate())),e.z),s(u.add(Se(l.mul(2),c.negate())),e.z),h.x),Kt(s(u.add(Se(l.negate(),c.mul(2))),e.z),s(u.add(Se(l.mul(2),c.mul(2))),e.z),h.x),h.y)).mul(1/9)}),Pz=ce(({depthTexture:r,shadowCoord:e,depthLayer:n})=>{const i=se(1).toVar();let s=Et(r).sample(e.xy);r.isArrayTexture&&(s=s.depth(n)),s=s.rg;const o=NT(e.z,s.x);return un(o.notEqual(se(1)),()=>{const a=e.z.sub(s.x),l=Wn(0,s.y.mul(s.y));let c=l.div(l.add(a.mul(a)));c=rs(Zn(c,.3).div(.95-.3)),i.assign(rs(Wn(o,c)))}),i}),Dz=ce(([r,e,n])=>{let i=nl.sub(r).length();return i=i.sub(e).div(n.sub(e)),i=i.saturate(),i}),Lz=r=>{const e=r.shadow.camera,n=Ht("near","float",e).setGroup(Ke),i=Ht("far","float",e).setGroup(Ke),s=lO(r);return Dz(s,n,i)},Iz=r=>{let e=C0.get(r);if(e===void 0){const n=r.isPointLight?Lz(r):null;e=new vn,e.colorNode=dt(0,0,0,1),e.depthNode=n,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,C0.set(r,e)}return e},N0=new ir,ea=[],Uz=(r,e,n,i)=>{ea[0]=r,ea[1]=e;let s=N0.get(ea);return(s===void 0||s.shadowType!==n||s.useVelocity!==i)&&(s=(o,a,l,c,u,h,...d)=>{(o.castShadow===!0||o.receiveShadow&&n===Ti)&&(i&&(uT(o).useVelocity=!0),o.onBeforeShadow(r,o,l,e.camera,c,a.overrideMaterial,h),r.renderObject(o,a,l,c,u,h,...d),o.onAfterShadow(r,o,l,e.camera,c,a.overrideMaterial,h))},s.shadowType=n,s.useVelocity=i,N0.set(ea,s)),ea[0]=null,ea[1]=null,s},Fz=ce(({samples:r,radius:e,size:n,shadowPass:i,depthLayer:s})=>{const o=se(0).toVar("meanVertical"),a=se(0).toVar("squareMeanVertical"),l=r.lessThanEqual(se(1)).select(se(0),se(2).div(r.sub(1))),c=r.lessThanEqual(se(1)).select(se(0),se(-1));Ji({start:jt(0),end:jt(r),type:"int",condition:"<"},({i:h})=>{const d=c.add(se(h).mul(l));let f=i.sample(hi(bd.xy,Se(0,d).mul(e)).div(n));i.value.isArrayTexture&&(f=f.depth(s)),f=f.x,o.addAssign(f),a.addAssign(f.mul(f))}),o.divAssign(r),a.divAssign(r);const u=Gg(a.sub(o.mul(o)));return Se(o,u)}),Oz=ce(({samples:r,radius:e,size:n,shadowPass:i,depthLayer:s})=>{const o=se(0).toVar("meanHorizontal"),a=se(0).toVar("squareMeanHorizontal"),l=r.lessThanEqual(se(1)).select(se(0),se(2).div(r.sub(1))),c=r.lessThanEqual(se(1)).select(se(0),se(-1));Ji({start:jt(0),end:jt(r),type:"int",condition:"<"},({i:h})=>{const d=c.add(se(h).mul(l));let f=i.sample(hi(bd.xy,Se(d,0).mul(e)).div(n));i.value.isArrayTexture&&(f=f.depth(s)),o.addAssign(f.x),a.addAssign(hi(f.y.mul(f.y),f.x.mul(f.x)))}),o.divAssign(r),a.divAssign(r);const u=Gg(a.sub(o.mul(o)));return Se(o,u)}),Bz=[Rz,Cz,Nz,Pz];let lp;const rh=new n_;class HS extends vz{static get type(){return"ShadowNode"}constructor(e,n=null){super(e),this.shadow=n||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:n,depthTexture:i,shadowCoord:s,shadow:o,depthLayer:a}){const l=s.x.greaterThanEqual(0).and(s.x.lessThanEqual(1)).and(s.y.greaterThanEqual(0)).and(s.y.lessThanEqual(1)).and(s.z.lessThanEqual(1)),c=n({depthTexture:i,shadowCoord:s,shadow:o,depthLayer:a});return l.select(c,se(1))}setupShadowCoord(e,n){const{shadow:i}=this,{renderer:s}=e,o=Ht("bias","float",i).setGroup(Ke);let a=n,l;if(i.camera.isOrthographicCamera||s.logarithmicDepthBuffer!==!0)a=a.xyz.div(a.w),l=a.z,s.coordinateSystem===Cs&&(l=l.mul(2).sub(1));else{const c=a.w;a=a.xy.div(c);const u=Ht("near","float",i.camera).setGroup(Ke),h=Ht("far","float",i.camera).setGroup(Ke);l=pS(c.negate(),u,h)}return a=ae(a.x,a.y.oneMinus(),l.add(o)),a}getShadowFilterFn(e){return Bz[e]}setupRenderTarget(e,n){const i=new zi(e.mapSize.width,e.mapSize.height);i.name="ShadowDepthTexture",i.compareFunction=ld;const s=n.createRenderTarget(e.mapSize.width,e.mapSize.height);return s.texture.name="ShadowMap",s.texture.type=e.mapType,s.depthTexture=i,{shadowMap:s,depthTexture:i}}setupShadow(e){const{renderer:n}=e,{light:i,shadow:s}=this,o=n.shadowMap.type,{depthTexture:a,shadowMap:l}=this.setupRenderTarget(s,e);if(s.camera.updateProjectionMatrix(),o===Ti&&s.isPointLightShadow!==!0){a.compareFunction=null,l.depth>1?(l._vsmShadowMapVertical||(l._vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Kr,type:Cn,depth:l.depth,depthBuffer:!1}),l._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=l._vsmShadowMapVertical,l._vsmShadowMapHorizontal||(l._vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Kr,type:Cn,depth:l.depth,depthBuffer:!1}),l._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=l._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Kr,type:Cn,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Kr,type:Cn,depthBuffer:!1}));let g=Et(a);a.isArrayTexture&&(g=g.depth(this.depthLayer));let v=Et(this.vsmShadowMapVertical.texture);a.isArrayTexture&&(v=v.depth(this.depthLayer));const x=Ht("blurSamples","float",s).setGroup(Ke),b=Ht("radius","float",s).setGroup(Ke),T=Ht("mapSize","vec2",s).setGroup(Ke);let S=this.vsmMaterialVertical||(this.vsmMaterialVertical=new vn);S.fragmentNode=Fz({samples:x,radius:b,size:T,shadowPass:g,depthLayer:this.depthLayer}).context(e.getSharedContext()),S.name="VSMVertical",S=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new vn),S.fragmentNode=Oz({samples:x,radius:b,size:T,shadowPass:v,depthLayer:this.depthLayer}).context(e.getSharedContext()),S.name="VSMHorizontal"}const c=Ht("intensity","float",s).setGroup(Ke),u=Ht("normalBias","float",s).setGroup(Ke),h=i_(i).mul(VS.add(ml.mul(u))),d=this.setupShadowCoord(e,h),f=s.filterNode||this.getShadowFilterFn(n.shadowMap.type)||null;if(f===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const p=o===Ti&&s.isPointLightShadow!==!0?this.vsmShadowMapHorizontal.texture:a,m=this.setupShadowFilter(e,{filterFn:f,shadowTexture:l.texture,depthTexture:p,shadowCoord:d,shadow:s,depthLayer:this.depthLayer});let y=Et(l.texture,d);a.isArrayTexture&&(y=y.depth(this.depthLayer));const _=Kt(1,m.rgb.mix(y,1),c.mul(y.a)).toVar();return this.shadowMap=l,this.shadow.map=l,_}setup(e){if(e.renderer.shadowMap.enabled!==!1)return ce(()=>{let n=this._node;return this.setupShadowPosition(e),n===null&&(this._node=n=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(n=e.material.receivedShadowNode(n)),n})()}renderShadow(e){const{shadow:n,shadowMap:i,light:s}=this,{renderer:o,scene:a}=e;n.updateMatrices(s),i.setSize(n.mapSize.width,n.mapSize.height,i.depth),o.render(a,n.camera)}updateShadow(e){const{shadowMap:n,light:i,shadow:s}=this,{renderer:o,scene:a,camera:l}=e,c=o.shadowMap.type,u=n.depthTexture.version;this._depthVersionCached=u;const h=s.camera.layers.mask;(s.camera.layers.mask&4294967294)===0&&(s.camera.layers.mask=l.layers.mask);const d=o.getRenderObjectFunction(),f=o.getMRT(),p=f?f.has("velocity"):!1;lp=wz(o,a,lp),a.overrideMaterial=Iz(i),o.setRenderObjectFunction(Uz(o,s,c,p)),o.setClearColor(0,0),o.setRenderTarget(n),this.renderShadow(e),o.setRenderObjectFunction(d),c===Ti&&s.isPointLightShadow!==!0&&this.vsmPass(o),s.camera.layers.mask=h,Az(o,a,lp)}vsmPass(e){const{shadow:n}=this,i=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(n.mapSize.width,n.mapSize.height,i),this.vsmShadowMapHorizontal.setSize(n.mapSize.width,n.mapSize.height,i),e.setRenderTarget(this.vsmShadowMapVertical),rh.material=this.vsmMaterialVertical,rh.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),rh.material=this.vsmMaterialHorizontal,rh.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:n}=this;let i=n.needsUpdate||n.autoUpdate;i&&(this._cameraFrameId[e.camera]===e.frameId&&(i=!1),this._cameraFrameId[e.camera]=e.frameId),i&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(n.needsUpdate=!1))}}const kz=(r,e)=>fe(new HS(r,e)),zz=new We,dr=ce(([r,e])=>{const n=r.toVar(),i=Fi(n),s=Sr(1,Wn(i.x,Wn(i.y,i.z)));i.mulAssign(s),n.mulAssign(s.mul(e.mul(2).oneMinus()));const o=Se(n.xy).toVar(),l=e.mul(1.5).oneMinus();return un(i.z.greaterThanEqual(l),()=>{un(n.z.greaterThan(0),()=>{o.x.assign(Zn(4,n.x))})}).ElseIf(i.x.greaterThanEqual(l),()=>{const c=Kh(n.x);o.x.assign(n.z.mul(c).add(c.mul(2)))}).ElseIf(i.y.greaterThanEqual(l),()=>{const c=Kh(n.y);o.x.assign(n.x.add(c.mul(2)).add(2)),o.y.assign(n.z.mul(c).sub(2))}),Se(.125,.25).mul(o).add(Se(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),Gz=ce(({depthTexture:r,bd3D:e,dp:n,texelSize:i})=>Et(r,dr(e,i.y)).compare(n)),Vz=ce(({depthTexture:r,bd3D:e,dp:n,texelSize:i,shadow:s})=>{const o=Ht("radius","float",s).setGroup(Ke),a=Se(-1,1).mul(o).mul(i.y);return Et(r,dr(e.add(a.xyy),i.y)).compare(n).add(Et(r,dr(e.add(a.yyy),i.y)).compare(n)).add(Et(r,dr(e.add(a.xyx),i.y)).compare(n)).add(Et(r,dr(e.add(a.yyx),i.y)).compare(n)).add(Et(r,dr(e,i.y)).compare(n)).add(Et(r,dr(e.add(a.xxy),i.y)).compare(n)).add(Et(r,dr(e.add(a.yxy),i.y)).compare(n)).add(Et(r,dr(e.add(a.xxx),i.y)).compare(n)).add(Et(r,dr(e.add(a.yxx),i.y)).compare(n)).mul(1/9)}),Hz=ce(({filterFn:r,depthTexture:e,shadowCoord:n,shadow:i})=>{const s=n.xyz.toVar(),o=s.length(),a=ot("float").setGroup(Ke).onRenderUpdate(()=>i.camera.near),l=ot("float").setGroup(Ke).onRenderUpdate(()=>i.camera.far),c=Ht("bias","float",i).setGroup(Ke),u=ot(i.mapSize).setGroup(Ke),h=se(1).toVar();return un(o.sub(l).lessThanEqual(0).and(o.sub(a).greaterThanEqual(0)),()=>{const d=o.sub(a).div(l.sub(a)).toVar();d.addAssign(c);const f=s.normalize(),p=Se(1).div(u.mul(Se(4,2)));h.assign(r({depthTexture:e,bd3D:f,dp:d,texelSize:p,shadow:i}))}),h}),P0=new et,ta=new de,$l=new de;class Wz extends HS{static get type(){return"PointShadowNode"}constructor(e,n=null){super(e,n)}getShadowFilterFn(e){return e===OR?Gz:Vz}setupShadowCoord(e,n){return n}setupShadowFilter(e,{filterFn:n,shadowTexture:i,depthTexture:s,shadowCoord:o,shadow:a}){return Hz({filterFn:n,shadowTexture:i,depthTexture:s,shadowCoord:o,shadow:a})}renderShadow(e){const{shadow:n,shadowMap:i,light:s}=this,{renderer:o,scene:a}=e,l=n.getFrameExtents();$l.copy(n.mapSize),$l.multiply(l),i.setSize($l.width,$l.height),ta.copy(n.mapSize);const c=o.autoClear,u=o.getClearColor(zz),h=o.getClearAlpha();o.autoClear=!1,o.setClearColor(n.clearColor,n.clearAlpha),o.clear();const d=n.getViewportCount();for(let f=0;f<d;f++){const p=n.getViewport(f),m=ta.x*p.x,y=$l.y-ta.y-ta.y*p.y;P0.set(m,y,ta.x*p.z,ta.y*p.w),i.viewport.copy(P0),n.updateMatrices(s,f),o.render(a,n.camera)}o.autoClear=c,o.setClearColor(u,h)}}const $z=(r,e)=>fe(new Wz(r,e));class wo extends gl{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new We,this.colorNode=e&&e.colorNode||ot(this.color).setGroup(Ke),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=_t.FRAME}getHash(){return this.light.uuid}getLightVector(e){return kS(this.light).sub(e.context.positionView||dn)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return kz(this.light)}setupShadow(e){const{renderer:n}=e;if(n.shadowMap.enabled===!1)return;let i=this.shadowColorNode;if(i===null){const s=this.light.shadow.shadowNode;let o;s!==void 0?o=fe(s):o=this.setupShadowNode(),this.shadowNode=o,this.shadowColorNode=i=this.colorNode.mul(o),this.baseColorNode=this.colorNode}this.colorNode=i}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const n=this.setupDirect(e),i=this.setupDirectRectArea(e);n&&e.lightsNode.setupDirectLight(e,this,n),i&&e.lightsNode.setupDirectRectAreaLight(e,this,i)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const WS=ce(({lightDistance:r,cutoffDistance:e,decayExponent:n})=>{const i=r.pow(n).max(.01).reciprocal();return e.greaterThan(0).select(i.mul(r.div(e).pow4().oneMinus().clamp().pow2()),i)}),jz=({color:r,lightVector:e,cutoffDistance:n,decayExponent:i})=>{const s=e.normalize(),o=e.length(),a=WS({lightDistance:o,cutoffDistance:n,decayExponent:i}),l=r.mul(a);return{lightDirection:s,lightColor:l}};class qz extends wo{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=ot(0).setGroup(Ke),this.decayExponentNode=ot(2).setGroup(Ke)}update(e){const{light:n}=this;super.update(e),this.cutoffDistanceNode.value=n.distance,this.decayExponentNode.value=n.decay}setupShadowNode(){return $z(this.light)}setupDirect(e){return jz({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}ce(([r=iu()],{renderer:e,material:n})=>{const i=LT(r.mul(2).sub(1));let s;if(n.alphaToCoverage&&e.samples>1){const o=se(i.fwidth()).toVar();s=Ps(o.oneMinus(),o.add(1),i).oneMinus()}else s=ei(i.greaterThan(1),0,1);return s});const Xz=ce(([r,e])=>{const n=r.x,i=r.y,s=r.z;let o=e.element(0).mul(.886227);return o=o.add(e.element(1).mul(2*.511664).mul(i)),o=o.add(e.element(2).mul(2*.511664).mul(s)),o=o.add(e.element(3).mul(2*.511664).mul(n)),o=o.add(e.element(4).mul(2*.429043).mul(n).mul(i)),o=o.add(e.element(5).mul(2*.429043).mul(i).mul(s)),o=o.add(e.element(6).mul(s.mul(s).mul(.743125).sub(.247708))),o=o.add(e.element(7).mul(2*.429043).mul(n).mul(s)),o=o.add(e.element(8).mul(.429043).mul(yt(n,n).sub(yt(i,i)))),o}),ji=new t_;class Yz extends Us{constructor(e,n){super(),this.renderer=e,this.nodes=n}update(e,n,i){const s=this.renderer,o=this.nodes.getBackgroundNode(e)||e.background;let a=!1;if(o===null)s._clearColor.getRGB(ji),ji.a=s._clearColor.a;else if(o.isColor===!0)o.getRGB(ji),ji.a=1,a=!0;else if(o.isNode===!0){const c=this.get(e),u=o;ji.copy(s._clearColor);let h=c.backgroundMesh;if(h===void 0){let y=function(){o.removeEventListener("dispose",y),h.material.dispose(),h.geometry.dispose()};const f=xd(dt(u).mul(w0),{getUV:()=>Kk.mul(pO),getTextureLevel:()=>Yk});let p=uS;p=p.setZ(p.w);const m=new vn;m.name="Background.material",m.side=kt,m.depthTest=!1,m.depthWrite=!1,m.allowOverride=!1,m.fog=!1,m.lights=!1,m.vertexNode=p,m.colorNode=f,c.backgroundMeshNode=f,c.backgroundMesh=h=new yn(new Jc(1,32,32),m),h.frustumCulled=!1,h.name="Background.mesh",h.onBeforeRender=function(_,g,v){this.matrixWorld.copyPosition(v.matrixWorld)},o.addEventListener("dispose",y)}const d=u.getCacheKey();c.backgroundCacheKey!==d&&(c.backgroundMeshNode.node=dt(u).mul(w0),c.backgroundMeshNode.needsUpdate=!0,h.material.needsUpdate=!0,c.backgroundCacheKey=d),n.unshift(h,h.geometry,h.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",o);const l=s.xr.getEnvironmentBlendMode();if(l==="additive"?ji.set(0,0,0,1):l==="alpha-blend"&&ji.set(0,0,0,0),s.autoClear===!0||a===!0){const c=i.clearColorValue;c.r=ji.r,c.g=ji.g,c.b=ji.b,c.a=ji.a,(s.backend.isWebGLBackend===!0||s.alpha===!0)&&(c.r*=c.a,c.g*=c.a,c.b*=c.a),i.depthClearValue=s._clearDepth,i.stencilClearValue=s._clearStencil,i.clearColor=s.autoClearColor===!0,i.clearDepth=s.autoClearDepth===!0,i.clearStencil=s.autoClearStencil===!0}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let Kz=0;class vm{constructor(e="",n=[],i=0,s=[]){this.name=e,this.bindings=n,this.index=i,this.bindingsReference=s,this.id=Kz++}}class Zz{constructor(e,n,i,s,o,a,l,c,u,h=[]){this.vertexShader=e,this.fragmentShader=n,this.computeShader=i,this.transforms=h,this.nodeAttributes=s,this.bindings=o,this.updateNodes=a,this.updateBeforeNodes=l,this.updateAfterNodes=c,this.observer=u,this.usedTimes=0}createBindings(){const e=[];for(const n of this.bindings)if(n.bindings[0].groupNode.shared!==!0){const s=new vm(n.name,[],n.index,n.bindingsReference);e.push(s);for(const o of n.bindings)s.bindings.push(o.clone())}else e.push(n);return e}}class D0{constructor(e,n,i=null){this.isNodeAttribute=!0,this.name=e,this.type=n,this.node=i}}class Qz{constructor(e,n,i){this.isNodeUniform=!0,this.name=e,this.type=n,this.node=i}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class $S{constructor(e,n,i=!1,s=null){this.isNodeVar=!0,this.name=e,this.type=n,this.readOnly=i,this.count=s}}class Jz extends $S{constructor(e,n,i=null,s=null){super(e,n),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=i,this.interpolationSampling=s}}class eG{constructor(e,n,i=""){this.name=e,this.type=n,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let tG=0;class cp{constructor(e=null){this.id=tG++,this.nodesData=new WeakMap,this.parent=e}getData(e){let n=this.nodesData.get(e);return n===void 0&&this.parent!==null&&(n=this.parent.getData(e)),n}setData(e,n){this.nodesData.set(e,n)}}class nG{constructor(e,n){this.name=e,this.members=n,this.output=!1}}class Fs{constructor(e,n){this.name=e,this.value=n,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class iG extends Fs{constructor(e,n=0){super(e,n),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class rG extends Fs{constructor(e,n=new de){super(e,n),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class sG extends Fs{constructor(e,n=new L){super(e,n),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class oG extends Fs{constructor(e,n=new et){super(e,n),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class aG extends Fs{constructor(e,n=new We){super(e,n),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class lG extends Fs{constructor(e,n=new fd){super(e,n),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class cG extends Fs{constructor(e,n=new ut){super(e,n),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class uG extends Fs{constructor(e,n=new bt){super(e,n),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class hG extends iG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class dG extends rG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class fG extends sG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class pG extends oG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class mG extends aG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class gG extends lG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class _G extends cG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class yG extends uG{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const L0=new WeakMap,vG=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),sh=r=>/e/g.test(r)?String(r).replace(/\+/g,""):(r=Number(r),r+(r%1?"":".0"));class jS{constructor(e,n,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=n,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.types={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=rp(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new cp,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=L0.get(this.renderer);return e===void 0&&(e=new ir,L0.set(this.renderer,e)),e}createRenderTarget(e,n,i){return new To(e,n,i)}createCubeRenderTarget(e,n){return new yS(e,n)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,n){const i=this.getBindGroupsCache(),s=[];let o=!0;for(const l of n)s.push(l),o=o&&l.groupNode.shared!==!0;let a;return o?(a=i.get(s),a===void 0&&(a=new vm(e,s,this.bindingsIndexes[e].group,s),i.set(s,a))):a=new vm(e,s,this.bindingsIndexes[e].group,s),a}getBindGroupArray(e,n){const i=this.bindings[n];let s=i[e];return s===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=s=[]),s}getBindings(){let e=this.bindGroups;if(e===null){const n={},i=this.bindings;for(const s of Rv)for(const o in i[s]){const a=i[s][o];(n[o]||(n[o]=[])).push(...a)}e=[];for(const s in n){const o=n[s],a=this._getBindGroup(s,o);e.push(a)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((n,i)=>n.bindings[0].groupNode.order-i.bindings[0].groupNode.order);for(let n=0;n<e.length;n++){const i=e[n];this.bindingsIndexes[i.name].group=n,i.index=n}}setHashNode(e,n){this.hashNodes[n]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==_t.NONE&&this.updateNodes.push(e);for(const e of this.sequentialNodes){const n=e.getUpdateBeforeType(),i=e.getUpdateAfterType();n!==_t.NONE&&this.updateBeforeNodes.push(e),i!==_t.NONE&&this.updateAfterNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===Tn||e.magFilter===ma||e.magFilter===Yr||e.magFilter===si||e.minFilter===Tn||e.minFilter===ma||e.minFilter===Yr||e.minFilter===si}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getTernary(){return null}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,n){return this.flowNodes[e].push(n),n}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,n=!0){const i=this.getDataFromNode(e);return i.cache===void 0&&(i.cache=new cp(n?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const n=this.getDataFromNode(e);return n.usageCount=n.usageCount===void 0?1:n.usageCount+1,n.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,n){return this.getType(e)+"[ "+n+" ]"}generateArray(e,n,i=null){let s=this.generateArrayDeclaration(e,n)+"( ";for(let o=0;o<n;o++){const a=i?i[o]:null;a!==null?s+=a.build(this,e):s+=this.generateConst(e),o<n-1&&(s+=", ")}return s+=" )",s}generateStruct(e,n,i=null){const s=[];for(const o of n){const{name:a,type:l}=o;i&&i[a]&&i[a].isNode?s.push(i[a].build(this,l)):s.push(this.generateConst(l))}return e+"( "+s.join(", ")+" )"}generateConst(e,n=null){if(n===null&&(e==="float"||e==="int"||e==="uint"?n=0:e==="bool"?n=!1:e==="color"?n=new We:e==="vec2"?n=new de:e==="vec3"?n=new L:e==="vec4"&&(n=new et)),e==="float")return sh(n);if(e==="int")return`${Math.round(n)}`;if(e==="uint")return n>=0?`${Math.round(n)}u`:"0u";if(e==="bool")return n?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${sh(n.r)}, ${sh(n.g)}, ${sh(n.b)} )`;const i=this.getTypeLength(e),s=this.getComponentType(e),o=a=>this.generateConst(s,a);if(i===2)return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)} )`;if(i===3)return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)}, ${o(n.z)} )`;if(i===4&&e!=="mat2")return`${this.getType(e)}( ${o(n.x)}, ${o(n.y)}, ${o(n.z)}, ${o(n.w)} )`;if(i>=4&&n&&(n.isMatrix2||n.isMatrix3||n.isMatrix4))return`${this.getType(e)}( ${n.elements.map(o).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,n){const i=this.attributes;for(const o of i)if(o.name===e)return o;const s=new D0(e,n);return this.registerDeclaration(s),i.push(s),s}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const n=e.type;if(e.isDataTexture){if(n===An)return"int";if(n===Wt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const n=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return n===null?null:n[1]==="b"?"bool":n[1]==="i"?"int":n[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,n="float"){if(e===1)return n;let i=AI(e);const s=n==="float"?"":n[0];return/mat2/.test(n)===!0&&(i=i.replace("vec","mat")),s+i}getTypeFromArray(e){return vG.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array,s=e.itemSize,o=e.normalized;let a;return!(e instanceof Tb)&&o!==!0&&(a=this.getTypeFromArray(i)),this.getTypeFromLength(s,a)}getTypeLength(e){const n=this.getVectorType(e),i=/vec([2-4])/.exec(n);return i!==null?Number(i[1]):n==="float"||n==="bool"||n==="int"||n==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,n){return this.getTypeFromLength(this.getTypeLength(e),n)}getIntegerType(e){const n=this.getComponentType(e);return n==="int"||n==="uint"?e:this.changeComponentType(e,"int")}addStack(){this.stack=rp(this.stack);const e=Ig();return this.stacks.push(e),$h(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,$h(this.stacks.pop()),e}getDataFromNode(e,n=this.shaderStage,i=null){i=i===null?e.isGlobal(this)?this.globalCache:this.cache:i;let s=i.getData(e);s===void 0&&(s={},i.setData(e,s)),s[n]===void 0&&(s[n]={});let o=s[n];const a=s.any?s.any.subBuilds:null,l=this.getClosestSubBuild(a);return l&&(o.subBuildsCache===void 0&&(o.subBuildsCache={}),o=o.subBuildsCache[l]||(o.subBuildsCache[l]={}),o.subBuilds=a),o}getNodeProperties(e,n="any"){const i=this.getDataFromNode(e,n);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,n){const i=this.getDataFromNode(e);let s=i.bufferAttribute;if(s===void 0){const o=this.uniforms.index++;s=new D0("nodeAttribute"+o,n,e),this.bufferAttributes.push(s),i.bufferAttribute=s}return s}getStructTypeNode(e,n=this.shaderStage){return this.types[n][e]||null}getStructTypeFromNode(e,n,i=null,s=this.shaderStage){const o=this.getDataFromNode(e,s,this.globalCache);let a=o.structType;if(a===void 0){const l=this.structs.index++;i===null&&(i="StructType"+l),a=new nG(i,n),this.structs[s].push(a),this.types[s][i]=e,o.structType=a}return a}getOutputStructTypeFromNode(e,n){const i=this.getStructTypeFromNode(e,n,"OutputType","fragment");return i.output=!0,i}getUniformFromNode(e,n,i=this.shaderStage,s=null){const o=this.getDataFromNode(e,i,this.globalCache);let a=o.uniform;if(a===void 0){const l=this.uniforms.index++;a=new Qz(s||"nodeUniform"+l,n,e),this.uniforms[i].push(a),this.registerDeclaration(a),o.uniform=a}return a}getVarFromNode(e,n=null,i=e.getNodeType(this),s=this.shaderStage,o=!1){const a=this.getDataFromNode(e,s),l=this.getSubBuildProperty("variable",a.subBuilds);let c=a[l];if(c===void 0){const u=o?"_const":"_var",h=this.vars[s]||(this.vars[s]=[]),d=this.vars[u]||(this.vars[u]=0);n===null&&(n=(o?"nodeConst":"nodeVar")+d,this.vars[u]++),l!=="variable"&&(n=this.getSubBuildProperty(n,a.subBuilds));const f=e.getArrayCount(this);c=new $S(n,i,o,f),o||h.push(c),this.registerDeclaration(c),a[l]=c}return c}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const n of e.values)if(!this.isDeterministic(n))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,n=null,i=e.getNodeType(this),s=null,o=null){const a=this.getDataFromNode(e,"any"),l=this.getSubBuildProperty("varying",a.subBuilds);let c=a[l];if(c===void 0){const u=this.varyings,h=u.length;n===null&&(n="nodeVarying"+h),l!=="varying"&&(n=this.getSubBuildProperty(n,a.subBuilds)),c=new Jz(n,i,s,o),u.push(c),this.registerDeclaration(c),a[l]=c}return c}registerDeclaration(e){const n=this.shaderStage,i=this.declarations[n]||(this.declarations[n]={}),s=this.getPropertyName(e);let o=1,a=s;for(;i[a]!==void 0;)a=s+"_"+o++;o>1&&(e.name=a,console.warn(`THREE.TSL: Declaration name '${s}' of '${e.type}' already in use. Renamed to '${a}'.`)),i[a]=e}getCodeFromNode(e,n,i=this.shaderStage){const s=this.getDataFromNode(e);let o=s.code;if(o===void 0){const a=this.codes[i]||(this.codes[i]=[]),l=a.length;o=new eG("nodeCode"+l,n),a.push(o),s.code=o}return o}addFlowCodeHierarchy(e,n){const{flowCodes:i,flowCodeBlock:s}=this.getDataFromNode(e);let o=!0,a=n;for(;a;){if(s.get(a)===!0){o=!1;break}a=this.getDataFromNode(a).parentNodeBlock}if(o)for(const l of i)this.addLineFlowCode(l)}addLineFlowCodeBlock(e,n,i){const s=this.getDataFromNode(e),o=s.flowCodes||(s.flowCodes=[]),a=s.flowCodeBlock||(s.flowCodeBlock=new WeakMap);o.push(n),a.set(i,!0)}addLineFlowCode(e,n=null){return e===""?this:(n!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(n,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const n=e.getNodeType(this),i=this.flowChildNode(e,n);return this.flowsData.set(e,i),i}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const n=new hz,i=this.currentFunctionNode;return this.currentFunctionNode=n,n.code=this.buildFunctionCode(e),this.currentFunctionNode=i,n}flowShaderNode(e){const n=e.layout,i={[Symbol.iterator](){let a=0;const l=Object.values(this);return{next:()=>({value:l[a],done:a++>=l.length})}}};for(const a of n.inputs)i[a.name]=new Wk(a.type,a.name);e.layout=null;const s=e.call(i),o=this.flowStagesNode(s,n.type);return e.layout=n,o}flowBuildStage(e,n,i=null){const s=this.getBuildStage();this.setBuildStage(n);const o=e.build(this,i);return this.setBuildStage(s),o}flowStagesNode(e,n=null){const i=this.flow,s=this.vars,o=this.declarations,a=this.cache,l=this.buildStage,c=this.stack,u={code:""};this.flow=u,this.vars={},this.declarations={},this.cache=new cp,this.stack=rp();for(const h of Av)this.setBuildStage(h),u.result=e.build(this,n);return u.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=s,this.declarations=o,this.cache=a,this.stack=c,this.setBuildStage(l),u}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,n=null){const i=this.flow,s={code:""};return this.flow=s,s.result=e.build(this,n),this.flow=i,s}flowNodeFromShaderStage(e,n,i=null,s=null){const o=this.tab,a=this.cache,l=this.shaderStage,c=this.context;this.setShaderStage(e);const u={...this.context};delete u.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=u;let h=null;if(this.buildStage==="generate"){const d=this.flowChildNode(n,i);s!==null&&(d.code+=`${this.tab+s} = ${d.result};
`),this.flowCode[e]=this.flowCode[e]+d.code,h=d}else h=n.build(this);return this.setShaderStage(l),this.cache=a,this.tab=o,this.context=c,h}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,n,i=null){return`${i!==null?this.generateArrayDeclaration(e,i):this.getType(e)} ${n}`}getVars(e){let n="";const i=this.vars[e];if(i!==void 0)for(const s of i)n+=`${this.getVar(s.type,s.name)}; `;return n}getUniforms(){console.warn("Abstract function.")}getCodes(e){const n=this.codes[e];let i="";if(n!==void 0)for(const s of n)i+=s.code+`
`;return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let n;if(e&&e.isNode?e.isShaderCallNodeInternal?n=e.shaderNode.subBuilds:e.isStackNode?n=[e.subBuild]:n=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?n=[...e]:n=e,!n)return null;const i=this.subBuildLayers;for(let s=n.length-1;s>=0;s--){const o=n[s];if(i.includes(o))return o}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",n=null){let i;n!==null?i=this.getClosestSubBuild(n):i=this.subBuildFn;let s;return i?s=e?i+"_"+e:i:s=e,s}build(){const{object:e,material:n,renderer:i}=this;if(n!==null){let s=i.library.fromMaterial(n);s===null&&(console.error(`NodeMaterial: Material "${n.type}" is not compatible.`),s=new vn),s.build(this)}else this.addFlow("compute",e);for(const s of Av){this.setBuildStage(s),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const o of Rv){this.setShaderStage(o);const a=this.flowNodes[o];for(const l of a)s==="generate"?this.flowNode(l):l.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,n){if(n==="float"||n==="int"||n==="uint")return new hG(e);if(n==="vec2"||n==="ivec2"||n==="uvec2")return new dG(e);if(n==="vec3"||n==="ivec3"||n==="uvec3")return new fG(e);if(n==="vec4"||n==="ivec4"||n==="uvec4")return new pG(e);if(n==="color")return new mG(e);if(n==="mat2")return new gG(e);if(n==="mat3")return new _G(e);if(n==="mat4")return new yG(e);throw new Error(`Uniform "${n}" not declared.`)}format(e,n,i){if(n=this.getVectorType(n),i=this.getVectorType(i),n===i||i===null||this.isReference(i))return e;const s=this.getTypeLength(n),o=this.getTypeLength(i);return s===16&&o===9?`${this.getType(i)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:s===9&&o===4?`${this.getType(i)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:s>4||o>4||o===0?e:s===o?`${this.getType(i)}( ${e} )`:s>o?(e=i==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,o)}`,this.format(e,this.getTypeFromLength(o,this.getComponentType(n)),i)):o===4&&s>1?`${this.getType(i)}( ${this.format(e,n,"vec3")}, 1.0 )`:s===2?`${this.getType(i)}( ${this.format(e,n,"vec2")}, 0.0 )`:(s===1&&o>1&&n!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${al} - Node System
`}}class I0{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,n){let i=e.get(n);return i===void 0&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(n,i)),i}updateBeforeNode(e){const n=e.getUpdateBeforeType(),i=e.updateReference(this);if(n===_t.FRAME){const{frameMap:s}=this._getMaps(this.updateBeforeMap,i);s.get(i)!==this.frameId&&e.updateBefore(this)!==!1&&s.set(i,this.frameId)}else if(n===_t.RENDER){const{renderMap:s}=this._getMaps(this.updateBeforeMap,i);s.get(i)!==this.renderId&&e.updateBefore(this)!==!1&&s.set(i,this.renderId)}else n===_t.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const n=e.getUpdateAfterType(),i=e.updateReference(this);if(n===_t.FRAME){const{frameMap:s}=this._getMaps(this.updateAfterMap,i);s.get(i)!==this.frameId&&e.updateAfter(this)!==!1&&s.set(i,this.frameId)}else if(n===_t.RENDER){const{renderMap:s}=this._getMaps(this.updateAfterMap,i);s.get(i)!==this.renderId&&e.updateAfter(this)!==!1&&s.set(i,this.renderId)}else n===_t.OBJECT&&e.updateAfter(this)}updateNode(e){const n=e.getUpdateType(),i=e.updateReference(this);if(n===_t.FRAME){const{frameMap:s}=this._getMaps(this.updateMap,i);s.get(i)!==this.frameId&&e.update(this)!==!1&&s.set(i,this.frameId)}else if(n===_t.RENDER){const{renderMap:s}=this._getMaps(this.updateMap,i);s.get(i)!==this.renderId&&e.update(this)!==!1&&s.set(i,this.renderId)}else n===_t.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class r_{constructor(e,n,i=null,s="",o=!1){this.type=e,this.name=n,this.count=i,this.qualifier=s,this.isConst=o}}r_.isNodeFunctionInput=!0;class xG extends wo{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:zS(this.light),lightColor:e}}}const up=new bt,oh=new bt;let jl=null;class bG extends wo{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=ot(new L).setGroup(Ke),this.halfWidth=ot(new L).setGroup(Ke),this.updateType=_t.RENDER}update(e){super.update(e);const{light:n}=this,i=e.camera.matrixWorldInverse;oh.identity(),up.copy(n.matrixWorld),up.premultiply(i),oh.extractRotation(up),this.halfWidth.value.set(n.width*.5,0,0),this.halfHeight.value.set(0,n.height*.5,0),this.halfWidth.value.applyMatrix4(oh),this.halfHeight.value.applyMatrix4(oh)}setupDirectRectArea(e){let n,i;e.isAvailable("float32Filterable")?(n=Et(jl.LTC_FLOAT_1),i=Et(jl.LTC_FLOAT_2)):(n=Et(jl.LTC_HALF_1),i=Et(jl.LTC_HALF_2));const{colorNode:s,light:o}=this,a=kS(o);return{lightColor:s,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:n,ltc_2:i}}static setLTC(e){jl=e}}class s_ extends wo{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=ot(0).setGroup(Ke),this.penumbraCosNode=ot(0).setGroup(Ke),this.cutoffDistanceNode=ot(0).setGroup(Ke),this.decayExponentNode=ot(0).setGroup(Ke),this.colorNode=ot(this.color).setGroup(Ke)}update(e){super.update(e);const{light:n}=this;this.coneCosNode.value=Math.cos(n.angle),this.penumbraCosNode.value=Math.cos(n.angle*(1-n.penumbra)),this.cutoffDistanceNode.value=n.distance,this.decayExponentNode.value=n.decay}getSpotAttenuation(e,n){const{coneCosNode:i,penumbraCosNode:s}=this;return Ps(i,s,n)}getLightCoord(e){const n=e.getNodeProperties(this);let i=n.projectionUV;return i===void 0&&(i=mz(this.light,e.context.positionWorld),n.projectionUV=i),i}setupDirect(e){const{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:o}=this,a=this.getLightVector(e),l=a.normalize(),c=l.dot(zS(o)),u=this.getSpotAttenuation(e,c),h=a.length(),d=WS({lightDistance:h,cutoffDistance:i,decayExponent:s});let f=n.mul(u).mul(d),p,m;return o.colorNode?(m=this.getLightCoord(e),p=o.colorNode(m)):o.map&&(m=this.getLightCoord(e),p=Et(o.map,m.xy).onRenderUpdate(()=>o.map)),p&&(f=m.mul(2).sub(1).abs().lessThan(1).all().select(f.mul(p),f)),{lightColor:f,lightDirection:l}}}class TG extends s_{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,n){const i=this.light.iesMap;let s=null;if(i&&i.isTexture===!0){const o=n.acos().mul(1/Math.PI);s=Et(i,Se(o,0),0).r}else s=super.getSpotAttenuation(n);return s}}const SG=ce(([r,e])=>{const n=r.abs().sub(e);return ns(Wn(n,0)).add(el(Wn(n.x,n.y),0))});class MG extends s_{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const n=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(n.angle*(1-n.penumbra)),.99999),n.aspect===null){let i=1;n.map!==null&&(i=n.map.width/n.map.height),n.shadow.aspect=i}else n.shadow.aspect=n.aspect}getSpotAttenuation(e){const n=se(0),i=this.penumbraCosNode,s=i_(this.light).mul(e.context.positionWorld||nl);return un(s.w.greaterThan(0),()=>{const o=s.xyz.div(s.w),a=SG(o.xy.sub(Se(.5)),Se(.5)),l=Sr(-1,Zn(1,wT(i)).sub(1));n.assign(IT(a.mul(-2).mul(l)))}),n}}class EG extends wo{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class wG extends wo{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=BS(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=ot(new We).setGroup(Ke)}update(e){const{light:n}=this;super.update(e),this.lightPositionNode.object3d=n,this.groundColorNode.value.copy(n.groundColor).multiplyScalar(n.intensity)}setup(e){const{colorNode:n,groundColorNode:i,lightDirectionNode:s}=this,a=ml.dot(s).mul(.5).add(.5),l=Kt(i,n,a);e.context.irradiance.addAssign(l)}}class AG extends wo{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const n=[];for(let i=0;i<9;i++)n.push(new L);this.lightProbe=Qi(n)}update(e){const{light:n}=this;super.update(e);for(let i=0;i<9;i++)this.lightProbe.array[i].copy(n.sh.coefficients[i]).multiplyScalar(n.intensity)}setup(e){const n=Xz(ml,this.lightProbe);e.context.irradiance.addAssign(n)}}class qS{parseFunction(){console.warn("Abstract function.")}}class o_{constructor(e,n,i="",s=""){this.type=e,this.inputs=n,this.name=i,this.precision=s}getCode(){console.warn("Abstract function.")}}o_.isNodeFunction=!0;const RG=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,CG=/[a-z_0-9]+/ig,U0="#pragma main",NG=r=>{r=r.trim();const e=r.indexOf(U0),n=e!==-1?r.slice(e+U0.length):r,i=n.match(RG);if(i!==null&&i.length===5){const s=i[4],o=[];let a=null;for(;(a=CG.exec(s))!==null;)o.push(a);const l=[];let c=0;for(;c<o.length;){const m=o[c][0]==="const";m===!0&&c++;let y=o[c][0];y==="in"||y==="out"||y==="inout"?c++:y="";const _=o[c++][0];let g=Number.parseInt(o[c][0]);Number.isNaN(g)===!1?c++:g=null;const v=o[c++][0];l.push(new r_(_,v,g,y,m))}const u=n.substring(i[0].length),h=i[3]!==void 0?i[3]:"",d=i[2],f=i[1]!==void 0?i[1]:"",p=e!==-1?r.slice(0,e):"";return{type:d,inputs:l,name:h,precision:f,inputsCode:s,blockCode:u,headerCode:p}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class PG extends o_{constructor(e){const{type:n,inputs:i,name:s,precision:o,inputsCode:a,blockCode:l,headerCode:c}=NG(e);super(n,i,s,o),this.inputsCode=a,this.blockCode=l,this.headerCode=c}getCode(e=this.name){let n;const i=this.blockCode;if(i!==""){const{type:s,inputsCode:o,headerCode:a,precision:l}=this;let c=`${s} ${e} ( ${o.trim()} )`;l!==""&&(c=`${l} ${c}`),n=a+c+i}else n="";return n}}class DG extends qS{parseFunction(e){return new PG(e)}}const F0=new WeakMap,ur=[],Ys=[];class LG extends Us{constructor(e,n){super(),this.renderer=e,this.backend=n,this.nodeFrame=new I0,this.nodeBuilderCache=new Map,this.callHashCache=new ir,this.groupsData=new ir,this.cacheLib={}}updateGroup(e){const n=e.groupNode,i=n.name;if(i===TT.name)return!0;if(i===Ke.name){const o=this.get(e),a=this.nodeFrame.renderId;return o.renderId!==a?(o.renderId=a,!0):!1}if(i===fU.name){const o=this.get(e),a=this.nodeFrame.frameId;return o.frameId!==a?(o.frameId=a,!0):!1}ur[0]=n,ur[1]=e;let s=this.groupsData.get(ur);return s===void 0&&this.groupsData.set(ur,s={}),ur.length=0,s.version!==n.version?(s.version=n.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const n=this.get(e);let i=n.nodeBuilderState;if(i===void 0){const{nodeBuilderCache:s}=this,o=this.getForRenderCacheKey(e);if(i=s.get(o),i===void 0){const a=this.backend.createNodeBuilder(e.object,this.renderer);a.scene=e.scene,a.material=e.material,a.camera=e.camera,a.context.material=e.material,a.lightsNode=e.lightsNode,a.environmentNode=this.getEnvironmentNode(e.scene),a.fogNode=this.getFogNode(e.scene),a.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&a.enableMultiview(),a.build(),i=this._createNodeBuilderState(a),s.set(o,i)}i.usedTimes++,n.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const n=this.get(e).nodeBuilderState;n.usedTimes--,n.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const n=this.get(e);let i=n.nodeBuilderState;if(i===void 0){const s=this.backend.createNodeBuilder(e,this.renderer);s.build(),i=this._createNodeBuilderState(s),n.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new Zz(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let n=null;if(e.environmentNode&&e.environmentNode.isNode)n=e.environmentNode;else{const i=this.get(e);i.environmentNode&&(n=i.environmentNode)}return n}getBackgroundNode(e){this.updateBackground(e);let n=null;if(e.backgroundNode&&e.backgroundNode.isNode)n=e.backgroundNode;else{const i=this.get(e);i.backgroundNode&&(n=i.backgroundNode)}return n}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,n){ur[0]=e,ur[1]=n;const i=this.renderer.info.calls,s=this.callHashCache.get(ur)||{};if(s.callId!==i){const o=this.getEnvironmentNode(e),a=this.getFogNode(e);n&&Ys.push(n.getCacheKey(!0)),o&&Ys.push(o.getCacheKey()),a&&Ys.push(a.getCacheKey()),Ys.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),Ys.push(this.renderer.shadowMap.enabled?1:0),s.callId=i,s.cacheKey=Ag(Ys),this.callHashCache.set(ur,s),Ys.length=0}return ur.length=0,s.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const n=this.get(e),i=e.background;if(i){const s=e.backgroundBlurriness===0&&n.backgroundBlurriness>0||e.backgroundBlurriness>0&&n.backgroundBlurriness===0;if(n.background!==i||s){const o=this.getCacheNode("background",i,()=>{if(i.isCubeTexture===!0||i.mapping===Aa||i.mapping===Ra||i.mapping===mo){if(e.backgroundBlurriness>0||i.mapping===mo)return NS(i);{let a;return i.isCubeTexture===!0?a=zc(i):a=Et(i),xS(a)}}else{if(i.isTexture===!0)return Et(i,Ta.flipY()).setUpdateMatrix(!0);i.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",i)}},s);n.backgroundNode=o,n.background=i,n.backgroundBlurriness=e.backgroundBlurriness}}else n.backgroundNode&&(delete n.backgroundNode,delete n.background)}getCacheNode(e,n,i,s=!1){const o=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let a=o.get(n);return(a===void 0||s)&&(a=i(),o.set(n,a)),a}updateFog(e){const n=this.get(e),i=e.fog;if(i){if(n.fog!==i){const s=this.getCacheNode("fog",i,()=>{if(i.isFogExp2){const o=Ht("color","color",i).setGroup(Ke),a=Ht("density","float",i).setGroup(Ke);return R0(o,fz(a))}else if(i.isFog){const o=Ht("color","color",i).setGroup(Ke),a=Ht("near","float",i).setGroup(Ke),l=Ht("far","float",i).setGroup(Ke);return R0(o,dz(a,l))}else console.error("THREE.Renderer: Unsupported fog configuration.",i)});n.fogNode=s,n.fog=i}}else delete n.fogNode,delete n.fog}updateEnvironment(e){const n=this.get(e),i=e.environment;if(i){if(n.environment!==i){const s=this.getCacheNode("environment",i,()=>{if(i.isCubeTexture===!0)return zc(i);if(i.isTexture===!0)return Et(i);console.error("Nodes: Unsupported environment configuration.",i)});n.environmentNode=s,n.environment=i}}else n.environmentNode&&(delete n.environmentNode,delete n.environment)}getNodeFrame(e=this.renderer,n=null,i=null,s=null,o=null){const a=this.nodeFrame;return a.renderer=e,a.scene=n,a.object=i,a.camera=s,a.material=o,a}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return F0.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const n=this.renderer,i=this.getOutputCacheKey(),s=e.isArrayTexture?Jk(e,ae(Ta,ru("gl_ViewID_OVR"))).renderOutput(n.toneMapping,n.currentColorSpace):Et(e,Ta).renderOutput(n.toneMapping,n.currentColorSpace);return F0.set(e,i),s}updateBefore(e){const n=e.getNodeBuilderState();for(const i of n.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const n=e.getNodeBuilderState();for(const i of n.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const n=this.getNodeFrame(),i=this.getForCompute(e);for(const s of i.updateNodes)n.updateNode(s)}updateForRender(e){const n=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const s of i.updateNodes)n.updateNode(s)}needsRefresh(e){const n=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,n)}dispose(){super.dispose(),this.nodeFrame=new I0,this.nodeBuilderCache=new Map,this.cacheLib={}}}const hp=new Ki;class Zh{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new ut,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,n,i){const s=e.length;for(let o=0;o<s;o++){hp.copy(e[o]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const a=n[i+o],l=hp.normal;a.x=-l.x,a.y=-l.y,a.z=-l.z,a.w=hp.constant}}updateGlobal(e,n){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=n.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,n){let i=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==n.clipIntersection&&(this.clipIntersection=n.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const s=n.clippingPlanes,o=s.length;let a,l;if(this.clipIntersection?(a=this.intersectionPlanes,l=e.intersectionPlanes.length):(a=this.unionPlanes,l=e.unionPlanes.length),a.length!==l+o){a.length=l+o;for(let c=0;c<o;c++)a[l+c]=new et;i=!0}this.projectPlanes(s,a,l),i&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let n=this.clippingGroupContexts.get(e);return n===void 0&&(n=new Zh(this),this.clippingGroupContexts.set(e,n)),n.update(this,e),n}get unionClippingCount(){return this.unionPlanes.length}}class IG{constructor(e,n){this.bundleGroup=e,this.camera=n}}const ql=[];class UG{constructor(){this.bundles=new ir}get(e,n){const i=this.bundles;ql[0]=e,ql[1]=n;let s=i.get(ql);return s===void 0&&(s=new IG(e,n),i.set(ql,s)),ql.length=0,s}dispose(){this.bundles=new ir}}class XS{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let n=null;const i=this.getMaterialNodeClass(e.type);if(i!==null){n=new i;for(const s in e)n[s]=e[s]}return n}addToneMapping(e,n){this.addType(e,n,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,n){this.addType(e,n,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,n){this.addClass(e,n,this.lightNodes)}addType(e,n,i){if(i.has(n)){console.warn(`Redefinition of node ${n}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof n=="function"||typeof n=="object")throw new Error(`Base class ${n} is not a class.`);i.set(n,e)}addClass(e,n,i){if(i.has(n)){console.warn(`Redefinition of node ${n.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof n!="function")throw new Error(`Base class ${n.name} is not a class.`);i.set(n,e)}}const FG=new GS,Xl=[];class OG extends ir{constructor(){super()}createNode(e=[]){return new GS().setLights(e)}getNode(e,n){if(e.isQuadMesh)return FG;Xl[0]=e,Xl[1]=n;let i=this.get(Xl);return i===void 0&&(i=this.createNode(),this.set(Xl,i)),Xl.length=0,i}}class sc extends To{constructor(e=1,n=1,i={}){super(e,n,i),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const O0=new L,B0=new L;class BG extends ss{constructor(e,n=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Rn,this._cameraL.viewport=new et,this._cameraR=new Rn,this._cameraR.viewport=new et,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Ub,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._sessionUsesLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=WG.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new de,this._onSessionEvent=GG.bind(this),this._onSessionEnd=VG.bind(this),this._onInputSourcesChange=HG.bind(this),this._onAnimationFrame=$G.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._supportsLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=n,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getBinding(){return this._glBinding===null&&this._supportsGlBinding&&(this._glBinding=new XRWebGLBinding(this._session,this._gl)),this._glBinding}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,n,i,s,o,a,l,c={}){const u=new Qc(e,n),h=new sc(o,a,{format:cn,type:an,depthTexture:new zi(o,a,c.stencil?Ei:Wt,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?Ai:wi),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});h._autoAllocateDepthBuffer=!0;const d=new pr({color:16777215,side:Si});d.map=h.texture,d.map.offset.y=1,d.map.repeat.y=-1;const f=new yn(u,d);f.position.copy(i),f.quaternion.copy(s);const p={type:"quad",width:e,height:n,translation:i,quaternion:s,pixelwidth:o,pixelheight:a,plane:f,material:d,rendercall:l,renderTarget:h};if(this._layers.push(p),this._session!==null){p.plane.material=new pr({color:16777215,side:Si}),p.plane.material.blending=pa,p.plane.material.blendEquation=Gn,p.plane.material.blendSrc=Gr,p.plane.material.blendDst=Gr,p.xrlayer=this._createXRLayer(p);const m=this._session.renderState.layers;m.unshift(p.xrlayer),this._session.updateRenderState({layers:m})}else h.isXRRenderTarget=!1;return f}createCylinderLayer(e,n,i,s,o,a,l,c,u={}){const h=new Zc(e,e,e*n/i,64,64,!0,Math.PI-n/2,n),d=new sc(a,l,{format:cn,type:an,depthTexture:new zi(a,l,u.stencil?Ei:Wt,void 0,void 0,void 0,void 0,void 0,void 0,u.stencil?Ai:wi),stencilBuffer:u.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});d._autoAllocateDepthBuffer=!0;const f=new pr({color:16777215,side:kt});f.map=d.texture,f.map.offset.y=1,f.map.repeat.y=-1;const p=new yn(h,f);p.position.copy(s),p.quaternion.copy(o);const m={type:"cylinder",radius:e,centralAngle:n,aspectratio:i,translation:s,quaternion:o,pixelwidth:a,pixelheight:l,plane:p,material:f,rendercall:c,renderTarget:d};if(this._layers.push(m),this._session!==null){m.plane.material=new pr({color:16777215,side:kt}),m.plane.material.blending=pa,m.plane.material.blendEquation=Gn,m.plane.material.blendSrc=Gr,m.plane.material.blendDst=Gr,m.xrlayer=this._createXRLayer(m);const y=this._session.renderState.layers;y.unshift(m.xrlayer),this._session.updateRenderState({layers:y})}else d.isXRRenderTarget=!1;return p}renderLayers(){const e=new L,n=new nr,i=this._renderer,s=this.isPresenting,o=i.getOutputRenderTarget(),a=i._frameBufferTarget;this.isPresenting=!1;const l=new de;i.getSize(l);const c=i._quad;for(const u of this._layers)if(u.renderTarget.isXRRenderTarget=this._session!==null,u.renderTarget._hasExternalTextures=u.renderTarget.isXRRenderTarget,u.renderTarget.isXRRenderTarget&&this._sessionUsesLayers){u.xrlayer.transform=new XRRigidTransform(u.plane.getWorldPosition(e),u.plane.getWorldQuaternion(n));const h=this._glBinding.getSubImage(u.xrlayer,this._xrFrame);i.backend.setXRRenderTargetTextures(u.renderTarget,h.colorTexture,void 0),i._setXRLayerSize(u.renderTarget.width,u.renderTarget.height),i.setOutputRenderTarget(u.renderTarget),i.setRenderTarget(null),i._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:d,quad:f}=this._frameBufferTargets.get(u.renderTarget)||{frameBufferTarget:null,quad:null};d?(i._frameBufferTarget=d,i._quad=f):(i._quad=new n_(new vn),this._frameBufferTargets.set(u.renderTarget,{frameBufferTarget:i._getFrameBufferTarget(),quad:i._quad})),u.rendercall(),i._frameBufferTarget=null}else i.setRenderTarget(u.renderTarget),u.rendercall();i.setRenderTarget(null),i.setOutputRenderTarget(o),i._frameBufferTarget=a,i._setXRLayerSize(l.x,l.y),i._quad=c,this.isPresenting=s}getSession(){return this._session}async setSession(e){const n=this._renderer,i=n.backend;this._gl=n.getContext();const s=this._gl,o=s.getContextAttributes();if(this._session=e,e!==null){if(i.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await i.makeXRCompatible(),this._currentPixelRatio=n.getPixelRatio(),n.getSize(this._currentSize),this._currentAnimationContext=n._animation.getContext(),this._currentAnimationLoop=n._animation.getAnimationLoop(),n._animation.stop(),this._supportsLayers===!0){let a=null,l=null,c=null;n.depth&&(c=n.stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24,a=n.stencil?Ai:wi,l=n.stencil?Ei:Wt);const u={colorFormat:s.RGBA8,depthFormat:c,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&n.hasFeature("OVR_multiview2")&&(u.textureType="texture-array",this._useMultiview=!0),this._glBinding=this.getBinding();const h=this._glBinding.createProjectionLayer(u),d=[h];this._glProjLayer=h,n.setPixelRatio(1),n._setXRLayerSize(h.textureWidth,h.textureHeight);const f=this._useMultiview?2:1,p=new zi(h.textureWidth,h.textureHeight,l,void 0,void 0,void 0,void 0,void 0,void 0,a,f);if(this._xrRenderTarget=new sc(h.textureWidth,h.textureHeight,{format:cn,type:an,colorSpace:n.outputColorSpace,depthTexture:p,stencilBuffer:n.stencil,samples:o.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._sessionUsesLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._sessionUsesLayers)for(const m of this._layers)m.plane.material=new pr({color:16777215,side:m.type==="cylinder"?kt:Si}),m.plane.material.blending=pa,m.plane.material.blendEquation=Gn,m.plane.material.blendSrc=Gr,m.plane.material.blendDst=Gr,m.xrlayer=this._createXRLayer(m),d.unshift(m.xrlayer);e.updateRenderState({layers:d})}else{const a={antialias:n.samples>0,alpha:!0,depth:n.depth,stencil:n.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},l=new XRWebGLLayer(e,s,a);this._glBaseLayer=l,e.updateRenderState({baseLayer:l}),n.setPixelRatio(1),n._setXRLayerSize(l.framebufferWidth,l.framebufferHeight),this._xrRenderTarget=new sc(l.framebufferWidth,l.framebufferHeight,{format:cn,type:an,colorSpace:n.outputColorSpace,stencilBuffer:n.stencil,resolveDepthBuffer:l.ignoreDepthValues===!1,resolveStencilBuffer:l.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),n._animation.setAnimationLoop(this._onAnimationFrame),n._animation.setContext(e),n._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const n=this._session;if(n===null)return;const i=e.near,s=e.far,o=this._cameraXR,a=this._cameraL,l=this._cameraR;o.near=l.near=a.near=i,o.far=l.far=a.far=s,o.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==o.near||this._currentDepthFar!==o.far)&&(n.updateRenderState({depthNear:o.near,depthFar:o.far}),this._currentDepthNear=o.near,this._currentDepthFar=o.far),o.layers.mask=e.layers.mask|6,a.layers.mask=o.layers.mask&3,l.layers.mask=o.layers.mask&5;const c=e.parent,u=o.cameras;k0(o,c);for(let h=0;h<u.length;h++)k0(u[h],c);u.length===2?kG(o,a,l):o.projectionMatrix.copy(a.projectionMatrix),zG(e,o,c)}_getController(e){let n=this._controllers[e];return n===void 0&&(n=new xh,this._controllers[e]=n),n}}function kG(r,e,n){O0.setFromMatrixPosition(e.matrixWorld),B0.setFromMatrixPosition(n.matrixWorld);const i=O0.distanceTo(B0),s=e.projectionMatrix.elements,o=n.projectionMatrix.elements,a=s[14]/(s[10]-1),l=s[14]/(s[10]+1),c=(s[9]+1)/s[5],u=(s[9]-1)/s[5],h=(s[8]-1)/s[0],d=(o[8]+1)/o[0],f=a*h,p=a*d,m=i/(-h+d),y=m*-h;if(e.matrixWorld.decompose(r.position,r.quaternion,r.scale),r.translateX(y),r.translateZ(m),r.matrixWorld.compose(r.position,r.quaternion,r.scale),r.matrixWorldInverse.copy(r.matrixWorld).invert(),s[10]===-1)r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const _=a+m,g=l+m,v=f-y,x=p+(i-y),b=c*l/g*_,T=u*l/g*_;r.projectionMatrix.makePerspective(v,x,b,T,_,g),r.projectionMatrixInverse.copy(r.projectionMatrix).invert()}}function k0(r,e){e===null?r.matrixWorld.copy(r.matrix):r.matrixWorld.multiplyMatrices(e.matrixWorld,r.matrix),r.matrixWorldInverse.copy(r.matrixWorld).invert()}function zG(r,e,n){n===null?r.matrix.copy(e.matrixWorld):(r.matrix.copy(n.matrixWorld),r.matrix.invert(),r.matrix.multiply(e.matrixWorld)),r.matrix.decompose(r.position,r.quaternion,r.scale),r.updateMatrixWorld(!0),r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse),r.isPerspectiveCamera&&(r.fov=vo*2*Math.atan(1/r.projectionMatrix.elements[5]),r.zoom=1)}function GG(r){const e=this._controllerInputSources.indexOf(r.inputSource);if(e===-1)return;const n=this._controllers[e];if(n!==void 0){const i=this.getReferenceSpace();n.update(r.inputSource,r.frame,i),n.dispatchEvent({type:r.type,data:r.inputSource})}}function VG(){const r=this._session,e=this._renderer;r.removeEventListener("select",this._onSessionEvent),r.removeEventListener("selectstart",this._onSessionEvent),r.removeEventListener("selectend",this._onSessionEvent),r.removeEventListener("squeeze",this._onSessionEvent),r.removeEventListener("squeezestart",this._onSessionEvent),r.removeEventListener("squeezeend",this._onSessionEvent),r.removeEventListener("end",this._onSessionEnd),r.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let n=0;n<this._controllers.length;n++){const i=this._controllerInputSources[n];i!==null&&(this._controllerInputSources[n]=null,this._controllers[n].disconnect(i))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._sessionUsesLayers===!0)for(const n of this._layers)n.renderTarget=new sc(n.pixelwidth,n.pixelheight,{format:cn,type:an,depthTexture:new zi(n.pixelwidth,n.pixelheight,n.stencilBuffer?Ei:Wt,void 0,void 0,void 0,void 0,void 0,void 0,n.stencilBuffer?Ai:wi),stencilBuffer:n.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),n.renderTarget.isXRRenderTarget=!1,n.plane.material=n.material,n.material.map=n.renderTarget.texture,n.material.map.offset.y=1,n.material.map.repeat.y=-1,delete n.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function HG(r){const e=this._controllers,n=this._controllerInputSources;for(let i=0;i<r.removed.length;i++){const s=r.removed[i],o=n.indexOf(s);o>=0&&(n[o]=null,e[o].disconnect(s))}for(let i=0;i<r.added.length;i++){const s=r.added[i];let o=n.indexOf(s);if(o===-1){for(let l=0;l<e.length;l++)if(l>=n.length){n.push(s),o=l;break}else if(n[l]===null){n[l]=s,o=l;break}if(o===-1)break}const a=e[o];a&&a.connect(s)}}function WG(r){return r.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(r.translation,r.quaternion),width:r.width/2,height:r.height/2,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(r.translation,r.quaternion),radius:r.radius,centralAngle:r.centralAngle,aspectRatio:r.aspectRatio,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1})}function $G(r,e){if(e===void 0)return;const n=this._cameraXR,i=this._renderer,s=i.backend,o=this._glBaseLayer,a=this.getReferenceSpace(),l=e.getViewerPose(a);if(this._xrFrame=e,l!==null){const c=l.views;this._glBaseLayer!==null&&s.setXRTarget(o.framebuffer);let u=!1;c.length!==n.cameras.length&&(n.cameras.length=0,u=!0);for(let h=0;h<c.length;h++){const d=c[h];let f;if(this._supportsLayers===!0){const m=this._glBinding.getViewSubImage(this._glProjLayer,d);f=m.viewport,h===0&&s.setXRRenderTargetTextures(this._xrRenderTarget,m.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:m.depthStencilTexture)}else f=o.getViewport(d);let p=this._cameras[h];p===void 0&&(p=new Rn,p.layers.enable(h),p.viewport=new et,this._cameras[h]=p),p.matrix.fromArray(d.transform.matrix),p.matrix.decompose(p.position,p.quaternion,p.scale),p.projectionMatrix.fromArray(d.projectionMatrix),p.projectionMatrixInverse.copy(p.projectionMatrix).invert(),p.viewport.set(f.x,f.y,f.width,f.height),h===0&&(n.matrix.copy(p.matrix),n.matrix.decompose(n.position,n.quaternion,n.scale)),u===!0&&n.cameras.push(p)}i.setOutputRenderTarget(this._xrRenderTarget)}for(let c=0;c<this._controllers.length;c++){const u=this._controllerInputSources[c],h=this._controllers[c];u!==null&&h!==void 0&&h.update(u,e,a)}this._currentAnimationLoop&&this._currentAnimationLoop(r,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const z0=new hd,na=new de,dp=new et,fp=new Kc,pp=new _g,ah=new bt,Or=new et;class jG{constructor(e,n={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:s=!0,depth:o=!0,stencil:a=!1,antialias:l=!1,samples:c=0,getFallback:u=null,colorBufferType:h=Cn,multiview:d=!1}=n;this.domElement=e.getDomElement(),this.backend=e,this.samples=c||l===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=s,this.logarithmicDepthBuffer=i,this.outputColorSpace=Bn,this.toneMapping=ci,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=o,this.stencil=a,this.info=new Rk,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new XS,this.lighting=new OG,this._getFallback=u,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new et(0,0,this._width,this._height),this._scissor=new et(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new n_(new vn),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const f=this.alpha===!0?0:1;this._clearColor=new t_(0,0,0,f),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=h,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Gm},this.xr=new BG(this,d),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(p,m,y)=>{await this.compileAsync(p,m);const _=this._renderLists.get(p,m),g=this._renderContexts.get(p,m,this._renderTarget),v=p.overrideMaterial||y.material,x=this._objects.get(y,v,p,m,_.lightsNode,g,g.clippingContext),{fragmentShader:b,vertexShader:T}=x.getNodeBuilderState();return{fragmentShader:b,vertexShader:T}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,n)=>{let i=this.backend;try{await i.init(this)}catch(s){if(this._getFallback!==null)try{this.backend=i=this._getFallback(s),await i.init(this)}catch(o){n(o);return}else{n(s);return}}this._nodes=new LG(this,i),this._animation=new vk(this._nodes,this.info),this._attributes=new wk(i),this._background=new Yz(this,this._nodes),this._geometries=new Ak(this._attributes,this.info),this._textures=new Hk(this,i,this.info),this._pipelines=new Dk(i,this._nodes),this._bindings=new Lk(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Sk(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Fk(this.lighting),this._bundles=new UG,this._renderContexts=new Gk,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,n,i=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const s=this._nodes.nodeFrame,o=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=this._compilationPromises,u=e.isScene===!0?e:z0;i===null&&(i=e);const h=this._renderTarget,d=this._renderContexts.get(i,n,h),f=this._activeMipmapLevel,p=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=p,s.renderId++,s.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new Zh),d.clippingContext.updateGlobal(u,n),u.onBeforeRender(this,e,n,h);const m=this._renderLists.get(e,n);if(m.begin(),this._projectObject(e,n,0,m,d.clippingContext),i!==e&&i.traverseVisible(function(x){x.isLight&&x.layers.test(n.layers)&&m.pushLight(x)}),m.finish(),h!==null){this._textures.updateRenderTarget(h,f);const x=this._textures.get(h);d.textures=x.textures,d.depthTexture=x.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(u,m,d);const y=m.opaque,_=m.transparent,g=m.transparentDoublePass,v=m.lightsNode;this.opaque===!0&&y.length>0&&this._renderObjects(y,n,u,v),this.transparent===!0&&_.length>0&&this._renderTransparents(_,g,n,u,v),s.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=l,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(p)}async renderAsync(e,n){this._initialized===!1&&await this.init(),this._renderScene(e,n)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=zv,this.overrideNodes.modelNormalViewMatrix=Gv):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===zv&&this.overrideNodes.modelNormalViewMatrix===Gv}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let n=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(n+=`
Reason: ${e.reason}`),console.error(n),this._isDeviceLost=!0}_renderBundle(e,n,i){const{bundleGroup:s,camera:o,renderList:a}=e,l=this._currentRenderContext,c=this._bundles.get(s,o),u=this.backend.get(c);u.renderContexts===void 0&&(u.renderContexts=new Set);const h=s.version!==u.version,d=u.renderContexts.has(l)===!1||h;if(u.renderContexts.add(l),d){this.backend.beginBundle(l),(u.renderObjects===void 0||h)&&(u.renderObjects=[]),this._currentRenderBundle=c;const{transparentDoublePass:f,transparent:p,opaque:m}=a;this.opaque===!0&&m.length>0&&this._renderObjects(m,o,n,i),this.transparent===!0&&p.length>0&&this._renderTransparents(p,f,o,n,i),this._currentRenderBundle=null,this.backend.finishBundle(l,c),u.version=s.version}else{const{renderObjects:f}=u;for(let p=0,m=f.length;p<m;p++){const y=f[p];this._nodes.needsRefresh(y)&&(this._nodes.updateBefore(y),this._nodes.updateForRender(y),this._bindings.updateForRender(y),this._nodes.updateAfter(y))}}this.backend.addBundle(l,c)}render(e,n){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,n);this._renderScene(e,n)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:n}=this,i=e!==ci,s=n!==Je.workingColorSpace;if(i===!1&&s===!1)return null;const{width:o,height:a}=this.getDrawingBufferSize(na),{depth:l,stencil:c}=this;let u=this._frameBufferTarget;u===null&&(u=new To(o,a,{depthBuffer:l,stencilBuffer:c,type:this._colorBufferType,format:cn,colorSpace:Je.workingColorSpace,generateMipmaps:!1,minFilter:Tn,magFilter:Tn,samples:this.samples}),u.isPostProcessingRenderTarget=!0,this._frameBufferTarget=u);const h=this.getOutputRenderTarget();return u.depthBuffer=l,u.stencilBuffer=c,h!==null?u.setSize(h.width,h.height,h.depth):u.setSize(o,a,1),u.viewport.copy(this._viewport),u.scissor.copy(this._scissor),u.viewport.multiplyScalar(this._pixelRatio),u.scissor.multiplyScalar(this._pixelRatio),u.scissorTest=this._scissorTest,u.multiview=h!==null?h.multiview:!1,u.resolveDepthBuffer=h!==null?h.resolveDepthBuffer:!0,u._autoAllocateDepthBuffer=h!==null?h._autoAllocateDepthBuffer:!1,u}_renderScene(e,n,i=!0){if(this._isDeviceLost===!0)return;const s=i?this._getFrameBufferTarget():null,o=this._nodes.nodeFrame,a=o.renderId,l=this._currentRenderContext,c=this._currentRenderObjectFunction,u=e.isScene===!0?e:z0,h=this._renderTarget||this._outputRenderTarget,d=this._activeCubeFace,f=this._activeMipmapLevel;let p;s!==null?(p=s,this.setRenderTarget(p)):p=h;const m=this._renderContexts.get(e,n,p);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,o.renderId=this.info.calls;const y=this.coordinateSystem,_=this.xr;if(n.coordinateSystem!==y&&_.isPresenting===!1&&(n.coordinateSystem=y,n.updateProjectionMatrix(),n.isArrayCamera))for(const F of n.cameras)F.coordinateSystem=y,F.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),n.parent===null&&n.matrixWorldAutoUpdate===!0&&n.updateMatrixWorld(),_.enabled===!0&&_.isPresenting===!0&&(_.cameraAutoUpdate===!0&&_.updateCamera(n),n=_.getCamera());let g=this._viewport,v=this._scissor,x=this._pixelRatio;p!==null&&(g=p.viewport,v=p.scissor,x=1),this.getDrawingBufferSize(na),dp.set(0,0,na.width,na.height);const b=g.minDepth===void 0?0:g.minDepth,T=g.maxDepth===void 0?1:g.maxDepth;m.viewportValue.copy(g).multiplyScalar(x).floor(),m.viewportValue.width>>=f,m.viewportValue.height>>=f,m.viewportValue.minDepth=b,m.viewportValue.maxDepth=T,m.viewport=m.viewportValue.equals(dp)===!1,m.scissorValue.copy(v).multiplyScalar(x).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(dp)===!1,m.scissorValue.width>>=f,m.scissorValue.height>>=f,m.clippingContext||(m.clippingContext=new Zh),m.clippingContext.updateGlobal(u,n),u.onBeforeRender(this,e,n,p);const S=n.isArrayCamera?pp:fp;n.isArrayCamera||(ah.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),S.setFromProjectionMatrix(ah,n.coordinateSystem,n.reversedDepth));const M=this._renderLists.get(e,n);if(M.begin(),this._projectObject(e,n,0,M,m.clippingContext),M.finish(),this.sortObjects===!0&&M.sort(this._opaqueSort,this._transparentSort),p!==null){this._textures.updateRenderTarget(p,f);const F=this._textures.get(p);m.textures=F.textures,m.depthTexture=F.depthTexture,m.width=F.width,m.height=F.height,m.renderTarget=p,m.depth=p.depthBuffer,m.stencil=p.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=na.width,m.height=na.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=f,m.height>>=f,m.activeCubeFace=d,m.activeMipmapLevel=f,m.occlusionQueryCount=M.occlusionQueryCount,m.scissorValue.max(Or.set(0,0,0,0)),m.scissorValue.x+m.scissorValue.width>m.width&&(m.scissorValue.width=Math.max(m.width-m.scissorValue.x,0)),m.scissorValue.y+m.scissorValue.height>m.height&&(m.scissorValue.height=Math.max(m.height-m.scissorValue.y,0)),this._background.update(u,M,m),m.camera=n,this.backend.beginRender(m);const{bundles:A,lightsNode:E,transparentDoublePass:w,transparent:N,opaque:D}=M;return A.length>0&&this._renderBundles(A,u,E),this.opaque===!0&&D.length>0&&this._renderObjects(D,n,u,E),this.transparent===!0&&N.length>0&&this._renderTransparents(N,w,n,u,E),this.backend.finishRender(m),o.renderId=a,this._currentRenderContext=l,this._currentRenderObjectFunction=c,s!==null&&(this.setRenderTarget(h,d,f),this._renderOutput(p)),u.onAfterRender(this,e,n,p),m}_setXRLayerSize(e,n){this._width=e,this._height=n,this.setViewport(0,0,e,n)}_renderOutput(e){const n=this._quad;this._nodes.hasOutputChange(e.texture)&&(n.material.fragmentNode=this._nodes.getOutputNode(e.texture),n.material.needsUpdate=!0);const i=this.autoClear,s=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(n,n.camera,!1),this.autoClear=i,this.xr.enabled=s}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,n,i){this.xr&&this.xr.isPresenting||(this._width=e,this._height=n,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(n*i),this.setViewport(0,0,e,n),this._initialized&&this.backend.updateSize())}setSize(e,n,i=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=n,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(n*this._pixelRatio),i===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=n+"px"),this.setViewport(0,0,e,n),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const n=this._scissor;return e.x=n.x,e.y=n.y,e.width=n.width,e.height=n.height,e}setScissor(e,n,i,s){const o=this._scissor;e.isVector4?o.copy(e):o.set(e,n,i,s)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,n,i,s,o=0,a=1){const l=this._viewport;e.isVector4?l.copy(e):l.set(e,n,i,s),l.minDepth=o,l.maxDepth=a}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,n=1){this._clearColor.set(e),this._clearColor.a=n}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const n=this._currentRenderContext;return n&&this.backend.isOccluded(n,e)}clear(e=!0,n=!0,i=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,n,i);const s=this._renderTarget||this._getFrameBufferTarget();let o=null;if(s!==null){this._textures.updateRenderTarget(s);const a=this._textures.get(s);o=this._renderContexts.getForClear(s),o.textures=a.textures,o.depthTexture=a.depthTexture,o.width=a.width,o.height=a.height,o.renderTarget=s,o.depth=s.depthBuffer,o.stencil=s.stencilBuffer,o.clearColorValue=this.backend.getClearColor(),o.activeCubeFace=this.getActiveCubeFace(),o.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,n,i,o),s!==null&&this._renderTarget===null&&this._renderOutput(s)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,n=!0,i=!0){this._initialized===!1&&await this.init(),this.clear(e,n,i)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:ci}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:Je.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this._initialized===!0&&(this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,n=0,i=0){this._renderTarget=e,this._activeCubeFace=n,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,n=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const i=this._nodes.nodeFrame,s=i.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,i.renderId=this.info.calls;const o=this.backend,a=this._pipelines,l=this._bindings,c=this._nodes,u=Array.isArray(e)?e:[e];if(u[0]===void 0||u[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");o.beginCompute(e);for(const h of u){if(a.has(h)===!1){const p=()=>{h.removeEventListener("dispose",p),a.delete(h),l.delete(h),c.delete(h)};h.addEventListener("dispose",p);const m=h.onInitFunction;m!==null&&m.call(h,{renderer:this})}c.updateForCompute(h),l.updateForCompute(h);const d=l.getForCompute(h),f=a.getForCompute(h,d);o.compute(e,h,d,f,n)}o.finishCompute(e),i.renderId=s}async computeAsync(e,n=null){this._initialized===!1&&await this.init(),this.compute(e,n)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,n=null){if(n!==null)if(n.isVector2)n=Or.set(n.x,n.y,e.image.width,e.image.height).floor();else if(n.isVector4)n=Or.copy(n).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else n=Or.set(0,0,e.image.width,e.image.height);let i=this._currentRenderContext,s;i!==null?s=i.renderTarget:(s=this._renderTarget||this._getFrameBufferTarget(),s!==null&&(this._textures.updateRenderTarget(s),i=this._textures.get(s))),this._textures.updateTexture(e,{renderTarget:s}),this.backend.copyFramebufferToTexture(e,i,n)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){this._textures.updateTexture(e),this._textures.updateTexture(n),this.backend.copyTextureToTexture(e,n,i,s,o,a)}async readRenderTargetPixelsAsync(e,n,i,s,o,a=0,l=0){return this.backend.copyTextureToBuffer(e.textures[a],n,i,s,o,l)}_projectObject(e,n,i,s,o){if(e.visible===!1)return;if(e.layers.test(n.layers)){if(e.isGroup)i=e.renderOrder,e.isClippingGroup&&e.enabled&&(o=o.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(n);else if(e.isLight)s.pushLight(e);else if(e.isSprite){const c=n.isArrayCamera?pp:fp;if(!e.frustumCulled||c.intersectsSprite(e,n)){this.sortObjects===!0&&Or.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ah);const{geometry:u,material:h}=e;h.visible&&s.push(e,u,h,i,Or.z,null,o)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const c=n.isArrayCamera?pp:fp;if(!e.frustumCulled||c.intersectsObject(e,n)){const{geometry:u,material:h}=e;if(this.sortObjects===!0&&(u.boundingSphere===null&&u.computeBoundingSphere(),Or.copy(u.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(ah)),Array.isArray(h)){const d=u.groups;for(let f=0,p=d.length;f<p;f++){const m=d[f],y=h[m.materialIndex];y&&y.visible&&s.push(e,u,y,i,Or.z,m,o)}}else h.visible&&s.push(e,u,h,i,Or.z,null,o)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const c=s;s=this._renderLists.get(e,n),s.begin(),c.pushBundle({bundleGroup:e,camera:n,renderList:s}),s.finish()}const l=e.children;for(let c=0,u=l.length;c<u;c++)this._projectObject(l[c],n,i,s,o)}_renderBundles(e,n,i){for(const s of e)this._renderBundle(s,n,i)}_renderTransparents(e,n,i,s,o){if(n.length>0){for(const{material:a}of n)a.side=kt;this._renderObjects(n,i,s,o,"backSide");for(const{material:a}of n)a.side=Si;this._renderObjects(e,i,s,o);for(const{material:a}of n)a.side=zn}else this._renderObjects(e,i,s,o)}_renderObjects(e,n,i,s,o=null){for(let a=0,l=e.length;a<l;a++){const{object:c,geometry:u,material:h,group:d,clippingContext:f}=e[a];this._currentRenderObjectFunction(c,i,n,u,h,d,s,f,o)}}renderObject(e,n,i,s,o,a,l,c=null,u=null){let h,d,f;if(e.onBeforeRender(this,n,i,s,o,a),o.allowOverride===!0&&n.overrideMaterial!==null){const p=n.overrideMaterial;o.positionNode&&o.positionNode.isNode&&(h=p.positionNode,p.positionNode=o.positionNode),p.alphaTest=o.alphaTest,p.alphaMap=o.alphaMap,p.transparent=o.transparent||o.transmission>0,p.isShadowPassMaterial&&(p.side=o.shadowSide===null?o.side:o.shadowSide,o.depthNode&&o.depthNode.isNode&&(f=p.depthNode,p.depthNode=o.depthNode),o.castShadowNode&&o.castShadowNode.isNode&&(d=p.colorNode,p.colorNode=o.castShadowNode),o.castShadowPositionNode&&o.castShadowPositionNode.isNode&&(h=p.positionNode,p.positionNode=o.castShadowPositionNode)),o=p}o.transparent===!0&&o.side===zn&&o.forceSinglePass===!1?(o.side=kt,this._handleObjectFunction(e,o,n,i,l,a,c,"backSide"),o.side=Si,this._handleObjectFunction(e,o,n,i,l,a,c,u),o.side=zn):this._handleObjectFunction(e,o,n,i,l,a,c,u),h!==void 0&&(n.overrideMaterial.positionNode=h),f!==void 0&&(n.overrideMaterial.depthNode=f),d!==void 0&&(n.overrideMaterial.colorNode=d),e.onAfterRender(this,n,i,s,o,a)}_renderObjectDirect(e,n,i,s,o,a,l,c){const u=this._objects.get(e,n,i,s,o,this._currentRenderContext,l,c);u.drawRange=e.geometry.drawRange,u.group=a;const h=this._nodes.needsRefresh(u);h&&(this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u)),this._pipelines.updateForRender(u),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(u),u.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(u,this.info),h&&this._nodes.updateAfter(u)}_createObjectPipeline(e,n,i,s,o,a,l,c){const u=this._objects.get(e,n,i,s,o,this._currentRenderContext,l,c);u.drawRange=e.geometry.drawRange,u.group=a,this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u),this._pipelines.getForRender(u,this._compilationPromises),this._nodes.updateAfter(u)}get compile(){return this.compileAsync}}class YS{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function qG(r){return r+(bs-r%bs)%bs}class KS extends YS{constructor(e,n=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=n}get byteLength(){return qG(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class ZS extends KS{constructor(e,n=null){super(e,n),this.isUniformBuffer=!0}}let XG=0;class QS extends ZS{constructor(e,n){super("UniformBuffer_"+XG++,e?e.value:null),this.nodeUniform=e,this.groupNode=n}get buffer(){return this.nodeUniform.value}}class YG extends ZS{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const n=this.uniforms.indexOf(e);return n!==-1&&this.uniforms.splice(n,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const n=this.byteLength;e=new Float32Array(new ArrayBuffer(n)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let n=0;for(let i=0,s=this.uniforms.length;i<s;i++){const o=this.uniforms[i],a=o.boundary,l=o.itemSize*e,c=n%bs,u=c%a,h=c+u;n+=u,h!==0&&bs-h<l&&(n+=bs-h),o.offset=n/e,n+=l}return Math.ceil(n/bs)*bs}update(){let e=!1;for(const n of this.uniforms)this.updateByType(n)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o]!==s){const l=this._getBufferForType(a);l[o]=i[o]=s,n=!0}return n}updateVector2(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,n=!0}return n}updateVector3(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y||i[o+2]!==s.z){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,l[o+2]=i[o+2]=s.z,n=!0}return n}updateVector4(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset,a=e.getType();if(i[o+0]!==s.x||i[o+1]!==s.y||i[o+2]!==s.z||i[o+4]!==s.w){const l=this._getBufferForType(a);l[o+0]=i[o+0]=s.x,l[o+1]=i[o+1]=s.y,l[o+2]=i[o+2]=s.z,l[o+3]=i[o+3]=s.w,n=!0}return n}updateColor(e){let n=!1;const i=this.values,s=e.getValue(),o=e.offset;if(i[o+0]!==s.r||i[o+1]!==s.g||i[o+2]!==s.b){const a=this.buffer;a[o+0]=i[o+0]=s.r,a[o+1]=i[o+1]=s.g,a[o+2]=i[o+2]=s.b,n=!0}return n}updateMatrix3(e){let n=!1;const i=this.values,s=e.getValue().elements,o=e.offset;if(i[o+0]!==s[0]||i[o+1]!==s[1]||i[o+2]!==s[2]||i[o+4]!==s[3]||i[o+5]!==s[4]||i[o+6]!==s[5]||i[o+8]!==s[6]||i[o+9]!==s[7]||i[o+10]!==s[8]){const a=this.buffer;a[o+0]=i[o+0]=s[0],a[o+1]=i[o+1]=s[1],a[o+2]=i[o+2]=s[2],a[o+4]=i[o+4]=s[3],a[o+5]=i[o+5]=s[4],a[o+6]=i[o+6]=s[5],a[o+8]=i[o+8]=s[6],a[o+9]=i[o+9]=s[7],a[o+10]=i[o+10]=s[8],n=!0}return n}updateMatrix4(e){let n=!1;const i=this.values,s=e.getValue().elements,o=e.offset;return ZG(i,s,o)===!1&&(this.buffer.set(s,o),KG(i,s,o),n=!0),n}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function KG(r,e,n){for(let i=0,s=e.length;i<s;i++)r[n+i]=e[i]}function ZG(r,e,n){for(let i=0,s=e.length;i<s;i++)if(r[n+i]!==e[i])return!1;return!0}let QG=0;class JS extends YG{constructor(e,n){super(e),this.id=QG++,this.groupNode=n,this.isNodeUniformsGroup=!0}}class eM extends YS{constructor(e,n){super(e),this.texture=n,this.version=n?n.version:0,this.generation=null,this.isSampler=!0}set texture(e){if(this._texture===e)return;const n=()=>{this._texture=null,this.generation=null,this.version=0};this._texture&&this._texture.removeEventListener("dispose",n),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",n)}get texture(){return this._texture}update(){const{texture:e,version:n}=this;return n!==e.version?(this.version=e.version,!0):!1}clone(){const e=super.clone();return e._texture=null,e.texture=this.texture,e}}let JG=0;class eV extends eM{constructor(e,n){super(e,n),this.id=JG++,this.store=!1,this.isSampledTexture=!0}}class Rd extends eV{constructor(e,n,i,s=null){super(e,n?n.value:null),this.textureNode=n,this.groupNode=i,this.access=s}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class tM extends Rd{constructor(e,n,i,s=null){super(e,n,i,s),this.isSampledCubeTexture=!0}}class xm extends Rd{constructor(e,n,i,s=null){super(e,n,i,s),this.isSampledTexture3D=!0}}const G0={textureDimensions:"textureSize",equals:"equal",bitcast_float_int:"floatBitsToInt",bitcast_int_float:"intBitsToFloat",bitcast_uint_float:"uintBitsToFloat",bitcast_float_uint:"floatBitsToUint"},tV={low:"lowp",medium:"mediump",high:"highp"},V0={swizzleAssign:!0,storageBuffer:!1},H0={perspective:"smooth",linear:"noperspective"},W0={centroid:"centroid"},$0=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class nV extends jS{constructor(e,n){super(e,n,new DG),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==ri}getMethod(e){return G0[e]||e}getBitcastMethod(e,n){return G0[`bitcast_${n}_${e}`]}getTernary(e,n,i){return`${e} ? ${n} : ${i}`}getOutputStructName(){return""}buildFunctionCode(e){const n=e.layout,i=this.flowShaderNode(e),s=[];for(const a of n.inputs)s.push(this.getType(a.type)+" "+a.name);return`${this.getType(n.type)} ${n.name}( ${s.join(", ")} ) {

	${i.vars}

${i.code}
	return ${i.result};

}`}setupPBO(e){const n=e.value;if(n.pbo===void 0){const i=n.array,s=n.count*n.itemSize,{itemSize:o}=n,a=n.array.constructor.name.toLowerCase().includes("int");let l=a?ll:qc;o===2?l=a?cl:Kr:o===3?l=a?WR:jc:o===4&&(l=a?ul:cn);const c={Float32Array:hn,Uint8Array:an,Uint16Array:tr,Uint32Array:Wt,Int8Array:ho,Int16Array:fo,Int32Array:An,Uint8ClampedArray:an},u=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/o))));let h=Math.ceil(s/o/u);u*h*o<s&&h++;const d=u*h*o,f=new i.constructor(d);f.set(i,0),n.array=f;const p=new jC(n.array,u,h,l,c[n.array.constructor.name]||hn);p.needsUpdate=!0,p.isPBOTexture=!0;const m=new pl(p,null,null);m.setPrecision("high"),n.pboNode=m,n.pbo=m.value,this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,n=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?n.charAt(0)+"_"+e.name:super.getPropertyName(e,n)}generatePBO(e){const{node:n,indexNode:i}=e,s=n.value;if(this.renderer.backend.has(s)){const h=this.renderer.backend.get(s);h.pbo=s.pbo}const o=this.getUniformFromNode(s.pboNode,"texture",this.shaderStage,this.context.nodeName),a=this.getPropertyName(o);this.increaseUsage(i);const l=i.build(this,"uint"),c=this.getDataFromNode(e);let u=c.propertyName;if(u===void 0){const h=this.getVarFromNode(e);u=this.getPropertyName(h);const d=this.getDataFromNode(n);let f=d.propertySizeName;f===void 0&&(f=u+"Size",this.getVarFromNode(n,f,"uint"),this.addLineFlowCode(`${f} = uint( textureSize( ${a}, 0 ).x )`,e),d.propertySizeName=f);const{itemSize:p}=s,m="."+fl.join("").slice(0,p),y=`ivec2(${l} % ${f}, ${l} / ${f})`,_=this.generateTextureLoad(null,a,y,null,null,"0");let g="vec4";s.pbo.type===Wt?g="uvec4":s.pbo.type===An&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${_})${m}`,e),c.propertyName=u}return u}generateTextureLoad(e,n,i,s,o,a="0"){let l;return s?o?l=`texelFetchOffset( ${n}, ivec3( ${i}, ${s} ), ${a}, ${o} )`:l=`texelFetch( ${n}, ivec3( ${i}, ${s} ), ${a} )`:o?l=`texelFetchOffset( ${n}, ${i}, ${a}, ${o} )`:l=`texelFetch( ${n}, ${i}, ${a} )`,e!==null&&e.isDepthTexture&&(l+=".x"),l}generateTexture(e,n,i,s,o){return s&&(i=`vec3( ${i}, ${s} )`),e.isDepthTexture?o?`textureOffset( ${n}, ${i}, ${o} ).x`:`texture( ${n}, ${i} ).x`:o?`textureOffset( ${n}, ${i}, ${o} )`:`texture( ${n}, ${i} )`}generateTextureLevel(e,n,i,s,o){return o?`textureLodOffset( ${n}, ${i}, ${s}, ${o} )`:`textureLod( ${n}, ${i}, ${s} )`}generateTextureBias(e,n,i,s,o){return o?`textureOffset( ${n}, ${i}, ${o}, ${s} )`:`texture( ${n}, ${i}, ${s} )`}generateTextureGrad(e,n,i,s,o){return o?`textureGradOffset( ${n}, ${i}, ${s[0]}, ${s[1]}, ${o} )`:`textureGrad( ${n}, ${i}, ${s[0]}, ${s[1]} )`}generateTextureCompare(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return o?a?`textureOffset( ${n}, vec4( ${i}, ${o}, ${s} ), ${a} )`:`texture( ${n}, vec4( ${i}, ${o}, ${s} ) )`:a?`textureOffset( ${n}, vec3( ${i}, ${s} ), ${a} )`:`texture( ${n}, vec3( ${i}, ${s} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${l} shader.`)}getVars(e){const n=[],i=this.vars[e];if(i!==void 0)for(const s of i)n.push(`${this.getVar(s.type,s.name,s.count)};`);return n.join(`
	`)}getUniforms(e){const n=this.uniforms[e],i=[],s={};for(const a of n){let l=null,c=!1;if(a.type==="texture"||a.type==="texture3D"){const h=a.node.value;let d="";(h.isDataTexture===!0||h.isData3DTexture===!0)&&(h.type===Wt?d="u":h.type===An&&(d="i")),a.type==="texture3D"&&h.isArrayTexture===!1?l=`${d}sampler3D ${a.name};`:h.compareFunction?h.isArrayTexture===!0?l=`sampler2DArrayShadow ${a.name};`:l=`sampler2DShadow ${a.name};`:h.isArrayTexture===!0||h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0?l=`${d}sampler2DArray ${a.name};`:l=`${d}sampler2D ${a.name};`}else if(a.type==="cubeTexture")l=`samplerCube ${a.name};`;else if(a.type==="buffer"){const h=a.node,d=this.getType(h.bufferType),f=h.bufferCount,p=f>0?f:"";l=`${h.name} {
	${d} ${a.name}[${p}];
};
`}else l=`${this.getVectorType(a.type)} ${this.getPropertyName(a,e)};`,c=!0;const u=a.node.precision;if(u!==null&&(l=tV[u]+" "+l),c){l="	"+l;const h=a.groupNode.name;(s[h]||(s[h]=[])).push(l)}else l="uniform "+l,i.push(l)}let o="";for(const a in s){const l=s[a];o+=this._getGLSLUniformStruct(e+"_"+a,l.join(`
`))+`
`}return o+=i.join(`
`),o}getTypeFromAttribute(e){let n=super.getTypeFromAttribute(e);if(/^[iu]/.test(n)&&e.gpuType!==An){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const s=i.array;s instanceof Uint32Array||s instanceof Int32Array||(n=n.slice(1))}return n}getAttributes(e){let n="";if(e==="vertex"||e==="compute"){const i=this.getAttributesArray();let s=0;for(const o of i)n+=`layout( location = ${s++} ) in ${o.type} ${o.name};
`}return n}getStructMembers(e){const n=[];for(const i of e.members)n.push(`	${i.type} ${i.name};`);return n.join(`
`)}getStructs(e){const n=[],i=this.structs[e],s=[];for(const o of i)if(o.output)for(const a of o.members)s.push(`layout( location = ${a.index} ) out ${a.type} ${a.name};`);else{let a="struct "+o.name+` {
`;a+=this.getStructMembers(o),a+=`
};
`,n.push(a)}return s.length===0&&s.push("layout( location = 0 ) out vec4 fragColor;"),`
`+s.join(`
`)+`

`+n.join(`
`)}getVaryings(e){let n="";const i=this.varyings;if(e==="vertex"||e==="compute")for(const s of i){e==="compute"&&(s.needsInterpolation=!0);const o=this.getType(s.type);if(s.needsInterpolation)if(s.interpolationType){const a=H0[s.interpolationType]||s.interpolationType,l=W0[s.interpolationSampling]||"";n+=`${a} ${l} out ${o} ${s.name};
`}else{const a=o.includes("int")||o.includes("uv")||o.includes("iv")?"flat ":"";n+=`${a}out ${o} ${s.name};
`}else n+=`${o} ${s.name};
`}else if(e==="fragment"){for(const s of i)if(s.needsInterpolation){const o=this.getType(s.type);if(s.interpolationType){const a=H0[s.interpolationType]||s.interpolationType,l=W0[s.interpolationSampling]||"";n+=`${a} ${l} in ${o} ${s.name};
`}else{const a=o.includes("int")||o.includes("uv")||o.includes("iv")?"flat ":"";n+=`${a}in ${o} ${s.name};
`}}}for(const s of this.builtins[e])n+=`${s};
`;return n}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((i,s)=>i*s,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,n,i=this.shaderStage){const s=this.extensions[i]||(this.extensions[i]=new Map);s.has(e)===!1&&s.set(e,{name:e,behavior:n})}getExtensions(e){const n=[];if(e==="vertex"){const s=this.renderer.backend.extensions;this.object.isBatchedMesh&&s.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(i!==void 0)for(const{name:s,behavior:o}of i.values())n.push(`#extension ${s} : ${o}`);return n.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let n=V0[e];if(n===void 0){let i;switch(n=!1,e){case"float32Filterable":i="OES_texture_float_linear";break;case"clipDistance":i="WEBGL_clip_cull_distance";break}if(i!==void 0){const s=this.renderer.backend.extensions;s.has(i)&&(s.get(i),n=!0)}V0[e]=n}return n}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,n){this.transforms.push({varyingName:e,attributeNode:n})}getTransforms(){const e=this.transforms;let n="";for(let i=0;i<e.length;i++){const s=e[i],o=this.getPropertyName(s.attributeNode);o&&(n+=`${s.varyingName} = ${o};
	`)}return n}_getGLSLUniformStruct(e,n){return`
layout( std140 ) uniform ${e} {
${n}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${$0}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${$0}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const n in e){let i=`// code

`;i+=this.flowCode[n];const s=this.flowNodes[n],o=s[s.length-1];for(const l of s){const c=this.getFlowData(l),u=l.name;u&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${u}
	`),i+=`${c.code}
	`,l===o&&n!=="compute"&&(i+=`// result
	`,n==="vertex"?(i+="gl_Position = ",i+=`${c.result};`):n==="fragment"&&(l.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${c.result};`)))}const a=e[n];a.extensions=this.getExtensions(n),a.uniforms=this.getUniforms(n),a.attributes=this.getAttributes(n),a.varyings=this.getVaryings(n),a.vars=this.getVars(n),a.structs=this.getStructs(n),a.codes=this.getCodes(n),a.transforms=this.getTransforms(n),a.flow=i}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,n,i,s=null){const o=super.getUniformFromNode(e,n,i,s),a=this.getDataFromNode(e,i,this.globalCache);let l=a.uniformGPU;if(l===void 0){const c=e.groupNode,u=c.name,h=this.getBindGroupArray(u,i);if(n==="texture")l=new Rd(o.name,o.node,c),h.push(l);else if(n==="cubeTexture")l=new tM(o.name,o.node,c),h.push(l);else if(n==="texture3D")l=new xm(o.name,o.node,c),h.push(l);else if(n==="buffer"){e.name=`NodeBuffer_${e.id}`,o.name=`buffer${e.id}`;const d=new QS(e,c);d.name=e.name,h.push(d),l=d}else{const d=this.uniformGroups[i]||(this.uniformGroups[i]={});let f=d[u];f===void 0&&(f=new JS(i+"_"+u,c),d[u]=f,h.push(f)),l=this.getNodeUniform(o,n),f.addUniform(l)}a.uniformGPU=l}return o}}let mp=null,ia=null;class nM{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}getTimestampUID(e){const n=this.get(e);let i=e.isComputeNode===!0?"c":"r";return i+=":"+n.frameCalls+":"+e.id,i}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Ri("WebGPURenderer: Timestamp tracking is disabled.");return}const n=this.timestampQueryPool[e];if(!n){Ri(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const i=await n.resolveQueriesAsync();return this.renderer.info[e].timestamp=i,i}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return mp=mp||new de,this.renderer.getDrawingBufferSize(mp)}setScissorTest(){}getClearColor(){const e=this.renderer;return ia=ia||new t_,e.getClearColor(ia),ia.getRGB(ia),ia}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:xb(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${al} webgpu`),this.domElement=e),e}set(e,n){this.data.set(e,n)}get(e){let n=this.data.get(e);return n===void 0&&(n={},this.data.set(e,n)),n}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let iV=0;class rV{constructor(e,n){this.buffers=[e.bufferGPU,n],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class sV{constructor(e){this.backend=e}createAttribute(e,n){const i=this.backend,{gl:s}=i,o=e.array,a=e.usage||s.STATIC_DRAW,l=e.isInterleavedBufferAttribute?e.data:e,c=i.get(l);let u=c.bufferGPU;u===void 0&&(u=this._createBuffer(s,n,o,a),c.bufferGPU=u,c.bufferType=n,c.version=l.version);let h;if(o instanceof Float32Array)h=s.FLOAT;else if(typeof Float16Array<"u"&&o instanceof Float16Array)h=s.HALF_FLOAT;else if(o instanceof Uint16Array)e.isFloat16BufferAttribute?h=s.HALF_FLOAT:h=s.UNSIGNED_SHORT;else if(o instanceof Int16Array)h=s.SHORT;else if(o instanceof Uint32Array)h=s.UNSIGNED_INT;else if(o instanceof Int32Array)h=s.INT;else if(o instanceof Int8Array)h=s.BYTE;else if(o instanceof Uint8Array)h=s.UNSIGNED_BYTE;else if(o instanceof Uint8ClampedArray)h=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+o);let d={bufferGPU:u,bufferType:n,type:h,byteLength:o.byteLength,bytesPerElement:o.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:h===s.INT||h===s.UNSIGNED_INT||e.gpuType===An,id:iV++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const f=this._createBuffer(s,n,o,a);d=new rV(d,f)}i.set(e,d)}updateAttribute(e){const n=this.backend,{gl:i}=n,s=e.array,o=e.isInterleavedBufferAttribute?e.data:e,a=n.get(o),l=a.bufferType,c=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(l,a.bufferGPU),c.length===0)i.bufferSubData(l,0,s);else{for(let u=0,h=c.length;u<h;u++){const d=c[u];i.bufferSubData(l,d.start*s.BYTES_PER_ELEMENT,s,d.start,d.count)}o.clearUpdateRanges()}i.bindBuffer(l,null),a.version=o.version}destroyAttribute(e){const n=this.backend,{gl:i}=n;e.isInterleavedBufferAttribute&&n.delete(e.data);const s=n.get(e);i.deleteBuffer(s.bufferGPU),n.delete(e)}async getArrayBufferAsync(e){const n=this.backend,{gl:i}=n,s=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:o}=n.get(s),a=e.array,l=a.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,o);const c=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,c),i.bufferData(i.COPY_WRITE_BUFFER,l,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,l),await n.utils._clientWaitAsync();const u=new e.array.constructor(a.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,c),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,u),i.deleteBuffer(c),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,n,i,s){const o=e.createBuffer();return e.bindBuffer(n,o),e.bufferData(n,i,s),e.bindBuffer(n,null),o}}let gp,Yl;class oV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;gp={[Gn]:e.FUNC_ADD,[Vm]:e.FUNC_SUBTRACT,[Hm]:e.FUNC_REVERSE_SUBTRACT},Yl={[Gr]:e.ZERO,[Wm]:e.ONE,[$m]:e.SRC_COLOR,[bc]:e.SRC_ALPHA,[Zm]:e.SRC_ALPHA_SATURATE,[Ym]:e.DST_COLOR,[qm]:e.DST_ALPHA,[jm]:e.ONE_MINUS_SRC_COLOR,[Tc]:e.ONE_MINUS_SRC_ALPHA,[Km]:e.ONE_MINUS_DST_COLOR,[Xm]:e.ONE_MINUS_DST_ALPHA};const n=e.getParameter(e.SCISSOR_BOX),i=e.getParameter(e.VIEWPORT);this.currentScissor=new et().fromArray(n),this.currentViewport=new et().fromArray(i),this._tempVec4=new et}enable(e){const{enabled:n}=this;n[e]!==!0&&(this.gl.enable(e),n[e]=!0)}disable(e){const{enabled:n}=this;n[e]!==!1&&(this.gl.disable(e),n[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:n}=this;e?n.frontFace(n.CW):n.frontFace(n.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:n}=this;e!==ab?(this.enable(n.CULL_FACE),e!==this.currentCullFace&&(e===jp?n.cullFace(n.BACK):e===lb?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):this.disable(n.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:n,gl:i}=this;e!==n&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,n,i,s,o,a,l,c){const{gl:u}=this;if(e===li){this.currentBlendingEnabled===!0&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e!==pa){if(e!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Gn||this.currentBlendEquationAlpha!==Gn)&&(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Gn,this.currentBlendEquationAlpha=Gn),c)switch(e){case Mi:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Ma:u.blendFunc(u.ONE,u.ONE);break;case Ea:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case wa:u.blendFuncSeparate(u.DST_COLOR,u.ONE_MINUS_SRC_ALPHA,u.ZERO,u.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Mi:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Ma:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE,u.ONE,u.ONE);break;case Ea:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case wa:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=c}return}o=o||n,a=a||i,l=l||s,(n!==this.currentBlendEquation||o!==this.currentBlendEquationAlpha)&&(u.blendEquationSeparate(gp[n],gp[o]),this.currentBlendEquation=n,this.currentBlendEquationAlpha=o),(i!==this.currentBlendSrc||s!==this.currentBlendDst||a!==this.currentBlendSrcAlpha||l!==this.currentBlendDstAlpha)&&(u.blendFuncSeparate(Yl[i],Yl[s],Yl[a],Yl[l]),this.currentBlendSrc=i,this.currentBlendDst=s,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=l),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:n}=this;e?this.enable(n.DEPTH_TEST):this.disable(n.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:n}=this;switch(e){case Sc:n.depthFunc(n.NEVER);break;case Mc:n.depthFunc(n.ALWAYS);break;case Ec:n.depthFunc(n.LESS);break;case Rs:n.depthFunc(n.LEQUAL);break;case wc:n.depthFunc(n.EQUAL);break;case Ac:n.depthFunc(n.GEQUAL);break;case Rc:n.depthFunc(n.GREATER);break;case Cc:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}this.currentDepthFunc=e}}scissor(e,n,i,s){const o=this._tempVec4.set(e,n,i,s);if(this.currentScissor.equals(o)===!1){const{gl:a}=this;a.scissor(o.x,o.y,o.z,o.w),this.currentScissor.copy(o)}}viewport(e,n,i,s){const o=this._tempVec4.set(e,n,i,s);if(this.currentViewport.equals(o)===!1){const{gl:a}=this;a.viewport(o.x,o.y,o.z,o.w),this.currentViewport.copy(o)}}setScissorTest(e){const n=this.gl;e?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)}setStencilTest(e){const{gl:n}=this;e?this.enable(n.STENCIL_TEST):this.disable(n.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,n,i){(this.currentStencilFunc!==e||this.currentStencilRef!==n||this.currentStencilFuncMask!==i)&&(this.gl.stencilFunc(e,n,i),this.currentStencilFunc=e,this.currentStencilRef=n,this.currentStencilFuncMask=i)}setStencilOp(e,n,i){(this.currentStencilFail!==e||this.currentStencilZFail!==n||this.currentStencilZPass!==i)&&(this.gl.stencilOp(e,n,i),this.currentStencilFail=e,this.currentStencilZFail=n,this.currentStencilZPass=i)}setMaterial(e,n,i){const{gl:s}=this;e.side===zn?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let o=e.side===kt;n&&(o=!o),this.setFlipSided(o),e.blending===Mi&&e.transparent===!1?this.setBlending(li):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const a=e.stencilWrite;if(this.setStencilTest(a),a&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE),i>0&&this.currentClippingPlanes!==i)for(let c=0;c<8;c++)c<i?this.enable(12288+c):this.disable(12288+c)}setPolygonOffset(e,n,i){const{gl:s}=this;e?(this.enable(s.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==n||this.currentPolygonOffsetUnits!==i)&&(s.polygonOffset(n,i),this.currentPolygonOffsetFactor=n,this.currentPolygonOffsetUnits=i)):this.disable(s.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,n=null){const i=this.gl;return this.currentVAO!==e||this.currentIndex!==n?(i.bindVertexArray(e),n!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,n),this.currentVAO=e,this.currentIndex=n,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,n){const{gl:i,currentBoundFramebuffers:s}=this;return s[e]!==n?(i.bindFramebuffer(e,n),s[e]=n,e===i.DRAW_FRAMEBUFFER&&(s[i.FRAMEBUFFER]=n),e===i.FRAMEBUFFER&&(s[i.DRAW_FRAMEBUFFER]=n),!0):!1}drawBuffers(e,n){const{gl:i}=this;let s=[],o=!1;if(e.textures!==null){s=this.currentDrawbuffers.get(n),s===void 0&&(s=[],this.currentDrawbuffers.set(n,s));const a=e.textures;if(s.length!==a.length||s[0]!==i.COLOR_ATTACHMENT0){for(let l=0,c=a.length;l<c;l++)s[l]=i.COLOR_ATTACHMENT0+l;s.length=a.length,o=!0}}else s[0]!==i.BACK&&(s[0]=i.BACK,o=!0);o&&i.drawBuffers(s)}activeTexture(e){const{gl:n,currentTextureSlot:i,maxTextures:s}=this;e===void 0&&(e=n.TEXTURE0+s-1),i!==e&&(n.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,n,i){const{gl:s,currentTextureSlot:o,currentBoundTextures:a,maxTextures:l}=this;i===void 0&&(o===null?i=s.TEXTURE0+l-1:i=o);let c=a[i];c===void 0&&(c={type:void 0,texture:void 0},a[i]=c),(c.type!==e||c.texture!==n)&&(o!==i&&(s.activeTexture(i),this.currentTextureSlot=i),s.bindTexture(e,n),c.type=e,c.texture=n)}bindBufferBase(e,n,i){const{gl:s}=this,o=`${e}-${n}`;return this.currentBoundBufferBases[o]!==i?(s.bindBufferBase(e,n,i),this.currentBoundBufferBases[o]=i,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:n,currentBoundTextures:i}=this,s=i[n];s!==void 0&&s.type!==void 0&&(e.bindTexture(s.type,null),s.type=void 0,s.texture=void 0)}}class aV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,n=ri){const{gl:i,extensions:s}=this;let o;const a=Je.getTransfer(n);if(e===an)return i.UNSIGNED_BYTE;if(e===rd)return i.UNSIGNED_SHORT_4_4_4_4;if(e===sd)return i.UNSIGNED_SHORT_5_5_5_1;if(e===od)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===ad)return i.UNSIGNED_INT_10F_11F_11F_REV;if(e===ho)return i.BYTE;if(e===fo)return i.SHORT;if(e===tr)return i.UNSIGNED_SHORT;if(e===An)return i.INT;if(e===Wt)return i.UNSIGNED_INT;if(e===hn)return i.FLOAT;if(e===Cn)return i.HALF_FLOAT;if(e===eg)return i.ALPHA;if(e===jc)return i.RGB;if(e===cn)return i.RGBA;if(e===wi)return i.DEPTH_COMPONENT;if(e===Ai)return i.DEPTH_STENCIL;if(e===qc)return i.RED;if(e===ll)return i.RED_INTEGER;if(e===Kr)return i.RG;if(e===cl)return i.RG_INTEGER;if(e===ul)return i.RGBA_INTEGER;if(e===Ts||e===Ss||e===Ms||e===Es)if(a===Pe)if(o=s.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(e===Ts)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Ss)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Ms)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Es)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=s.get("WEBGL_compressed_texture_s3tc"),o!==null){if(e===Ts)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Ss)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ms)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Es)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Nc||e===Pc||e===Dc||e===Lc)if(o=s.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(e===Nc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Pc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Dc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Lc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Ca||e===Na||e===Pa)if(o=s.get("WEBGL_compressed_texture_etc"),o!==null){if(e===Ca||e===Na)return a===Pe?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(e===Pa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Da||e===La||e===Ia||e===Ua||e===Fa||e===Oa||e===Ba||e===ka||e===za||e===Ga||e===Va||e===Ha||e===Wa||e===$a)if(o=s.get("WEBGL_compressed_texture_astc"),o!==null){if(e===Da)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===La)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Ia)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Ua)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Fa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Oa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ba)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===ka)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===za)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Ga)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Va)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Ha)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Wa)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===$a)return a===Pe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===ja)if(o=s.get("EXT_texture_compression_bptc"),o!==null){if(e===ja)return a===Pe?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===qa||e===Xa||e===Ya||e===Ka)if(o=s.get("EXT_texture_compression_rgtc"),o!==null){if(e===qa)return o.COMPRESSED_RED_RGTC1_EXT;if(e===Xa)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Ya)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Ka)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===Ei?i.UNSIGNED_INT_24_8:i[e]!==void 0?i[e]:null}_clientWaitAsync(){const{gl:e}=this,n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((i,s)=>{function o(){const a=e.clientWaitSync(n,e.SYNC_FLUSH_COMMANDS_BIT,0);if(a===e.WAIT_FAILED){e.deleteSync(n),s();return}if(a===e.TIMEOUT_EXPIRED){requestAnimationFrame(o);return}e.deleteSync(n),i()}o()})}}let j0=!1,lh,_p,q0;class lV{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},j0===!1&&(this._init(),j0=!0)}_init(){const e=this.gl;lh={[go]:e.REPEAT,[gr]:e.CLAMP_TO_EDGE,[_o]:e.MIRRORED_REPEAT},_p={[qt]:e.NEAREST,[Jm]:e.NEAREST_MIPMAP_NEAREST,[Yr]:e.NEAREST_MIPMAP_LINEAR,[Tn]:e.LINEAR,[ma]:e.LINEAR_MIPMAP_NEAREST,[si]:e.LINEAR_MIPMAP_LINEAR},q0={[tg]:e.NEVER,[og]:e.ALWAYS,[ld]:e.LESS,[cd]:e.LEQUAL,[ng]:e.EQUAL,[sg]:e.GEQUAL,[ig]:e.GREATER,[rg]:e.NOTEQUAL}}getGLTextureType(e){const{gl:n}=this;let i;return e.isCubeTexture===!0?i=n.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?i=n.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?i=n.TEXTURE_3D:i=n.TEXTURE_2D,i}getInternalFormat(e,n,i,s,o=!1){const{gl:a,extensions:l}=this;if(e!==null){if(a[e]!==void 0)return a[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let c=n;if(n===a.RED&&(i===a.FLOAT&&(c=a.R32F),i===a.HALF_FLOAT&&(c=a.R16F),i===a.UNSIGNED_BYTE&&(c=a.R8),i===a.UNSIGNED_SHORT&&(c=a.R16),i===a.UNSIGNED_INT&&(c=a.R32UI),i===a.BYTE&&(c=a.R8I),i===a.SHORT&&(c=a.R16I),i===a.INT&&(c=a.R32I)),n===a.RED_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.R8UI),i===a.UNSIGNED_SHORT&&(c=a.R16UI),i===a.UNSIGNED_INT&&(c=a.R32UI),i===a.BYTE&&(c=a.R8I),i===a.SHORT&&(c=a.R16I),i===a.INT&&(c=a.R32I)),n===a.RG&&(i===a.FLOAT&&(c=a.RG32F),i===a.HALF_FLOAT&&(c=a.RG16F),i===a.UNSIGNED_BYTE&&(c=a.RG8),i===a.UNSIGNED_SHORT&&(c=a.RG16),i===a.UNSIGNED_INT&&(c=a.RG32UI),i===a.BYTE&&(c=a.RG8I),i===a.SHORT&&(c=a.RG16I),i===a.INT&&(c=a.RG32I)),n===a.RG_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RG8UI),i===a.UNSIGNED_SHORT&&(c=a.RG16UI),i===a.UNSIGNED_INT&&(c=a.RG32UI),i===a.BYTE&&(c=a.RG8I),i===a.SHORT&&(c=a.RG16I),i===a.INT&&(c=a.RG32I)),n===a.RGB){const u=o?Za:Je.getTransfer(s);i===a.FLOAT&&(c=a.RGB32F),i===a.HALF_FLOAT&&(c=a.RGB16F),i===a.UNSIGNED_BYTE&&(c=a.RGB8),i===a.UNSIGNED_SHORT&&(c=a.RGB16),i===a.UNSIGNED_INT&&(c=a.RGB32UI),i===a.BYTE&&(c=a.RGB8I),i===a.SHORT&&(c=a.RGB16I),i===a.INT&&(c=a.RGB32I),i===a.UNSIGNED_BYTE&&(c=u===Pe?a.SRGB8:a.RGB8),i===a.UNSIGNED_SHORT_5_6_5&&(c=a.RGB565),i===a.UNSIGNED_SHORT_5_5_5_1&&(c=a.RGB5_A1),i===a.UNSIGNED_SHORT_4_4_4_4&&(c=a.RGB4),i===a.UNSIGNED_INT_5_9_9_9_REV&&(c=a.RGB9_E5),i===a.UNSIGNED_INT_10F_11F_11F_REV&&(c=a.R11F_G11F_B10F)}if(n===a.RGB_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RGB8UI),i===a.UNSIGNED_SHORT&&(c=a.RGB16UI),i===a.UNSIGNED_INT&&(c=a.RGB32UI),i===a.BYTE&&(c=a.RGB8I),i===a.SHORT&&(c=a.RGB16I),i===a.INT&&(c=a.RGB32I)),n===a.RGBA){const u=o?Za:Je.getTransfer(s);i===a.FLOAT&&(c=a.RGBA32F),i===a.HALF_FLOAT&&(c=a.RGBA16F),i===a.UNSIGNED_BYTE&&(c=a.RGBA8),i===a.UNSIGNED_SHORT&&(c=a.RGBA16),i===a.UNSIGNED_INT&&(c=a.RGBA32UI),i===a.BYTE&&(c=a.RGBA8I),i===a.SHORT&&(c=a.RGBA16I),i===a.INT&&(c=a.RGBA32I),i===a.UNSIGNED_BYTE&&(c=u===Pe?a.SRGB8_ALPHA8:a.RGBA8),i===a.UNSIGNED_SHORT_4_4_4_4&&(c=a.RGBA4),i===a.UNSIGNED_SHORT_5_5_5_1&&(c=a.RGB5_A1)}return n===a.RGBA_INTEGER&&(i===a.UNSIGNED_BYTE&&(c=a.RGBA8UI),i===a.UNSIGNED_SHORT&&(c=a.RGBA16UI),i===a.UNSIGNED_INT&&(c=a.RGBA32UI),i===a.BYTE&&(c=a.RGBA8I),i===a.SHORT&&(c=a.RGBA16I),i===a.INT&&(c=a.RGBA32I)),n===a.DEPTH_COMPONENT&&(i===a.UNSIGNED_SHORT&&(c=a.DEPTH_COMPONENT16),i===a.UNSIGNED_INT&&(c=a.DEPTH_COMPONENT24),i===a.FLOAT&&(c=a.DEPTH_COMPONENT32F)),n===a.DEPTH_STENCIL&&i===a.UNSIGNED_INT_24_8&&(c=a.DEPTH24_STENCIL8),(c===a.R16F||c===a.R32F||c===a.RG16F||c===a.RG32F||c===a.RGBA16F||c===a.RGBA32F)&&l.get("EXT_color_buffer_float"),c}setTextureParameters(e,n){const{gl:i,extensions:s,backend:o}=this,a=Je.getPrimaries(Je.workingColorSpace),l=n.colorSpace===ri?null:Je.getPrimaries(n.colorSpace),c=n.colorSpace===ri||a===l?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,n.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,n.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,c),i.texParameteri(e,i.TEXTURE_WRAP_S,lh[n.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,lh[n.wrapT]),(e===i.TEXTURE_3D||e===i.TEXTURE_2D_ARRAY)&&(n.isArrayTexture||i.texParameteri(e,i.TEXTURE_WRAP_R,lh[n.wrapR])),i.texParameteri(e,i.TEXTURE_MAG_FILTER,_p[n.magFilter]);const u=n.mipmaps!==void 0&&n.mipmaps.length>0,h=n.minFilter===Tn&&u?si:n.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,_p[h]),n.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,q0[n.compareFunction])),s.has("EXT_texture_filter_anisotropic")===!0){if(n.magFilter===qt||n.minFilter!==Yr&&n.minFilter!==si||n.type===hn&&s.has("OES_texture_float_linear")===!1)return;if(n.anisotropy>1){const d=s.get("EXT_texture_filter_anisotropic");i.texParameterf(e,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(n.anisotropy,o.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:n,backend:i,defaultTextures:s}=this,o=this.getGLTextureType(e);let a=s[o];a===void 0&&(a=n.createTexture(),i.state.bindTexture(o,a),n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST),s[o]=a),i.set(e,{textureGPU:a,glTextureType:o,isDefault:!0})}createTexture(e,n){const{gl:i,backend:s}=this,{levels:o,width:a,height:l,depth:c}=n,u=s.utils.convert(e.format,e.colorSpace),h=s.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,h,e.colorSpace,e.isVideoTexture),f=i.createTexture(),p=this.getGLTextureType(e);s.state.bindTexture(p,f),this.setTextureParameters(p,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,o,d,a,l,c):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,o,d,a,l,c):e.isVideoTexture||i.texStorage2D(p,o,d,a,l),s.set(e,{textureGPU:f,glTextureType:p,glFormat:u,glType:h,glInternalFormat:d})}copyBufferToTexture(e,n){const{gl:i,backend:s}=this,{textureGPU:o,glTextureType:a,glFormat:l,glType:c}=s.get(n),{width:u,height:h}=n.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),s.state.bindTexture(a,o),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(a,0,0,0,u,h,l,c,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),s.state.unbindTexture()}updateTexture(e,n){const{gl:i}=this,{width:s,height:o}=n,{textureGPU:a,glTextureType:l,glFormat:c,glType:u,glInternalFormat:h}=this.backend.get(e);if(!(e.isRenderTargetTexture||a===void 0))if(this.backend.state.bindTexture(l,a),this.setTextureParameters(l,e),e.isCompressedTexture){const d=e.mipmaps,f=n.image;for(let p=0;p<d.length;p++){const m=d[p];e.isCompressedArrayTexture?e.format!==i.RGBA?c!==null?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,u,m.data):c!==null?i.compressedTexSubImage2D(i.TEXTURE_2D,p,0,0,m.width,m.height,c,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=n.images,f=e.mipmaps;for(let p=0;p<6;p++){const m=ch(d[p]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,0,0,s,o,c,u,m);for(let y=0;y<f.length;y++){const _=f[y],g=ch(_.images[p]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,y+1,0,0,g.width,g.height,c,u,g)}}}else if(e.isDataArrayTexture||e.isArrayTexture){const d=n.image;if(e.layerUpdates.size>0){const f=Zp(d.width,d.height,e.format,e.type);for(const p of e.layerUpdates){const m=d.data.subarray(p*f/d.data.BYTES_PER_ELEMENT,(p+1)*f/d.data.BYTES_PER_ELEMENT);i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,p,d.width,d.height,1,c,u,m)}e.clearLayerUpdates()}else i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,c,u,d.data)}else if(e.isData3DTexture){const d=n.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,c,u,d.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(l,0,h,c,u,n.image);else{const d=e.mipmaps;if(d.length>0)for(let f=0,p=d.length;f<p;f++){const m=d[f],y=ch(m);i.texSubImage2D(l,f,0,0,m.width,m.height,c,u,y)}else{const f=ch(n.image);i.texSubImage2D(l,0,0,0,s,o,c,u,f)}}}generateMipmaps(e){const{gl:n,backend:i}=this,{textureGPU:s,glTextureType:o}=i.get(e);i.state.bindTexture(o,s),n.generateMipmap(o)}deallocateRenderBuffers(e){const{gl:n,backend:i}=this;if(e){const s=i.get(e);if(s.renderBufferStorageSetup=void 0,s.framebuffers){for(const o in s.framebuffers)n.deleteFramebuffer(s.framebuffers[o]);delete s.framebuffers}if(s.depthRenderbuffer&&(n.deleteRenderbuffer(s.depthRenderbuffer),delete s.depthRenderbuffer),s.stencilRenderbuffer&&(n.deleteRenderbuffer(s.stencilRenderbuffer),delete s.stencilRenderbuffer),s.msaaFrameBuffer&&(n.deleteFramebuffer(s.msaaFrameBuffer),delete s.msaaFrameBuffer),s.msaaRenderbuffers){for(let o=0;o<s.msaaRenderbuffers.length;o++)n.deleteRenderbuffer(s.msaaRenderbuffers[o]);delete s.msaaRenderbuffers}}}destroyTexture(e){const{gl:n,backend:i}=this,{textureGPU:s,renderTarget:o}=i.get(e);this.deallocateRenderBuffers(o),n.deleteTexture(s),i.delete(e)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){const{gl:l,backend:c}=this,{state:u}=this.backend,{textureGPU:h,glTextureType:d,glType:f,glFormat:p}=c.get(n);u.bindTexture(d,h);let m,y,_,g,v,x,b,T,S;const M=e.isCompressedTexture?e.mipmaps[a]:e.image;if(i!==null)m=i.max.x-i.min.x,y=i.max.y-i.min.y,_=i.isBox3?i.max.z-i.min.z:1,g=i.min.x,v=i.min.y,x=i.isBox3?i.min.z:0;else{const k=Math.pow(2,-o);m=Math.floor(M.width*k),y=Math.floor(M.height*k),e.isDataArrayTexture||e.isArrayTexture?_=M.depth:e.isData3DTexture?_=Math.floor(M.depth*k):_=1,g=0,v=0,x=0}s!==null?(b=s.x,T=s.y,S=s.z):(b=0,T=0,S=0),l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,n.flipY),l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),l.pixelStorei(l.UNPACK_ALIGNMENT,n.unpackAlignment);const A=l.getParameter(l.UNPACK_ROW_LENGTH),E=l.getParameter(l.UNPACK_IMAGE_HEIGHT),w=l.getParameter(l.UNPACK_SKIP_PIXELS),N=l.getParameter(l.UNPACK_SKIP_ROWS),D=l.getParameter(l.UNPACK_SKIP_IMAGES);l.pixelStorei(l.UNPACK_ROW_LENGTH,M.width),l.pixelStorei(l.UNPACK_IMAGE_HEIGHT,M.height),l.pixelStorei(l.UNPACK_SKIP_PIXELS,g),l.pixelStorei(l.UNPACK_SKIP_ROWS,v),l.pixelStorei(l.UNPACK_SKIP_IMAGES,x);const F=n.isDataArrayTexture||n.isData3DTexture||n.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const k=c.get(e),j=c.get(n),$=c.get(k.renderTarget),G=c.get(j.renderTarget),B=$.framebuffers[k.cacheKey],J=G.framebuffers[j.cacheKey];u.bindFramebuffer(l.READ_FRAMEBUFFER,B),u.bindFramebuffer(l.DRAW_FRAMEBUFFER,J);let Y=l.COLOR_BUFFER_BIT;e.isDepthTexture&&(Y=l.DEPTH_BUFFER_BIT),l.blitFramebuffer(g,v,m,y,b,T,m,y,Y,l.NEAREST),u.bindFramebuffer(l.READ_FRAMEBUFFER,null),u.bindFramebuffer(l.DRAW_FRAMEBUFFER,null)}else F?e.isDataTexture||e.isData3DTexture?l.texSubImage3D(d,a,b,T,S,m,y,_,p,f,M.data):n.isCompressedArrayTexture?l.compressedTexSubImage3D(d,a,b,T,S,m,y,_,p,M.data):l.texSubImage3D(d,a,b,T,S,m,y,_,p,f,M):e.isDataTexture?l.texSubImage2D(d,a,b,T,m,y,p,f,M.data):e.isCompressedTexture?l.compressedTexSubImage2D(d,a,b,T,M.width,M.height,p,M.data):l.texSubImage2D(d,a,b,T,m,y,p,f,M);l.pixelStorei(l.UNPACK_ROW_LENGTH,A),l.pixelStorei(l.UNPACK_IMAGE_HEIGHT,E),l.pixelStorei(l.UNPACK_SKIP_PIXELS,w),l.pixelStorei(l.UNPACK_SKIP_ROWS,N),l.pixelStorei(l.UNPACK_SKIP_IMAGES,D),a===0&&n.generateMipmaps&&l.generateMipmap(d),u.unbindTexture()}copyFramebufferToTexture(e,n,i){const{gl:s}=this,{state:o}=this.backend,{textureGPU:a}=this.backend.get(e),{x:l,y:c,z:u,w:h}=i,d=e.isDepthTexture===!0||n.renderTarget&&n.renderTarget.samples>0,f=n.renderTarget?n.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const p=l!==0||c!==0;let m,y;if(e.isDepthTexture===!0?(m=s.DEPTH_BUFFER_BIT,y=s.DEPTH_ATTACHMENT,n.stencil&&(m|=s.STENCIL_BUFFER_BIT)):(m=s.COLOR_BUFFER_BIT,y=s.COLOR_ATTACHMENT0),p){const _=this.backend.get(n.renderTarget),g=_.framebuffers[n.getCacheKey()],v=_.msaaFrameBuffer;o.bindFramebuffer(s.DRAW_FRAMEBUFFER,g),o.bindFramebuffer(s.READ_FRAMEBUFFER,v);const x=f-c-h;s.blitFramebuffer(l,x,l+u,x+h,l,x,l+u,x+h,m,s.NEAREST),o.bindFramebuffer(s.READ_FRAMEBUFFER,g),o.bindTexture(s.TEXTURE_2D,a),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,l,x,u,h),o.unbindTexture()}else{const _=s.createFramebuffer();o.bindFramebuffer(s.DRAW_FRAMEBUFFER,_),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,y,s.TEXTURE_2D,a,0),s.blitFramebuffer(0,0,u,h,0,0,u,h,m,s.NEAREST),s.deleteFramebuffer(_)}}else o.bindTexture(s.TEXTURE_2D,a),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,l,f-h-c,u,h),o.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(n)}setupRenderBufferStorage(e,n,i,s=!1){const{gl:o}=this,a=n.renderTarget,{depthTexture:l,depthBuffer:c,stencilBuffer:u,width:h,height:d}=a;if(o.bindRenderbuffer(o.RENDERBUFFER,e),c&&!u){let f=o.DEPTH_COMPONENT24;s===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(o.RENDERBUFFER,a.samples,f,h,d):i>0?(l&&l.isDepthTexture&&l.type===o.FLOAT&&(f=o.DEPTH_COMPONENT32F),o.renderbufferStorageMultisample(o.RENDERBUFFER,i,f,h,d)):o.renderbufferStorage(o.RENDERBUFFER,f,h,d),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.RENDERBUFFER,e)}else c&&u&&(i>0?o.renderbufferStorageMultisample(o.RENDERBUFFER,i,o.DEPTH24_STENCIL8,h,d):o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_STENCIL,h,d),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,e));o.bindRenderbuffer(o.RENDERBUFFER,null)}async copyTextureToBuffer(e,n,i,s,o,a){const{backend:l,gl:c}=this,{textureGPU:u,glFormat:h,glType:d}=this.backend.get(e),f=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,f);const p=e.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+a:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,p,u,0);const m=this._getTypedArrayType(d),y=this._getBytesPerTexel(d,h),g=s*o*y,v=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,v),c.bufferData(c.PIXEL_PACK_BUFFER,g,c.STREAM_READ),c.readPixels(n,i,s,o,h,d,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await l.utils._clientWaitAsync();const x=new m(g/m.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,v),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,x),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(f),x}_getTypedArrayType(e){const{gl:n}=this;if(e===n.UNSIGNED_BYTE)return Uint8Array;if(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT)return Uint16Array;if(e===n.UNSIGNED_INT)return Uint32Array;if(e===n.HALF_FLOAT)return Uint16Array;if(e===n.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,n){const{gl:i}=this;let s=0;if(e===i.UNSIGNED_BYTE&&(s=1),(e===i.UNSIGNED_SHORT_4_4_4_4||e===i.UNSIGNED_SHORT_5_5_5_1||e===i.UNSIGNED_SHORT_5_6_5||e===i.UNSIGNED_SHORT||e===i.HALF_FLOAT)&&(s=2),(e===i.UNSIGNED_INT||e===i.FLOAT)&&(s=4),n===i.RGBA)return s*4;if(n===i.RGB)return s*3;if(n===i.ALPHA)return s}}function ch(r){return r.isDataTexture?r.image.data:typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas?r:r.data}class cV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let n=this.extensions[e];return n===void 0&&(n=this.gl.getExtension(e),this.extensions[e]=n),n}has(e){return this.availableExtensions.includes(e)}}class uV{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,n=this.backend.extensions;if(n.has("EXT_texture_filter_anisotropic")===!0){const i=n.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const X0={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class hV{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,n){const{gl:i,mode:s,object:o,type:a,info:l,index:c}=this;c!==0?i.drawElements(s,n,a,e):i.drawArrays(s,e,n),l.update(o,n,1)}renderInstances(e,n,i){const{gl:s,mode:o,type:a,index:l,object:c,info:u}=this;i!==0&&(l!==0?s.drawElementsInstanced(o,n,a,e,i):s.drawArraysInstanced(o,e,n,i),u.update(c,n,i))}renderMultiDraw(e,n,i){const{extensions:s,mode:o,object:a,info:l}=this;if(i===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let u=0;u<i;u++)this.render(e[u],n[u]);else{this.index!==0?c.multiDrawElementsWEBGL(o,n,0,this.type,e,0,i):c.multiDrawArraysWEBGL(o,e,0,n,0,i);let u=0;for(let h=0;h<i;h++)u+=n[h];l.update(a,u,1)}}renderMultiDrawInstances(e,n,i,s){const{extensions:o,mode:a,object:l,info:c}=this;if(i===0)return;const u=o.get("WEBGL_multi_draw");if(u===null)for(let h=0;h<i;h++)this.renderInstances(e[h],n[h],s[h]);else{this.index!==0?u.multiDrawElementsInstancedWEBGL(a,n,0,this.type,e,0,s,0,i):u.multiDrawArraysInstancedWEBGL(a,e,0,n,0,s,0,i);let h=0;for(let d=0;d<i;d++)h+=n[d]*s[d];c.update(l,h,1)}}}class iM{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class dV extends iM{constructor(e,n,i=2048){if(super(i),this.gl=e,this.type=n,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let s=0;s<this.maxQueries;s++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Ri(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const n=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(n,"inactive"),this.queryOffsets.set(e,n),n}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const n=this.queryOffsets.get(e);if(n==null||this.activeQuery!==null)return;const i=this.queries[n];if(i)try{this.queryStates.get(n)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,i),this.activeQuery=n,this.queryStates.set(n,"started"))}catch(s){console.error("Error in beginQuery:",s),this.activeQuery=null,this.queryStates.set(n,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const n=this.queryOffsets.get(e);if(n!=null&&this.activeQuery===n)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(n,"ended"),this.activeQuery=null}catch(i){console.error("Error in endQuery:",i),this.queryStates.set(n,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[s,o]of this.queryStates)if(o==="ended"){const a=this.queries[s];e.push(this.resolveQuery(a))}if(e.length===0)return this.lastValue;const i=(await Promise.all(e)).reduce((s,o)=>s+o,0);return this.lastValue=i,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,i}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(n=>{if(this.isDisposed){n(this.lastValue);return}let i,s=!1;const o=()=>{i&&(clearTimeout(i),i=null)},a=c=>{s||(s=!0,o(),n(c))},l=()=>{if(this.isDisposed){a(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){a(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){i=setTimeout(l,1);return}const h=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);n(Number(h)/1e6)}catch(c){console.error("Error checking query:",c),n(this.lastValue)}};l()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Y0 extends nM{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const n=this.parameters,i={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},s=n.context!==void 0?n.context:e.domElement.getContext("webgl2",i);function o(a){a.preventDefault();const l={api:"WebGL",message:a.statusMessage||"Unknown reason",reason:null,originalEvent:a};e.onDeviceLost(l)}this._onContextLost=o,e.domElement.addEventListener("webglcontextlost",o,!1),this.gl=s,this.extensions=new cV(this),this.capabilities=new uV(this),this.attributeUtils=new sV(this),this.textureUtils=new lV(this),this.bufferRenderer=new hV(this),this.state=new oV(this),this.utils=new aV(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Jn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,n,i=null){const s=this.gl;if(this.set(e.texture,{textureGPU:n,glInternalFormat:s.RGBA8}),i!==null){const o=e.stencilBuffer?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:i,glInternalFormat:o}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e,n){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new dV(this.gl,e,2048));const i=this.timestampQueryPool[e];i.allocateQueriesForContext(n)!==null&&i.beginQuery(n)}prepareTimestampBuffer(e,n){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e].endQuery(n)}getContext(){return this.gl}beginRender(e){const{state:n}=this,i=this.get(e);if(i.frameCalls=this.renderer.info.render.frameCalls,e.viewport)this.updateViewport(e);else{const{width:o,height:a}=this.getDrawingBufferSize();n.viewport(0,0,o,a)}if(e.scissor){const{x:o,y:a,width:l,height:c}=e.scissorValue;n.scissor(o,e.height-c-a,l,c)}this.initTimestampQuery(aa.RENDER,this.getTimestampUID(e)),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const s=e.occlusionQueryCount;s>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(s),i.occlusionQueryObjects=new Array(s),i.occlusionQueryIndex=0)}finishRender(e){const{gl:n,state:i}=this,s=this.get(e),o=s.previousContext;i.resetVertexState();const a=e.occlusionQueryCount;a>0&&(a>s.occlusionQueryIndex&&n.endQuery(n.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const l=e.textures;if(l!==null)for(let c=0;c<l.length;c++){const u=l[c];u.generateMipmaps&&this.generateMipmaps(u)}if(this._currentContext=o,this._resolveRenderTarget(e),o!==null)if(this._setFramebuffer(o),o.viewport)this.updateViewport(o);else{const{width:c,height:u}=this.getDrawingBufferSize();i.viewport(0,0,c,u)}this.prepareTimestampBuffer(aa.RENDER,this.getTimestampUID(e))}resolveOccludedAsync(e){const n=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:s}=n;if(i&&s){const o=new WeakSet,{gl:a}=this;n.currentOcclusionQueryObjects=null,n.currentOcclusionQueries=null;const l=()=>{let c=0;for(let u=0;u<i.length;u++){const h=i[u];h!==null&&a.getQueryParameter(h,a.QUERY_RESULT_AVAILABLE)&&(a.getQueryParameter(h,a.QUERY_RESULT)===0&&o.add(s[u]),i[u]=null,a.deleteQuery(h),c++)}c<i.length?requestAnimationFrame(l):n.occluded=o};l()}}isOccluded(e,n){const i=this.get(e);return i.occluded&&i.occluded.has(n)}updateViewport(e){const{state:n}=this,{x:i,y:s,width:o,height:a}=e.viewportValue;n.viewport(i,e.height-a-s,o,a)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,n,i,s=null,o=!0,a=!0){const{gl:l,renderer:c}=this;s===null&&(s={textures:null,clearColorValue:this.getClearColor()});let u=0;if(e&&(u|=l.COLOR_BUFFER_BIT),n&&(u|=l.DEPTH_BUFFER_BIT),i&&(u|=l.STENCIL_BUFFER_BIT),u!==0){let h;s.clearColorValue?h=s.clearColorValue:h=this.getClearColor();const d=c.getClearDepth(),f=c.getClearStencil();if(n&&this.state.setDepthMask(!0),s.textures===null)l.clearColor(h.r,h.g,h.b,h.a),l.clear(u);else{if(o&&this._setFramebuffer(s),e)for(let p=0;p<s.textures.length;p++)p===0?l.clearBufferfv(l.COLOR,p,[h.r,h.g,h.b,h.a]):l.clearBufferfv(l.COLOR,p,[0,0,0,1]);n&&i?l.clearBufferfi(l.DEPTH_STENCIL,0,d,f):n?l.clearBufferfv(l.DEPTH,0,[d]):i&&l.clearBufferiv(l.STENCIL,0,[f]),o&&a&&this._resolveRenderTarget(s)}}}beginCompute(e){const{state:n,gl:i}=this,s=this.get(e);s.frameCalls=this.renderer.info.compute.frameCalls,n.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(aa.COMPUTE,this.getTimestampUID(e))}compute(e,n,i,s,o=null){const{state:a,gl:l}=this;this.discard===!1&&(l.enable(l.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:c,transformBuffers:u,attributes:h}=this.get(s),d=this._getVaoKey(h),f=this.vaoCache[d];f===void 0?this.vaoCache[d]=this._createVao(h):a.setVertexState(f),a.useProgram(c),this._bindUniforms(i);const p=this._getTransformFeedback(u);l.bindTransformFeedback(l.TRANSFORM_FEEDBACK,p),l.beginTransformFeedback(l.POINTS),o=o!==null?o:n.count,Array.isArray(o)&&(Ri("WebGLBackend.compute(): The count parameter must be a single number, not an array."),o=o[0]),h[0].isStorageInstancedBufferAttribute?l.drawArraysInstanced(l.POINTS,0,1,o):l.drawArrays(l.POINTS,0,o),l.endTransformFeedback(),l.bindTransformFeedback(l.TRANSFORM_FEEDBACK,null);for(let m=0;m<u.length;m++){const y=u[m];y.pbo&&this.has(y.pbo)&&this.textureUtils.copyBufferToTexture(y.transformBuffer,y.pbo),y.switchBuffers()}}finishCompute(e){const n=this.gl;this.discard=!1,n.disable(n.RASTERIZER_DISCARD),this.prepareTimestampBuffer(aa.COMPUTE,this.getTimestampUID(e)),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:n,pipeline:i,material:s,context:o,hardwareClippingPlanes:a}=e,{programGPU:l}=this.get(i),{gl:c,state:u}=this,h=this.get(o),d=e.getDrawParameters();if(d===null)return;this._bindUniforms(e.getBindings());const f=n.isMesh&&n.matrixWorld.determinant()<0;u.setMaterial(s,f,a),u.useProgram(l);const p=e.getAttributes(),m=this.get(p);let y=m.vaoGPU;if(y===void 0){const A=this._getVaoKey(p);y=this.vaoCache[A],y===void 0&&(y=this._createVao(p),this.vaoCache[A]=y,m.vaoGPU=y)}const _=e.getIndex(),g=_!==null?this.get(_).bufferGPU:null;u.setVertexState(y,g);const v=h.lastOcclusionObject;if(v!==n&&v!==void 0){if(v!==null&&v.occlusionTest===!0&&(c.endQuery(c.ANY_SAMPLES_PASSED),h.occlusionQueryIndex++),n.occlusionTest===!0){const A=c.createQuery();c.beginQuery(c.ANY_SAMPLES_PASSED,A),h.occlusionQueries[h.occlusionQueryIndex]=A,h.occlusionQueryObjects[h.occlusionQueryIndex]=n}h.lastOcclusionObject=n}const x=this.bufferRenderer;n.isPoints?x.mode=c.POINTS:n.isLineSegments?x.mode=c.LINES:n.isLine?x.mode=c.LINE_STRIP:n.isLineLoop?x.mode=c.LINE_LOOP:s.wireframe===!0?(u.setLineWidth(s.wireframeLinewidth*this.renderer.getPixelRatio()),x.mode=c.LINES):x.mode=c.TRIANGLES;const{vertexCount:b,instanceCount:T}=d;let{firstVertex:S}=d;if(x.object=n,_!==null){S*=_.array.BYTES_PER_ELEMENT;const A=this.get(_);x.index=_.count,x.type=A.type}else x.index=0;const M=()=>{n.isBatchedMesh?n._multiDrawInstances!==null?(Ri("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),x.renderMultiDrawInstances(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount,n._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?x.renderMultiDraw(n._multiDrawStarts,n._multiDrawCounts,n._multiDrawCount):Ri("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):T>1?x.renderInstances(S,b,T):x.render(S,b)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const A=this.get(e.camera),E=e.camera.cameras,w=e.getBindingGroup("cameraIndex").bindings[0];if(A.indexesGPU===void 0||A.indexesGPU.length!==E.length){const $=new Uint32Array([0,0,0,0]),G=[];for(let B=0,J=E.length;B<J;B++){const Y=c.createBuffer();$[0]=B,c.bindBuffer(c.UNIFORM_BUFFER,Y),c.bufferData(c.UNIFORM_BUFFER,$,c.STATIC_DRAW),G.push(Y)}A.indexesGPU=G}const N=this.get(w),D=this.renderer.getPixelRatio(),F=this._currentContext.renderTarget,k=this._isRenderCameraDepthArray(this._currentContext),j=this._currentContext.activeCubeFace;if(k){const $=this.get(F.depthTexture);if($.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){$.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:G}=F;for(let B=0,J=E.length;B<J;B++)this.renderer._activeCubeFace=B,this._currentContext.activeCubeFace=B,this._setFramebuffer(this._currentContext),this.clear(!1,!0,G,this._currentContext,!1,!1);this.renderer._activeCubeFace=j,this._currentContext.activeCubeFace=j}}for(let $=0,G=E.length;$<G;$++){const B=E[$];if(n.layers.test(B.layers)){k&&(this.renderer._activeCubeFace=$,this._currentContext.activeCubeFace=$,this._setFramebuffer(this._currentContext));const J=B.viewport;if(J!==void 0){const Y=J.x*D,re=J.y*D,me=J.width*D,Re=J.height*D;u.viewport(Math.floor(Y),Math.floor(e.context.height-Re-re),Math.floor(me),Math.floor(Re))}u.bindBufferBase(c.UNIFORM_BUFFER,N.index,A.indexesGPU[$]),M()}this._currentContext.activeCubeFace=j,this.renderer._activeCubeFace=j}}else M()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,n){this.textureUtils.createTexture(e,n)}updateTexture(e,n){this.textureUtils.updateTexture(e,n)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,n,i,s,o,a){return this.textureUtils.copyTextureToBuffer(e,n,i,s,o,a)}createSampler(){}destroySampler(){}createNodeBuilder(e,n){return new nV(e,n)}createProgram(e){const n=this.gl,{stage:i,code:s}=e,o=i==="fragment"?n.createShader(n.FRAGMENT_SHADER):n.createShader(n.VERTEX_SHADER);n.shaderSource(o,s),n.compileShader(o),this.set(e,{shaderGPU:o})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,n){const i=this.gl,s=e.pipeline,{fragmentProgram:o,vertexProgram:a}=s,l=i.createProgram(),c=this.get(o).shaderGPU,u=this.get(a).shaderGPU;if(i.attachShader(l,c),i.attachShader(l,u),i.linkProgram(l),this.set(s,{programGPU:l,fragmentShader:c,vertexShader:u}),n!==null&&this.parallel){const h=new Promise(d=>{const f=this.parallel,p=()=>{i.getProgramParameter(l,f.COMPLETION_STATUS_KHR)?(this._completeCompile(e,s),d()):requestAnimationFrame(p)};p()});n.push(h);return}this._completeCompile(e,s)}_handleSource(e,n){const i=e.split(`
`),s=[],o=Math.max(n-6,0),a=Math.min(n+6,i.length);for(let l=o;l<a;l++){const c=l+1;s.push(`${c===n?">":" "} ${c}: ${i[l]}`)}return s.join(`
`)}_getShaderErrors(e,n,i){const s=e.getShaderParameter(n,e.COMPILE_STATUS),a=(e.getShaderInfoLog(n)||"").trim();if(s&&a==="")return"";const l=/ERROR: 0:(\d+)/.exec(a);if(l){const c=parseInt(l[1]);return i.toUpperCase()+`

`+a+`

`+this._handleSource(e.getShaderSource(n),c)}else return a}_logProgramError(e,n,i){if(this.renderer.debug.checkShaderErrors){const s=this.gl,a=(s.getProgramInfoLog(e)||"").trim();if(s.getProgramParameter(e,s.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(s,e,i,n);else{const l=this._getShaderErrors(s,i,"vertex"),c=this._getShaderErrors(s,n,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(e,s.VALIDATE_STATUS)+`

Program Info Log: `+a+`
`+l+`
`+c)}else a!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",a)}}_completeCompile(e,n){const{state:i,gl:s}=this,o=this.get(n),{programGPU:a,fragmentShader:l,vertexShader:c}=o;s.getProgramParameter(a,s.LINK_STATUS)===!1&&this._logProgramError(a,l,c),i.useProgram(a);const u=e.getBindings();this._setupBindings(u,a),this.set(n,{programGPU:a})}createComputePipeline(e,n){const{state:i,gl:s}=this,o={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(o);const{computeProgram:a}=e,l=s.createProgram(),c=this.get(o).shaderGPU,u=this.get(a).shaderGPU,h=a.transforms,d=[],f=[];for(let _=0;_<h.length;_++){const g=h[_];d.push(g.varyingName),f.push(g.attributeNode)}s.attachShader(l,c),s.attachShader(l,u),s.transformFeedbackVaryings(l,d,s.SEPARATE_ATTRIBS),s.linkProgram(l),s.getProgramParameter(l,s.LINK_STATUS)===!1&&this._logProgramError(l,c,u),i.useProgram(l),this._setupBindings(n,l);const p=a.attributes,m=[],y=[];for(let _=0;_<p.length;_++){const g=p[_].node.attribute;m.push(g),this.has(g)||this.attributeUtils.createAttribute(g,s.ARRAY_BUFFER)}for(let _=0;_<f.length;_++){const g=f[_].attribute;this.has(g)||this.attributeUtils.createAttribute(g,s.ARRAY_BUFFER);const v=this.get(g);y.push(v)}this.set(e,{programGPU:l,transformBuffers:y,attributes:m})}createBindings(e,n){if(this._knownBindings.has(n)===!1){this._knownBindings.add(n);let i=0,s=0;for(const o of n){this.set(o,{textures:s,uniformBuffers:i});for(const a of o.bindings)a.isUniformBuffer&&i++,a.isSampledTexture&&s++}}this.updateBindings(e,n)}updateBindings(e){const{gl:n}=this,i=this.get(e);let s=i.uniformBuffers,o=i.textures;for(const a of e.bindings){const l=this.get(a);if(a.isUniformsGroup||a.isUniformBuffer){const c=a.buffer;let{bufferGPU:u}=this.get(c);u===void 0?(u=n.createBuffer(),n.bindBuffer(n.UNIFORM_BUFFER,u),n.bufferData(n.UNIFORM_BUFFER,c,n.DYNAMIC_DRAW),this.set(c,{bufferGPU:u})):(n.bindBuffer(n.UNIFORM_BUFFER,u),n.bufferSubData(n.UNIFORM_BUFFER,0,c)),l.index=s++,l.bufferGPU=u,this.set(a,l)}else if(a.isSampledTexture){const{textureGPU:c,glTextureType:u}=this.get(a.texture);l.index=o++,l.textureGPU=c,l.glTextureType=u,this.set(a,l)}}}updateBinding(e){const n=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,o=e.buffer;n.bindBuffer(n.UNIFORM_BUFFER,s),n.bufferData(n.UNIFORM_BUFFER,o,n.DYNAMIC_DRAW)}}createIndexAttribute(e){const n=this.gl;this.attributeUtils.createAttribute(e,n.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const n=this.gl;this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const n=this.gl;this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const n=Object.keys(X0).filter(s=>X0[s]===e),i=this.extensions;for(let s=0;s<n.length;s++)if(i.has(n[s]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){this.textureUtils.copyTextureToTexture(e,n,i,s,o,a)}copyFramebufferToTexture(e,n,i){this.textureUtils.copyFramebufferToTexture(e,n,i)}_setFramebuffer(e){const{gl:n,state:i}=this;let s=null;if(e.textures!==null){const o=e.renderTarget,a=this.get(o),{samples:l,depthBuffer:c,stencilBuffer:u}=o,h=o.isWebGLCubeRenderTarget===!0,d=o.isRenderTarget3D===!0,f=o.depth>1,p=o.isXRRenderTarget===!0,m=p===!0&&o._hasExternalTextures===!0;let y=a.msaaFrameBuffer,_=a.depthRenderbuffer;const g=this.extensions.get("WEBGL_multisampled_render_to_texture"),v=this.extensions.get("OVR_multiview2"),x=this._useMultisampledExtension(o),b=FS(e);let T;if(h?(a.cubeFramebuffers||(a.cubeFramebuffers={}),T=a.cubeFramebuffers[b]):p&&m===!1?T=this._xrFramebuffer:(a.framebuffers||(a.framebuffers={}),T=a.framebuffers[b]),T===void 0){T=n.createFramebuffer(),i.bindFramebuffer(n.FRAMEBUFFER,T);const S=e.textures,M=[];if(h){a.cubeFramebuffers[b]=T;const{textureGPU:E}=this.get(S[0]),w=this.renderer._activeCubeFace,N=this.renderer._activeMipmapLevel;n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+w,E,N)}else{a.framebuffers[b]=T;for(let E=0;E<S.length;E++){const w=S[E],N=this.get(w);N.renderTarget=e.renderTarget,N.cacheKey=b;const D=n.COLOR_ATTACHMENT0+E;if(o.multiview)v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,D,N.textureGPU,0,l,0,2);else if(d||f){const F=this.renderer._activeCubeFace,k=this.renderer._activeMipmapLevel;n.framebufferTextureLayer(n.FRAMEBUFFER,D,N.textureGPU,k,F)}else if(x)g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,D,n.TEXTURE_2D,N.textureGPU,0,l);else{const F=this.renderer._activeMipmapLevel;n.framebufferTexture2D(n.FRAMEBUFFER,D,n.TEXTURE_2D,N.textureGPU,F)}}}const A=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;if(o._autoAllocateDepthBuffer===!0){const E=n.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(E,e,0,x),a.xrDepthRenderbuffer=E,M.push(u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT),n.bindRenderbuffer(n.RENDERBUFFER,E),n.framebufferRenderbuffer(n.FRAMEBUFFER,A,n.RENDERBUFFER,E)}else if(e.depthTexture!==null){M.push(u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT);const E=this.get(e.depthTexture);if(E.renderTarget=e.renderTarget,E.cacheKey=b,o.multiview)v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,A,E.textureGPU,0,l,0,2);else if(m&&x)g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0,l);else if(e.depthTexture.isArrayTexture){const w=this.renderer._activeCubeFace;n.framebufferTextureLayer(n.FRAMEBUFFER,A,E.textureGPU,0,w)}else n.framebufferTexture2D(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0)}a.depthInvalidationArray=M}else{if(this._isRenderCameraDepthArray(e)){i.bindFramebuffer(n.FRAMEBUFFER,T);const M=this.renderer._activeCubeFace,A=this.get(e.depthTexture),E=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.framebufferTextureLayer(n.FRAMEBUFFER,E,A.textureGPU,0,M)}if((p||x||o.multiview)&&o._isOpaqueFramebuffer!==!0){i.bindFramebuffer(n.FRAMEBUFFER,T);const M=this.get(e.textures[0]);o.multiview?v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,M.textureGPU,0,l,0,2):x?g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,M.textureGPU,0,l):n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,M.textureGPU,0);const A=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;if(o._autoAllocateDepthBuffer===!0){const E=a.xrDepthRenderbuffer;n.bindRenderbuffer(n.RENDERBUFFER,E),n.framebufferRenderbuffer(n.FRAMEBUFFER,A,n.RENDERBUFFER,E)}else{const E=this.get(e.depthTexture);o.multiview?v.framebufferTextureMultisampleMultiviewOVR(n.FRAMEBUFFER,A,E.textureGPU,0,l,0,2):x?g.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0,l):n.framebufferTexture2D(n.FRAMEBUFFER,A,n.TEXTURE_2D,E.textureGPU,0)}}}if(l>0&&x===!1&&!o.multiview){if(y===void 0){const S=[];y=n.createFramebuffer(),i.bindFramebuffer(n.FRAMEBUFFER,y);const M=[],A=e.textures;for(let E=0;E<A.length;E++){M[E]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,M[E]),S.push(n.COLOR_ATTACHMENT0+E);const w=e.textures[E],N=this.get(w);n.renderbufferStorageMultisample(n.RENDERBUFFER,l,N.glInternalFormat,e.width,e.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+E,n.RENDERBUFFER,M[E])}if(n.bindRenderbuffer(n.RENDERBUFFER,null),a.msaaFrameBuffer=y,a.msaaRenderbuffers=M,c&&_===void 0){_=n.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(_,e,l),a.depthRenderbuffer=_;const E=u?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;S.push(E)}a.invalidationArray=S}s=a.msaaFrameBuffer}else s=T;i.drawBuffers(e,T)}i.bindFramebuffer(n.FRAMEBUFFER,s)}_getVaoKey(e){let n="";for(let i=0;i<e.length;i++){const s=this.get(e[i]);n+=":"+s.id}return n}_createVao(e){const{gl:n}=this,i=n.createVertexArray();n.bindVertexArray(i);for(let s=0;s<e.length;s++){const o=e[s],a=this.get(o);n.bindBuffer(n.ARRAY_BUFFER,a.bufferGPU),n.enableVertexAttribArray(s);let l,c;o.isInterleavedBufferAttribute===!0?(l=o.data.stride*a.bytesPerElement,c=o.offset*a.bytesPerElement):(l=0,c=0),a.isInteger?n.vertexAttribIPointer(s,o.itemSize,a.type,l,c):n.vertexAttribPointer(s,o.itemSize,a.type,o.normalized,l,c),o.isInstancedBufferAttribute&&!o.isInterleavedBufferAttribute?n.vertexAttribDivisor(s,o.meshPerAttribute):o.isInterleavedBufferAttribute&&o.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(s,o.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),i}_getTransformFeedback(e){let n="";for(let o=0;o<e.length;o++)n+=":"+e[o].id;let i=this.transformFeedbackCache[n];if(i!==void 0)return i;const{gl:s}=this;i=s.createTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,i);for(let o=0;o<e.length;o++){const a=e[o];s.bindBufferBase(s.TRANSFORM_FEEDBACK_BUFFER,o,a.transformBuffer)}return s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[n]=i,i}_setupBindings(e,n){const i=this.gl;for(const s of e)for(const o of s.bindings){const l=this.get(o).index;if(o.isUniformsGroup||o.isUniformBuffer){const c=i.getUniformBlockIndex(n,o.name);i.uniformBlockBinding(n,c,l)}else if(o.isSampledTexture){const c=i.getUniformLocation(n,o.name);i.uniform1i(c,l)}}}_bindUniforms(e){const{gl:n,state:i}=this;for(const s of e)for(const o of s.bindings){const a=this.get(o),l=a.index;o.isUniformsGroup||o.isUniformBuffer?i.bindBufferBase(n.UNIFORM_BUFFER,l,a.bufferGPU):o.isSampledTexture&&i.bindTexture(a.glTextureType,a.textureGPU,n.TEXTURE0+l)}}_resolveRenderTarget(e){const{gl:n,state:i}=this,s=e.renderTarget;if(e.textures!==null&&s){const o=this.get(s);if(s.samples>0&&this._useMultisampledExtension(s)===!1){const a=o.framebuffers[e.getCacheKey()];let l=n.COLOR_BUFFER_BIT;s.resolveDepthBuffer&&(s.depthBuffer&&(l|=n.DEPTH_BUFFER_BIT),s.stencilBuffer&&s.resolveStencilBuffer&&(l|=n.STENCIL_BUFFER_BIT));const c=o.msaaFrameBuffer,u=o.msaaRenderbuffers,h=e.textures,d=h.length>1;if(i.bindFramebuffer(n.READ_FRAMEBUFFER,c),i.bindFramebuffer(n.DRAW_FRAMEBUFFER,a),d)for(let f=0;f<h.length;f++)n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.RENDERBUFFER,null),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.TEXTURE_2D,null,0);for(let f=0;f<h.length;f++){if(d){const{textureGPU:p}=this.get(h[f]);n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,u[f]),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,p,0)}if(e.scissor){const{x:p,y:m,width:y,height:_}=e.scissorValue,g=e.height-_-m;n.blitFramebuffer(p,g,p+y,g+_,p,g,p+y,g+_,l,n.NEAREST)}else n.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,l,n.NEAREST)}if(d)for(let f=0;f<h.length;f++){const{textureGPU:p}=this.get(h[f]);n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.RENDERBUFFER,u[f]),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+f,n.TEXTURE_2D,p,0)}this._supportsInvalidateFramebuffer===!0&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,o.invalidationArray)}else if(s.resolveDepthBuffer===!1&&o.framebuffers){const a=o.framebuffers[e.getCacheKey()];i.bindFramebuffer(n.DRAW_FRAMEBUFFER,a),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,o.depthInvalidationArray)}}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const fa={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Nn={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Kn={Store:"store"},Nt={Load:"load",Clear:"clear"},K0={CCW:"ccw",CW:"cw"},Z0={None:"none",Back:"back"},rl={Uint16:"uint16",Uint32:"uint32"},O={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rg11b10ufloat",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-unorm-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},yp={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},uo={Linear:"linear",Nearest:"nearest"},Tt={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Ks={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},Q0={None:0,All:15},_s={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},vp={Storage:"storage",ReadOnlyStorage:"read-only-storage"},xp={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},J0={NonFiltering:"non-filtering",Comparison:"comparison"},Zs={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},ex={TwoD:"2d",ThreeD:"3d"},_n={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},fV={All:"all"},uh={Vertex:"vertex",Instance:"instance"},bm={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class pV extends eM{constructor(e,n,i){super(e,n?n.value:null),this.textureNode=n,this.groupNode=i}update(){this.texture=this.textureNode.value}}class mV extends KS{constructor(e,n){super(e,n?n.array:null),this.attribute=n,this.isStorageBuffer=!0}}let gV=0;class _V extends mV{constructor(e,n){super("StorageBuffer_"+gV++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:_r.READ_WRITE,this.groupNode=n}get buffer(){return this.nodeUniform.value}}class yV extends Us{constructor(e){super(),this.device=e;const n=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:uo.Linear}),this.flipYSampler=e.createSampler({minFilter:uo.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:n}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:i}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:s})}getTransferPipeline(e){let n=this.transferPipelines[e];return n===void 0&&(n=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:fa.TriangleStrip,stripIndexFormat:rl.Uint32},layout:"auto"}),this.transferPipelines[e]=n),n}getFlipYPipeline(e){let n=this.flipYPipelines[e];return n===void 0&&(n=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:fa.TriangleStrip,stripIndexFormat:rl.Uint32},layout:"auto"}),this.flipYPipelines[e]=n),n}flipY(e,n,i=0){const s=n.format,{width:o,height:a}=n.size,l=this.getTransferPipeline(s),c=this.getFlipYPipeline(s),u=this.device.createTexture({size:{width:o,height:a,depthOrArrayLayers:1},format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:_n.TwoD,baseArrayLayer:i}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:_n.TwoD,baseArrayLayer:0}),f=this.device.createCommandEncoder({}),p=(m,y,_)=>{const g=m.getBindGroupLayout(0),v=this.device.createBindGroup({layout:g,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:y}]}),x=f.beginRenderPass({colorAttachments:[{view:_,loadOp:Nt.Clear,storeOp:Kn.Store,clearValue:[0,0,0,0]}]});x.setPipeline(m),x.setBindGroup(0,v),x.draw(4,1,0,0),x.end()};p(l,h,d),p(c,d,h),this.device.queue.submit([f.finish()]),u.destroy()}generateMipmaps(e,n,i=0){const s=this.get(e);s.useCount===void 0&&(s.useCount=0,s.layers=[]);const o=s.layers[i]||this._mipmapCreateBundles(e,n,i),a=this.device.createCommandEncoder({});this._mipmapRunBundles(a,o),this.device.queue.submit([a.finish()]),s.useCount!==0&&(s.layers[i]=o),s.useCount++}_mipmapCreateBundles(e,n,i){const s=this.getTransferPipeline(n.format),o=s.getBindGroupLayout(0);let a=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:_n.TwoD,baseArrayLayer:i});const l=[];for(let c=1;c<n.mipLevelCount;c++){const u=this.device.createBindGroup({layout:o,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:a}]}),h=e.createView({baseMipLevel:c,mipLevelCount:1,dimension:_n.TwoD,baseArrayLayer:i}),d={colorAttachments:[{view:h,loadOp:Nt.Clear,storeOp:Kn.Store,clearValue:[0,0,0,0]}]},f=this.device.createRenderBundleEncoder({colorFormats:[n.format]});f.setPipeline(s),f.setBindGroup(0,u),f.draw(4,1,0,0),l.push({renderBundles:[f.finish()],passDescriptor:d}),a=h}return l}_mipmapRunBundles(e,n){const i=n.length;for(let s=0;s<i;s++){const o=n[s],a=e.beginRenderPass(o.passDescriptor);a.executeBundles(o.renderBundles),a.end()}}}const vV={[tg]:"never",[ld]:"less",[ng]:"equal",[cd]:"less-equal",[ig]:"greater",[sg]:"greater-equal",[og]:"always",[rg]:"not-equal"},xV=[0,1,3,2,4,5];class bV{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new zi,this.depthTexture.name="depthBuffer"}createSampler(e){const n=this.backend,i=n.device,s=n.get(e),o={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};o.magFilter===uo.Linear&&o.minFilter===uo.Linear&&o.mipmapFilter===uo.Linear&&(o.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(o.compare=vV[e.compareFunction]),s.sampler=i.createSampler(o)}createDefaultTexture(e){let n;const i=Tm(e);e.isCubeTexture?n=this._getDefaultCubeTextureGPU(i):n=this._getDefaultTextureGPU(i),this.backend.get(e).texture=n}createTexture(e,n={}){const i=this.backend,s=i.get(e);if(s.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");if(e.isExternalTexture){s.texture=e.sourceTexture,s.initialized=!0;return}n.needsMipmaps===void 0&&(n.needsMipmaps=!1),n.levels===void 0&&(n.levels=1),n.depth===void 0&&(n.depth=1);const{width:o,height:a,depth:l,levels:c}=n;e.isFramebufferTexture&&(n.renderTarget?n.format=this.backend.utils.getCurrentColorFormat(n.renderTarget):n.format=this.backend.utils.getPreferredCanvasFormat());const u=this._getDimension(e),h=e.internalFormat||n.format||Tm(e,i.device);s.format=h;const{samples:d,primarySamples:f,isMSAA:p}=i.utils.getTextureSampleData(e);let m=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(m|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&h!==O.RGB9E5UFloat&&(m|=GPUTextureUsage.RENDER_ATTACHMENT);const y={label:e.name,size:{width:o,height:a,depthOrArrayLayers:l},mipLevelCount:c,sampleCount:f,dimension:u,format:h,usage:m};if(h===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(y.textureBindingViewDimension=_n.Cube),s.texture=i.device.createTexture(y),p){const _=Object.assign({},y);_.label=_.label+"-msaa",_.sampleCount=d,_.mipLevelCount=1,s.msaaTexture=i.device.createTexture(_)}s.initialized=!0,s.textureDescriptorGPU=y}destroyTexture(e){const n=this.backend,i=n.get(e);i.texture!==void 0&&i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),n.delete(e)}destroySampler(e){const i=this.backend.get(e);delete i.sampler}generateMipmaps(e){const n=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let s=0;s<i;s++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,s)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:n,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:n,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,n=!1){const i=this.backend,{width:s,height:o}=i.getDrawingBufferSize(),a=this.depthTexture,l=i.get(a).texture;let c,u;if(n?(c=Ai,u=Ei):e&&(c=wi,u=Wt),l!==void 0){if(a.image.width===s&&a.image.height===o&&a.format===c&&a.type===u)return l;this.destroyTexture(a)}return a.name="depthBuffer",a.format=c,a.type=u,a.image.width=s,a.image.height=o,this.createTexture(a,{width:s,height:o}),i.get(a).texture}updateTexture(e,n){const i=this.backend.get(e),s=e.mipmaps,{textureDescriptorGPU:o}=i;if(!(e.isRenderTargetTexture||o===void 0)){if(e.isDataTexture)if(s.length>0)for(let a=0,l=s.length;a<l;a++){const c=s[a];this._copyBufferToTexture(c,i.texture,o,0,e.flipY,0,a)}else this._copyBufferToTexture(n.image,i.texture,o,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let a=0;a<n.image.depth;a++)this._copyBufferToTexture(n.image,i.texture,o,a,e.flipY,a);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,i.texture,o);else if(e.isCubeTexture)this._copyCubeMapToTexture(e,i.texture,o);else if(s.length>0)for(let a=0,l=s.length;a<l;a++){const c=s[a];this._copyImageToTexture(c,i.texture,o,0,e.flipY,e.premultiplyAlpha,a)}else this._copyImageToTexture(n.image,i.texture,o,0,e.flipY,e.premultiplyAlpha);i.version=e.version}}async copyTextureToBuffer(e,n,i,s,o,a){const l=this.backend.device,c=this.backend.get(e),u=c.texture,h=c.textureDescriptorGPU.format,d=this._getBytesPerTexel(h);let f=s*d;f=Math.ceil(f/256)*256;const p=l.createBuffer({size:(o-1)*f+s*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=l.createCommandEncoder();m.copyTextureToBuffer({texture:u,origin:{x:n,y:i,z:a}},{buffer:p,bytesPerRow:f},{width:s,height:o});const y=this._getTypedArrayType(h);l.queue.submit([m.finish()]),await p.mapAsync(GPUMapMode.READ);const _=p.getMappedRange();return new y(_)}_getDefaultTextureGPU(e){let n=this.defaultTexture[e];if(n===void 0){const i=new fn;i.minFilter=qt,i.magFilter=qt,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=n=i}return this.backend.get(n).texture}_getDefaultCubeTextureGPU(e){let n=this.defaultTexture[e];if(n===void 0){const i=new Yc;i.minFilter=qt,i.magFilter=qt,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=n=i}return this.backend.get(n).texture}_copyCubeMapToTexture(e,n,i){const s=e.images,o=e.mipmaps;for(let a=0;a<6;a++){const l=s[a],c=e.flipY===!0?xV[a]:a;l.isDataTexture?this._copyBufferToTexture(l.image,n,i,c,e.flipY):this._copyImageToTexture(l,n,i,c,e.flipY,e.premultiplyAlpha);for(let u=0;u<o.length;u++){const d=o[u].images[a];d.isDataTexture?this._copyBufferToTexture(d.image,n,i,c,e.flipY,0,u+1):this._copyImageToTexture(d,n,i,c,e.flipY,e.premultiplyAlpha,u+1)}}}_copyImageToTexture(e,n,i,s,o,a,l=0){const c=this.backend.device,u=l>0?e.width:i.size.width,h=l>0?e.height:i.size.height;c.queue.copyExternalImageToTexture({source:e,flipY:o},{texture:n,mipLevel:l,origin:{x:0,y:0,z:s},premultipliedAlpha:a},{width:u,height:h,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new yV(this.backend.device)),e}_generateMipmaps(e,n,i=0){this._getPassUtils().generateMipmaps(e,n,i)}_flipY(e,n,i=0){this._getPassUtils().flipY(e,n,i)}_copyBufferToTexture(e,n,i,s,o,a=0,l=0){const c=this.backend.device,u=e.data,h=this._getBytesPerTexel(i.format),d=e.width*h;c.queue.writeTexture({texture:n,mipLevel:l,origin:{x:0,y:0,z:s}},u,{offset:e.width*e.height*h*a,bytesPerRow:d},{width:e.width,height:e.height,depthOrArrayLayers:1}),o===!0&&this._flipY(n,i,s)}_copyCompressedBufferToTexture(e,n,i){const s=this.backend.device,o=this._getBlockData(i.format),a=i.size.depthOrArrayLayers>1;for(let l=0;l<e.length;l++){const c=e[l],u=c.width,h=c.height,d=a?i.size.depthOrArrayLayers:1,f=Math.ceil(u/o.width)*o.byteLength,p=f*Math.ceil(h/o.height);for(let m=0;m<d;m++)s.queue.writeTexture({texture:n,mipLevel:l,origin:{x:0,y:0,z:m}},c.data,{offset:m*p,bytesPerRow:f,rowsPerImage:Math.ceil(h/o.height)},{width:Math.ceil(u/o.width)*o.width,height:Math.ceil(h/o.height)*o.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===O.BC1RGBAUnorm||e===O.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.BC2RGBAUnorm||e===O.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.BC3RGBAUnorm||e===O.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.BC4RUnorm||e===O.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===O.BC5RGUnorm||e===O.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===O.BC6HRGBUFloat||e===O.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===O.BC7RGBAUnorm||e===O.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.ETC2RGB8Unorm||e===O.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.ETC2RGB8A1Unorm||e===O.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===O.ETC2RGBA8Unorm||e===O.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===O.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===O.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===O.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===O.ASTC4x4Unorm||e===O.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===O.ASTC5x4Unorm||e===O.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===O.ASTC5x5Unorm||e===O.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===O.ASTC6x5Unorm||e===O.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===O.ASTC6x6Unorm||e===O.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===O.ASTC8x5Unorm||e===O.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===O.ASTC8x6Unorm||e===O.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===O.ASTC8x8Unorm||e===O.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===O.ASTC10x5Unorm||e===O.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===O.ASTC10x6Unorm||e===O.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===O.ASTC10x8Unorm||e===O.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===O.ASTC10x10Unorm||e===O.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===O.ASTC12x10Unorm||e===O.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===O.ASTC12x12Unorm||e===O.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let n=yp.ClampToEdge;return e===go?n=yp.Repeat:e===_o&&(n=yp.MirrorRepeat),n}_convertFilterMode(e){let n=uo.Linear;return(e===qt||e===Jm||e===Yr)&&(n=uo.Nearest),n}_getBytesPerTexel(e){if(e===O.R8Unorm||e===O.R8Snorm||e===O.R8Uint||e===O.R8Sint)return 1;if(e===O.R16Uint||e===O.R16Sint||e===O.R16Float||e===O.RG8Unorm||e===O.RG8Snorm||e===O.RG8Uint||e===O.RG8Sint)return 2;if(e===O.R32Uint||e===O.R32Sint||e===O.R32Float||e===O.RG16Uint||e===O.RG16Sint||e===O.RG16Float||e===O.RGBA8Unorm||e===O.RGBA8UnormSRGB||e===O.RGBA8Snorm||e===O.RGBA8Uint||e===O.RGBA8Sint||e===O.BGRA8Unorm||e===O.BGRA8UnormSRGB||e===O.RGB9E5UFloat||e===O.RGB10A2Unorm||e===O.RG11B10UFloat||e===O.Depth32Float||e===O.Depth24Plus||e===O.Depth24PlusStencil8||e===O.Depth32FloatStencil8)return 4;if(e===O.RG32Uint||e===O.RG32Sint||e===O.RG32Float||e===O.RGBA16Uint||e===O.RGBA16Sint||e===O.RGBA16Float)return 8;if(e===O.RGBA32Uint||e===O.RGBA32Sint||e===O.RGBA32Float)return 16}_getTypedArrayType(e){if(e===O.R8Uint)return Uint8Array;if(e===O.R8Sint)return Int8Array;if(e===O.R8Unorm)return Uint8Array;if(e===O.R8Snorm)return Int8Array;if(e===O.RG8Uint)return Uint8Array;if(e===O.RG8Sint)return Int8Array;if(e===O.RG8Unorm)return Uint8Array;if(e===O.RG8Snorm)return Int8Array;if(e===O.RGBA8Uint)return Uint8Array;if(e===O.RGBA8Sint)return Int8Array;if(e===O.RGBA8Unorm||e===O.RGBA8UnormSRGB)return Uint8Array;if(e===O.RGBA8Snorm)return Int8Array;if(e===O.R16Uint)return Uint16Array;if(e===O.R16Sint)return Int16Array;if(e===O.RG16Uint)return Uint16Array;if(e===O.RG16Sint)return Int16Array;if(e===O.RGBA16Uint)return Uint16Array;if(e===O.RGBA16Sint)return Int16Array;if(e===O.R16Float||e===O.RG16Float||e===O.RGBA16Float)return Uint16Array;if(e===O.R32Uint)return Uint32Array;if(e===O.R32Sint)return Int32Array;if(e===O.R32Float)return Float32Array;if(e===O.RG32Uint)return Uint32Array;if(e===O.RG32Sint)return Int32Array;if(e===O.RG32Float)return Float32Array;if(e===O.RGBA32Uint)return Uint32Array;if(e===O.RGBA32Sint)return Int32Array;if(e===O.RGBA32Float)return Float32Array;if(e===O.BGRA8Unorm||e===O.BGRA8UnormSRGB)return Uint8Array;if(e===O.RGB10A2Unorm||e===O.RGB9E5UFloat||e===O.RG11B10UFloat)return Uint32Array;if(e===O.Depth32Float)return Float32Array;if(e===O.Depth24Plus||e===O.Depth24PlusStencil8)return Uint32Array;if(e===O.Depth32FloatStencil8)return Float32Array}_getDimension(e){let n;return e.is3DTexture||e.isData3DTexture?n=ex.ThreeD:n=ex.TwoD,n}}function Tm(r,e=null){const n=r.format,i=r.type,s=r.colorSpace,o=Je.getTransfer(s);let a;if(r.isCompressedTexture===!0||r.isCompressedArrayTexture===!0)switch(n){case Ts:case Ss:a=o===Pe?O.BC1RGBAUnormSRGB:O.BC1RGBAUnorm;break;case Ms:a=o===Pe?O.BC2RGBAUnormSRGB:O.BC2RGBAUnorm;break;case Es:a=o===Pe?O.BC3RGBAUnormSRGB:O.BC3RGBAUnorm;break;case qa:a=O.BC4RUnorm;break;case Xa:a=O.BC4RSnorm;break;case Ya:a=O.BC5RGUnorm;break;case Ka:a=O.BC5RGSnorm;break;case ja:a=o===Pe?O.BC7RGBAUnormSRGB:O.BC7RGBAUnorm;break;case Na:case Ca:a=o===Pe?O.ETC2RGB8UnormSRGB:O.ETC2RGB8Unorm;break;case Pa:a=o===Pe?O.ETC2RGBA8UnormSRGB:O.ETC2RGBA8Unorm;break;case Da:a=o===Pe?O.ASTC4x4UnormSRGB:O.ASTC4x4Unorm;break;case La:a=o===Pe?O.ASTC5x4UnormSRGB:O.ASTC5x4Unorm;break;case Ia:a=o===Pe?O.ASTC5x5UnormSRGB:O.ASTC5x5Unorm;break;case Ua:a=o===Pe?O.ASTC6x5UnormSRGB:O.ASTC6x5Unorm;break;case Fa:a=o===Pe?O.ASTC6x6UnormSRGB:O.ASTC6x6Unorm;break;case Oa:a=o===Pe?O.ASTC8x5UnormSRGB:O.ASTC8x5Unorm;break;case Ba:a=o===Pe?O.ASTC8x6UnormSRGB:O.ASTC8x6Unorm;break;case ka:a=o===Pe?O.ASTC8x8UnormSRGB:O.ASTC8x8Unorm;break;case za:a=o===Pe?O.ASTC10x5UnormSRGB:O.ASTC10x5Unorm;break;case Ga:a=o===Pe?O.ASTC10x6UnormSRGB:O.ASTC10x6Unorm;break;case Va:a=o===Pe?O.ASTC10x8UnormSRGB:O.ASTC10x8Unorm;break;case Ha:a=o===Pe?O.ASTC10x10UnormSRGB:O.ASTC10x10Unorm;break;case Wa:a=o===Pe?O.ASTC12x10UnormSRGB:O.ASTC12x10Unorm;break;case $a:a=o===Pe?O.ASTC12x12UnormSRGB:O.ASTC12x12Unorm;break;case cn:a=o===Pe?O.RGBA8UnormSRGB:O.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}else switch(n){case cn:switch(i){case ho:a=O.RGBA8Snorm;break;case fo:a=O.RGBA16Sint;break;case tr:a=O.RGBA16Uint;break;case Wt:a=O.RGBA32Uint;break;case An:a=O.RGBA32Sint;break;case an:a=o===Pe?O.RGBA8UnormSRGB:O.RGBA8Unorm;break;case Cn:a=O.RGBA16Float;break;case hn:a=O.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case jc:switch(i){case od:a=O.RGB9E5UFloat;break;case ad:a=O.RG11B10UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case qc:switch(i){case ho:a=O.R8Snorm;break;case fo:a=O.R16Sint;break;case tr:a=O.R16Uint;break;case Wt:a=O.R32Uint;break;case An:a=O.R32Sint;break;case an:a=O.R8Unorm;break;case Cn:a=O.R16Float;break;case hn:a=O.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case Kr:switch(i){case ho:a=O.RG8Snorm;break;case fo:a=O.RG16Sint;break;case tr:a=O.RG16Uint;break;case Wt:a=O.RG32Uint;break;case An:a=O.RG32Sint;break;case an:a=O.RG8Unorm;break;case Cn:a=O.RG16Float;break;case hn:a=O.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case wi:switch(i){case tr:a=O.Depth16Unorm;break;case Wt:a=O.Depth24Plus;break;case hn:a=O.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case Ai:switch(i){case Ei:a=O.Depth24PlusStencil8;break;case hn:e&&e.features.has(bm.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),a=O.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case ll:switch(i){case An:a=O.R32Sint;break;case Wt:a=O.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case cl:switch(i){case An:a=O.RG32Sint;break;case Wt:a=O.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case ul:switch(i){case An:a=O.RGBA32Sint;break;case Wt:a=O.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}return a}const TV=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,SV=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,tx={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},MV=r=>{r=r.trim();const e=r.match(TV);if(e!==null&&e.length===4){const n=e[2],i=[];let s=null;for(;(s=SV.exec(n))!==null;)i.push({name:s[1],type:s[2]});const o=[];for(let h=0;h<i.length;h++){const{name:d,type:f}=i[h];let p=f;p.startsWith("ptr")?p="pointer":(p.startsWith("texture")&&(p=f.split("<")[0]),p=tx[p]),o.push(new r_(p,d))}const a=r.substring(e[0].length),l=e[3]||"void",c=e[1]!==void 0?e[1]:"";return{type:tx[l]||l,inputs:o,name:c,inputsCode:n,blockCode:a,outputType:l}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class EV extends o_{constructor(e){const{type:n,inputs:i,name:s,inputsCode:o,blockCode:a,outputType:l}=MV(e);super(n,i,s),this.inputsCode=o,this.blockCode=a,this.outputType=l}getCode(e=this.name){const n=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${n}`+this.blockCode}}class wV extends qS{parseFunction(e){return new EV(e)}}const ra=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},AV={[_r.READ_ONLY]:"read",[_r.WRITE_ONLY]:"write",[_r.READ_WRITE]:"read_write"},nx={[go]:"repeat",[gr]:"clamp",[_o]:"mirror"},hh={vertex:ra?ra.VERTEX:1,fragment:ra?ra.FRAGMENT:2,compute:ra?ra.COMPUTE:4},ix={instance:!0,swizzleAssign:!1,storageBuffer:!0},RV={"^^":"tsl_xor"},CV={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},rx={},Kl={tsl_xor:new Yn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Yn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Yn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Yn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Yn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Yn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Yn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Yn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Yn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Yn("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Yn("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Yn("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Yn(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},NV={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};let rM="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(rM+=`diagnostic( off, derivative_uniformity );
`);class PV extends jS{constructor(e,n){super(e,n,new wV),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,n,i,s,o,a=this.shaderStage){return a==="fragment"?s?o?`textureSample( ${n}, ${n}_sampler, ${i}, ${s}, ${o} )`:`textureSample( ${n}, ${n}_sampler, ${i}, ${s} )`:o?`textureSample( ${n}, ${n}_sampler, ${i}, ${o} )`:`textureSample( ${n}, ${n}_sampler, ${i} )`:this.generateTextureSampleLevel(e,n,i,"0",s)}generateTextureSampleLevel(e,n,i,s,o,a){return this.isUnfilterable(e)===!1?a?`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,n,i,a,s):this.generateTextureLod(e,n,i,o,a,s)}generateWrapFunction(e){const n=`tsl_coord_${nx[e.wrapS]}S_${nx[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let i=rx[n];if(i===void 0){const s=[],o=e.isData3DTexture?"vec3f":"vec2f";let a=`fn ${n}( coord : ${o} ) -> ${o} {

	return ${o}(
`;const l=(c,u)=>{c===go?(s.push(Kl.repeatWrapping_float),a+=`		tsl_repeatWrapping_float( coord.${u} )`):c===gr?(s.push(Kl.clampWrapping_float),a+=`		tsl_clampWrapping_float( coord.${u} )`):c===_o?(s.push(Kl.mirrorWrapping_float),a+=`		tsl_mirrorWrapping_float( coord.${u} )`):(a+=`		coord.${u}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${c}" for vertex shader.`))};l(e.wrapS,"x"),a+=`,
`,l(e.wrapT,"y"),e.isData3DTexture&&(a+=`,
`,l(e.wrapR,"z")),a+=`
	);

}
`,rx[n]=i=new Yn(a,s)}return i.build(this),n}generateArrayDeclaration(e,n){return`array< ${this.getType(e)}, ${n} >`}generateTextureDimension(e,n,i){const s=this.getDataFromNode(e,this.shaderStage,this.globalCache);s.dimensionsSnippet===void 0&&(s.dimensionsSnippet={});let o=s.dimensionsSnippet[i];if(s.dimensionsSnippet[i]===void 0){let a,l;const{primarySamples:c}=this.renderer.backend.utils.getTextureSampleData(e),u=c>1;e.isData3DTexture?l="vec3<u32>":l="vec2<u32>",u||e.isStorageTexture?a=n:a=`${n}${i?`, u32( ${i} )`:""}`,o=new Eh(new Ah(`textureDimensions( ${a} )`,l)),s.dimensionsSnippet[i]=o,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(s.arrayLayerCount=new Eh(new Ah(`textureNumLayers(${n})`,"u32"))),e.isTextureCube&&(s.cubeFaceCount=new Eh(new Ah("6u","u32")))}return o.build(this)}generateFilteredTexture(e,n,i,s,o="0u"){this._include("biquadraticTexture");const a=this.generateWrapFunction(e),l=this.generateTextureDimension(e,n,o);return s&&(i=`${i} + vec2<f32>(${s}) / ${l}`),`tsl_biquadraticTexture( ${n}, ${a}( ${i} ), ${l}, u32( ${o} ) )`}generateTextureLod(e,n,i,s,o,a="0u"){const l=this.generateWrapFunction(e),c=this.generateTextureDimension(e,n,a),u=e.isData3DTexture?"vec3":"vec2";o&&(i=`${i} + ${u}<f32>(${o}) / ${u}<f32>( ${c} )`);const h=`${u}<u32>( ${l}( ${i} ) * ${u}<f32>( ${c} ) )`;return this.generateTextureLoad(e,n,h,s,null,a)}generateTextureLoad(e,n,i,s,o,a="0u"){let l;return o&&(i=`${i} + ${o}`),s?l=`textureLoad( ${n}, ${i}, ${s}, u32( ${a} ) )`:(l=`textureLoad( ${n}, ${i}, u32( ${a} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(l+=".x")),l}generateTextureStore(e,n,i,s,o){let a;return s?a=`textureStore( ${n}, ${i}, ${s}, ${o} )`:a=`textureStore( ${n}, ${i}, ${o} )`,a}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===hn||this.isSampleCompare(e)===!1&&e.minFilter===qt&&e.magFilter===qt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,n,i,s,o,a=this.shaderStage){let l=null;return this.isUnfilterable(e)?l=this.generateTextureLod(e,n,i,s,o,"0",a):l=this._generateTextureSample(e,n,i,s,o,a),l}generateTextureGrad(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return a?`textureSampleGrad( ${n}, ${n}_sampler, ${i},  ${s[0]}, ${s[1]}, ${a} )`:`textureSampleGrad( ${n}, ${n}_sampler, ${i},  ${s[0]}, ${s[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${l} shader.`)}generateTextureCompare(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?a?`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${o}, ${s}, ${a} )`:`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${o}, ${s} )`:a?`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleCompare( ${n}, ${n}_sampler, ${i}, ${s} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${l} shader.`)}generateTextureLevel(e,n,i,s,o,a){return this.isUnfilterable(e)===!1?a?`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleLevel( ${n}, ${n}_sampler, ${i}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,n,i,a,s):this.generateTextureLod(e,n,i,o,a,s)}generateTextureBias(e,n,i,s,o,a,l=this.shaderStage){if(l==="fragment")return a?`textureSampleBias( ${n}, ${n}_sampler, ${i}, ${s}, ${a} )`:`textureSampleBias( ${n}, ${n}_sampler, ${i}, ${s} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${l} shader.`)}getPropertyName(e,n=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(n==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const i=e.name,s=e.type;return s==="texture"||s==="cubeTexture"||s==="storageTexture"||s==="texture3D"?i:s==="buffer"||s==="storageBuffer"||s==="indirectStorageBuffer"?this.isCustomStruct(e)?i:i+".value":e.groupNode.name+"."+i}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const n=RV[e];return n!==void 0?(this._include(n),n):null}getNodeAccess(e,n){return n!=="compute"?e.isAtomic===!0?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),_r.READ_WRITE):_r.READ_ONLY:e.access}getStorageAccess(e,n){return AV[this.getNodeAccess(e,n)]}getUniformFromNode(e,n,i,s=null){const o=super.getUniformFromNode(e,n,i,s),a=this.getDataFromNode(e,i,this.globalCache);if(a.uniformGPU===void 0){let l;const c=e.groupNode,u=c.name,h=this.getBindGroupArray(u,i);if(n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"){let d=null;const f=this.getNodeAccess(e,i);if(n==="texture"||n==="storageTexture"?e.value.is3DTexture===!0?d=new xm(o.name,o.node,c,f):d=new Rd(o.name,o.node,c,f):n==="cubeTexture"?d=new tM(o.name,o.node,c,f):n==="texture3D"&&(d=new xm(o.name,o.node,c,f)),d.store=e.isStorageTextureNode===!0,d.setVisibility(hh[i]),this.isUnfilterable(e.value)===!1&&d.store===!1){const p=new pV(`${o.name}_sampler`,o.node,c);p.setVisibility(hh[i]),h.push(p,d),l=[p,d]}else h.push(d),l=[d]}else if(n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"){const d=n==="buffer"?QS:_V,f=new d(e,c);f.setVisibility(hh[i]),h.push(f),l=f,o.name=s||"NodeBuffer_"+o.id}else{const d=this.uniformGroups[i]||(this.uniformGroups[i]={});let f=d[u];f===void 0&&(f=new JS(u,c),f.setVisibility(hh[i]),d[u]=f,h.push(f)),l=this.getNodeUniform(o,n),f.addUniform(l)}a.uniformGPU=l}return o}getBuiltin(e,n,i,s=this.shaderStage){const o=this.builtins[s]||(this.builtins[s]=new Map);return o.has(e)===!1&&o.set(e,{name:e,property:n,type:i}),n}hasBuiltin(e,n=this.shaderStage){return this.builtins[n]!==void 0&&this.builtins[n].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const n=e.layout,i=this.flowShaderNode(e),s=[];for(const a of n.inputs)s.push(a.name+" : "+this.getType(a.type));let o=`fn ${n.name}( ${s.join(", ")} ) -> ${this.getType(n.type)} {
${i.vars}
${i.code}
`;return i.result&&(o+=`	return ${i.result};
`),o+=`
}
`,o}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,n=this.shaderStage){(this.directives[n]||(this.directives[n]=new Set)).add(e)}getDirectives(e){const n=[],i=this.directives[e];if(i!==void 0)for(const s of i)n.push(`enable ${s};`);return n.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const n=[],i=this.builtins[e];if(i!==void 0)for(const{name:s,property:o,type:a}of i.values())n.push(`@builtin( ${s} ) ${o} : ${a}`);return n.join(`,
	`)}getScopedArray(e,n,i,s){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:n,bufferType:i,bufferCount:s}),e}getScopedArrays(e){if(e!=="compute")return;const n=[];for(const{name:i,scope:s,bufferType:o,bufferCount:a}of this.scopedArrays.values()){const l=this.getType(o);n.push(`var<${s}> ${i}: array< ${l}, ${a} >;`)}return n.join(`
`)}getAttributes(e){const n=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const i=this.getBuiltins("attribute");i&&n.push(i);const s=this.getAttributesArray();for(let o=0,a=s.length;o<a;o++){const l=s[o],c=l.name,u=this.getType(l.type);n.push(`@location( ${o} ) ${c} : ${u}`)}}return n.join(`,
	`)}getStructMembers(e){const n=[];for(const i of e.members){const s=e.output?"@location( "+i.index+" ) ":"";let o=this.getType(i.type);i.atomic&&(o="atomic< "+o+" >"),n.push(`	${s+i.name} : ${o}`)}return e.output&&n.push(`	${this.getBuiltins("output")}`),n.join(`,
`)}getStructs(e){let n="";const i=this.structs[e];if(i.length>0){const s=[];for(const o of i){let a=`struct ${o.name} {
`;a+=this.getStructMembers(o),a+=`
};`,s.push(a)}n=`
`+s.join(`

`)+`
`}return n}getVar(e,n,i=null){let s=`var ${n} : `;return i!==null?s+=this.generateArrayDeclaration(e,i):s+=this.getType(e),s}getVars(e){const n=[],i=this.vars[e];if(i!==void 0)for(const s of i)n.push(`	${this.getVar(s.type,s.name,s.count)};`);return`
${n.join(`
`)}
`}getVaryings(e){const n=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const o=this.varyings,a=this.vars[e];for(let l=0;l<o.length;l++){const c=o[l];if(c.needsInterpolation){let u=`@location( ${l} )`;if(c.interpolationType){const h=c.interpolationSampling!==null?`, ${c.interpolationSampling} )`:" )";u+=` @interpolate( ${c.interpolationType}${h}`}else/^(int|uint|ivec|uvec)/.test(c.type)&&(u+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);n.push(`${u} ${c.name} : ${this.getType(c.type)}`)}else e==="vertex"&&a.includes(c)===!1&&a.push(c)}}const i=this.getBuiltins(e);i&&n.push(i);const s=n.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+s):s}isCustomStruct(e){const n=e.value,i=e.node,s=(n.isBufferAttribute||n.isInstancedBufferAttribute)&&i.structTypeNode!==null,o=i.value&&i.value.array&&typeof i.value.itemSize=="number"&&i.value.array.length>i.value.itemSize;return s&&!o}getUniforms(e){const n=this.uniforms[e],i=[],s=[],o=[],a={};for(const c of n){const u=c.groupNode.name,h=this.bindingsIndexes[u];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const d=c.node.value;this.isUnfilterable(d)===!1&&c.node.isStorageTextureNode!==!0&&(this.isSampleCompare(d)?i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler_comparison;`):i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name}_sampler : sampler;`));let f,p="";const{primarySamples:m}=this.renderer.backend.utils.getTextureSampleData(d);if(m>1&&(p="_multisampled"),d.isCubeTexture===!0)f="texture_cube<f32>";else if(d.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&d.compareFunction===null?f=`texture${p}_2d<f32>`:f=`texture_depth${p}_2d${d.isArrayTexture===!0?"_array":""}`;else if(c.node.isStorageTextureNode===!0){const y=Tm(d),_=this.getStorageAccess(c.node,e),g=c.node.value.is3DTexture,v=c.node.value.isArrayTexture;f=`texture_storage_${g?"3d":`2d${v?"_array":""}`}<${y}, ${_}>`}else if(d.isArrayTexture===!0||d.isDataArrayTexture===!0||d.isCompressedArrayTexture===!0)f="texture_2d_array<f32>";else if(d.is3DTexture===!0||d.isData3DTexture===!0)f="texture_3d<f32>";else{const y=this.getComponentTypeFromTexture(d).charAt(0);f=`texture${p}_2d<${y}32>`}i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${c.name} : ${f};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const d=c.node,f=this.getType(d.getNodeType(this)),p=d.bufferCount,m=p>0&&c.type==="buffer"?", "+p:"",y=d.isStorageBufferNode?`storage, ${this.getStorageAccess(d,e)}`:"uniform";if(this.isCustomStruct(c))s.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var<${y}> ${c.name} : ${f};`);else{const g=`	value : array< ${d.isAtomic?`atomic<${f}>`:`${f}`}${m} >`;s.push(this._getWGSLStructBinding(c.name,g,y,h.binding++,h.group))}}else{const d=this.getType(this.getVectorType(c.type)),f=c.groupNode.name;(a[f]||(a[f]={index:h.binding++,id:h.group,snippets:[]})).snippets.push(`	${c.name} : ${d}`)}}for(const c in a){const u=a[c];o.push(this._getWGSLStructBinding(c,u.snippets.join(`,
`),"uniform",u.index,u.id))}let l=i.join(`
`);return l+=s.join(`
`),l+=o.join(`
`),l}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const n in e){this.shaderStage=n;const i=e[n];i.uniforms=this.getUniforms(n),i.attributes=this.getAttributes(n),i.varyings=this.getVaryings(n),i.structs=this.getStructs(n),i.vars=this.getVars(n),i.codes=this.getCodes(n),i.directives=this.getDirectives(n),i.scopedArrays=this.getScopedArrays(n);let s=`// code

`;s+=this.flowCode[n];const o=this.flowNodes[n],a=o[o.length-1],l=a.outputNode,c=l!==void 0&&l.isOutputStructNode===!0;for(const u of o){const h=this.getFlowData(u),d=u.name;if(d&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${d}
`),s+=`${h.code}
	`,u===a&&n!=="compute"){if(s+=`// result

	`,n==="vertex")s+=`varyings.Vertex = ${h.result};`;else if(n==="fragment")if(c)i.returnType=l.getNodeType(this),i.structs+="var<private> output : "+i.returnType+";",s+=`return ${h.result};`;else{let f="	@location(0) color: vec4<f32>";const p=this.getBuiltins("output");p&&(f+=`,
	`+p),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",f),i.structs+=`
var<private> output : OutputStruct;`,s+=`output.color = ${h.result};

	return output;`}}}i.flow=s}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const n=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,n)}}getMethod(e,n=null){let i;return n!==null&&(i=this._getWGSLMethod(e+"_"+n)),i===void 0&&(i=this._getWGSLMethod(e)),i||e}getBitcastMethod(e){return`bitcast<${this.getType(e)}>`}getTernary(e,n,i){return`select( ${i}, ${n}, ${e} )`}getType(e){return CV[e]||e}isAvailable(e){let n=ix[e];return n===void 0&&(e==="float32Filterable"?n=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(n=this.renderer.hasFeature("clip-distances")),ix[e]=n),n}_getWGSLMethod(e){return Kl[e]!==void 0&&this._include(e),NV[e]}_include(e){const n=Kl[e];return n.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(n),n}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${rM}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,n){const[i,s,o]=n;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${i}, ${s}, ${o} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${i} * numWorkgroups.x )
		+ globalId.z * ( ${i} * numWorkgroups.x ) * ( ${s} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,n){return`
struct ${e} {
${n}
};`}_getWGSLStructBinding(e,n,i,s=0,o=0){const a=e+"Struct";return`${this._getWGSLStruct(a,n)}
@binding( ${s} ) @group( ${o} )
var<${i}> ${e} : ${a};`}}class DV{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let n;return e.depthTexture!==null?n=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?n=O.Depth24PlusStencil8:e.depth&&(n=O.Depth24Plus),n}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let n;if(e.isFramebufferTexture)n=1;else if(e.isDepthTexture&&!e.renderTarget){const o=this.backend.renderer,a=o.getRenderTarget();n=a?a.samples:o.samples}else e.renderTarget&&(n=e.renderTarget.samples);n=n||1;const i=n>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:n,primarySamples:i?1:n,isMSAA:i}}getCurrentColorFormat(e){let n;return e.textures!==null?n=this.getTextureFormatGPU(e.textures[0]):n=this.getPreferredCanvasFormat(),n}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,n){if(e.isPoints)return fa.PointList;if(e.isLineSegments||e.isMesh&&n.wireframe===!0)return fa.LineList;if(e.isLine)return fa.LineStrip;if(e.isMesh)return fa.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===an)return O.BGRA8Unorm;if(e===Cn)return O.RGBA16Float;throw new Error("Unsupported outputType")}}const sM=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&sM.set(Float16Array,["float16"]);const LV=new Map([[Tb,["float16"]]]),IV=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class UV{constructor(e){this.backend=e}createAttribute(e,n){const i=this._getBufferAttribute(e),s=this.backend,o=s.get(i);let a=o.buffer;if(a===void 0){const l=s.device;let c=i.array;if(e.normalized===!1){if(c.constructor===Int16Array||c.constructor===Int8Array)c=new Int32Array(c);else if((c.constructor===Uint16Array||c.constructor===Uint8Array)&&(c=new Uint32Array(c),n&GPUBufferUsage.INDEX))for(let d=0;d<c.length;d++)c[d]===65535&&(c[d]=4294967295)}if(i.array=c,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&i.itemSize===3){c=new c.constructor(i.count*4);for(let d=0;d<i.count;d++)c.set(i.array.subarray(d*3,d*3+3),d*4);i.itemSize=4,i.array=c,o._force3to4BytesAlignment=!0}const u=c.byteLength,h=u+(4-u%4)%4;a=l.createBuffer({label:i.name,size:h,usage:n,mappedAtCreation:!0}),new c.constructor(a.getMappedRange()).set(c),a.unmap(),o.buffer=a}}updateAttribute(e){const n=this._getBufferAttribute(e),i=this.backend,s=i.device,o=i.get(n),a=i.get(n).buffer;let l=n.array;if(o._force3to4BytesAlignment===!0){l=new l.constructor(n.count*4);for(let h=0;h<n.count;h++)l.set(n.array.subarray(h*3,h*3+3),h*4);n.array=l}const c=this._isTypedArray(l),u=n.updateRanges;if(u.length===0)s.queue.writeBuffer(a,0,l,0);else{const h=c?1:l.BYTES_PER_ELEMENT;for(let d=0,f=u.length;d<f;d++){const p=u[d];let m,y;if(o._force3to4BytesAlignment===!0){const g=Math.floor(p.start/3),v=Math.ceil(p.count/3);m=g*4*h,y=v*4*h}else m=p.start*h,y=p.count*h;const _=m*(c?l.BYTES_PER_ELEMENT:1);s.queue.writeBuffer(a,_,l,m,y)}n.clearUpdateRanges()}}createShaderVertexBuffers(e){const n=e.getAttributes(),i=new Map;for(let s=0;s<n.length;s++){const o=n[s],a=o.array.BYTES_PER_ELEMENT,l=this._getBufferAttribute(o);let c=i.get(l);if(c===void 0){let d,f;o.isInterleavedBufferAttribute===!0?(d=o.data.stride*a,f=o.data.isInstancedInterleavedBuffer?uh.Instance:uh.Vertex):(d=o.itemSize*a,f=o.isInstancedBufferAttribute?uh.Instance:uh.Vertex),o.normalized===!1&&(o.array.constructor===Int16Array||o.array.constructor===Uint16Array)&&(d=4),c={arrayStride:d,attributes:[],stepMode:f},i.set(l,c)}const u=this._getVertexFormat(o),h=o.isInterleavedBufferAttribute===!0?o.offset*a:0;c.attributes.push({shaderLocation:s,offset:h,format:u})}return Array.from(i.values())}destroyAttribute(e){const n=this.backend;n.get(this._getBufferAttribute(e)).buffer.destroy(),n.delete(e)}async getArrayBufferAsync(e){const n=this.backend,i=n.device,o=n.get(this._getBufferAttribute(e)).buffer,a=o.size,l=i.createBuffer({label:`${e.name}_readback`,size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=i.createCommandEncoder({label:`readback_encoder_${e.name}`});c.copyBufferToBuffer(o,0,l,0,a);const u=c.finish();i.queue.submit([u]),await l.mapAsync(GPUMapMode.READ);const h=l.getMappedRange(),d=new e.array.constructor(h.slice(0));return l.unmap(),d.buffer}_getVertexFormat(e){const{itemSize:n,normalized:i}=e,s=e.array.constructor,o=e.constructor;let a;if(n===1)a=IV.get(s);else{const c=(LV.get(o)||sM.get(s))[i?1:0];if(c){const u=s.BYTES_PER_ELEMENT*n,d=Math.floor((u+3)/4)*4/s.BYTES_PER_ELEMENT;if(d%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");a=`${c}x${d}`}}return a||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),a}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class FV{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const n=this.backend,i=n.device,s=[];let o=0;for(const a of e.bindings){const l={binding:o++,visibility:a.visibility};if(a.isUniformBuffer||a.isStorageBuffer){const c={};a.isStorageBuffer&&(a.visibility&4&&(a.access===_r.READ_WRITE||a.access===_r.WRITE_ONLY)?c.type=vp.Storage:c.type=vp.ReadOnlyStorage),l.buffer=c}else if(a.isSampledTexture&&a.store){const c={};c.format=this.backend.get(a.texture).texture.format;const u=a.access;u===_r.READ_WRITE?c.access=xp.ReadWrite:u===_r.WRITE_ONLY?c.access=xp.WriteOnly:c.access=xp.ReadOnly,a.texture.isArrayTexture?c.viewDimension=_n.TwoDArray:a.texture.is3DTexture&&(c.viewDimension=_n.ThreeD),l.storageTexture=c}else if(a.isSampledTexture){const c={},{primarySamples:u}=n.utils.getTextureSampleData(a.texture);if(u>1&&(c.multisampled=!0,a.texture.isDepthTexture||(c.sampleType=Zs.UnfilterableFloat)),a.texture.isDepthTexture)n.compatibilityMode&&a.texture.compareFunction===null?c.sampleType=Zs.UnfilterableFloat:c.sampleType=Zs.Depth;else if(a.texture.isDataTexture||a.texture.isDataArrayTexture||a.texture.isData3DTexture){const h=a.texture.type;h===An?c.sampleType=Zs.SInt:h===Wt?c.sampleType=Zs.UInt:h===hn&&(this.backend.hasFeature("float32-filterable")?c.sampleType=Zs.Float:c.sampleType=Zs.UnfilterableFloat)}a.isSampledCubeTexture?c.viewDimension=_n.Cube:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?c.viewDimension=_n.TwoDArray:a.isSampledTexture3D&&(c.viewDimension=_n.ThreeD),l.texture=c}else if(a.isSampler){const c={};a.texture.isDepthTexture&&(a.texture.compareFunction!==null?c.type=J0.Comparison:n.compatibilityMode&&(c.type=J0.NonFiltering)),l.sampler=c}else console.error(`WebGPUBindingUtils: Unsupported binding "${a}".`);s.push(l)}return i.createBindGroupLayout({entries:s})}createBindings(e,n,i,s=0){const{backend:o,bindGroupLayoutCache:a}=this,l=o.get(e);let c=a.get(e.bindingsReference);c===void 0&&(c=this.createBindingsLayout(e),a.set(e.bindingsReference,c));let u;i>0&&(l.groups===void 0&&(l.groups=[],l.versions=[]),l.versions[i]===s&&(u=l.groups[i])),u===void 0&&(u=this.createBindGroup(e,c),i>0&&(l.groups[i]=u,l.versions[i]=s)),l.group=u,l.layout=c}updateBinding(e){const n=this.backend,i=n.device,s=e.buffer,o=n.get(e).buffer;i.queue.writeBuffer(o,0,s,0)}createBindGroupIndex(e,n){const s=this.backend.device,o=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,a=e[0],l=s.createBuffer({label:"bindingCameraIndex_"+a,size:16,usage:o});s.queue.writeBuffer(l,0,e,0);const c=[{binding:0,resource:{buffer:l}}];return s.createBindGroup({label:"bindGroupCameraIndex_"+a,layout:n,entries:c})}createBindGroup(e,n){const i=this.backend,s=i.device;let o=0;const a=[];for(const l of e.bindings){if(l.isUniformBuffer){const c=i.get(l);if(c.buffer===void 0){const u=l.byteLength,h=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,d=s.createBuffer({label:"bindingBuffer_"+l.name,size:u,usage:h});c.buffer=d}a.push({binding:o,resource:{buffer:c.buffer}})}else if(l.isStorageBuffer){const c=i.get(l);if(c.buffer===void 0){const u=l.attribute;c.buffer=i.get(u).buffer}a.push({binding:o,resource:{buffer:c.buffer}})}else if(l.isSampledTexture){const c=i.get(l.texture);let u;if(c.externalTexture!==void 0)u=s.importExternalTexture({source:c.externalTexture});else{const h=l.store?1:c.texture.mipLevelCount;let d=`view-${c.texture.width}-${c.texture.height}`;if(c.texture.depthOrArrayLayers>1&&(d+=`-${c.texture.depthOrArrayLayers}`),d+=`-${h}`,u=c[d],u===void 0){const f=fV.All;let p;l.isSampledCubeTexture?p=_n.Cube:l.isSampledTexture3D?p=_n.ThreeD:l.texture.isArrayTexture||l.texture.isDataArrayTexture||l.texture.isCompressedArrayTexture?p=_n.TwoDArray:p=_n.TwoD,u=c[d]=c.texture.createView({aspect:f,dimension:p,mipLevelCount:h})}}a.push({binding:o,resource:u})}else if(l.isSampler){const c=i.get(l.texture);a.push({binding:o,resource:c.sampler})}o++}return s.createBindGroup({label:"bindGroup_"+e.name,layout:n,entries:a})}}class OV{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,n){this._activePipelines.get(e)!==n&&(e.setPipeline(n),this._activePipelines.set(e,n))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,n){const{object:i,material:s,geometry:o,pipeline:a}=e,{vertexProgram:l,fragmentProgram:c}=a,u=this.backend,h=u.device,d=u.utils,f=u.get(a),p=[];for(const F of e.getBindings()){const k=u.get(F);p.push(k.layout)}const m=u.attributeUtils.createShaderVertexBuffers(e);let y;s.blending!==li&&(s.blending!==Mi||s.transparent!==!1)&&(y=this._getBlending(s));let _={};s.stencilWrite===!0&&(_={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const g=this._getColorWriteMask(s),v=[];if(e.context.textures!==null){const F=e.context.textures;for(let k=0;k<F.length;k++){const j=d.getTextureFormatGPU(F[k]);v.push({format:j,blend:y,writeMask:g})}}else{const F=d.getCurrentColorFormat(e.context);v.push({format:F,blend:y,writeMask:g})}const x=u.get(l).module,b=u.get(c).module,T=this._getPrimitiveState(i,o,s),S=this._getDepthCompare(s),M=d.getCurrentDepthStencilFormat(e.context),A=this._getSampleCount(e.context),E={label:`renderPipeline_${s.name||s.type}_${s.id}`,vertex:Object.assign({},x,{buffers:m}),fragment:Object.assign({},b,{targets:v}),primitive:T,multisample:{count:A,alphaToCoverageEnabled:s.alphaToCoverage&&A>1},layout:h.createPipelineLayout({bindGroupLayouts:p})},w={},N=e.context.depth,D=e.context.stencil;if((N===!0||D===!0)&&(N===!0&&(w.format=M,w.depthWriteEnabled=s.depthWrite,w.depthCompare=S),D===!0&&(w.stencilFront=_,w.stencilBack={},w.stencilReadMask=s.stencilFuncMask,w.stencilWriteMask=s.stencilWriteMask),s.polygonOffset===!0&&(w.depthBias=s.polygonOffsetUnits,w.depthBiasSlopeScale=s.polygonOffsetFactor,w.depthBiasClamp=0),E.depthStencil=w),n===null)f.pipeline=h.createRenderPipeline(E);else{const F=new Promise(k=>{h.createRenderPipelineAsync(E).then(j=>{f.pipeline=j,k()})});n.push(F)}}createBundleEncoder(e,n="renderBundleEncoder"){const i=this.backend,{utils:s,device:o}=i,a=s.getCurrentDepthStencilFormat(e),l=s.getCurrentColorFormat(e),c=this._getSampleCount(e),u={label:n,colorFormats:[l],depthStencilFormat:a,sampleCount:c};return o.createRenderBundleEncoder(u)}createComputePipeline(e,n){const i=this.backend,s=i.device,o=i.get(e.computeProgram).module,a=i.get(e),l=[];for(const c of n){const u=i.get(c);l.push(u.layout)}a.pipeline=s.createComputePipeline({compute:o,layout:s.createPipelineLayout({bindGroupLayouts:l})})}_getBlending(e){let n,i;const s=e.blending,o=e.blendSrc,a=e.blendDst,l=e.blendEquation;if(s===pa){const c=e.blendSrcAlpha!==null?e.blendSrcAlpha:o,u=e.blendDstAlpha!==null?e.blendDstAlpha:a,h=e.blendEquationAlpha!==null?e.blendEquationAlpha:l;n={srcFactor:this._getBlendFactor(o),dstFactor:this._getBlendFactor(a),operation:this._getBlendOperation(l)},i={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(u),operation:this._getBlendOperation(h)}}else{const c=e.premultipliedAlpha,u=(h,d,f,p)=>{n={srcFactor:h,dstFactor:d,operation:Ks.Add},i={srcFactor:f,dstFactor:p,operation:Ks.Add}};if(c)switch(s){case Mi:u(Tt.One,Tt.OneMinusSrcAlpha,Tt.One,Tt.OneMinusSrcAlpha);break;case Ma:u(Tt.One,Tt.One,Tt.One,Tt.One);break;case Ea:u(Tt.Zero,Tt.OneMinusSrc,Tt.Zero,Tt.One);break;case wa:u(Tt.Dst,Tt.OneMinusSrcAlpha,Tt.Zero,Tt.One);break}else switch(s){case Mi:u(Tt.SrcAlpha,Tt.OneMinusSrcAlpha,Tt.One,Tt.OneMinusSrcAlpha);break;case Ma:u(Tt.SrcAlpha,Tt.One,Tt.One,Tt.One);break;case Ea:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case wa:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(n!==void 0&&i!==void 0)return{color:n,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",s)}_getBlendFactor(e){let n;switch(e){case Gr:n=Tt.Zero;break;case Wm:n=Tt.One;break;case $m:n=Tt.Src;break;case jm:n=Tt.OneMinusSrc;break;case bc:n=Tt.SrcAlpha;break;case Tc:n=Tt.OneMinusSrcAlpha;break;case Ym:n=Tt.Dst;break;case Km:n=Tt.OneMinusDst;break;case qm:n=Tt.DstAlpha;break;case Xm:n=Tt.OneMinusDstAlpha;break;case Zm:n=Tt.SrcAlphaSaturated;break;case Mk:n=Tt.Constant;break;case Ek:n=Tt.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return n}_getStencilCompare(e){let n;const i=e.stencilFunc;switch(i){case eC:n=Nn.Never;break;case Yp:n=Nn.Always;break;case tC:n=Nn.Less;break;case iC:n=Nn.LessEqual;break;case nC:n=Nn.Equal;break;case oC:n=Nn.GreaterEqual;break;case rC:n=Nn.Greater;break;case sC:n=Nn.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return n}_getStencilOperation(e){let n;switch(e){case Js:n=_s.Keep;break;case qR:n=_s.Zero;break;case XR:n=_s.Replace;break;case JR:n=_s.Invert;break;case YR:n=_s.IncrementClamp;break;case KR:n=_s.DecrementClamp;break;case ZR:n=_s.IncrementWrap;break;case QR:n=_s.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",n)}return n}_getBlendOperation(e){let n;switch(e){case Gn:n=Ks.Add;break;case Vm:n=Ks.Subtract;break;case Hm:n=Ks.ReverseSubtract;break;case cb:n=Ks.Min;break;case ub:n=Ks.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return n}_getPrimitiveState(e,n,i){const s={},o=this.backend.utils;s.topology=o.getPrimitiveTopology(e,i),n.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(s.stripIndexFormat=n.index.array instanceof Uint16Array?rl.Uint16:rl.Uint32);let a=i.side===kt;return e.isMesh&&e.matrixWorld.determinant()<0&&(a=!a),s.frontFace=a===!0?K0.CW:K0.CCW,s.cullMode=i.side===zn?Z0.None:Z0.Back,s}_getColorWriteMask(e){return e.colorWrite===!0?Q0.All:Q0.None}_getDepthCompare(e){let n;if(e.depthTest===!1)n=Nn.Always;else{const i=e.depthFunc;switch(i){case Sc:n=Nn.Never;break;case Mc:n=Nn.Always;break;case Ec:n=Nn.Less;break;case Rs:n=Nn.LessEqual;break;case wc:n=Nn.Equal;break;case Ac:n=Nn.GreaterEqual;break;case Rc:n=Nn.Greater;break;case Cc:n=Nn.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return n}}class BV extends iM{constructor(e,n,i=2048){super(i),this.device=e,this.type=n,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${n}`});const s=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${n}`,size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${n}`,size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Ri(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const n=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e,n),n}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),n=this.currentQueryIndex,i=n*8;this.currentQueryIndex=0,this.queryOffsets.clear();const s=this.device.createCommandEncoder();s.resolveQuerySet(this.querySet,0,n,this.resolveBuffer,0),s.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,i);const o=s.finish();if(this.device.queue.submit([o]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,i),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const a=new BigUint64Array(this.resultBuffer.getMappedRange(0,i));let l=0;for(const[,c]of e){const u=a[c],h=a[c+1],d=Number(h-u)/1e6;l+=d}return this.resultBuffer.unmap(),this.lastValue=l,l}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class kV extends nM{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new DV(this),this.attributeUtils=new UV(this),this.bindingUtils=new FV(this),this.pipelineUtils=new OV(this),this.textureUtils=new bV(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const n=this.parameters;let i;if(n.device===void 0){const l={powerPreference:n.powerPreference,featureLevel:n.compatibilityMode?"compatibility":void 0},c=typeof navigator<"u"?await navigator.gpu.requestAdapter(l):null;if(c===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const u=Object.values(bm),h=[];for(const f of u)c.features.has(f)&&h.push(f);const d={requiredFeatures:h,requiredLimits:n.requiredLimits};i=await c.requestDevice(d)}else i=n.device;i.lost.then(l=>{const c={api:"WebGPU",message:l.message||"Unknown reason",reason:l.reason||null,originalEvent:l};e.onDeviceLost(c)});const s=n.context!==void 0?n.context:e.domElement.getContext("webgpu");this.device=i,this.context=s;const o=n.alpha?"premultiplied":"opaque",a=Je.getToneMappingMode(this.renderer.outputColorSpace);this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:o,toneMapping:{mode:a}}),this.trackTimestamp=this.trackTimestamp&&this.hasFeature(bm.TimestampQuery),this.updateSize()}get coordinateSystem(){return Cs}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const i=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()});const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const n=e.colorAttachments[0];return this.renderer.samples>0?n.resolveTarget=this.context.getCurrentTexture().createView():n.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,n={}){const i=e.renderTarget,s=this.get(i);let o=s.descriptors;(o===void 0||s.width!==i.width||s.height!==i.height||s.samples!==i.samples)&&(o={},s.descriptors=o);const a=e.getCacheKey();let l=o[a];if(l===void 0){const u=e.textures,h=[];let d;const f=this._isRenderCameraDepthArray(e);for(let p=0;p<u.length;p++){const m=this.get(u[p]),y={label:`colorAttachment_${p}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:_n.TwoD};if(i.isRenderTarget3D)d=e.activeCubeFace,y.baseArrayLayer=0,y.dimension=_n.ThreeD,y.depthOrArrayLayers=u[p].image.depth;else if(i.isRenderTarget&&u[p].image.depth>1)if(f===!0){const _=e.camera.cameras;for(let g=0;g<_.length;g++){const v={...y,baseArrayLayer:g,arrayLayerCount:1,dimension:_n.TwoD},x=m.texture.createView(v);h.push({view:x,resolveTarget:void 0,depthSlice:void 0})}}else y.dimension=_n.TwoDArray,y.depthOrArrayLayers=u[p].image.depth;if(f!==!0){const _=m.texture.createView(y);let g,v;m.msaaTexture!==void 0?(g=m.msaaTexture.createView(),v=_):(g=_,v=void 0),h.push({view:g,resolveTarget:v,depthSlice:d})}}if(l={textureViews:h},e.depth){const p=this.get(e.depthTexture),m={};e.depthTexture.isArrayTexture&&(m.dimension=_n.TwoD,m.arrayLayerCount=1,m.baseArrayLayer=e.activeCubeFace),l.depthStencilView=p.texture.createView(m)}o[a]=l,s.width=i.width,s.height=i.height,s.samples=i.samples,s.activeMipmapLevel=e.activeMipmapLevel,s.activeCubeFace=e.activeCubeFace}const c={colorAttachments:[]};for(let u=0;u<l.textureViews.length;u++){const h=l.textureViews[u];let d={r:0,g:0,b:0,a:1};u===0&&n.clearValue&&(d=n.clearValue),c.colorAttachments.push({view:h.view,depthSlice:h.depthSlice,resolveTarget:h.resolveTarget,loadOp:n.loadOp||Nt.Load,storeOp:n.storeOp||Kn.Store,clearValue:d})}return l.depthStencilView&&(c.depthStencilAttachment={view:l.depthStencilView}),c}beginRender(e){const n=this.get(e);n.frameCalls=this.renderer.info.render.frameCalls;const i=this.device,s=e.occlusionQueryCount;let o;s>0&&(n.currentOcclusionQuerySet&&n.currentOcclusionQuerySet.destroy(),n.currentOcclusionQueryBuffer&&n.currentOcclusionQueryBuffer.destroy(),n.currentOcclusionQuerySet=n.occlusionQuerySet,n.currentOcclusionQueryBuffer=n.occlusionQueryBuffer,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,o=i.createQuerySet({type:"occlusion",count:s,label:`occlusionQuerySet_${e.id}`}),n.occlusionQuerySet=o,n.occlusionQueryIndex=0,n.occlusionQueryObjects=new Array(s),n.lastOcclusionObject=null);let a;e.textures===null?a=this._getDefaultRenderPassDescriptor():a=this._getRenderPassDescriptor(e,{loadOp:Nt.Load}),this.initTimestampQuery(aa.RENDER,this.getTimestampUID(e),a),a.occlusionQuerySet=o;const l=a.depthStencilAttachment;if(e.textures!==null){const u=a.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=Nt.Clear):d.loadOp=Nt.Load,d.storeOp=Kn.Store}}else{const u=a.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=Nt.Clear):u.loadOp=Nt.Load,u.storeOp=Kn.Store}e.depth&&(e.clearDepth?(l.depthClearValue=e.clearDepthValue,l.depthLoadOp=Nt.Clear):l.depthLoadOp=Nt.Load,l.depthStoreOp=Kn.Store),e.stencil&&(e.clearStencil?(l.stencilClearValue=e.clearStencilValue,l.stencilLoadOp=Nt.Clear):l.stencilLoadOp=Nt.Load,l.stencilStoreOp=Kn.Store);const c=i.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const u=e.camera.cameras;!n.layerDescriptors||n.layerDescriptors.length!==u.length?this._createDepthLayerDescriptors(e,n,a,u):this._updateDepthLayerDescriptors(e,n,u),n.bundleEncoders=[],n.bundleSets=[];for(let h=0;h<u.length;h++){const d=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+h),f={attributes:{},bindingGroups:[],pipeline:null,index:null};n.bundleEncoders.push(d),n.bundleSets.push(f)}n.currentPass=null}else{const u=c.beginRenderPass(a);if(n.currentPass=u,e.viewport&&this.updateViewport(e),e.scissor){const{x:h,y:d,width:f,height:p}=e.scissorValue;u.setScissorRect(h,d,f,p)}}n.descriptor=a,n.encoder=c,n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.renderBundles=[]}_createDepthLayerDescriptors(e,n,i,s){const o=i.depthStencilAttachment;n.layerDescriptors=[];const a=this.get(e.depthTexture);a.viewCache||(a.viewCache=[]);for(let l=0;l<s.length;l++){const c={...i,colorAttachments:[{...i.colorAttachments[0],view:i.colorAttachments[l].view}]};if(i.depthStencilAttachment){const u=l;a.viewCache[u]||(a.viewCache[u]=a.texture.createView({dimension:_n.TwoD,baseArrayLayer:l,arrayLayerCount:1})),c.depthStencilAttachment={view:a.viewCache[u],depthLoadOp:o.depthLoadOp||Nt.Clear,depthStoreOp:o.depthStoreOp||Kn.Store,depthClearValue:o.depthClearValue||1},e.stencil&&(c.depthStencilAttachment.stencilLoadOp=o.stencilLoadOp,c.depthStencilAttachment.stencilStoreOp=o.stencilStoreOp,c.depthStencilAttachment.stencilClearValue=o.stencilClearValue)}else c.depthStencilAttachment={...o};n.layerDescriptors.push(c)}}_updateDepthLayerDescriptors(e,n,i){for(let s=0;s<i.length;s++){const o=n.layerDescriptors[s];if(o.depthStencilAttachment){const a=o.depthStencilAttachment;e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Nt.Clear):a.depthLoadOp=Nt.Load),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Nt.Clear):a.stencilLoadOp=Nt.Load)}}}finishRender(e){const n=this.get(e),i=e.occlusionQueryCount;n.renderBundles.length>0&&n.currentPass.executeBundles(n.renderBundles),i>n.occlusionQueryIndex&&n.currentPass.endOcclusionQuery();const s=n.encoder;if(this._isRenderCameraDepthArray(e)===!0){const o=[];for(let a=0;a<n.bundleEncoders.length;a++){const l=n.bundleEncoders[a];o.push(l.finish())}for(let a=0;a<n.layerDescriptors.length;a++)if(a<o.length){const l=n.layerDescriptors[a],c=s.beginRenderPass(l);if(e.viewport){const{x:u,y:h,width:d,height:f,minDepth:p,maxDepth:m}=e.viewportValue;c.setViewport(u,h,d,f,p,m)}if(e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;c.setScissorRect(u,h,d,f)}c.executeBundles([o[a]]),c.end()}}else n.currentPass&&n.currentPass.end();if(i>0){const o=i*8;let a=this.occludedResolveCache.get(o);a===void 0&&(a=this.device.createBuffer({size:o,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(o,a));const l=this.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});n.encoder.resolveQuerySet(n.occlusionQuerySet,0,i,a,0),n.encoder.copyBufferToBuffer(a,0,l,0,o),n.occlusionQueryBuffer=l,this.resolveOccludedAsync(e)}if(this.device.queue.submit([n.encoder.finish()]),e.textures!==null){const o=e.textures;for(let a=0;a<o.length;a++){const l=o[a];l.generateMipmaps===!0&&this.textureUtils.generateMipmaps(l)}}}isOccluded(e,n){const i=this.get(e);return i.occluded&&i.occluded.has(n)}async resolveOccludedAsync(e){const n=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:s}=n;if(i&&s){const o=new WeakSet;n.currentOcclusionQueryObjects=null,n.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const a=i.getMappedRange(),l=new BigUint64Array(a);for(let c=0;c<s.length;c++)l[c]===BigInt(0)&&o.add(s[c]);i.destroy(),n.occluded=o}}updateViewport(e){const{currentPass:n}=this.get(e),{x:i,y:s,width:o,height:a,minDepth:l,maxDepth:c}=e.viewportValue;n.setViewport(i,s,o,a,l,c)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,n,i,s=null){const o=this.device,a=this.renderer;let l=[],c,u,h,d;if(e){const m=this.getClearColor();u={r:m.r,g:m.g,b:m.b,a:m.a}}if(s===null){h=a.depth,d=a.stencil;const m=this._getDefaultRenderPassDescriptor();if(e){l=m.colorAttachments;const y=l[0];y.clearValue=u,y.loadOp=Nt.Clear,y.storeOp=Kn.Store}(h||d)&&(c=m.depthStencilAttachment)}else{h=s.depth,d=s.stencil;const m={loadOp:e?Nt.Clear:Nt.Load,clearValue:e?u:void 0};h&&(m.depthLoadOp=n?Nt.Clear:Nt.Load,m.depthClearValue=n?a.getClearDepth():void 0,m.depthStoreOp=Kn.Store),d&&(m.stencilLoadOp=i?Nt.Clear:Nt.Load,m.stencilClearValue=i?a.getClearStencil():void 0,m.stencilStoreOp=Kn.Store);const y=this._getRenderPassDescriptor(s,m);l=y.colorAttachments,c=y.depthStencilAttachment}h&&c&&(n?(c.depthLoadOp=Nt.Clear,c.depthClearValue=a.getClearDepth(),c.depthStoreOp=Kn.Store):(c.depthLoadOp=Nt.Load,c.depthStoreOp=Kn.Store)),d&&c&&(i?(c.stencilLoadOp=Nt.Clear,c.stencilClearValue=a.getClearStencil(),c.stencilStoreOp=Kn.Store):(c.stencilLoadOp=Nt.Load,c.stencilStoreOp=Kn.Store));const f=o.createCommandEncoder({label:"clear"});f.beginRenderPass({colorAttachments:l,depthStencilAttachment:c}).end(),o.queue.submit([f.finish()])}beginCompute(e){const n=this.get(e);n.frameCalls=this.renderer.info.compute.frameCalls;const i={label:"computeGroup_"+e.id};this.initTimestampQuery(aa.COMPUTE,this.getTimestampUID(e),i),n.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),n.passEncoderGPU=n.cmdEncoderGPU.beginComputePass(i)}compute(e,n,i,s,o=null){const a=this.get(n),{passEncoderGPU:l}=this.get(e),c=this.get(s).pipeline;this.pipelineUtils.setPipeline(l,c);for(let h=0,d=i.length;h<d;h++){const f=i[h],p=this.get(f);l.setBindGroup(h,p.group)}let u;if(o===null&&(o=n.count),typeof o=="number"){const h=o;if(a.dispatchSize===void 0||a.count!==h){a.dispatchSize=[0,1,1],a.count=h;const d=n.workgroupSize;let f=d[0];for(let y=1;y<d.length;y++)f*=d[y];const p=Math.ceil(h/f),m=this.device.limits.maxComputeWorkgroupsPerDimension;u=[p,1,1],p>m&&(u[0]=Math.min(p,m),u[1]=Math.ceil(p/m)),a.dispatchSize=u}u=a.dispatchSize}else u=o;l.dispatchWorkgroups(u[0],u[1]||1,u[2]||1)}finishCompute(e){const n=this.get(e);n.passEncoderGPU.end(),this.device.queue.submit([n.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,n){const{object:i,material:s,context:o,pipeline:a}=e,l=e.getBindings(),c=this.get(o),u=this.get(a).pipeline,h=e.getIndex(),d=h!==null,f=e.getDrawParameters();if(f===null)return;const p=(y,_)=>{this.pipelineUtils.setPipeline(y,u),_.pipeline=u;const g=_.bindingGroups;for(let x=0,b=l.length;x<b;x++){const T=l[x],S=this.get(T);g[T.index]!==T.id&&(y.setBindGroup(T.index,S.group),g[T.index]=T.id)}if(d===!0&&_.index!==h){const x=this.get(h).buffer,b=h.array instanceof Uint16Array?rl.Uint16:rl.Uint32;y.setIndexBuffer(x,b),_.index=h}const v=e.getVertexBuffers();for(let x=0,b=v.length;x<b;x++){const T=v[x];if(_.attributes[x]!==T){const S=this.get(T).buffer;y.setVertexBuffer(x,S),_.attributes[x]=T}}o.stencil===!0&&s.stencilWrite===!0&&c.currentStencilRef!==s.stencilRef&&(y.setStencilReference(s.stencilRef),c.currentStencilRef=s.stencilRef)},m=(y,_)=>{if(p(y,_),i.isBatchedMesh===!0){const g=i._multiDrawStarts,v=i._multiDrawCounts,x=i._multiDrawCount,b=i._multiDrawInstances;b!==null&&Ri("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let T=0;T<x;T++){const S=b?b[T]:1,M=S>1?0:T;d===!0?y.drawIndexed(v[T],S,g[T]/h.array.BYTES_PER_ELEMENT,0,M):y.draw(v[T],S,g[T],M),n.update(i,v[T],S)}}else if(d===!0){const{vertexCount:g,instanceCount:v,firstVertex:x}=f,b=e.getIndirect();if(b!==null){const T=this.get(b).buffer;y.drawIndexedIndirect(T,0)}else y.drawIndexed(g,v,x,0,0);n.update(i,g,v)}else{const{vertexCount:g,instanceCount:v,firstVertex:x}=f,b=e.getIndirect();if(b!==null){const T=this.get(b).buffer;y.drawIndirect(T,0)}else y.draw(g,v,x,0);n.update(i,g,v)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const y=this.get(e.camera),_=e.camera.cameras,g=e.getBindingGroup("cameraIndex");if(y.indexesGPU===void 0||y.indexesGPU.length!==_.length){const x=this.get(g),b=[],T=new Uint32Array([0,0,0,0]);for(let S=0,M=_.length;S<M;S++){T[0]=S;const A=this.bindingUtils.createBindGroupIndex(T,x.layout);b.push(A)}y.indexesGPU=b}const v=this.renderer.getPixelRatio();for(let x=0,b=_.length;x<b;x++){const T=_[x];if(i.layers.test(T.layers)){const S=T.viewport;let M=c.currentPass,A=c.currentSets;if(c.bundleEncoders){const E=c.bundleEncoders[x],w=c.bundleSets[x];M=E,A=w}S&&M.setViewport(Math.floor(S.x*v),Math.floor(S.y*v),Math.floor(S.width*v),Math.floor(S.height*v),o.viewportValue.minDepth,o.viewportValue.maxDepth),g&&y.indexesGPU&&(M.setBindGroup(g.index,y.indexesGPU[x]),A.bindingGroups[g.index]=g.id),m(M,A)}}}else if(c.currentPass){if(c.occlusionQuerySet!==void 0){const y=c.lastOcclusionObject;y!==i&&(y!==null&&y.occlusionTest===!0&&(c.currentPass.endOcclusionQuery(),c.occlusionQueryIndex++),i.occlusionTest===!0&&(c.currentPass.beginOcclusionQuery(c.occlusionQueryIndex),c.occlusionQueryObjects[c.occlusionQueryIndex]=i),c.lastOcclusionObject=i)}m(c.currentPass,c.currentSets)}}needsRenderUpdate(e){const n=this.get(e),{object:i,material:s}=e,o=this.utils,a=o.getSampleCountRenderContext(e.context),l=o.getCurrentColorSpace(e.context),c=o.getCurrentColorFormat(e.context),u=o.getCurrentDepthStencilFormat(e.context),h=o.getPrimitiveTopology(i,s);let d=!1;return(n.material!==s||n.materialVersion!==s.version||n.transparent!==s.transparent||n.blending!==s.blending||n.premultipliedAlpha!==s.premultipliedAlpha||n.blendSrc!==s.blendSrc||n.blendDst!==s.blendDst||n.blendEquation!==s.blendEquation||n.blendSrcAlpha!==s.blendSrcAlpha||n.blendDstAlpha!==s.blendDstAlpha||n.blendEquationAlpha!==s.blendEquationAlpha||n.colorWrite!==s.colorWrite||n.depthWrite!==s.depthWrite||n.depthTest!==s.depthTest||n.depthFunc!==s.depthFunc||n.stencilWrite!==s.stencilWrite||n.stencilFunc!==s.stencilFunc||n.stencilFail!==s.stencilFail||n.stencilZFail!==s.stencilZFail||n.stencilZPass!==s.stencilZPass||n.stencilFuncMask!==s.stencilFuncMask||n.stencilWriteMask!==s.stencilWriteMask||n.side!==s.side||n.alphaToCoverage!==s.alphaToCoverage||n.sampleCount!==a||n.colorSpace!==l||n.colorFormat!==c||n.depthStencilFormat!==u||n.primitiveTopology!==h||n.clippingContextCacheKey!==e.clippingContextCacheKey)&&(n.material=s,n.materialVersion=s.version,n.transparent=s.transparent,n.blending=s.blending,n.premultipliedAlpha=s.premultipliedAlpha,n.blendSrc=s.blendSrc,n.blendDst=s.blendDst,n.blendEquation=s.blendEquation,n.blendSrcAlpha=s.blendSrcAlpha,n.blendDstAlpha=s.blendDstAlpha,n.blendEquationAlpha=s.blendEquationAlpha,n.colorWrite=s.colorWrite,n.depthWrite=s.depthWrite,n.depthTest=s.depthTest,n.depthFunc=s.depthFunc,n.stencilWrite=s.stencilWrite,n.stencilFunc=s.stencilFunc,n.stencilFail=s.stencilFail,n.stencilZFail=s.stencilZFail,n.stencilZPass=s.stencilZPass,n.stencilFuncMask=s.stencilFuncMask,n.stencilWriteMask=s.stencilWriteMask,n.side=s.side,n.alphaToCoverage=s.alphaToCoverage,n.sampleCount=a,n.colorSpace=l,n.colorFormat=c,n.depthStencilFormat=u,n.primitiveTopology=h,n.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:n,material:i}=e,s=this.utils,o=e.context,a=n.isMesh&&n.matrixWorld.determinant()<0;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,a,s.getSampleCountRenderContext(o),s.getCurrentColorSpace(o),s.getCurrentColorFormat(o),s.getCurrentDepthStencilFormat(o),s.getPrimitiveTopology(n,i),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,n){this.textureUtils.createTexture(e,n)}updateTexture(e,n){this.textureUtils.updateTexture(e,n)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,n,i,s,o,a){return this.textureUtils.copyTextureToBuffer(e,n,i,s,o,a)}initTimestampQuery(e,n,i){if(!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new BV(this.device,e,2048));const s=this.timestampQueryPool[e],o=s.allocateQueriesForContext(n);i.timestampWrites={querySet:s.querySet,beginningOfPassWriteIndex:o,endOfPassWriteIndex:o+1}}createNodeBuilder(e,n){return new PV(e,n)}createProgram(e){const n=this.get(e);n.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,n){this.pipelineUtils.createRenderPipeline(e,n)}createComputePipeline(e,n){this.pipelineUtils.createComputePipeline(e,n)}beginBundle(e){const n=this.get(e);n._currentPass=n.currentPass,n._currentSets=n.currentSets,n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,n){const i=this.get(e),o=i.currentPass.finish();this.get(n).bundleGPU=o,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,n){this.get(e).renderBundles.push(this.get(n).bundleGPU)}createBindings(e,n,i,s){this.bindingUtils.createBindings(e,n,i,s)}updateBindings(e,n,i,s){this.bindingUtils.createBindings(e,n,i,s)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let n=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(n|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,n)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,n,i=null,s=null,o=0,a=0){let l=0,c=0,u=0,h=0,d=0,f=0,p=e.image.width,m=e.image.height,y=1;i!==null&&(i.isBox3===!0?(h=i.min.x,d=i.min.y,f=i.min.z,p=i.max.x-i.min.x,m=i.max.y-i.min.y,y=i.max.z-i.min.z):(h=i.min.x,d=i.min.y,p=i.max.x-i.min.x,m=i.max.y-i.min.y,y=1)),s!==null&&(l=s.x,c=s.y,u=s.z||0);const _=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+n.id}),g=this.get(e).texture,v=this.get(n).texture;_.copyTextureToTexture({texture:g,mipLevel:o,origin:{x:h,y:d,z:f}},{texture:v,mipLevel:a,origin:{x:l,y:c,z:u}},[p,m,y]),this.device.queue.submit([_.finish()]),a===0&&n.generateMipmaps&&this.textureUtils.generateMipmaps(n)}copyFramebufferToTexture(e,n,i){const s=this.get(n);let o=null;n.renderTarget?e.isDepthTexture?o=this.get(n.depthTexture).texture:o=this.get(n.textures[0]).texture:e.isDepthTexture?o=this.textureUtils.getDepthBuffer(n.depth,n.stencil):o=this.context.getCurrentTexture();const a=this.get(e).texture;if(o.format!==a.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",o.format,a.format);return}let l;if(s.currentPass?(s.currentPass.end(),l=s.encoder):l=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),l.copyTextureToTexture({texture:o,origin:[i.x,i.y,0]},{texture:a},[i.z,i.w]),s.currentPass){const{descriptor:c}=s;for(let u=0;u<c.colorAttachments.length;u++)c.colorAttachments[u].loadOp=Nt.Load;if(n.depth&&(c.depthStencilAttachment.depthLoadOp=Nt.Load),n.stencil&&(c.depthStencilAttachment.stencilLoadOp=Nt.Load),s.currentPass=l.beginRenderPass(c),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},n.viewport&&this.updateViewport(n),n.scissor){const{x:u,y:h,width:d,height:f}=n.scissorValue;s.currentPass.setScissorRect(u,h,d,f)}}else this.device.queue.submit([l.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class zV extends Mg{constructor(e,n,i,s,o,a){super(e,n,i,s,o,a),this.iesMap=null}copy(e,n){return super.copy(e,n),this.iesMap=e.iesMap,this}}class GV extends Mg{constructor(e,n,i,s,o,a){super(e,n,i,s,o,a),this.aspect=null}copy(e,n){return super.copy(e,n),this.aspect=e.aspect,this}}class VV extends XS{constructor(){super(),this.addMaterial(c3,"MeshPhongMaterial"),this.addMaterial(PS,"MeshStandardMaterial"),this.addMaterial(nk,"MeshPhysicalMaterial"),this.addMaterial(ok,"MeshToonMaterial"),this.addMaterial(n3,"MeshBasicMaterial"),this.addMaterial(a3,"MeshLambertMaterial"),this.addMaterial(ZB,"MeshNormalMaterial"),this.addMaterial(ck,"MeshMatcapMaterial"),this.addMaterial(jB,"LineBasicMaterial"),this.addMaterial(XB,"LineDashedMaterial"),this.addMaterial(pk,"PointsMaterial"),this.addMaterial(LS,"SpriteMaterial"),this.addMaterial(yk,"ShadowMaterial"),this.addLight(qz,D1),this.addLight(xG,Lb),this.addLight(bG,I1),this.addLight(s_,Mg),this.addLight(EG,Ib),this.addLight(wG,C1),this.addLight(AG,F1),this.addLight(TG,zV),this.addLight(MG,GV),this.addToneMapping(tz,fb),this.addToneMapping(nz,pb),this.addToneMapping(iz,mb),this.addToneMapping(sz,gb),this.addToneMapping(cz,_b),this.addToneMapping(uz,yb)}}class HV extends jG{constructor(e={}){let n;e.forceWebGL?n=Y0:(n=kV,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Y0(e)));const i=new n(e);super(i,e),this.library=new VV,this.isWebGPURenderer=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}const bp={type:"change"},a_={type:"start"},l_={type:"end"},sx=1e-6,Pt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},dh=new de,ys=new de,WV=new L,fh=new L,Tp=new L,sa=new nr,ox=new L,ph=new L,Sp=new L,mh=new L;class $V extends pd{constructor(e,n=null){super(e,n),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Pn.ROTATE,MIDDLE:Pn.DOLLY,RIGHT:Pn.PAN},this.target=new L,this.state=Pt.NONE,this.keyState=Pt.NONE,this._lastPosition=new L,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new L,this._movePrev=new de,this._moveCurr=new de,this._lastAxis=new L,this._zoomStart=new de,this._zoomEnd=new de,this._panStart=new de,this._panEnd=new de,this._pointers=[],this._pointerPositions={},this._onPointerMove=qV.bind(this),this._onPointerDown=jV.bind(this),this._onPointerUp=XV.bind(this),this._onPointerCancel=YV.bind(this),this._onContextMenu=n4.bind(this),this._onMouseWheel=t4.bind(this),this._onKeyDown=ZV.bind(this),this._onKeyUp=KV.bind(this),this._onTouchStart=i4.bind(this),this._onTouchMove=r4.bind(this),this._onTouchEnd=s4.bind(this),this._onMouseDown=QV.bind(this),this._onMouseMove=JV.bind(this),this._onMouseUp=e4.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,n!==null&&(this.connect(n),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),n=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-n.clientLeft,this.screen.top=e.top+window.pageYOffset-n.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>sx&&(this.dispatchEvent(bp),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>sx||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(bp),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Pt.NONE,this.keyState=Pt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(bp),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(ys.copy(this._panEnd).sub(this._panStart),ys.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,n=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;ys.x*=e,ys.y*=n}ys.multiplyScalar(this._eye.length()*this.panSpeed),fh.copy(this._eye).cross(this.object.up).setLength(ys.x),fh.add(WV.copy(this.object.up).setLength(ys.y)),this.object.position.add(fh),this.target.add(fh),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(ys.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){mh.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=mh.length();e?(this._eye.copy(this.object.position).sub(this.target),ox.copy(this._eye).normalize(),ph.copy(this.object.up).normalize(),Sp.crossVectors(ph,ox).normalize(),ph.setLength(this._moveCurr.y-this._movePrev.y),Sp.setLength(this._moveCurr.x-this._movePrev.x),mh.copy(ph.add(Sp)),Tp.crossVectors(mh,this._eye).normalize(),e*=this.rotateSpeed,sa.setFromAxisAngle(Tp,e),this._eye.applyQuaternion(sa),this.object.up.applyQuaternion(sa),this._lastAxis.copy(Tp),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),sa.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(sa),this.object.up.applyQuaternion(sa)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Pt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=Bh.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=Bh.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,n){return dh.set((e-this.screen.left)/this.screen.width,(n-this.screen.top)/this.screen.height),dh}_getMouseOnCircle(e,n){return dh.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-n))/this.screen.width),dh}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let n=0;n<this._pointers.length;n++)if(this._pointers[n].pointerId==e.pointerId){this._pointers.splice(n,1);return}}_trackPointer(e){let n=this._pointerPositions[e.pointerId];n===void 0&&(n=new de,this._pointerPositions[e.pointerId]=n),n.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const n=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[n.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function jV(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r))}function qV(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function XV(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchEnd(r):this._onMouseUp(),this._removePointer(r),this._pointers.length===0&&(this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function YV(r){this._removePointer(r)}function KV(){this.enabled!==!1&&(this.keyState=Pt.NONE,window.addEventListener("keydown",this._onKeyDown))}function ZV(r){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Pt.NONE&&(r.code===this.keys[Pt.ROTATE]&&!this.noRotate?this.keyState=Pt.ROTATE:r.code===this.keys[Pt.ZOOM]&&!this.noZoom?this.keyState=Pt.ZOOM:r.code===this.keys[Pt.PAN]&&!this.noPan&&(this.keyState=Pt.PAN)))}function QV(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Pn.DOLLY:this.state=Pt.ZOOM;break;case Pn.ROTATE:this.state=Pt.ROTATE;break;case Pn.PAN:this.state=Pt.PAN;break;default:this.state=Pt.NONE}const n=this.keyState!==Pt.NONE?this.keyState:this.state;n===Pt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY)),this._movePrev.copy(this._moveCurr)):n===Pt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(r.pageX,r.pageY)),this._zoomEnd.copy(this._zoomStart)):n===Pt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(r.pageX,r.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(a_)}function JV(r){const e=this.keyState!==Pt.NONE?this.keyState:this.state;e===Pt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY))):e===Pt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(r.pageX,r.pageY)):e===Pt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(r.pageX,r.pageY))}function e4(){this.state=Pt.NONE,this.dispatchEvent(l_)}function t4(r){if(this.enabled!==!1&&this.noZoom!==!0){switch(r.preventDefault(),r.deltaMode){case 2:this._zoomStart.y-=r.deltaY*.025;break;case 1:this._zoomStart.y-=r.deltaY*.01;break;default:this._zoomStart.y-=r.deltaY*25e-5;break}this.dispatchEvent(a_),this.dispatchEvent(l_)}}function n4(r){this.enabled!==!1&&r.preventDefault()}function i4(r){switch(this._trackPointer(r),this._pointers.length){case 1:this.state=Pt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Pt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,n=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+n*n);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,s=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,s)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(a_)}function r4(r){switch(this._trackPointer(r),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY));break;default:const e=this._getSecondPointerPosition(r),n=r.pageX-e.x,i=r.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(n*n+i*i);const s=(r.pageX+e.x)/2,o=(r.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(s,o));break}}function s4(r){switch(this._pointers.length){case 0:this.state=Pt.NONE;break;case 1:this.state=Pt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(r.pageX,r.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Pt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==r.pointerId){const n=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(n.x,n.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(l_)}const ax={type:"change"},c_={type:"start"},oM={type:"end"},gh=new ud,lx=new Ki,o4=Math.cos(70*Bh.DEG2RAD),bn=new L,ii=2*Math.PI,Bt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Mp=1e-6;class a4 extends pd{constructor(e,n=null){super(e,n),this.state=Bt.NONE,this.target=new L,this.cursor=new L,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Pn.ROTATE,MIDDLE:Pn.DOLLY,RIGHT:Pn.PAN},this.touches={ONE:Xr.ROTATE,TWO:Xr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new L,this._lastQuaternion=new nr,this._lastTargetPosition=new L,this._quat=new nr().setFromUnitVectors(e.up,new L(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Ly,this._sphericalDelta=new Ly,this._scale=1,this._panOffset=new L,this._rotateStart=new de,this._rotateEnd=new de,this._rotateDelta=new de,this._panStart=new de,this._panEnd=new de,this._panDelta=new de,this._dollyStart=new de,this._dollyEnd=new de,this._dollyDelta=new de,this._dollyDirection=new L,this._mouse=new de,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=c4.bind(this),this._onPointerDown=l4.bind(this),this._onPointerUp=u4.bind(this),this._onContextMenu=_4.bind(this),this._onMouseWheel=f4.bind(this),this._onKeyDown=p4.bind(this),this._onTouchStart=m4.bind(this),this._onTouchMove=g4.bind(this),this._onMouseDown=h4.bind(this),this._onMouseMove=d4.bind(this),this._interceptControlDown=y4.bind(this),this._interceptControlUp=v4.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(ax),this.update(),this.state=Bt.NONE}update(e=null){const n=this.object.position;bn.copy(n).sub(this.target),bn.applyQuaternion(this._quat),this._spherical.setFromVector3(bn),this.autoRotate&&this.state===Bt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(i)&&isFinite(s)&&(i<-Math.PI?i+=ii:i>Math.PI&&(i-=ii),s<-Math.PI?s+=ii:s>Math.PI&&(s-=ii),i<=s?this._spherical.theta=Math.max(i,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+s)/2?Math.max(i,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let o=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const a=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),o=a!=this._spherical.radius}if(bn.setFromSpherical(this._spherical),bn.applyQuaternion(this._quatInverse),n.copy(this.target).add(bn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let a=null;if(this.object.isPerspectiveCamera){const l=bn.length();a=this._clampDistance(l*this._scale);const c=l-a;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),o=!!c}else if(this.object.isOrthographicCamera){const l=new L(this._mouse.x,this._mouse.y,0);l.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),o=c!==this.object.zoom;const u=new L(this._mouse.x,this._mouse.y,0);u.unproject(this.object),this.object.position.sub(u).add(l),this.object.updateMatrixWorld(),a=bn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;a!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(a).add(this.object.position):(gh.origin.copy(this.object.position),gh.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(gh.direction))<o4?this.object.lookAt(this.target):(lx.setFromNormalAndCoplanarPoint(this.object.up,this.target),gh.intersectPlane(lx,this.target))))}else if(this.object.isOrthographicCamera){const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),a!==this.object.zoom&&(this.object.updateProjectionMatrix(),o=!0)}return this._scale=1,this._performCursorZoom=!1,o||this._lastPosition.distanceToSquared(this.object.position)>Mp||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Mp||this._lastTargetPosition.distanceToSquared(this.target)>Mp?(this.dispatchEvent(ax),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?ii/60*this.autoRotateSpeed*e:ii/60/60*this.autoRotateSpeed}_getZoomScale(e){const n=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*n)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,n){bn.setFromMatrixColumn(n,0),bn.multiplyScalar(-e),this._panOffset.add(bn)}_panUp(e,n){this.screenSpacePanning===!0?bn.setFromMatrixColumn(n,1):(bn.setFromMatrixColumn(n,0),bn.crossVectors(this.object.up,bn)),bn.multiplyScalar(e),this._panOffset.add(bn)}_pan(e,n){const i=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;bn.copy(s).sub(this.target);let o=bn.length();o*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*o/i.clientHeight,this.object.matrix),this._panUp(2*n*o/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(n*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,n){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),s=e-i.left,o=n-i.top,a=i.width,l=i.height;this._mouse.x=s/a*2-1,this._mouse.y=-(o/l)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(ii*this._rotateDelta.x/n.clientHeight),this._rotateUp(ii*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let n=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(ii*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),n=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-ii*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),n=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(ii*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),n=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-ii*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),n=!0;break}n&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateStart.set(i,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panStart.set(i,s)}}_handleTouchStartDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,o=Math.sqrt(i*i+s*s);this._dollyStart.set(0,o)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),s=.5*(e.pageX+i.x),o=.5*(e.pageY+i.y);this._rotateEnd.set(s,o)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(ii*this._rotateDelta.x/n.clientHeight),this._rotateUp(ii*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panEnd.set(i,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,o=Math.sqrt(i*i+s*s);this._dollyEnd.set(0,o),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=(e.pageX+n.x)*.5,l=(e.pageY+n.y)*.5;this._updateZoomParameters(a,l)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId){this._pointers.splice(n,1);return}}_isTrackingPointer(e){for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId)return!0;return!1}_trackPointer(e){let n=this._pointerPositions[e.pointerId];n===void 0&&(n=new de,this._pointerPositions[e.pointerId]=n),n.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const n=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[n]}_customWheelEvent(e){const n=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(n){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function l4(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(r)&&(this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r)))}function c4(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function u4(r){switch(this._removePointer(r),this._pointers.length){case 0:this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(oM),this.state=Bt.NONE;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y});break}}function h4(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Pn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(r),this.state=Bt.DOLLY;break;case Pn.ROTATE:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Bt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Bt.ROTATE}break;case Pn.PAN:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Bt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Bt.PAN}break;default:this.state=Bt.NONE}this.state!==Bt.NONE&&this.dispatchEvent(c_)}function d4(r){switch(this.state){case Bt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(r);break;case Bt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(r);break;case Bt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(r);break}}function f4(r){this.enabled===!1||this.enableZoom===!1||this.state!==Bt.NONE||(r.preventDefault(),this.dispatchEvent(c_),this._handleMouseWheel(this._customWheelEvent(r)),this.dispatchEvent(oM))}function p4(r){this.enabled!==!1&&this._handleKeyDown(r)}function m4(r){switch(this._trackPointer(r),this._pointers.length){case 1:switch(this.touches.ONE){case Xr.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(r),this.state=Bt.TOUCH_ROTATE;break;case Xr.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(r),this.state=Bt.TOUCH_PAN;break;default:this.state=Bt.NONE}break;case 2:switch(this.touches.TWO){case Xr.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(r),this.state=Bt.TOUCH_DOLLY_PAN;break;case Xr.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(r),this.state=Bt.TOUCH_DOLLY_ROTATE;break;default:this.state=Bt.NONE}break;default:this.state=Bt.NONE}this.state!==Bt.NONE&&this.dispatchEvent(c_)}function g4(r){switch(this._trackPointer(r),this.state){case Bt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(r),this.update();break;case Bt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(r),this.update();break;case Bt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(r),this.update();break;case Bt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(r),this.update();break;default:this.state=Bt.NONE}}function _4(r){this.enabled!==!1&&r.preventDefault()}function y4(r){r.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function v4(r){r.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const x4={type:"change"},cx=1e-6,ux=new nr;class b4 extends pd{constructor(e,n=null){super(e,n),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new L(0,0,0),this._rotationVector=new L(0,0,0),this._lastQuaternion=new nr,this._lastPosition=new L,this._status=0,this._onKeyDown=T4.bind(this),this._onKeyUp=S4.bind(this),this._onPointerMove=E4.bind(this),this._onPointerDown=M4.bind(this),this._onPointerUp=w4.bind(this),this._onPointerCancel=A4.bind(this),this._onContextMenu=R4.bind(this),n!==null&&this.connect(n)}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const n=this.object,i=e*this.movementSpeed,s=e*this.rollSpeed;n.translateX(this._moveVector.x*i),n.translateY(this._moveVector.y*i),n.translateZ(this._moveVector.z*i),ux.set(this._rotationVector.x*s,this._rotationVector.y*s,this._rotationVector.z*s,1).normalize(),n.quaternion.multiply(ux),(this._lastPosition.distanceToSquared(n.position)>cx||8*(1-this._lastQuaternion.dot(n.quaternion))>cx)&&(this.dispatchEvent(x4),this._lastQuaternion.copy(n.quaternion),this._lastPosition.copy(n.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function T4(r){if(!(r.altKey||this.enabled===!1)){switch(r.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function S4(r){if(this.enabled!==!1){switch(r.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function M4(r){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(r.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function E4(r){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),n=e.size[0]/2,i=e.size[1]/2;this._moveState.yawLeft=-(r.pageX-e.offset[0]-n)/n,this._moveState.pitchDown=(r.pageY-e.offset[1]-i)/i,this._updateRotationVector()}}function w4(r){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(r.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function A4(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function R4(r){this.enabled!==!1&&r.preventDefault()}const C4={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class Cd{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const N4=new eu(-1,1,1,-1,0,1);class P4 extends $n{constructor(){super(),this.setAttribute("position",new mn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new mn([0,2,0,0,2,0],2))}}const D4=new P4;class L4{constructor(e){this._mesh=new yn(D4,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,N4)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class I4 extends Cd{constructor(e,n="tDiffuse"){super(),this.textureID=n,this.uniforms=null,this.material=null,e instanceof Tr?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Mb.clone(e.uniforms),this.material=new Tr({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new L4(this.material)}render(e,n,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class hx extends Cd{constructor(e,n){super(),this.scene=e,this.camera=n,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,n,i){const s=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0);let a,l;this.inverse?(a=0,l=1):(a=1,l=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),o.buffers.stencil.setFunc(s.ALWAYS,a,4294967295),o.buffers.stencil.setClear(l),o.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.color.setMask(!0),o.buffers.depth.setMask(!0),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(s.EQUAL,1,4294967295),o.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),o.buffers.stencil.setLocked(!0)}}class U4 extends Cd{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class F4{constructor(e,n){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),n===void 0){const i=e.getSize(new de);this._width=i.width,this._height=i.height,n=new Ns(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Cn}),n.texture.name="EffectComposer.rt1"}else this._width=n.width,this._height=n.height;this.renderTarget1=n,this.renderTarget2=n.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new I4(C4),this.copyPass.material.blending=li,this.clock=new Fb}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,n){this.passes.splice(n,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const n=this.passes.indexOf(e);n!==-1&&this.passes.splice(n,1)}isLastEnabledPass(e){for(let n=e+1;n<this.passes.length;n++)if(this.passes[n].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const n=this.renderer.getRenderTarget();let i=!1;for(let s=0,o=this.passes.length;s<o;s++){const a=this.passes[s];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),a.needsSwap){if(i){const l=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(l.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(l.EQUAL,1,4294967295)}this.swapBuffers()}hx!==void 0&&(a instanceof hx?i=!0:a instanceof U4&&(i=!1))}}this.renderer.setRenderTarget(n)}reset(e){if(e===void 0){const n=this.renderer.getSize(new de);this._pixelRatio=this.renderer.getPixelRatio(),this._width=n.width,this._height=n.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,n){this._width=e,this._height=n;const i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(let o=0;o<this.passes.length;o++)this.passes[o].setSize(i,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class O4 extends Cd{constructor(e,n,i=null,s=null,o=null){super(),this.scene=e,this.camera=n,this.overrideMaterial=i,this.clearColor=s,this.clearAlpha=o,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new We}render(e,n,i){const s=e.autoClear;e.autoClear=!1;let o,a;this.overrideMaterial!==null&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(o=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(o),this.overrideMaterial!==null&&(this.scene.overrideMaterial=a),e.autoClear=s}}function di(){return di=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)({}).hasOwnProperty.call(n,i)&&(r[i]=n[i])}return r},di.apply(null,arguments)}function B4(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function Hc(r,e){return Hc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Hc(r,e)}function k4(r,e){r.prototype=Object.create(e.prototype),r.prototype.constructor=r,Hc(r,e)}function Sm(r){return Sm=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Sm(r)}function z4(r){try{return Function.toString.call(r).indexOf("[native code]")!==-1}catch{return typeof r=="function"}}function aM(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(aM=function(){return!!r})()}function G4(r,e,n){if(aM())return Reflect.construct.apply(null,arguments);var i=[null];i.push.apply(i,e);var s=new(r.bind.apply(r,i));return n&&Hc(s,n.prototype),s}function Mm(r){var e=typeof Map=="function"?new Map:void 0;return Mm=function(i){if(i===null||!z4(i))return i;if(typeof i!="function")throw new TypeError("Super expression must either be null or a function");if(e!==void 0){if(e.has(i))return e.get(i);e.set(i,s)}function s(){return G4(i,arguments,Sm(this).constructor)}return s.prototype=Object.create(i.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}),Hc(s,i)},Mm(r)}var yr=function(r){k4(e,r);function e(n){var i;return i=r.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+n+" for more information.")||this,B4(i)}return e}(Mm(Error));function Ep(r){return Math.round(r*255)}function V4(r,e,n){return Ep(r)+","+Ep(e)+","+Ep(n)}function Qh(r,e,n,i){if(i===void 0&&(i=V4),e===0)return i(n,n,n);var s=(r%360+360)%360/60,o=(1-Math.abs(2*n-1))*e,a=o*(1-Math.abs(s%2-1)),l=0,c=0,u=0;s>=0&&s<1?(l=o,c=a):s>=1&&s<2?(l=a,c=o):s>=2&&s<3?(c=o,u=a):s>=3&&s<4?(c=a,u=o):s>=4&&s<5?(l=a,u=o):s>=5&&s<6&&(l=o,u=a);var h=n-o/2,d=l+h,f=c+h,p=u+h;return i(d,f,p)}var dx={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function H4(r){if(typeof r!="string")return r;var e=r.toLowerCase();return dx[e]?"#"+dx[e]:r}var W4=/^#[a-fA-F0-9]{6}$/,$4=/^#[a-fA-F0-9]{8}$/,j4=/^#[a-fA-F0-9]{3}$/,q4=/^#[a-fA-F0-9]{4}$/,wp=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,X4=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,Y4=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,K4=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function sl(r){if(typeof r!="string")throw new yr(3);var e=H4(r);if(e.match(W4))return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16)};if(e.match($4)){var n=parseFloat((parseInt(""+e[7]+e[8],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16),alpha:n}}if(e.match(j4))return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16)};if(e.match(q4)){var i=parseFloat((parseInt(""+e[4]+e[4],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16),alpha:i}}var s=wp.exec(e);if(s)return{red:parseInt(""+s[1],10),green:parseInt(""+s[2],10),blue:parseInt(""+s[3],10)};var o=X4.exec(e.substring(0,50));if(o)return{red:parseInt(""+o[1],10),green:parseInt(""+o[2],10),blue:parseInt(""+o[3],10),alpha:parseFloat(""+o[4])>1?parseFloat(""+o[4])/100:parseFloat(""+o[4])};var a=Y4.exec(e);if(a){var l=parseInt(""+a[1],10),c=parseInt(""+a[2],10)/100,u=parseInt(""+a[3],10)/100,h="rgb("+Qh(l,c,u)+")",d=wp.exec(h);if(!d)throw new yr(4,e,h);return{red:parseInt(""+d[1],10),green:parseInt(""+d[2],10),blue:parseInt(""+d[3],10)}}var f=K4.exec(e.substring(0,50));if(f){var p=parseInt(""+f[1],10),m=parseInt(""+f[2],10)/100,y=parseInt(""+f[3],10)/100,_="rgb("+Qh(p,m,y)+")",g=wp.exec(_);if(!g)throw new yr(4,e,_);return{red:parseInt(""+g[1],10),green:parseInt(""+g[2],10),blue:parseInt(""+g[3],10),alpha:parseFloat(""+f[4])>1?parseFloat(""+f[4])/100:parseFloat(""+f[4])}}throw new yr(5)}function Z4(r){var e=r.red/255,n=r.green/255,i=r.blue/255,s=Math.max(e,n,i),o=Math.min(e,n,i),a=(s+o)/2;if(s===o)return r.alpha!==void 0?{hue:0,saturation:0,lightness:a,alpha:r.alpha}:{hue:0,saturation:0,lightness:a};var l,c=s-o,u=a>.5?c/(2-s-o):c/(s+o);switch(s){case e:l=(n-i)/c+(n<i?6:0);break;case n:l=(i-e)/c+2;break;default:l=(e-n)/c+4;break}return l*=60,r.alpha!==void 0?{hue:l,saturation:u,lightness:a,alpha:r.alpha}:{hue:l,saturation:u,lightness:a}}function Os(r){return Z4(sl(r))}var Q4=function(e){return e.length===7&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e},Em=Q4;function io(r){var e=r.toString(16);return e.length===1?"0"+e:e}function Ap(r){return io(Math.round(r*255))}function J4(r,e,n){return Em("#"+Ap(r)+Ap(e)+Ap(n))}function lM(r,e,n){return Qh(r,e,n,J4)}function eH(r,e,n){if(typeof r=="object"&&e===void 0&&n===void 0)return lM(r.hue,r.saturation,r.lightness);throw new yr(1)}function tH(r,e,n,i){if(typeof r=="object"&&e===void 0&&n===void 0&&i===void 0)return r.alpha>=1?lM(r.hue,r.saturation,r.lightness):"rgba("+Qh(r.hue,r.saturation,r.lightness)+","+r.alpha+")";throw new yr(2)}function cM(r,e,n){if(typeof r=="number"&&typeof e=="number"&&typeof n=="number")return Em("#"+io(r)+io(e)+io(n));if(typeof r=="object"&&e===void 0&&n===void 0)return Em("#"+io(r.red)+io(r.green)+io(r.blue));throw new yr(6)}function Nd(r,e,n,i){if(typeof r=="object"&&e===void 0&&n===void 0&&i===void 0)return r.alpha>=1?cM(r.red,r.green,r.blue):"rgba("+r.red+","+r.green+","+r.blue+","+r.alpha+")";throw new yr(7)}var nH=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},iH=function(e){return typeof e.red=="number"&&typeof e.green=="number"&&typeof e.blue=="number"&&typeof e.alpha=="number"},rH=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&(typeof e.alpha!="number"||typeof e.alpha>"u")},sH=function(e){return typeof e.hue=="number"&&typeof e.saturation=="number"&&typeof e.lightness=="number"&&typeof e.alpha=="number"};function Bs(r){if(typeof r!="object")throw new yr(8);if(iH(r))return Nd(r);if(nH(r))return cM(r);if(sH(r))return tH(r);if(rH(r))return eH(r);throw new yr(8)}function uM(r,e,n){return function(){var s=n.concat(Array.prototype.slice.call(arguments));return s.length>=e?r.apply(this,s):uM(r,e,s)}}function Ci(r){return uM(r,r.length,[])}function oH(r,e){if(e==="transparent")return e;var n=Os(e);return Bs(di({},n,{hue:n.hue+parseFloat(r)}))}Ci(oH);function _l(r,e,n){return Math.max(r,Math.min(e,n))}function aH(r,e){if(e==="transparent")return e;var n=Os(e);return Bs(di({},n,{lightness:_l(0,1,n.lightness-parseFloat(r))}))}Ci(aH);function lH(r,e){if(e==="transparent")return e;var n=Os(e);return Bs(di({},n,{saturation:_l(0,1,n.saturation-parseFloat(r))}))}Ci(lH);function cH(r,e){if(e==="transparent")return e;var n=Os(e);return Bs(di({},n,{lightness:_l(0,1,n.lightness+parseFloat(r))}))}Ci(cH);function uH(r,e,n){if(e==="transparent")return n;if(n==="transparent")return e;if(r===0)return n;var i=sl(e),s=di({},i,{alpha:typeof i.alpha=="number"?i.alpha:1}),o=sl(n),a=di({},o,{alpha:typeof o.alpha=="number"?o.alpha:1}),l=s.alpha-a.alpha,c=parseFloat(r)*2-1,u=c*l===-1?c:c+l,h=1+c*l,d=(u/h+1)/2,f=1-d,p={red:Math.floor(s.red*d+a.red*f),green:Math.floor(s.green*d+a.green*f),blue:Math.floor(s.blue*d+a.blue*f),alpha:s.alpha*parseFloat(r)+a.alpha*(1-parseFloat(r))};return Nd(p)}var hH=Ci(uH),hM=hH;function dH(r,e){if(e==="transparent")return e;var n=sl(e),i=typeof n.alpha=="number"?n.alpha:1,s=di({},n,{alpha:_l(0,1,(i*100+parseFloat(r)*100)/100)});return Nd(s)}var fH=Ci(dH),pH=fH;function mH(r,e){if(e==="transparent")return e;var n=Os(e);return Bs(di({},n,{saturation:_l(0,1,n.saturation+parseFloat(r))}))}Ci(mH);function gH(r,e){return e==="transparent"?e:Bs(di({},Os(e),{hue:parseFloat(r)}))}Ci(gH);function _H(r,e){return e==="transparent"?e:Bs(di({},Os(e),{lightness:parseFloat(r)}))}Ci(_H);function yH(r,e){return e==="transparent"?e:Bs(di({},Os(e),{saturation:parseFloat(r)}))}Ci(yH);function vH(r,e){return e==="transparent"?e:hM(parseFloat(r),"rgb(0, 0, 0)",e)}Ci(vH);function xH(r,e){return e==="transparent"?e:hM(parseFloat(r),"rgb(255, 255, 255)",e)}Ci(xH);function bH(r,e){if(e==="transparent")return e;var n=sl(e),i=typeof n.alpha=="number"?n.alpha:1,s=di({},n,{alpha:_l(0,1,+(i*100-parseFloat(r)*100).toFixed(2)/100)});return Nd(s)}Ci(bH);function TH(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var SH=`.scene-nav-info {
  position: absolute;
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
  font-family: sans-serif;
  pointer-events: none;
  user-select: none;
}

.scene-container canvas:focus {
  outline: none;
}`;TH(SH);function wm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function MH(r){if(Array.isArray(r))return r}function EH(r){if(Array.isArray(r))return wm(r)}function wH(r,e,n){return(e=LH(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function AH(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function RH(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e!==0)for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function CH(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function NH(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function PH(r,e){return MH(r)||RH(r,e)||dM(r,e)||CH()}function Qs(r){return EH(r)||AH(r)||dM(r)||NH()}function DH(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function LH(r){var e=DH(r,"string");return typeof e=="symbol"?e:e+""}function dM(r,e){if(r){if(typeof r=="string")return wm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?wm(r,e):void 0}}var Qt=window.THREE?window.THREE:{WebGLRenderer:xL,Scene:hd,PerspectiveCamera:Rn,Raycaster:Ob,SRGBColorSpace:Bn,TextureLoader:R1,Vector2:de,Vector3:L,Box3:So,Color:We,Mesh:yn,SphereGeometry:Jc,MeshBasicMaterial:pr,BackSide:kt,Clock:Fb},fM=ol({props:{width:{default:window.innerWidth,onChange:function(e,n,i){isNaN(e)&&(n.width=i)}},height:{default:window.innerHeight,onChange:function(e,n,i){isNaN(e)&&(n.height=i)}},viewOffset:{default:[0,0]},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,n){n.hoverObj=null,n.tooltip&&n.tooltip.content(null)},triggerUpdate:!1},pointerRaycasterThrottleMs:{default:50,triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},pointsHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){e.controls.enabled&&e.controls.update&&e.controls.update(Math.min(1,e.clock.getDelta())),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(a){return a.render(e.scene,e.camera)});var n=+new Date;if(e.enablePointerInteraction&&n-e.lastRaycasterCheck>=e.pointerRaycasterThrottleMs){e.lastRaycasterCheck=n;var i=null;if(e.hoverDuringDrag||!e.isPointerDragging){var s=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y);e.hoverOrderComparator&&s.sort(function(a,l){return e.hoverOrderComparator(a.object,l.object)});var o=s.find(function(a){return e.hoverFilter(a.object)})||null;i=o?o.object:null,e.intersection=o||null}i!==e.hoverObj&&(e.onHover(i,e.hoverObj,e.intersection),e.tooltip.content(i&&Oe(e.tooltipContent)(i,e.intersection)||null),e.hoverObj=i)}e.tweenGroup.update()}return this},getPointerPos:function(e){var n=e.pointerPos,i=n.x,s=n.y;return{x:i,y:s}},cameraPosition:function(e,n,i,s){var o=e.camera;if(n&&e.initialised){var a=n,l=i||{x:0,y:0,z:0};if(!s)h(a),d(l);else{var c=Object.assign({},o.position),u=f();e.tweenGroup.add(new Dh(c).to(a,s).easing(Zr.Quadratic.Out).onUpdate(h).start()),e.tweenGroup.add(new Dh(u).to(l,s/3).easing(Zr.Quadratic.Out).onUpdate(d).start())}return this}return Object.assign({},o.position,{lookAt:f()});function h(p){var m=p.x,y=p.y,_=p.z;m!==void 0&&(o.position.x=m),y!==void 0&&(o.position.y=y),_!==void 0&&(o.position.z=_)}function d(p){var m=new Qt.Vector3(p.x,p.y,p.z);e.controls.enabled&&e.controls.target?e.controls.target=m:o.lookAt(m)}function f(){return Object.assign(new Qt.Vector3(0,0,-1e3).applyQuaternion(o.quaternion).add(o.position))}},zoomToFit:function(e){for(var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,s=arguments.length,o=new Array(s>3?s-3:0),a=3;a<s;a++)o[a-3]=arguments[a];return this.fitToBbox(this.getBbox.apply(this,o),n,i)},fitToBbox:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,o=e.camera;if(n){var a=new Qt.Vector3(0,0,0),l=Math.max.apply(Math,Qs(Object.entries(n).map(function(p){var m=PH(p,2),y=m[0],_=m[1];return Math.max.apply(Math,Qs(_.map(function(g){return Math.abs(a[y]-g)})))})))*2,c=(1-s*2/e.height)*o.fov,u=l/Math.atan(c*Math.PI/180),h=u/o.aspect,d=Math.max(u,h);if(d>0){var f=a.clone().sub(o.position).normalize().multiplyScalar(-d);this.cameraPosition(f,a,i)}}return this},getBbox:function(e){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},i=new Qt.Box3(new Qt.Vector3(0,0,0),new Qt.Vector3(0,0,0)),s=e.objects.filter(n);return s.length?(s.forEach(function(o){return i.expandByObject(o)}),Object.assign.apply(Object,Qs(["x","y","z"].map(function(o){return wH({},o,[i.min[o],i.max[o]])})))):null},getScreenCoords:function(e,n,i,s){var o=new Qt.Vector3(n,i,s);return o.project(this.camera()),{x:(o.x+1)*e.width/2,y:-(o.y-1)*e.height/2}},getSceneCoords:function(e,n,i){var s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,o=new Qt.Vector2(n/e.width*2-1,-(i/e.height)*2+1),a=new Qt.Raycaster;return a.setFromCamera(o,e.camera),Object.assign({},a.ray.at(s,new Qt.Vector3))},intersectingObjects:function(e,n,i){var s=new Qt.Vector2(n/e.width*2-1,-(i/e.height)*2+1),o=new Qt.Raycaster;return o.params.Line.threshold=e.lineHoverPrecision,o.params.Points.threshold=e.pointsHoverPrecision,o.setFromCamera(s,e.camera),o.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new Qt.Scene,camera:new Qt.PerspectiveCamera,clock:new Qt.Clock,tweenGroup:new Pm,lastRaycasterCheck:0}},init:function(e,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=i.controlType,o=s===void 0?"trackball":s,a=i.useWebGPU,l=a===void 0?!1:a,c=i.rendererConfig,u=c===void 0?{}:c,h=i.extraRenderers,d=h===void 0?[]:h,f=i.waitForLoadComplete,p=f===void 0?!0:f;e.innerHTML="",e.appendChild(n.container=document.createElement("div")),n.container.className="scene-container",n.container.style.position="relative",n.container.appendChild(n.navInfo=document.createElement("div")),n.navInfo.className="scene-nav-info",n.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[o]||"",n.navInfo.style.display=n.showNavInfo?null:"none",n.tooltip=new Hx(n.container),n.pointerPos=new Qt.Vector2,n.pointerPos.x=-2,n.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(m){return n.container.addEventListener(m,function(y){if(m==="pointerdown"&&(n.isPointerPressed=!0),!n.isPointerDragging&&y.type==="pointermove"&&(y.pressure>0||n.isPointerPressed)&&(y.pointerType==="mouse"||y.movementX===void 0||[y.movementX,y.movementY].some(function(v){return Math.abs(v)>1}))&&(n.isPointerDragging=!0),n.enablePointerInteraction){var _=g(n.container);n.pointerPos.x=y.pageX-_.left,n.pointerPos.y=y.pageY-_.top}function g(v){var x=v.getBoundingClientRect(),b=window.pageXOffset||document.documentElement.scrollLeft,T=window.pageYOffset||document.documentElement.scrollTop;return{top:x.top+T,left:x.left+b}}},{passive:!0})}),n.container.addEventListener("pointerup",function(m){n.isPointerPressed&&(n.isPointerPressed=!1,!(n.isPointerDragging&&(n.isPointerDragging=!1,!n.clickAfterDrag))&&requestAnimationFrame(function(){m.button===0&&n.onClick(n.hoverObj||null,m,n.intersection),m.button===2&&n.onRightClick&&n.onRightClick(n.hoverObj||null,m,n.intersection)}))},{passive:!0,capture:!0}),n.container.addEventListener("contextmenu",function(m){n.onRightClick&&m.preventDefault()}),n.renderer=new(l?HV:Qt.WebGLRenderer)(Object.assign({antialias:!0,alpha:!0},u)),n.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),n.container.appendChild(n.renderer.domElement),n.extraRenderers=d,n.extraRenderers.forEach(function(m){m.domElement.style.position="absolute",m.domElement.style.top="0px",m.domElement.style.pointerEvents="none",n.container.appendChild(m.domElement)}),n.postProcessingComposer=new F4(n.renderer),n.postProcessingComposer.addPass(new O4(n.scene,n.camera)),n.controls=new{trackball:$V,orbit:a4,fly:b4}[o](n.camera,n.renderer.domElement),o==="fly"&&(n.controls.movementSpeed=300,n.controls.rollSpeed=Math.PI/6,n.controls.dragToLook=!0),(o==="trackball"||o==="orbit")&&(n.controls.minDistance=.1,n.controls.maxDistance=n.skyRadius,n.controls.addEventListener("start",function(){n.controlsEngaged=!0}),n.controls.addEventListener("change",function(){n.controlsEngaged&&(n.controlsDragging=!0)}),n.controls.addEventListener("end",function(){n.controlsEngaged=!1,n.controlsDragging=!1})),[n.renderer,n.postProcessingComposer].concat(Qs(n.extraRenderers)).forEach(function(m){return m.setSize(n.width,n.height)}),n.camera.aspect=n.width/n.height,n.camera.updateProjectionMatrix(),n.camera.position.z=1e3,n.scene.add(n.skysphere=new Qt.Mesh),n.skysphere.visible=!1,n.loadComplete=n.scene.visible=!p,window.scene=n.scene},update:function(e,n){if(e.width&&e.height&&(n.hasOwnProperty("width")||n.hasOwnProperty("height"))){var i,s=e.width,o=e.height;e.container.style.width="".concat(s,"px"),e.container.style.height="".concat(o,"px"),[e.renderer,e.postProcessingComposer].concat(Qs(e.extraRenderers)).forEach(function(p){return p.setSize(s,o)}),e.camera.aspect=s/o;var a=e.viewOffset.slice(0,2);a.some(function(p){return p})&&(i=e.camera).setViewOffset.apply(i,[s,o].concat(Qs(a),[s,o])),e.camera.updateProjectionMatrix()}if(n.hasOwnProperty("viewOffset")){var l,c=e.width,u=e.height,h=e.viewOffset.slice(0,2);h.some(function(p){return p})?(l=e.camera).setViewOffset.apply(l,[c,u].concat(Qs(h),[c,u])):e.camera.clearViewOffset()}if(n.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&n.skyRadius&&(e.controls.maxDistance=Math.min(e.controls.maxDistance,e.skyRadius)),e.camera.far=e.skyRadius*2.5,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new Qt.SphereGeometry(e.skyRadius)),n.hasOwnProperty("backgroundColor")){var d=sl(e.backgroundColor).alpha;d===void 0&&(d=1),e.renderer.setClearColor(new Qt.Color(pH(1,e.backgroundColor)),d)}n.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new Qt.TextureLoader().load(e.backgroundImageUrl,function(p){p.colorSpace=Qt.SRGBColorSpace,e.skysphere.material=new Qt.MeshBasicMaterial({map:p,side:Qt.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&f()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&f())),n.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),n.hasOwnProperty("lights")&&((n.lights||[]).forEach(function(p){return e.scene.remove(p)}),e.lights.forEach(function(p){return e.scene.add(p)})),n.hasOwnProperty("objects")&&((n.objects||[]).forEach(function(p){return e.scene.remove(p)}),e.objects.forEach(function(p){return e.scene.add(p)}));function f(){e.loadComplete=e.scene.visible=!0}}});function IH(r,e){e===void 0&&(e={});var n=e.insertAt;if(!(typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",n==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=r:s.appendChild(document.createTextNode(r))}}var UH=`.graph-info-msg {
  top: 50%;
  width: 100%;
  text-align: center;
  color: lavender;
  opacity: 0.7;
  font-size: 22px;
  position: absolute;
  font-family: Sans-serif;
}

.scene-container .clickable {
  cursor: pointer;
}

.scene-container .grabbable {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.scene-container .grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}`;IH(UH);function Am(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function FH(r){if(Array.isArray(r))return Am(r)}function ou(r,e,n){return(e=zH(e))in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function OH(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function BH(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function fx(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(r,s).enumerable})),n.push.apply(n,i)}return n}function _h(r){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?fx(Object(n),!0).forEach(function(i){ou(r,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):fx(Object(n)).forEach(function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(n,i))})}return r}function Pd(r){return FH(r)||OH(r)||GH(r)||BH()}function kH(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(r)}function zH(r){var e=kH(r,"string");return typeof e=="symbol"?e:e+""}function GH(r,e){if(r){if(typeof r=="string")return Am(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Am(r,e):void 0}}function pM(r,e){var n=new e;return n._destructor&&n._destructor(),{linkProp:function(s){return{default:n[s](),onChange:function(a,l){l[r][s](a)},triggerUpdate:!1}},linkMethod:function(s){return function(o){for(var a=o[r],l=arguments.length,c=new Array(l>1?l-1:0),u=1;u<l;u++)c[u-1]=arguments[u];var h=a[s].apply(a,c);return h===a?this:h}}}}var Rp=window.THREE?window.THREE:{AmbientLight:Ib,DirectionalLight:Lb,REVISION:al},VH=170,mM=pM("forceGraph",lT),HH=Object.assign.apply(Object,Pd(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","dagNodeFilter","onDagError","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeVisibility","nodeThreeObject","nodeThreeObjectExtend","nodePositionUpdate","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleOffset","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","linkDirectionalParticleThreeObject","forceEngine","d3AlphaDecay","d3VelocityDecay","d3AlphaMin","ngraphPhysics","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(r){return ou({},r,mM.linkProp(r))}))),WH=Object.assign.apply(Object,Pd(["refresh","getGraphBbox","d3Force","d3ReheatSimulation","emitParticle"].map(function(r){return ou({},r,mM.linkMethod(r))}))),Ch=pM("renderObjs",fM),$H=Object.assign.apply(Object,Pd(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(r){return ou({},r,Ch.linkProp(r))}))),jH=Object.assign.apply(Object,Pd(["lights","cameraPosition","postProcessingComposer"].map(function(r){return ou({},r,Ch.linkMethod(r))})).concat([{graph2ScreenCoords:Ch.linkMethod("getScreenCoords"),screen2GraphCoords:Ch.linkMethod("getSceneCoords")}])),qH=ol({props:_h(_h({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(e,n){return n.renderObjs.lineHoverPrecision(e)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(e,n){var i=n.renderObjs.controls();i&&(i.enabled=e,e&&i.domElement&&i.domElement.dispatchEvent(new PointerEvent("pointerup")))},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{triggerUpdate:!1},onNodeRightClick:{triggerUpdate:!1},onNodeHover:{triggerUpdate:!1},onLinkClick:{triggerUpdate:!1},onLinkRightClick:{triggerUpdate:!1},onLinkHover:{triggerUpdate:!1},onBackgroundClick:{triggerUpdate:!1},onBackgroundRightClick:{triggerUpdate:!1},showPointerCursor:{default:!0,triggerUpdate:!1}},HH),$H),methods:_h(_h({zoomToFit:function(e,n,i){for(var s,o=arguments.length,a=new Array(o>3?o-3:0),l=3;l<o;l++)a[l-3]=arguments[l];return e.renderObjs.fitToBbox((s=e.forceGraph).getGraphBbox.apply(s,a),n,i),this},pauseAnimation:function(e){return e.animationFrameRequestId!==null&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(e){e.enablePointerInteraction&&(this.renderer().domElement.style.cursor=null),e.forceGraph.tickFrame(),e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},tbControls:function(e){return e.renderObjs.tbControls()},_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},WH),jH),stateInit:function(e){var n=e.controlType,i=e.rendererConfig,s=e.extraRenderers,o=new lT;return{forceGraph:o,renderObjs:fM({controlType:n,rendererConfig:i,extraRenderers:s}).objects([o]).lights([new Rp.AmbientLight(13421772,Math.PI),new Rp.DirectionalLight(16777215,.6*Math.PI)])}},init:function(e,n){e.innerHTML="",e.appendChild(n.container=document.createElement("div")),n.container.style.position="relative";var i=document.createElement("div");n.container.appendChild(i),n.renderObjs(i);var s=n.renderObjs.camera(),o=n.renderObjs.renderer(),a=n.renderObjs.controls();a.enabled=!!n.enableNavigationControls,n.lastSetCameraZ=s.position.z;var l;n.container.appendChild(l=document.createElement("div")),l.className="graph-info-msg",l.textContent="",n.forceGraph.onLoading(function(){l.textContent="Loading..."}).onFinishLoading(function(){l.textContent=""}).onUpdate(function(){n.graphData=n.forceGraph.graphData(),s.position.x===0&&s.position.y===0&&s.position.z===n.lastSetCameraZ&&n.graphData.nodes.length&&(s.lookAt(n.forceGraph.position),n.lastSetCameraZ=s.position.z=Math.cbrt(n.graphData.nodes.length)*VH)}).onFinishUpdate(function(){if(n._dragControls){var c=n.graphData.nodes.find(function(h){return h.__initialFixedPos&&!h.__disposeControlsAfterDrag});c?c.__disposeControlsAfterDrag=!0:n._dragControls.dispose(),n._dragControls=void 0}if(n.enableNodeDrag&&n.enablePointerInteraction&&n.forceEngine==="d3"){var u=n._dragControls=new bL(n.graphData.nodes.map(function(h){return h.__threeObj}).filter(function(h){return h}),s,o.domElement);u.addEventListener("dragstart",function(h){var d=Br(h.object);if(d){a.enabled=!1,h.object.__initialPos=h.object.position.clone(),h.object.__prevPos=h.object.position.clone();var f=d.__data;!f.__initialFixedPos&&(f.__initialFixedPos={fx:f.fx,fy:f.fy,fz:f.fz}),!f.__initialPos&&(f.__initialPos={x:f.x,y:f.y,z:f.z}),["x","y","z"].forEach(function(p){return f["f".concat(p)]=f[p]}),o.domElement.classList.add("grabbable")}}),u.addEventListener("drag",function(h){var d=Br(h.object);if(d){if(!h.object.hasOwnProperty("__graphObjType")){var f=h.object.__initialPos,p=h.object.__prevPos,m=h.object.position;d.position.add(m.clone().sub(p)),p.copy(m),m.copy(f)}var y=d.__data,_=d.position,g={x:_.x-y.x,y:_.y-y.y,z:_.z-y.z};["x","y","z"].forEach(function(v){return y["f".concat(v)]=y[v]=_[v]}),n.forceGraph.d3AlphaTarget(.3).resetCountdown(),y.__dragged=!0,n.onNodeDrag(y,g)}}),u.addEventListener("dragend",function(h){var d=Br(h.object);if(d){delete h.object.__initialPos,delete h.object.__prevPos;var f=d.__data;f.__disposeControlsAfterDrag&&(u.dispose(),delete f.__disposeControlsAfterDrag);var p=f.__initialFixedPos,m=f.__initialPos,y={x:m.x-f.x,y:m.y-f.y,z:m.z-f.z};if(p&&(["x","y","z"].forEach(function(g){var v="f".concat(g);p[v]===void 0&&delete f[v]}),delete f.__initialFixedPos,delete f.__initialPos,f.__dragged&&(delete f.__dragged,n.onNodeDragEnd(f,y))),n.forceGraph.d3AlphaTarget(0).resetCountdown(),n.enableNavigationControls){var _;a.enabled=!0,a._status&&((_=a._onPointerCancel)===null||_===void 0||_.call(a)),a.domElement&&a.domElement.ownerDocument&&a.domElement.ownerDocument.dispatchEvent(new PointerEvent("pointerup",{pointerType:"touch"}))}o.domElement.classList.remove("grabbable")}})}}),Rp.REVISION<155&&(n.renderObjs.renderer().useLegacyLights=!1),n.renderObjs.hoverOrderComparator(function(c,u){var h=Br(c);if(!h)return 1;var d=Br(u);if(!d)return-1;var f=function(m){return m.__graphObjType==="node"};return f(d)-f(h)}).tooltipContent(function(c){var u=Br(c);return u&&Oe(n["".concat(u.__graphObjType,"Label")])(u.__data)||""}).hoverDuringDrag(!1).onHover(function(c){var u=Br(c);if(u!==n.hoverObj){var h=n.hoverObj?n.hoverObj.__graphObjType:null,d=n.hoverObj?n.hoverObj.__data:null,f=u?u.__graphObjType:null,p=u?u.__data:null;if(h&&h!==f){var m=n["on".concat(h==="node"?"Node":"Link","Hover")];m&&m(null,d)}if(f){var y=n["on".concat(f==="node"?"Node":"Link","Hover")];y&&y(p,h===f?d:null)}o.domElement.classList[(u&&n["on".concat(f==="node"?"Node":"Link","Click")]||!u&&n.onBackgroundClick)&&Oe(n.showPointerCursor)(p)?"add":"remove"]("clickable"),n.hoverObj=u}}).clickAfterDrag(!1).onClick(function(c,u){var h=Br(c);if(h){var d=n["on".concat(h.__graphObjType==="node"?"Node":"Link","Click")];d&&d(h.__data,u)}else n.onBackgroundClick&&n.onBackgroundClick(u)}).onRightClick(function(c,u){var h=Br(c);if(h){var d=n["on".concat(h.__graphObjType==="node"?"Node":"Link","RightClick")];d&&d(h.__data,u)}else n.onBackgroundRightClick&&n.onBackgroundRightClick(u)}),this._animationCycle()}});function Br(r){for(var e=r;e&&!e.hasOwnProperty("__graphObjType");)e=e.parent;return e}const Dd={width:R.number,height:R.number,graphData:R.shape({nodes:R.arrayOf(R.object).isRequired,links:R.arrayOf(R.object).isRequired}),backgroundColor:R.string,nodeRelSize:R.number,nodeId:R.string,nodeLabel:R.oneOfType([R.string,R.func]),nodeVal:R.oneOfType([R.number,R.string,R.func]),nodeVisibility:R.oneOfType([R.bool,R.string,R.func]),nodeColor:R.oneOfType([R.string,R.func]),nodeAutoColorBy:R.oneOfType([R.string,R.func]),onNodeHover:R.func,onNodeClick:R.func,linkSource:R.string,linkTarget:R.string,linkLabel:R.oneOfType([R.string,R.func]),linkVisibility:R.oneOfType([R.bool,R.string,R.func]),linkColor:R.oneOfType([R.string,R.func]),linkAutoColorBy:R.oneOfType([R.string,R.func]),linkWidth:R.oneOfType([R.number,R.string,R.func]),linkCurvature:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowLength:R.oneOfType([R.number,R.string,R.func]),linkDirectionalArrowColor:R.oneOfType([R.string,R.func]),linkDirectionalArrowRelPos:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticles:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleSpeed:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleOffset:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleWidth:R.oneOfType([R.number,R.string,R.func]),linkDirectionalParticleColor:R.oneOfType([R.string,R.func]),onLinkHover:R.func,onLinkClick:R.func,dagMode:R.oneOf(["td","bu","lr","rl","zin","zout","radialin","radialout"]),dagLevelDistance:R.number,dagNodeFilter:R.func,onDagError:R.func,d3AlphaMin:R.number,d3AlphaDecay:R.number,d3VelocityDecay:R.number,warmupTicks:R.number,cooldownTicks:R.number,cooldownTime:R.number,onEngineTick:R.func,onEngineStop:R.func,getGraphBbox:R.func},gM={zoomToFit:R.func,onNodeRightClick:R.func,onNodeDrag:R.func,onNodeDragEnd:R.func,onLinkRightClick:R.func,linkHoverPrecision:R.number,onBackgroundClick:R.func,onBackgroundRightClick:R.func,showPointerCursor:R.oneOfType([R.bool,R.func]),enablePointerInteraction:R.bool,enableNodeDrag:R.bool},u_={showNavInfo:R.bool,nodeOpacity:R.number,nodeResolution:R.number,nodeThreeObject:R.oneOfType([R.object,R.string,R.func]),nodeThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),nodePositionUpdate:R.func,linkOpacity:R.number,linkResolution:R.number,linkCurveRotation:R.oneOfType([R.number,R.string,R.func]),linkMaterial:R.oneOfType([R.object,R.string,R.func]),linkThreeObject:R.oneOfType([R.object,R.string,R.func]),linkThreeObjectExtend:R.oneOfType([R.bool,R.string,R.func]),linkPositionUpdate:R.func,linkDirectionalArrowResolution:R.number,linkDirectionalParticleResolution:R.number,linkDirectionalParticleThreeObject:R.oneOfType([R.object,R.string,R.func]),forceEngine:R.oneOf(["d3","ngraph"]),ngraphPhysics:R.object,numDimensions:R.oneOf([1,2,3])};Object.assign({},Dd,gM,{linkLineDash:R.oneOfType([R.arrayOf(R.number),R.string,R.func]),nodeCanvasObjectMode:R.oneOfType([R.string,R.func]),nodeCanvasObject:R.func,nodePointerAreaPaint:R.func,linkCanvasObjectMode:R.oneOfType([R.string,R.func]),linkCanvasObject:R.func,linkPointerAreaPaint:R.func,linkDirectionalParticleCanvasObject:R.func,autoPauseRedraw:R.bool,minZoom:R.number,maxZoom:R.number,enableZoomInteraction:R.oneOfType([R.bool,R.func]),enablePanInteraction:R.oneOfType([R.bool,R.func]),onZoom:R.func,onZoomEnd:R.func,onRenderFramePre:R.func,onRenderFramePost:R.func});const XH=Object.assign({},Dd,gM,u_,{enableNavigationControls:R.bool,controlType:R.oneOf(["trackball","orbit","fly"]),rendererConfig:R.object,extraRenderers:R.arrayOf(R.shape({render:R.func.isRequired}))});Object.assign({},Dd,u_,{nodeDesc:R.oneOfType([R.string,R.func]),linkDesc:R.oneOfType([R.string,R.func])});Object.assign({},Dd,u_,{markerAttrs:R.object,yOffset:R.number,glScale:R.number});const h_=bx(qH,{methodNames:["emitParticle","d3Force","d3ReheatSimulation","stopAnimation","pauseAnimation","resumeAnimation","cameraPosition","zoomToFit","getGraphBbox","screen2GraphCoords","graph2ScreenCoords","postProcessingComposer","lights","scene","camera","renderer","controls","refresh"],initPropNames:["controlType","rendererConfig","extraRenderers"]});h_.displayName="ForceGraph3D";h_.propTypes=XH;function YH(r,e,{signal:n,edges:i}={}){let s,o=null;const a=i!=null&&i.includes("leading"),l=i==null||i.includes("trailing"),c=()=>{o!==null&&(r.apply(s,o),s=void 0,o=null)},u=()=>{l&&c(),p()};let h=null;const d=()=>{h!=null&&clearTimeout(h),h=setTimeout(()=>{h=null,u()},e)},f=()=>{h!==null&&(clearTimeout(h),h=null)},p=()=>{f(),s=void 0,o=null},m=()=>{c()},y=function(..._){if(n!=null&&n.aborted)return;s=this,o=_;const g=h==null;d(),a&&g&&c()};return y.schedule=d,y.cancel=p,y.flush=m,n==null||n.addEventListener("abort",p,{once:!0}),y}function _M(r,e=0,n={}){typeof n!="object"&&(n={});const{leading:i=!1,trailing:s=!0,maxWait:o}=n,a=Array(2);i&&(a[0]="leading"),s&&(a[1]="trailing");let l,c=null;const u=YH(function(...f){l=r.apply(this,f),c=null},e,{edges:a}),h=function(...f){return o!=null&&(c===null&&(c=Date.now()),Date.now()-c>=o)?(l=r.apply(this,f),c=Date.now(),u.cancel(),u.schedule(),l):(u.apply(this,f),l)},d=()=>(u.flush(),l);return h.cancel=u.cancel,h.flush=d,h}function KH(r,e=0,n={}){const{leading:i=!0,trailing:s=!0}=n;return _M(r,e,{leading:i,maxWait:e,trailing:s})}const ZH=(r,e,n,i)=>{switch(e){case"debounce":return _M(r,n,i);case"throttle":return KH(r,n,i);default:return r}},QH=r=>{const e=st.useRef(r);return st.useEffect(()=>{e.current=r}),st.useMemo(()=>(...n)=>{var i;return(i=e.current)===null||i===void 0?void 0:i.call(e,...n)},[])},JH=r=>{const[e,n]=st.useState((r==null?void 0:r.current)||null);return r&&setTimeout(()=>{r.current!==e&&n(r.current)},0),{refProxy:st.useMemo(()=>new Proxy(s=>{s!==e&&n(s)},{get(s,o){return o==="current"?e:s[o]},set(s,o,a){return o==="current"?n(a):s[o]=a,!0}}),[e]),refElement:e,setRefElement:n}},e5=(r,e)=>{var n,i;const s=(n=r.borderBoxSize)===null||n===void 0?void 0:n[0],o=(i=r.contentBoxSize)===null||i===void 0?void 0:i[0];return e==="border-box"&&s?{width:s.inlineSize,height:s.blockSize}:e==="content-box"&&o?{width:o.inlineSize,height:o.blockSize}:{width:r.contentRect.width,height:r.contentRect.height}};function t5({skipOnMount:r=!1,refreshMode:e,refreshRate:n=1e3,refreshOptions:i,handleWidth:s=!0,handleHeight:o=!0,targetRef:a,observerOptions:l,onResize:c,disableRerender:u=!1}={}){const h=st.useRef(r),d=QH(c),[f,p]=st.useState({width:void 0,height:void 0}),m=st.useRef({width:void 0,height:void 0}),{refProxy:y,refElement:_}=JH(a),{box:g}=l||{},v=st.useCallback(b=>{if(!s&&!o)return;if(h.current){h.current=!1;return}const T=(S,M)=>s&&S.width!==M.width||o&&S.height!==M.height;b.forEach(S=>{const M=e5(S,g);u?T(m.current,M)&&(m.current.width=M.width,m.current.height=M.height,d==null||d({width:M.width,height:M.height,entry:S})):p(A=>T(A,M)?(d==null||d({width:M.width,height:M.height,entry:S}),M):A)})},[s,o,h,g,u]),x=st.useCallback(ZH(v,e,n,i),[v,e,n,i]);return st.useEffect(()=>{let b;if(_)try{b=new window.ResizeObserver(x),b.observe(_,l)}catch(T){console.warn("ResizeObserver not supported or failed to initialize:",T)}else(f.width||f.height)&&(d==null||d({width:null,height:null,entry:null}),m.current.width=void 0,m.current.height=void 0,u||p({width:void 0,height:void 0}));return()=>{var T,S,M;(T=b==null?void 0:b.disconnect)===null||T===void 0||T.call(b),(M=(S=x).cancel)===null||M===void 0||M.call(S)}},[x,_]),Object.assign({ref:y},u?m.current:f)}function Rm(r,e){(e==null||e>r.length)&&(e=r.length);for(var n=0,i=Array(e);n<e;n++)i[n]=r[n];return i}function n5(r){if(Array.isArray(r))return r}function i5(r){if(Array.isArray(r))return Rm(r)}function r5(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function s5(r,e,n){return e=Jh(e),p5(r,yM()?Reflect.construct(e,n||[],Jh(r).constructor):e.apply(r,n))}function o5(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function a5(r,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,g5(i.key),i)}}function l5(r,e,n){return e&&a5(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function Jh(r){return Jh=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Jh(r)}function c5(r,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");r.prototype=Object.create(e&&e.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,"prototype",{writable:!1}),e&&Cm(r,e)}function yM(){try{var r=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(yM=function(){return!!r})()}function u5(r){if(typeof Symbol<"u"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function h5(r,e){var n=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(n!=null){var i,s,o,a,l=[],c=!0,u=!1;try{if(o=(n=n.call(r)).next,e===0){if(Object(n)!==n)return;c=!1}else for(;!(c=(i=o.call(n)).done)&&(l.push(i.value),l.length!==e);c=!0);}catch(h){u=!0,s=h}finally{try{if(!c&&n.return!=null&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return l}}function d5(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function f5(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function p5(r,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return r5(r)}function Cm(r,e){return Cm=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Cm(r,e)}function px(r,e){return n5(r)||h5(r,e)||vM(r,e)||d5()}function Zl(r){return i5(r)||u5(r)||vM(r)||f5()}function m5(r,e){if(typeof r!="object"||!r)return r;var n=r[Symbol.toPrimitive];if(n!==void 0){var i=n.call(r,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function g5(r){var e=m5(r,"string");return typeof e=="symbol"?e:e+""}function vM(r,e){if(r){if(typeof r=="string")return Rm(r,e);var n={}.toString.call(r).slice(8,-1);return n==="Object"&&r.constructor&&(n=r.constructor.name),n==="Map"||n==="Set"?Array.from(r):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Rm(r,e):void 0}}var Ql=typeof window<"u"&&window.THREE?window.THREE:{CanvasTexture:e1,Sprite:$C,SpriteMaterial:gg,SRGBColorSpace:Bn},_5=function(r){function e(){var n,i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:10,o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"rgba(255, 255, 255, 1)";return o5(this,e),n=s5(this,e,[new Ql.SpriteMaterial]),n._text="".concat(i),n._textHeight=s,n._color=o,n._backgroundColor=!1,n._padding=0,n._borderWidth=0,n._borderRadius=0,n._borderColor="white",n._offsetX=0,n._offsetY=0,n._strokeWidth=0,n._strokeColor="white",n._fontFace="system-ui",n._fontSize=90,n._fontWeight="normal",n._canvas=document.createElement("canvas"),n._genCanvas(),n}return c5(e,r),l5(e,[{key:"text",get:function(){return this._text},set:function(i){this._text=i,this._genCanvas()}},{key:"textHeight",get:function(){return this._textHeight},set:function(i){this._textHeight=i,this._genCanvas()}},{key:"color",get:function(){return this._color},set:function(i){this._color=i,this._genCanvas()}},{key:"backgroundColor",get:function(){return this._backgroundColor},set:function(i){this._backgroundColor=i,this._genCanvas()}},{key:"padding",get:function(){return this._padding},set:function(i){this._padding=i,this._genCanvas()}},{key:"borderWidth",get:function(){return this._borderWidth},set:function(i){this._borderWidth=i,this._genCanvas()}},{key:"borderRadius",get:function(){return this._borderRadius},set:function(i){this._borderRadius=i,this._genCanvas()}},{key:"borderColor",get:function(){return this._borderColor},set:function(i){this._borderColor=i,this._genCanvas()}},{key:"offsetX",get:function(){return this._offsetX},set:function(i){this._offsetX=i,this._genCanvas()}},{key:"offsetY",get:function(){return this._offsetY},set:function(i){this._offsetY=i,this._genCanvas()}},{key:"fontFace",get:function(){return this._fontFace},set:function(i){this._fontFace=i,this._genCanvas()}},{key:"fontSize",get:function(){return this._fontSize},set:function(i){this._fontSize=i,this._genCanvas()}},{key:"fontWeight",get:function(){return this._fontWeight},set:function(i){this._fontWeight=i,this._genCanvas()}},{key:"strokeWidth",get:function(){return this._strokeWidth},set:function(i){this._strokeWidth=i,this._genCanvas()}},{key:"strokeColor",get:function(){return this._strokeColor},set:function(i){this._strokeColor=i,this._genCanvas()}},{key:"_genCanvas",value:function(){var i=this,s=this._canvas,o=s.getContext("2d"),a=1/this.textHeight,l=Array.isArray(this.borderWidth)?this.borderWidth:[this.borderWidth,this.borderWidth],c=l.map(function(N){return N*i.fontSize*a}),u=Array.isArray(this.borderRadius)?this.borderRadius:[this.borderRadius,this.borderRadius,this.borderRadius,this.borderRadius],h=u.map(function(N){return N*i.fontSize*a}),d=Array.isArray(this.padding)?this.padding:[this.padding,this.padding],f=d.map(function(N){return N*i.fontSize*a}),p=[this.offsetX,this.offsetY].map(function(N){return N*i.fontSize*a}),m=this.text.split(`
`),y="".concat(this.fontWeight," ").concat(this.fontSize,"px ").concat(this.fontFace);o.font=y;var _=Math.max.apply(Math,Zl(m.map(function(N){return o.measureText(N).width}))),g=this.fontSize*m.length,v=_+c[0]*2+f[0]*2,x=g+c[1]*2+f[1]*2;if(s.width=v+Math.abs(p[0]),s.height=x+Math.abs(p[1]),o.translate.apply(o,Zl(p.map(function(N){return Math.max(0,N)}))),this.borderWidth){if(o.strokeStyle=this.borderColor,c[0]){var b=c[0]/2;o.lineWidth=c[0],o.beginPath(),o.moveTo(b,h[0]),o.lineTo(b,x-h[3]),o.moveTo(v-b,h[1]),o.lineTo(v-b,x-h[2]),o.stroke()}if(c[1]){var T=c[1]/2;o.lineWidth=c[1],o.beginPath(),o.moveTo(Math.max(c[0],h[0]),T),o.lineTo(v-Math.max(c[0],h[1]),T),o.moveTo(Math.max(c[0],h[3]),x-T),o.lineTo(v-Math.max(c[0],h[2]),x-T),o.stroke()}if(this.borderRadius){var S=Math.max.apply(Math,Zl(c)),M=S/2;o.lineWidth=S,o.beginPath(),[!!h[0]&&[h[0],M,M,h[0]],!!h[1]&&[v-h[1],v-M,M,h[1]],!!h[2]&&[v-h[2],v-M,x-M,x-h[2]],!!h[3]&&[h[3],M,x-M,x-h[3]]].filter(function(N){return N}).forEach(function(N){var D=px(N,4),F=D[0],k=D[1],j=D[2],$=D[3];o.moveTo(F,j),o.quadraticCurveTo(k,j,k,$)}),o.stroke()}}this.backgroundColor&&(o.fillStyle=this.backgroundColor,this.borderRadius?(o.beginPath(),o.moveTo(c[0],h[0]),[[c[0],h[0],v-h[1],c[1],c[1],c[1]],[v-c[0],v-c[0],v-c[0],c[1],h[1],x-h[2]],[v-c[0],v-h[2],h[3],x-c[1],x-c[1],x-c[1]],[c[0],c[0],c[0],x-c[1],x-h[3],h[0]]].forEach(function(N){var D=px(N,6),F=D[0],k=D[1],j=D[2],$=D[3],G=D[4],B=D[5];o.quadraticCurveTo(F,$,k,G),o.lineTo(j,B)}),o.closePath(),o.fill()):o.fillRect(c[0],c[1],v-c[0]*2,x-c[1]*2)),o.translate.apply(o,Zl(c)),o.translate.apply(o,Zl(f)),o.font=y,o.fillStyle=this.color,o.textBaseline="bottom";var A=this.strokeWidth>0;A&&(o.lineWidth=this.strokeWidth*this.fontSize/10,o.strokeStyle=this.strokeColor),m.forEach(function(N,D){var F=(_-o.measureText(N).width)/2,k=(D+1)*i.fontSize;A&&o.strokeText(N,F,k),o.fillText(N,F,k)}),this.material.map&&this.material.map.dispose();var E=this.material.map=new Ql.CanvasTexture(s);E.colorSpace=Ql.SRGBColorSpace;var w=this.textHeight*m.length+l[1]*2+d[1]*2+Math.abs(this.offsetY);this.scale.set(w*s.width/s.height,w,0)}},{key:"clone",value:function(){return new this.constructor(this.text,this.textHeight,this.color).copy(this)}},{key:"copy",value:function(i){return Ql.Sprite.prototype.copy.call(this,i),this.color=i.color,this.backgroundColor=i.backgroundColor,this.padding=i.padding,this.borderWidth=i.borderWidth,this.borderColor=i.borderColor,this.offsetX=i.offsetX,this.offsetY=i.offsetY,this.fontFace=i.fontFace,this.fontSize=i.fontSize,this.fontWeight=i.fontWeight,this.strokeWidth=i.strokeWidth,this.strokeColor=i.strokeColor,this}}])}(Ql.Sprite);const{Option:Ui}=ro,{Search:y5}=DM,yh=[{label:"Disease",value:"disease"},{label:"Taxonomy",value:"taxonomy"},{label:"Diet_and_food",value:"diet_and_food"},{label:"Study",value:"study"}],v5=({openView:r,height:e,activeView:n,entity_id:i},s)=>{const[o,a]=st.useState({nodes:[],links:[]}),[l,c]=st.useState(),u=st.useRef(new Map);console.log("GraphView mounted");const[h,d]=st.useState(),f=st.useRef(null),[p,m]=st.useState(""),{modal:y,openModal:_,closeModal:g}=CM(),{width:v,ref:x}=t5(),[b,T]=st.useState(null),[S,M]=st.useState(null),[A,E]=st.useState(!1),[w,N]=st.useState(null),[D,F]=st.useState({x:0,y:0}),[k,j]=st.useState(!1),{messageApi:$}=gx(),[G,B]=st.useState(null),[J,Y]=Nm.useModal(),re=NM(),{displayNode:me}=PM(Z=>Z.graph),[Re,tt]=st.useState(me),q=()=>{var Z,ue;if((Z=f.current)!=null&&Z.renderer){const ht=f.current.renderer();console.log(ht.info),B({geometries:ht.info.memory.geometries,textures:ht.info.memory.textures,programs:((ue=ht.info.programs)==null?void 0:ue.length)||0,renderCalls:ht.info.render.calls})}};st.useImperativeHandle(s,()=>({reload:Me,cancelSelectLink:()=>c(null),cancelSelectNode:()=>N(null)}));const z=[{key:"details",label:"详情"}],Q=(Z,ue)=>{ue.preventDefault(),N(Z),j(!0),F({x:ue.clientX,y:ue.clientY})},ge=Z=>{Z.key=="details",j(!1)};st.useEffect(()=>{const Z=()=>{j(!1)};return k&&window.addEventListener("click",Z),()=>{window.removeEventListener("click",Z)}},[w]);const De=()=>{console.log("isWebGLAvailable");try{const Z=document.createElement("canvas");return!!window.WebGLRenderingContext&&!!Z.getContext("webgl")}catch{return!1}},Me=async()=>{E(!0),console.log(Re);const Z=await Cp.post("/entity-relation/graph",{label:p||void 0,keyword:h||void 0,entity_id:i||void 0,nodes:Re});a(Z.data),E(!1)},He=st.useCallback(Z=>{const ue=String(Z.id??Z.node_id??Z.entity_id??Z.entity_name),ht=u.current;if(!ht.has(ue)){const Fe=xt[Z.label]||"#888888",Qe=new _5(Z.entity_name??Z.id??ue);Qe.color=Fe,Qe.textHeight=8,Qe.center&&(Qe.center.y=-.6),ht.set(ue,Qe)}return ht.get(ue)},[]),Dt=()=>{var Fe,Qe,nn;const Z=f.current;if(!Z)return;u.current.forEach(At=>{At&&At.dispose&&At.dispose()}),u.current.clear();const ue=(Fe=Z.scene)==null?void 0:Fe.call(Z);ue&&ue.traverse(At=>{At.geometry&&At.geometry.dispose(),At.material&&(Array.isArray(At.material)?At.material.forEach(I=>I.dispose()):At.material.dispose())});const ht=(Qe=Z.renderer)==null?void 0:Qe.call(Z);ht&&((nn=ht.renderLists)==null||nn.dispose())};st.useEffect(()=>(De()?T(!0):T(!1),()=>{Dt()}),[]);const U=()=>{b&&Dt(),De()?T(!b):(T(!1),$.error("WebGL not available!"))};st.useEffect(()=>{Me()},[p,i,Re,h]);const xt={study:"#6a5acd",disease:"#ff6347",taxonomy:"#3cb371",association:"#ffa500"},nt={onNodeClick:Z=>{r("details",{id:Z.id,label:Z.label,entity_name:Z.entity_name,node_id:Z.node_id}),N(Z),c(null)},onNodeRightClick:Q,onLinkClick:Z=>{N(null),r("relation",Z),c(Z)},linkColor:Z=>l&&Z.relation_id===l.relation_id?"red":"rgba(200,200,200,0.5)",onNodeDragEnd:Z=>{Z.fx=Z.x,Z.fy=Z.y,Z.fz=Z.z}};return st.useEffect(()=>{if(!f.current)return;const Z=f.current;Z.d3Force("link").distance(50),Z.d3Force("charge").strength(-50)},[o]),Ne.jsxs(Ne.Fragment,{children:[Y,Ne.jsx("div",{style:{width:"100%",display:"flex",justifyContent:"center"},children:Ne.jsxs($M,{styles:{body:{padding:0}},size:"small",extra:Ne.jsx(Ne.Fragment,{children:Ne.jsxs(LM,{justify:"flex-end",gap:"small",children:[Ne.jsx(S5,{loading:A,selectedLabels:Re,setSelectedLabels:tt,onChange:Z=>{tt(Z),re(IM(Z))}}),Ne.jsxs(Jl,{size:"small",color:"blue",variant:"solid",onClick:U,children:["切换到 ",b?"2D":"3D"]}),Ne.jsx(Jl,{size:"small",color:"cyan",variant:"solid",onClick:()=>{r("chat")},children:"AI"}),Ne.jsx(Jl,{size:"small",color:"cyan",variant:"solid",onClick:()=>{_("entityRelationForm")},children:"新增"}),Ne.jsx(Jl,{size:"small",color:"cyan",variant:"solid",onClick:()=>Me(),children:"刷新"}),Ne.jsx(QM,{onClick:()=>{q(),_("webGLInfo")}})]})}),style:{borderRadius:"12px",height:e,boxShadow:"0 4px 20px rgba(0,0,0,0.1)",padding:"0.5rem",overflow:"hidden",width:"100%"},children:[Ne.jsxs("div",{style:{display:"flex",gap:8,marginBottom:16},children:[Ne.jsxs(ro,{value:p,onChange:Z=>m(Z),style:{width:200},children:[Ne.jsx(Ui,{value:"",children:"全部节点类型"}),Ne.jsx(Ui,{value:"Study",children:"Study"}),Ne.jsx(Ui,{value:"Disease",children:"Disease"}),Ne.jsx(Ui,{value:"Taxonomy",children:"Taxonomy"})]}),Ne.jsx(y5,{placeholder:"搜索...",allowClear:!0,onSearch:Z=>{d(Z)},style:{flex:1}})]}),Ne.jsxs("div",{ref:x,style:{height:`${e}px`,background:"#111111"},children:[Ne.jsx(yx,{spinning:A&&b==null,children:!A&&b!=null&&Ne.jsx(Ne.Fragment,{children:b?Ne.jsx(h_,{ref:f,graphData:o,nodeAutoColorBy:"label",nodeLabel:Z=>`${Z.label}: ${Z.entity_name||Z.id}`,linkLabel:Z=>Z.type,width:v,height:e,backgroundColor:"#111111",linkWidth:2,nodeThreeObjectExtend:!0,linkAutoColorBy:"type",nodeColor:Z=>{var ue;return h&&((ue=Z.entity_name)!=null&&ue.includes(h)||Z.id.includes(h))||Z.id.includes(w==null?void 0:w.id)?"red":Z.label&&xt[Z.label]?xt[Z.label]:"#888888"},nodeVal:Z=>{var ue;return Z.label=="association"?1:h&&((ue=Z.entity_name)!=null&&ue.includes(h)||Z.id.includes(h))?10:4},nodeThreeObject:He,...nt}):Ne.jsx(zm,{ref:f,graphData:o,nodeAutoColorBy:"label",nodeLabel:Z=>`${Z.label}: ${Z.entity_name||Z.id}`,linkLabel:Z=>Z.type,width:v,height:e,backgroundColor:"#111111",linkWidth:2,nodeRelSize:8,nodeCanvasObject:(Z,ue,ht)=>{const Fe=Z.entity_name||Z.id,Qe=Z.label&&xt[Z.label]?xt[Z.label]:"#888888",nn=12/ht;ue.fillStyle=Qe,ue.beginPath(),ue.arc(Z.x,Z.y,6,0,2*Math.PI),ue.fill(),h&&Fe.includes(h)&&(ue.strokeStyle="#ff0000",ue.lineWidth=2,ue.beginPath(),ue.arc(Z.x,Z.y,8,0,2*Math.PI),ue.stroke()),ue.fillStyle=Qe,ue.font=`${nn}px Sans-Serif`,ue.fillText(Fe,Z.x+8,Z.y+4)},...nt})})}),k&&w&&Ne.jsx("div",{style:{position:"fixed",top:D.y,left:D.x,background:"#222",border:"1px solid #444",borderRadius:"8px",boxShadow:"0 5px 15px rgba(0,0,0,0.5)",zIndex:100,padding:"4px 0",minWidth:"160px",color:"white"},children:z.map(Z=>Ne.jsx("div",{onClick:()=>ge(Z),style:{padding:"8px 16px",cursor:"pointer",transition:"background 0.2s, color 0.2s"},onMouseEnter:ue=>{ue.currentTarget.style.background="#555",ue.currentTarget.style.color="#fff"},onMouseLeave:ue=>{ue.currentTarget.style.background="transparent",ue.currentTarget.style.color="white"},children:Z.label},Z.key))})]})]})}),Ne.jsx(T5,{callback:()=>Me(),visible:y.key=="entityRelationForm"&&y.visible,params:y.params,onClose:g}),Ne.jsx(b5,{callback:()=>Me(),visible:y.key=="nodeView"&&y.visible,params:y.params,onClose:()=>{N(null),g()}}),Ne.jsx(x5,{webglInfo:G,visible:y.key=="webGLInfo"&&y.visible,onClose:g})]})},x5=({webglInfo:r,visible:e,onClose:n})=>Ne.jsx(Nm,{title:"webGL",footer:null,open:e,onCancel:n,onClose:n,children:r&&Ne.jsxs("ul",{children:[Ne.jsxs("li",{children:["geometries: ",r.geometries]}),Ne.jsxs("li",{children:["textures: ",r.textures]}),Ne.jsxs("li",{children:["programs: ",r.programs]}),Ne.jsxs("li",{children:["renderCalls: ",r.renderCalls]})]})}),b5=({visible:r,params:e,onClose:n,callback:i})=>Ne.jsx(YM,{title:`${e!=null&&e.entity_name?e.entity_name:""}`,open:r,onClose:n,width:"50%",placement:"right",children:JSON.stringify(e)}),T5=({visible:r,params:e,onClose:n,callback:i})=>{const[s]=ls.useForm(),{messageApi:o}=gx(),[a,l]=st.useState("study"),[c,u]=st.useState("disease"),[h,d]=st.useState([]),[f,p]=st.useState([]),m=async(g,v,x)=>{if(v)try{const b=await Cp.get(`/entity/find-by-name/${g}/${v}`);x(b.data||[])}catch(b){console.error(b)}},y=g=>{const v=h.find(T=>T.entity_id===g.from_entity),x=f.find(T=>T.entity_id===g.to_entity);return{from_entity:{label:a,entity_id:v.entity_id,properties:v},to_entity:{label:c,entity_id:x.entity_id,properties:x},relation_type:g.relation_type}},_=async()=>{const g=await s.validateFields(),v=y(g);await Cp.post("/entity-relation/relationships",v),o.success("关系创建成功"),n(),i&&i()};return Ne.jsx(Nm,{open:r,onCancel:n,onClose:n,onOk:_,children:Ne.jsxs(ls,{form:s,layout:"vertical",children:[Ne.jsx(ls.Item,{label:"From 实体类型",children:Ne.jsxs(ro,{value:a,onChange:l,children:[Ne.jsx(Ui,{value:"study",children:"Study"}),Ne.jsx(Ui,{value:"disease",children:"Disease"}),Ne.jsx(Ui,{value:"taxonomy",children:"Taxonomy"})]})}),Ne.jsx(ls.Item,{name:"from_entity",label:"选择 From 实体",rules:[{required:!0}],children:Ne.jsx(ro,{showSearch:!0,placeholder:"输入关键词搜索实体",filterOption:!1,onSearch:g=>m(a,g,d),children:h.map(g=>Ne.jsx(Ui,{value:g.entity_id,children:g.entity_name||g.title||g.rank||g.entity_id},g.entity_id))})}),Ne.jsx(ls.Item,{label:"To 实体类型",children:Ne.jsxs(ro,{value:c,onChange:u,children:[Ne.jsx(Ui,{value:"study",children:"Study"}),Ne.jsx(Ui,{value:"disease",children:"Disease"}),Ne.jsx(Ui,{value:"taxonomy",children:"Taxonomy"})]})}),Ne.jsx(ls.Item,{name:"to_entity",label:"选择 To 实体",rules:[{required:!0}],children:Ne.jsx(ro,{showSearch:!0,placeholder:"输入关键词搜索实体",filterOption:!1,onSearch:g=>m(c,g,p),children:f.map(g=>Ne.jsx(Ui,{value:g.entity_id,children:g.entity_name||g.title||g.rank||g.entity_id},g.entity_id))})}),Ne.jsx(ls.Item,{name:"relation_type",label:"关系类型",rules:[{required:!0,message:"请输入关系类型"}],children:Ne.jsx(ro,{options:[{value:"ASSOCIATED_WITH",label:"ASSOCIATED_WITH"}]})}),Ne.jsx(FM,{ghost:!0,items:[{key:"1",label:"更多",children:Ne.jsx(Ne.Fragment,{children:Ne.jsx(ls.Item,{noStyle:!0,shouldUpdate:!0,children:()=>Ne.jsx(OM,{children:Ne.jsx("pre",{children:JSON.stringify(y(s.getFieldsValue()),null,2)})})})})}]})]})})},I5=st.forwardRef(v5),S5=({onChange:r,selectedLabels:e,setSelectedLabels:n,loading:i})=>Ne.jsx(jM,{trigger:["hover"],dropdownRender:()=>Ne.jsxs("div",{style:{padding:12,backgroundColor:"#1f1f1f",borderRadius:8,boxShadow:"0 4px 12px rgba(0,0,0,0.3)",color:"#fff"},children:[Ne.jsx(yx,{spinning:i,children:Ne.jsx(XM.Group,{style:{display:"flex",flexDirection:"column",gap:8},options:yh.map(s=>({label:s.label,value:s.value,style:{color:"#fff"}})),value:e,onChange:s=>{n(s),r(s)}})}),Ne.jsx("div",{style:{marginTop:12,textAlign:"center"},children:Ne.jsx(Jl,{size:"small",type:"primary",onClick:()=>{if(e.length===yh.length)n([]),r([]);else{const s=yh.map(o=>o.value);n(s),r(s)}},children:e.length===yh.length?"全不选":"全选"})})]}),children:Ne.jsx("a",{onClick:s=>s.preventDefault(),children:Ne.jsxs(qM,{children:["节点类型",Ne.jsx(UM,{})]})})});export{I5 as default};
